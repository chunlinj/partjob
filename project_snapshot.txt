# 项目结构
==================================================

├── README.md
├── cloudfunctions/
│   └── mcloud/
│       ├── config/
│       │   └── config.js
│       ├── config.json
│       ├── framework/
│       │   ├── cloud/
│       │   │   ├── cloud_base.js
│       │   │   └── cloud_util.js
│       │   ├── core/
│       │   │   ├── app_code.js
│       │   │   ├── app_error.js
│       │   │   ├── app_other.js
│       │   │   ├── app_util.js
│       │   │   └── application.js
│       │   ├── database/
│       │   │   ├── db_util.js
│       │   │   ├── model.js
│       │   │   └── multi_model.js
│       │   ├── lib/
│       │   │   ├── faker_lib.js
│       │   │   ├── md5_lib.js
│       │   │   └── mini_lib.js
│       │   ├── platform/
│       │   │   ├── controller/
│       │   │   │   ├── base_admin_controller.js
│       │   │   │   └── base_controller.js
│       │   │   ├── model/
│       │   │   │   ├── admin_model.js
│       │   │   │   ├── base_model.js
│       │   │   │   └── log_model.js
│       │   │   └── service/
│       │   │       ├── base_admin_service.js
│       │   │       └── base_service.js
│       │   ├── utils/
│       │   │   ├── constant.js
│       │   │   ├── data_util.js
│       │   │   ├── export_util.js
│       │   │   ├── log_util.js
│       │   │   ├── math_util.js
│       │   │   ├── setup/
│       │   │   │   ├── setup_model.js
│       │   │   │   └── setup_util.js
│       │   │   ├── time_util.js
│       │   │   └── util.js
│       │   └── validate/
│       │       ├── content_check.js
│       │       └── data_check.js
│       ├── index.js
│       ├── package-lock.json
│       ├── package.json
│       └── project/
│           └── jobpart/
│               ├── controller/
│               │   ├── activity_controller.js
│               │   ├── admin/
│               │   │   ├── admin_activity_controller.js
│               │   │   ├── admin_cate_controller.js
│               │   │   ├── admin_home_controller.js
│               │   │   ├── admin_mgr_controller.js
│               │   │   ├── admin_news_controller.js
│               │   │   ├── admin_setup_controller.js
│               │   │   ├── admin_user_controller.js
│               │   │   └── base_project_admin_controller.js
│               │   ├── base_project_controller.js
│               │   ├── cate_controller.js
│               │   ├── check_controller.js
│               │   ├── fav_controller.js
│               │   ├── home_controller.js
│               │   ├── my_controller.js
│               │   ├── news_controller.js
│               │   └── passport_controller.js
│               ├── model/
│               │   ├── activity_join_model.js
│               │   ├── activity_model.js
│               │   ├── base_project_model.js
│               │   ├── cate_model.js
│               │   ├── fav_model.js
│               │   ├── news_model.js
│               │   └── user_model.js
│               ├── public/
│               │   ├── constants.js
│               │   ├── project_config.js
│               │   └── route.js
│               └── service/
│                   ├── activity_service.js
│                   ├── admin/
│                   │   ├── admin_activity_service.js
│                   │   ├── admin_cate_service.js
│                   │   ├── admin_home_service.js
│                   │   ├── admin_mgr_service.js
│                   │   ├── admin_news_service.js
│                   │   ├── admin_setup_service.js
│                   │   ├── admin_user_service.js
│                   │   └── base_project_admin_service.js
│                   ├── base_project_service.js
│                   ├── cate_service.js
│                   ├── fav_service.js
│                   ├── home_service.js
│                   ├── news_service.js
│                   └── passport_service.js
├── demo/
│   ├── 0首页.png
│   ├── 1公告.png
│   ├── 2职位.png
│   ├── 3详情.png
│   ├── 4企业库.png
│   ├── 5企业详情.png
│   ├── 6我的.png
│   ├── 7我的投递.png
│   ├── 80后台-首页.png
│   ├── 81后台-用户.png
│   ├── 82后台-用户.png
│   ├── 83后台-企业管理.png
│   ├── 84后台-企业.png
│   ├── 85后台-职位.png
│   ├── 86后台-职位.png
│   ├── 87后台-名单.png
│   ├── 88后台-导出.png
│   ├── 89后台-导出.png
│   ├── 90后台-管理员.png
│   ├── 二维码.png
│   └── 兼职招聘小程序 (2).jpg
├── miniprogram/
│   ├── app.js
│   ├── app.json
│   ├── app.wxss
│   ├── cmpts/
│   │   ├── biz/
│   │   │   ├── detail/
│   │   │   │   ├── detail_cmpt.js
│   │   │   │   ├── detail_cmpt.json
│   │   │   │   ├── detail_cmpt.wxml
│   │   │   │   └── detail_cmpt.wxss
│   │   │   └── foot/
│   │   │       ├── foot_cmpt.js
│   │   │       ├── foot_cmpt.json
│   │   │       ├── foot_cmpt.wxml
│   │   │       └── foot_cmpt.wxss
│   │   └── public/
│   │       ├── calendar/
│   │       │   ├── calendar_comm/
│   │       │   │   ├── calendar_comm_cmpt.js
│   │       │   │   ├── calendar_comm_cmpt.json
│   │       │   │   ├── calendar_comm_cmpt.wxml
│   │       │   │   ├── calendar_comm_cmpt.wxss
│   │       │   │   └── din.wxss
│   │       │   ├── calendar_lib.js
│   │       │   ├── calendar_meet/
│   │       │   │   ├── calendar_meet_cmpt.js
│   │       │   │   ├── calendar_meet_cmpt.json
│   │       │   │   ├── calendar_meet_cmpt.wxml
│   │       │   │   └── calendar_meet_cmpt.wxss
│   │       │   ├── date_select/
│   │       │   │   ├── date_select_cmpt.js
│   │       │   │   ├── date_select_cmpt.json
│   │       │   │   ├── date_select_cmpt.wxml
│   │       │   │   └── date_select_cmpt.wxss
│   │       │   └── time_select/
│   │       │       ├── time_select_cmpt.js
│   │       │       ├── time_select_cmpt.json
│   │       │       ├── time_select_cmpt.wxml
│   │       │       └── time_select_cmpt.wxss
│   │       ├── car_number/
│   │       │   ├── car_number_cmpt.js
│   │       │   ├── car_number_cmpt.json
│   │       │   ├── car_number_cmpt.wxml
│   │       │   └── car_number_cmpt.wxss
│   │       ├── checkbox/
│   │       │   ├── checkbox_cmpt.js
│   │       │   ├── checkbox_cmpt.json
│   │       │   ├── checkbox_cmpt.wxml
│   │       │   └── checkbox_cmpt.wxss
│   │       ├── custom_nav/
│   │       │   ├── custom_nav_cmpt.js
│   │       │   ├── custom_nav_cmpt.json
│   │       │   ├── custom_nav_cmpt.wxml
│   │       │   └── custom_nav_cmpt.wxss
│   │       ├── editor/
│   │       │   ├── editor_cmpt.js
│   │       │   ├── editor_cmpt.json
│   │       │   ├── editor_cmpt.wxml
│   │       │   └── editor_cmpt.wxss
│   │       ├── form/
│   │       │   ├── form_set/
│   │       │   │   ├── field/
│   │       │   │   │   ├── form_set_field.js
│   │       │   │   │   ├── form_set_field.json
│   │       │   │   │   ├── form_set_field.wxml
│   │       │   │   │   └── form_set_field.wxss
│   │       │   │   ├── form_set_cmpt.js
│   │       │   │   ├── form_set_cmpt.json
│   │       │   │   ├── form_set_cmpt.wxml
│   │       │   │   └── form_set_cmpt.wxss
│   │       │   ├── form_set_helper.js
│   │       │   └── form_show/
│   │       │       ├── content/
│   │       │       │   ├── form_show_content.js
│   │       │       │   ├── form_show_content.json
│   │       │       │   ├── form_show_content.wxml
│   │       │       │   └── form_show_content.wxss
│   │       │       ├── form_show_cmpt.js
│   │       │       ├── form_show_cmpt.json
│   │       │       ├── form_show_cmpt.wxml
│   │       │       └── form_show_cmpt.wxss
│   │       ├── img/
│   │       │   ├── img_upload_cmpt.js
│   │       │   ├── img_upload_cmpt.json
│   │       │   ├── img_upload_cmpt.wxml
│   │       │   └── img_upload_cmpt.wxss
│   │       ├── list/
│   │       │   ├── comm_list_cmpt.js
│   │       │   ├── comm_list_cmpt.json
│   │       │   ├── comm_list_cmpt.wxml
│   │       │   └── comm_list_cmpt.wxss
│   │       ├── modal/
│   │       │   ├── modal_cmpt.js
│   │       │   ├── modal_cmpt.json
│   │       │   ├── modal_cmpt.wxml
│   │       │   └── modal_cmpt.wxss
│   │       ├── picker/
│   │       │   ├── picker_cmpt.js
│   │       │   ├── picker_cmpt.json
│   │       │   ├── picker_cmpt.wxml
│   │       │   └── picker_cmpt.wxss
│   │       ├── picker_multi/
│   │       │   ├── picker_multi_cmpt.js
│   │       │   ├── picker_multi_cmpt.json
│   │       │   ├── picker_multi_cmpt.wxml
│   │       │   └── picker_multi_cmpt.wxss
│   │       ├── picker_time/
│   │       │   ├── datetime_picker.js
│   │       │   ├── picker_time_cmpt.js
│   │       │   ├── picker_time_cmpt.json
│   │       │   ├── picker_time_cmpt.wxml
│   │       │   └── picker_time_cmpt.wxss
│   │       ├── poster/
│   │       │   ├── images/
│   │       │   │   ├── friend.png
│   │       │   │   └── wechat.png
│   │       │   ├── poster_cmpt.js
│   │       │   ├── poster_cmpt.json
│   │       │   ├── poster_cmpt.wxml
│   │       │   ├── poster_cmpt.wxss
│   │       │   ├── poster_cmpt_helper.js
│   │       │   └── wxa-plugin-canvas/
│   │       │       ├── index/
│   │       │       │   ├── index.js
│   │       │       │   ├── index.json
│   │       │       │   ├── index.wxml
│   │       │       │   └── index.wxss
│   │       │       └── poster/
│   │       │           ├── index.js
│   │       │           ├── index.json
│   │       │           ├── index.wxml
│   │       │           ├── index.wxss
│   │       │           └── poster.js
│   │       ├── radio/
│   │       │   ├── radio_cmpt.js
│   │       │   ├── radio_cmpt.json
│   │       │   ├── radio_cmpt.wxml
│   │       │   └── radio_cmpt.wxss
│   │       ├── rows/
│   │       │   ├── rows_cmpt.js
│   │       │   ├── rows_cmpt.json
│   │       │   ├── rows_cmpt.wxml
│   │       │   ├── rows_cmpt.wxss
│   │       │   └── rows_set_helper.js
│   │       ├── simple_list/
│   │       │   ├── simple_list_cmpt.js
│   │       │   ├── simple_list_cmpt.json
│   │       │   ├── simple_list_cmpt.wxml
│   │       │   └── simple_list_cmpt.wxss
│   │       ├── swiper/
│   │       │   ├── swiper_cmpt.js
│   │       │   ├── swiper_cmpt.json
│   │       │   ├── swiper_cmpt.wxml
│   │       │   └── swiper_cmpt.wxss
│   │       └── table/
│   │           ├── table_cmpt.js
│   │           ├── table_cmpt.json
│   │           ├── table_cmpt.wxml
│   │           └── table_cmpt.wxss
│   ├── comm/
│   │   ├── behavior/
│   │   │   ├── about_bh.js
│   │   │   ├── my_fav_bh.js
│   │   │   ├── my_foot_bh.js
│   │   │   ├── news_index_bh.js
│   │   │   └── search_bh.js
│   │   ├── biz/
│   │   │   ├── admin_biz.js
│   │   │   ├── base_biz.js
│   │   │   ├── fav_biz.js
│   │   │   ├── foot_biz.js
│   │   │   ├── passport_biz.js
│   │   │   ├── public_biz.js
│   │   │   └── search_biz.js
│   │   └── constants.js
│   ├── helper/
│   │   ├── cache_helper.js
│   │   ├── cloud_helper.js
│   │   ├── content_check_helper.js
│   │   ├── data_helper.js
│   │   ├── file_helper.js
│   │   ├── form_helper.js
│   │   ├── helper.js
│   │   ├── mini_helper.js
│   │   ├── page_helper.js
│   │   ├── pic_helper.js
│   │   ├── time_helper.js
│   │   └── validate.js
│   ├── images/
│   │   └── cover.gif
│   ├── lib/
│   │   └── tools/
│   │       ├── base64_lib.js
│   │       ├── lunar_lib.js
│   │       ├── md5_lib.js
│   │       ├── qrcode_lib.js
│   │       └── wxcharts-min.js
│   ├── pages/
│   │   └── test1/
│   │       ├── test1.js
│   │       ├── test1.json
│   │       ├── test1.wxml
│   │       └── test1.wxss
│   ├── projects/
│   │   └── jobpart/
│   │       ├── biz/
│   │       │   ├── activity_biz.js
│   │       │   ├── admin_activity_biz.js
│   │       │   ├── admin_cate_biz.js
│   │       │   ├── admin_news_biz.js
│   │       │   ├── cate_biz.js
│   │       │   ├── news_biz.js
│   │       │   └── project_biz.js
│   │       ├── images/
│   │       │   ├── detail/
│   │       │   │   ├── location.png
│   │       │   │   ├── money.png
│   │       │   │   ├── person.png
│   │       │   │   ├── rule.png
│   │       │   │   ├── task.png
│   │       │   │   └── time.png
│   │       │   ├── home.jpg
│   │       │   ├── job.jpg
│   │       │   ├── menu/
│   │       │   │   ├── 1.png
│   │       │   │   ├── 2.png
│   │       │   │   ├── 3.png
│   │       │   │   └── 4.png
│   │       │   ├── my/
│   │       │   │   ├── all.png
│   │       │   │   ├── check.png
│   │       │   │   ├── out.png
│   │       │   │   ├── succ.png
│   │       │   │   ├── un.png
│   │       │   │   ├── use.png
│   │       │   │   └── wait.png
│   │       │   ├── my.jpg
│   │       │   └── tabbar/
│   │       │       ├── cate.png
│   │       │       ├── cate_cur.png
│   │       │       ├── enroll.png
│   │       │       ├── enroll_cur.png
│   │       │       ├── home.png
│   │       │       ├── home_cur.png
│   │       │       ├── my.png
│   │       │       ├── my_cur.png
│   │       │       ├── news.png
│   │       │       └── news_cur.png
│   │       ├── pages/
│   │       │   ├── about/
│   │       │   │   └── index/
│   │       │   │       ├── about_index.js
│   │       │   │       ├── about_index.json
│   │       │   │       ├── about_index.wxml
│   │       │   │       └── about_index.wxss
│   │       │   ├── activity/
│   │       │   │   ├── detail/
│   │       │   │   │   ├── activity_detail.js
│   │       │   │   │   ├── activity_detail.json
│   │       │   │   │   ├── activity_detail.wxml
│   │       │   │   │   └── activity_detail.wxss
│   │       │   │   ├── index/
│   │       │   │   │   ├── activity_index.js
│   │       │   │   │   ├── activity_index.json
│   │       │   │   │   ├── activity_index.wxml
│   │       │   │   │   └── activity_index.wxss
│   │       │   │   ├── my_join_list/
│   │       │   │   │   ├── activity_my_join_list.js
│   │       │   │   │   ├── activity_my_join_list.json
│   │       │   │   │   ├── activity_my_join_list.wxml
│   │       │   │   │   └── activity_my_join_list.wxss
│   │       │   │   └── query/
│   │       │   │       ├── activity_query.js
│   │       │   │       ├── activity_query.json
│   │       │   │       ├── activity_query.wxml
│   │       │   │       └── activity_query.wxss
│   │       │   ├── admin/
│   │       │   │   ├── activity/
│   │       │   │   │   ├── add/
│   │       │   │   │   │   ├── activity_form_tpl.wxml
│   │       │   │   │   │   ├── admin_activity_add.js
│   │       │   │   │   │   ├── admin_activity_add.json
│   │       │   │   │   │   ├── admin_activity_add.wxml
│   │       │   │   │   │   └── admin_activity_add.wxss
│   │       │   │   │   ├── edit/
│   │       │   │   │   │   ├── admin_activity_edit.js
│   │       │   │   │   │   ├── admin_activity_edit.json
│   │       │   │   │   │   ├── admin_activity_edit.wxml
│   │       │   │   │   │   └── admin_activity_edit.wxss
│   │       │   │   │   ├── export/
│   │       │   │   │   │   ├── admin_activity_export.js
│   │       │   │   │   │   ├── admin_activity_export.json
│   │       │   │   │   │   ├── admin_activity_export.wxml
│   │       │   │   │   │   └── admin_activity_export.wxss
│   │       │   │   │   ├── join_list/
│   │       │   │   │   │   ├── admin_activity_join_list.js
│   │       │   │   │   │   ├── admin_activity_join_list.json
│   │       │   │   │   │   ├── admin_activity_join_list.wxml
│   │       │   │   │   │   └── admin_activity_join_list.wxss
│   │       │   │   │   └── list/
│   │       │   │   │       ├── admin_activity_list.js
│   │       │   │   │       ├── admin_activity_list.json
│   │       │   │   │       ├── admin_activity_list.wxml
│   │       │   │   │       └── admin_activity_list.wxss
│   │       │   │   ├── cate/
│   │       │   │   │   ├── add/
│   │       │   │   │   │   ├── admin_cate_add.js
│   │       │   │   │   │   ├── admin_cate_add.json
│   │       │   │   │   │   ├── admin_cate_add.wxml
│   │       │   │   │   │   ├── admin_cate_add.wxss
│   │       │   │   │   │   └── admin_cate_form_tpl.wxml
│   │       │   │   │   ├── edit/
│   │       │   │   │   │   ├── admin_cate_edit.js
│   │       │   │   │   │   ├── admin_cate_edit.json
│   │       │   │   │   │   ├── admin_cate_edit.wxml
│   │       │   │   │   │   └── admin_cate_edit.wxss
│   │       │   │   │   └── list/
│   │       │   │   │       ├── admin_cate_list.js
│   │       │   │   │       ├── admin_cate_list.json
│   │       │   │   │       ├── admin_cate_list.wxml
│   │       │   │   │       └── admin_cate_list.wxss
│   │       │   │   ├── content/
│   │       │   │   │   ├── admin_content.js
│   │       │   │   │   ├── admin_content.json
│   │       │   │   │   ├── admin_content.wxml
│   │       │   │   │   └── admin_content.wxss
│   │       │   │   ├── index/
│   │       │   │   │   ├── home/
│   │       │   │   │   │   ├── admin_home.js
│   │       │   │   │   │   ├── admin_home.json
│   │       │   │   │   │   ├── admin_home.wxml
│   │       │   │   │   │   └── admin_home.wxss
│   │       │   │   │   └── login/
│   │       │   │   │       ├── admin_login.js
│   │       │   │   │       ├── admin_login.json
│   │       │   │   │       ├── admin_login.wxml
│   │       │   │   │       └── admin_login.wxss
│   │       │   │   ├── mgr/
│   │       │   │   │   ├── add/
│   │       │   │   │   │   ├── admin_mgr_add.js
│   │       │   │   │   │   ├── admin_mgr_add.json
│   │       │   │   │   │   ├── admin_mgr_add.wxml
│   │       │   │   │   │   └── admin_mgr_add.wxss
│   │       │   │   │   ├── edit/
│   │       │   │   │   │   ├── admin_mgr_edit.js
│   │       │   │   │   │   ├── admin_mgr_edit.json
│   │       │   │   │   │   ├── admin_mgr_edit.wxml
│   │       │   │   │   │   └── admin_mgr_edit.wxss
│   │       │   │   │   ├── list/
│   │       │   │   │   │   ├── admin_mgr_list.js
│   │       │   │   │   │   ├── admin_mgr_list.json
│   │       │   │   │   │   ├── admin_mgr_list.wxml
│   │       │   │   │   │   └── admin_mgr_list.wxss
│   │       │   │   │   ├── log/
│   │       │   │   │   │   ├── admin_log_list.js
│   │       │   │   │   │   ├── admin_log_list.json
│   │       │   │   │   │   ├── admin_log_list.wxml
│   │       │   │   │   │   └── admin_log_list.wxss
│   │       │   │   │   └── pwd/
│   │       │   │   │       ├── admin_mgr_pwd.js
│   │       │   │   │       ├── admin_mgr_pwd.json
│   │       │   │   │       ├── admin_mgr_pwd.wxml
│   │       │   │   │       └── admin_mgr_pwd.wxss
│   │       │   │   ├── news/
│   │       │   │   │   ├── add/
│   │       │   │   │   │   ├── admin_news_add.js
│   │       │   │   │   │   ├── admin_news_add.json
│   │       │   │   │   │   ├── admin_news_add.wxml
│   │       │   │   │   │   └── admin_news_add.wxss
│   │       │   │   │   ├── admin_news_form_tpl.wxml
│   │       │   │   │   ├── edit/
│   │       │   │   │   │   ├── admin_news_edit.js
│   │       │   │   │   │   ├── admin_news_edit.json
│   │       │   │   │   │   ├── admin_news_edit.wxml
│   │       │   │   │   │   └── admin_news_edit.wxss
│   │       │   │   │   └── list/
│   │       │   │   │       ├── admin_news_list.js
│   │       │   │   │       ├── admin_news_list.json
│   │       │   │   │       ├── admin_news_list.wxml
│   │       │   │   │       └── admin_news_list.wxss
│   │       │   │   ├── setup/
│   │       │   │   │   ├── about/
│   │       │   │   │   │   ├── admin_setup_about.js
│   │       │   │   │   │   ├── admin_setup_about.json
│   │       │   │   │   │   ├── admin_setup_about.wxml
│   │       │   │   │   │   └── admin_setup_about.wxss
│   │       │   │   │   ├── about_list/
│   │       │   │   │   │   ├── admin_setup_about_list.js
│   │       │   │   │   │   ├── admin_setup_about_list.json
│   │       │   │   │   │   ├── admin_setup_about_list.wxml
│   │       │   │   │   │   └── admin_setup_about_list.wxss
│   │       │   │   │   └── qr/
│   │       │   │   │       ├── admin_setup_qr.js
│   │       │   │   │       ├── admin_setup_qr.json
│   │       │   │   │       ├── admin_setup_qr.wxml
│   │       │   │   │       └── admin_setup_qr.wxss
│   │       │   │   └── user/
│   │       │   │       ├── detail/
│   │       │   │       │   ├── admin_user_detail.js
│   │       │   │       │   ├── admin_user_detail.json
│   │       │   │       │   ├── admin_user_detail.wxml
│   │       │   │       │   └── admin_user_detail.wxss
│   │       │   │       ├── export/
│   │       │   │       │   ├── admin_user_export.js
│   │       │   │       │   ├── admin_user_export.json
│   │       │   │       │   ├── admin_user_export.wxml
│   │       │   │       │   └── admin_user_export.wxss
│   │       │   │       └── list/
│   │       │   │           ├── admin_user_list.js
│   │       │   │           ├── admin_user_list.json
│   │       │   │           ├── admin_user_list.wxml
│   │       │   │           └── admin_user_list.wxss
│   │       │   ├── cate/
│   │       │   │   ├── detail/
│   │       │   │   │   ├── cate_detail.js
│   │       │   │   │   ├── cate_detail.json
│   │       │   │   │   ├── cate_detail.wxml
│   │       │   │   │   └── cate_detail.wxss
│   │       │   │   └── index/
│   │       │   │       ├── cate_index.js
│   │       │   │       ├── cate_index.json
│   │       │   │       ├── cate_index.wxml
│   │       │   │       └── cate_index.wxss
│   │       │   ├── default/
│   │       │   │   └── index/
│   │       │   │       ├── default_index.js
│   │       │   │       ├── default_index.json
│   │       │   │       ├── default_index.wxml
│   │       │   │       └── default_index.wxss
│   │       │   ├── my/
│   │       │   │   ├── edit/
│   │       │   │   │   ├── my_edit.js
│   │       │   │   │   ├── my_edit.json
│   │       │   │   │   ├── my_edit.wxml
│   │       │   │   │   ├── my_edit.wxss
│   │       │   │   │   └── user_form.wxml
│   │       │   │   ├── fav/
│   │       │   │   │   ├── my_fav.js
│   │       │   │   │   ├── my_fav.json
│   │       │   │   │   ├── my_fav.wxml
│   │       │   │   │   └── my_fav.wxss
│   │       │   │   ├── foot/
│   │       │   │   │   ├── my_foot.js
│   │       │   │   │   ├── my_foot.json
│   │       │   │   │   ├── my_foot.wxml
│   │       │   │   │   └── my_foot.wxss
│   │       │   │   ├── index/
│   │       │   │   │   ├── my_index.js
│   │       │   │   │   ├── my_index.json
│   │       │   │   │   ├── my_index.wxml
│   │       │   │   │   └── my_index.wxss
│   │       │   │   └── reg/
│   │       │   │       ├── my_reg.js
│   │       │   │       ├── my_reg.json
│   │       │   │       ├── my_reg.wxml
│   │       │   │       └── my_reg.wxss
│   │       │   ├── news/
│   │       │   │   ├── cate1/
│   │       │   │   │   ├── news_cate1.js
│   │       │   │   │   ├── news_cate1.json
│   │       │   │   │   ├── news_cate1.wxml
│   │       │   │   │   └── news_cate1.wxss
│   │       │   │   ├── detail/
│   │       │   │   │   ├── news_detail.js
│   │       │   │   │   ├── news_detail.json
│   │       │   │   │   ├── news_detail.wxml
│   │       │   │   │   └── news_detail.wxss
│   │       │   │   └── index/
│   │       │   │       ├── news_index.js
│   │       │   │       ├── news_index.json
│   │       │   │       ├── news_index.wxml
│   │       │   │       └── news_index.wxss
│   │       │   ├── search/
│   │       │   │   ├── search.js
│   │       │   │   ├── search.json
│   │       │   │   ├── search.wxml
│   │       │   │   └── search.wxss
│   │       │   ├── test1/
│   │       │   │   ├── test1.js
│   │       │   │   └── test1.wxml
│   │       │   └── tpls/
│   │       │       └── menu_tpl.wxml
│   │       ├── public/
│   │       │   └── project_setting.js
│   │       └── style/
│   │           └── skin.wxss
│   ├── setting/
│   │   └── setting.js
│   ├── sitemap.json
│   ├── style/
│   │   ├── base/
│   │   │   ├── animation.wxss
│   │   │   ├── avatar.wxss
│   │   │   ├── background.wxss
│   │   │   ├── bar.wxss
│   │   │   ├── base.wxss
│   │   │   ├── border.wxss
│   │   │   ├── button.wxss
│   │   │   ├── comm.wxss
│   │   │   ├── form.wxss
│   │   │   ├── icon.wxss
│   │   │   ├── image.wxss
│   │   │   ├── layout.wxss
│   │   │   ├── list.wxss
│   │   │   ├── load.wxss
│   │   │   ├── modal.wxss
│   │   │   ├── nav.wxss
│   │   │   ├── shadow.wxss
│   │   │   ├── table.wxss
│   │   │   ├── tag.wxss
│   │   │   └── text.wxss
│   │   ├── project/
│   │   │   ├── admin_list_style.wxss
│   │   │   ├── my_fav_style.wxss
│   │   │   ├── my_foot_style.wxss
│   │   │   └── search_style.wxss
│   │   └── public/
│   │       ├── admin.wxss
│   │       ├── article_list.wxss
│   │       ├── comm_box_list.wxss
│   │       ├── detail.wxss
│   │       └── project.wxss
│   └── tpls/
│       ├── project/
│       │   ├── about_tpl.wxml
│       │   ├── my_fav_tpl.wxml
│       │   ├── my_foot_tpl.wxml
│       │   ├── news_index_tpl.wxml
│       │   └── search_tpl.wxml
│       ├── public/
│       │   ├── admin_forms_detail_tpl.wxml
│       │   ├── base_list_tpl.wxml
│       │   ├── list_load_tpl.wxml
│       │   └── top_tpl.wxml
│       └── wxs/
│           └── tools.wxs
├── picture/
│   ├── 微信截图_20250119113157.png
│   ├── 微信截图_20250119113225.png
│   └── 微信截图_20250119113237.png
├── project.config.json
├── project.private.config.json
├── project_snapshot.txt
├── tools/
│   └── create_snapshot.py
└── 兼职招聘小程序安装使用手册.docx


# 文件内容
==================================================


## 文件：E:\idea-space\兼职平台\WeJob-徕 职\project.config.json
--------------------------------------------------
{
	"miniprogramRoot": "miniprogram/",
	"cloudfunctionRoot": "cloudfunctions/",
	"setting": {
		"urlCheck": false,
		"es6": true,
		"enhance": true,
		"postcss": true,
		"preloadBackgroundData": false,
		"minified": true,
		"newFeature": true,
		"coverView": true,
		"nodeModules": false,
		"autoAudits": false,
		"showShadowRootInWxmlPanel": true,
		"scopeDataCheck": false,
		"uglifyFileName": true,
		"checkInvalidKey": true,
		"checkSiteMap": true,
		"uploadWithSourceMap": true,
		"compileHotReLoad": false,
		"lazyloadPlaceholderEnable": false,
		"useMultiFrameRuntime": true,
		"useApiHook": true,
		"useApiHostProcess": true,
		"babelSetting": {
			"ignore": [],
			"disablePlugins": [],
			"outputPath": ""
		},
		"useIsolateContext": true,
		"userConfirmedUseIsolateContext": true,
		"userConfirmedBundleSwitch": false,
		"packNpmManually": false,
		"packNpmRelationList": [],
		"minifyWXSS": true,
		"disableUseStrict": false,
		"minifyWXML": true,
		"showES6CompileOption": false,
		"useCompilerPlugins": false,
		"ignoreUploadUnusedFiles": true,
		"useStaticServer": true
	},
	"appid": "wx613c33a5563fe301",
	"projectname": "Multi多功能平台",
	"libVersion": "2.30.2",
	"simulatorType": "wechat",
	"simulatorPluginLibVersion": {},
	"cloudfunctionTemplateRoot": "cloudfunctionTemplate/",
	"compileType": "miniprogram",
	"srcMiniprogramRoot": "miniprogram/",
	"packOptions": {
		"ignore": [],
		"include": []
	},
	"editorSetting": {
		"tabIndent": "tab",
		"tabSize": 4
	},
	"description": "项目配置文件，详见文档：https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html",
	"condition": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\project.private.config.json
--------------------------------------------------
{
	"setting": {
		"compileHotReLoad": true,
		"urlCheck": false
	},
	"description": "项目私有配置文件。此文件中的内容将覆盖 project.config.json 中的相同字段。项目的改动优先同步到此文件中。详见文档：https://developers.weixin.qq.com/miniprogram/dev/devtools/projectconfig.html",
	"projectname": "Multi%E5%A4%9A%E5%8A%9F%E8%83%BD%E5%B9%B3%E5%8F%B0",
	"condition": {},
	"libVersion": "3.7.6"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\README.md
--------------------------------------------------
## 功能介绍 

![输入图片说明](demo/%E4%BA%8C%E7%BB%B4%E7%A0%81.png)

兼职招聘小程序：为雇主和求职者提供便利的平台，旨在帮助雇主招聘兼职员工，并让求职者寻找合适的兼职工作。提供简单、快捷的方式来匹配兼职岗位和候选人，节省了招聘和求职的时间和精力。其主要功能模块包括：职位检索，企业库检索，简历维护，职位申请，在线沟通，后台职位管理，后台企业管理，后台用户管理等。

该小程序的主要功能包括：
- 职位发布：发布兼职岗位的信息，包括人数，行业，工作描述、工作时间、薪资待遇等，以吸引求职者。 
- 企业库：发布招聘企业信息，包括规模，性质，简要介绍等。
- 简历提交： 求职者可以在小程序上提交个人简历或信息，包括教育背景、工作经历、技能等，帮助雇主更好地了解求职者的情况。   
- 职位申请与审核：求职者选择合适的岗位，进行职位申请，系统可以设置为需要审核和不需要审核两种模式。
- 在线沟通： 提供在线聊天或沟通功能，直接交流和沟通，进一步了解对方的需求和条件。   
- 后台管理：包括职位管理，用户管理，企业管理，后台管理员管理，后台操作日志等，方便运营方更好的管理平台。 

 ![输入图片说明](demo/%E5%85%BC%E8%81%8C%E6%8B%9B%E8%81%98%E5%B0%8F%E7%A8%8B%E5%BA%8F%20(2).jpg)


## 技术运用
- 本项目使用微信小程序平台进行开发。
- 使用腾讯专门的小程序云开发技术，云资源包含云函数，数据库，带宽，存储空间，定时器等，资源配额价格低廉，无需域名和服务器即可搭建。
- 小程序本身的即用即走，适合小工具的使用场景，也适合快速开发迭代。
- 云开发技术采用腾讯内部链路，没有被黑客攻击的风险，不会 DDOS攻击，节省防火墙费用，安全性高且免维护。
- 资源承载力可根据业务发展需要随时弹性扩展。  
 


## 演示 

 ![输入图片说明](demo/%E4%BA%8C%E7%BB%B4%E7%A0%81.png)

## 安装

- 安装手册见源码包里的word文档 




## 截图

![输入图片说明](demo/0%E9%A6%96%E9%A1%B5.png)

![输入图片说明](demo/1%E5%85%AC%E5%91%8A.png)
![输入图片说明](demo/2%E8%81%8C%E4%BD%8D.png)
![输入图片说明](demo/3%E8%AF%A6%E6%83%85.png)
 
![输入图片说明](demo/4%E4%BC%81%E4%B8%9A%E5%BA%93.png)

![输入图片说明](demo/5%E4%BC%81%E4%B8%9A%E8%AF%A6%E6%83%85.png)

![输入图片说明](demo/6%E6%88%91%E7%9A%84.png)
![输入图片说明](demo/7%E6%88%91%E7%9A%84%E6%8A%95%E9%80%92.png)


## 后台管理系统截图 
- 后台超级管理员默认账号:admin，密码123456，请登录后台后及时修改密码和创建普通管理员。
![输入图片说明](demo/80%E5%90%8E%E5%8F%B0-%E9%A6%96%E9%A1%B5.png)

![输入图片说明](demo/81%E5%90%8E%E5%8F%B0-%E7%94%A8%E6%88%B7.png)

![输入图片说明](demo/82%E5%90%8E%E5%8F%B0-%E7%94%A8%E6%88%B7.png)
![输入图片说明](demo/83%E5%90%8E%E5%8F%B0-%E4%BC%81%E4%B8%9A%E7%AE%A1%E7%90%86.png)
![输入图片说明](demo/84%E5%90%8E%E5%8F%B0-%E4%BC%81%E4%B8%9A.png)
![输入图片说明](demo/85%E5%90%8E%E5%8F%B0-%E8%81%8C%E4%BD%8D.png)

![输入图片说明](demo/86%E5%90%8E%E5%8F%B0-%E8%81%8C%E4%BD%8D.png)
![输入图片说明](demo/87%E5%90%8E%E5%8F%B0-%E5%90%8D%E5%8D%95.png)
![输入图片说明](demo/88%E5%90%8E%E5%8F%B0-%E5%AF%BC%E5%87%BA.png)
![输入图片说明](demo/89%E5%90%8E%E5%8F%B0-%E5%AF%BC%E5%87%BA.png)

![输入图片说明](demo/90%E5%90%8E%E5%8F%B0-%E7%AE%A1%E7%90%86%E5%91%98.png)

初始化函數調用：
{
  "route": "home/setup_get",
  "PID":"jobpart"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\config.json
--------------------------------------------------
{
	"permissions": {
		"openapi": ["wxacode.getUnlimited", "security.imgSecCheck", "security.msgSecCheck","serviceMarket.invokeService"]
	}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\index.js
--------------------------------------------------
const application = require('./framework/core/application.js');

// 云函数入口函数
exports.main = async (event, context) => {
	return await application.app(event, context);
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\package-lock.json
--------------------------------------------------
{
    "name": "cloud",
    "version": "1.0.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "cloud",
            "version": "1.0.0",
            "license": "ISC",
            "dependencies": {
                "bson": "^6.10.1",
                "date-utils": "^1.2.21",
                "mysql": "^2.18.1",
                "node-xlsx": "^0.16.1",
                "verror": "^1.10.1",
                "wx-server-sdk": "~2.6.2"
            }
        },
        "node_modules/@babel/runtime": {
            "version": "7.13.9",
            "resolved": "https://registry.npmjs.org/@babel/runtime/-/runtime-7.13.9.tgz",
            "integrity": "sha512-aY2kU+xgJ3dJ1eU6FMB9EH8dIe8dmusF1xEku52joLvw6eAFN0AI+WxCLDnpev2LEejWBAy2sBvBOBAjI3zmvA==",
            "dependencies": {
                "regenerator-runtime": "^0.13.4"
            }
        },
        "node_modules/@cloudbase/database": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/@cloudbase/database/-/database-1.4.1.tgz",
            "integrity": "sha512-BYLXHS6c+WhxAvvdak8Z3W+heScqBBPu/CQ76gC8v1Scuy5qf4qxuPWNzyoxde/eZsmc+BRRCFyIq4xUnIot8g==",
            "dependencies": {
                "bson": "^4.0.3",
                "lodash.clonedeep": "4.5.0",
                "lodash.set": "4.3.2",
                "lodash.unset": "4.5.2"
            }
        },
        "node_modules/@cloudbase/database/node_modules/bson": {
            "version": "4.7.2",
            "resolved": "https://registry.npmjs.org/bson/-/bson-4.7.2.tgz",
            "integrity": "sha512-Ry9wCtIZ5kGqkJoi6aD8KjxFZEx78guTQDnpXWiNthsxzrxAK/i8E6pCHAIZTbaEFWcOCvbecMukfK7XUvyLpQ==",
            "dependencies": {
                "buffer": "^5.6.0"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@cloudbase/node-sdk": {
            "version": "2.9.1",
            "resolved": "https://registry.npmjs.org/@cloudbase/node-sdk/-/node-sdk-2.9.1.tgz",
            "integrity": "sha512-4JGLiy9/Ko7d1pnBgq5mtIUm5v9ig1tHqAeLrkMc8b4vVBRTnYlxJer3uKXq6+9fjLprxNyRSahEg4QR8/Gbkw==",
            "dependencies": {
                "@cloudbase/database": "1.4.1",
                "@cloudbase/signature-nodejs": "1.0.0-beta.0",
                "@types/retry": "^0.12.0",
                "agentkeepalive": "^4.1.3",
                "axios": "^0.21.1",
                "is-regex": "^1.0.4",
                "jsonwebtoken": "^8.5.1",
                "lodash.merge": "^4.6.1",
                "request": "^2.87.0",
                "request-promise": "^4.2.5",
                "retry": "^0.12.0",
                "ts-node": "^8.10.2",
                "xml2js": "^0.4.19"
            },
            "engines": {
                "node": ">=8.6.0"
            }
        },
        "node_modules/@cloudbase/signature-nodejs": {
            "version": "1.0.0-beta.0",
            "resolved": "https://registry.npmjs.org/@cloudbase/signature-nodejs/-/signature-nodejs-1.0.0-beta.0.tgz",
            "integrity": "sha512-gpKqwsVk/D2PzvFamYNReymXSdvRSY90eZ1ARf+1wZ8oT6OpK9kr6nmevGykMxN1n17Gn92hBbWqAxU9o3+kAQ==",
            "dependencies": {
                "@types/clone": "^0.1.30",
                "clone": "^2.1.2",
                "is-stream": "^2.0.0",
                "url": "^0.11.0"
            }
        },
        "node_modules/@protobufjs/aspromise": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/@protobufjs/aspromise/-/aspromise-1.1.2.tgz",
            "integrity": "sha1-m4sMxmPWaafY9vXQiToU00jzD78="
        },
        "node_modules/@protobufjs/base64": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/@protobufjs/base64/-/base64-1.1.2.tgz",
            "integrity": "sha512-AZkcAA5vnN/v4PDqKyMR5lx7hZttPDgClv83E//FMNhR2TMcLUhfRUBHCmSl0oi9zMgDDqRUJkSxO3wm85+XLg=="
        },
        "node_modules/@protobufjs/codegen": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/@protobufjs/codegen/-/codegen-2.0.4.tgz",
            "integrity": "sha512-YyFaikqM5sH0ziFZCN3xDC7zeGaB/d0IUb9CATugHWbd1FRFwWwt4ld4OYMPWu5a3Xe01mGAULCdqhMlPl29Jg=="
        },
        "node_modules/@protobufjs/eventemitter": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@protobufjs/eventemitter/-/eventemitter-1.1.0.tgz",
            "integrity": "sha1-NVy8mLr61ZePntCV85diHx0Ga3A="
        },
        "node_modules/@protobufjs/fetch": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@protobufjs/fetch/-/fetch-1.1.0.tgz",
            "integrity": "sha1-upn7WYYUr2VwDBYZ/wbUVLDYTEU=",
            "dependencies": {
                "@protobufjs/aspromise": "^1.1.1",
                "@protobufjs/inquire": "^1.1.0"
            }
        },
        "node_modules/@protobufjs/float": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/@protobufjs/float/-/float-1.0.2.tgz",
            "integrity": "sha1-Xp4avctz/Ap8uLKR33jIy9l7h9E="
        },
        "node_modules/@protobufjs/inquire": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@protobufjs/inquire/-/inquire-1.1.0.tgz",
            "integrity": "sha1-/yAOPnzyQp4tyvwRQIKOjMY48Ik="
        },
        "node_modules/@protobufjs/path": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/@protobufjs/path/-/path-1.1.2.tgz",
            "integrity": "sha1-bMKyDFya1q0NzP0hynZz2Nf79o0="
        },
        "node_modules/@protobufjs/pool": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@protobufjs/pool/-/pool-1.1.0.tgz",
            "integrity": "sha1-Cf0V8tbTq/qbZbw2ZQbWrXhG/1Q="
        },
        "node_modules/@protobufjs/utf8": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/@protobufjs/utf8/-/utf8-1.1.0.tgz",
            "integrity": "sha1-p3c2C1s5oaLlEG+OhY8v0tBgxXA="
        },
        "node_modules/@types/clone": {
            "version": "0.1.30",
            "resolved": "https://registry.npmjs.org/@types/clone/-/clone-0.1.30.tgz",
            "integrity": "sha1-5zZWSMG0ITalnH1QQGN7O1yDthQ="
        },
        "node_modules/@types/long": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/@types/long/-/long-4.0.1.tgz",
            "integrity": "sha512-5tXH6Bx/kNGd3MgffdmP4dy2Z+G4eaXw0SE81Tq3BNadtnMR5/ySMzX4SLEzHJzSmPNn4HIdpQsBvXMUykr58w=="
        },
        "node_modules/@types/node": {
            "version": "10.17.28",
            "resolved": "https://registry.npmjs.org/@types/node/-/node-10.17.28.tgz",
            "integrity": "sha512-dzjES1Egb4c1a89C7lKwQh8pwjYmlOAG9dW1pBgxEk57tMrLnssOfEthz8kdkNaBd7lIqQx7APm5+mZ619IiCQ=="
        },
        "node_modules/@types/retry": {
            "version": "0.12.5",
            "resolved": "https://registry.npmjs.org/@types/retry/-/retry-0.12.5.tgz",
            "integrity": "sha512-3xSjTp3v03X/lSQLkczaN9UIEwJMoMCA1+Nb5HfbJEQWogdeQIyVtTvxPXDQjZ5zws8rFQfVfRdz03ARihPJgw=="
        },
        "node_modules/adler-32": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/adler-32/-/adler-32-1.2.0.tgz",
            "integrity": "sha1-aj5r8KY5ALoVZSgIyxXGgT0aXyU=",
            "dependencies": {
                "exit-on-epipe": "~1.0.1",
                "printj": "~1.1.0"
            },
            "bin": {
                "adler32": "bin/adler32.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/agentkeepalive": {
            "version": "4.6.0",
            "resolved": "https://registry.npmjs.org/agentkeepalive/-/agentkeepalive-4.6.0.tgz",
            "integrity": "sha512-kja8j7PjmncONqaTsB8fQ+wE2mSU2DJ9D4XKoJ5PFWIdRMa6SLSN1ff4mOr4jCbfRSsxR4keIiySJU0N9T5hIQ==",
            "dependencies": {
                "humanize-ms": "^1.2.1"
            },
            "engines": {
                "node": ">= 8.0.0"
            }
        },
        "node_modules/ajv": {
            "version": "6.12.3",
            "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.3.tgz",
            "integrity": "sha512-4K0cK3L1hsqk9xIb2z9vs/XU+PGJZ9PNpJRDS9YLzmNdX6jmVPfamLvTJr0aDAusnHyCHO6MjzlkAsgtqp9teA==",
            "dependencies": {
                "fast-deep-equal": "^3.1.1",
                "fast-json-stable-stringify": "^2.0.0",
                "json-schema-traverse": "^0.4.1",
                "uri-js": "^4.2.2"
            },
            "funding": {
                "type": "github",
                "url": "https://github.com/sponsors/epoberezkin"
            }
        },
        "node_modules/arg": {
            "version": "4.1.3",
            "resolved": "https://registry.npmjs.org/arg/-/arg-4.1.3.tgz",
            "integrity": "sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA=="
        },
        "node_modules/asn1": {
            "version": "0.2.4",
            "resolved": "https://registry.npmjs.org/asn1/-/asn1-0.2.4.tgz",
            "integrity": "sha512-jxwzQpLQjSmWXgwaCZE9Nz+glAG01yF1QnWgbhGwHI5A6FRIEY6IVqtHhIepHqI7/kyEyQEagBC5mBEFlIYvdg==",
            "dependencies": {
                "safer-buffer": "~2.1.0"
            }
        },
        "node_modules/assert-plus": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/assert-plus/-/assert-plus-1.0.0.tgz",
            "integrity": "sha1-8S4PPF13sLHN2RRpQuTpbB5N1SU=",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/asynckit": {
            "version": "0.4.0",
            "resolved": "https://registry.npmjs.org/asynckit/-/asynckit-0.4.0.tgz",
            "integrity": "sha1-x57Zf380y48robyXkLzDZkdLS3k="
        },
        "node_modules/aws-sign2": {
            "version": "0.7.0",
            "resolved": "https://registry.npmjs.org/aws-sign2/-/aws-sign2-0.7.0.tgz",
            "integrity": "sha1-tG6JCTSpWR8tL2+G1+ap8bP+dqg=",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/aws4": {
            "version": "1.10.0",
            "resolved": "https://registry.npmjs.org/aws4/-/aws4-1.10.0.tgz",
            "integrity": "sha512-3YDiu347mtVtjpyV3u5kVqQLP242c06zwDOgpeRnybmXlYYsLbtTrUBUm8i8srONt+FWobl5aibnU1030PeeuA=="
        },
        "node_modules/axios": {
            "version": "0.21.4",
            "resolved": "https://registry.npmjs.org/axios/-/axios-0.21.4.tgz",
            "integrity": "sha512-ut5vewkiu8jjGBdqpM44XxjuCjq9LAKeHVmoVfHVzy8eHgxxq8SbAVQNovDA8mVi05kP0Ea/n/UzcSHcTJQfNg==",
            "dependencies": {
                "follow-redirects": "^1.14.0"
            }
        },
        "node_modules/base64-js": {
            "version": "1.5.1",
            "resolved": "https://registry.npmjs.org/base64-js/-/base64-js-1.5.1.tgz",
            "integrity": "sha512-AKpaYlHn8t4SVbOHCy+b5+KKgvR4vrsD8vbvrbiQJps7fKDTkjkDry6ji0rUJjC0kzbNePLwzxq8iypo41qeWA==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ]
        },
        "node_modules/bcrypt-pbkdf": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/bcrypt-pbkdf/-/bcrypt-pbkdf-1.0.2.tgz",
            "integrity": "sha1-pDAdOJtqQ/m2f/PKEaP2Y342Dp4=",
            "dependencies": {
                "tweetnacl": "^0.14.3"
            }
        },
        "node_modules/bignumber.js": {
            "version": "9.0.0",
            "resolved": "https://registry.npmjs.org/bignumber.js/-/bignumber.js-9.0.0.tgz",
            "integrity": "sha512-t/OYhhJ2SD+YGBQcjY8GzzDHEk9f3nerxjtfa6tlMXfe7frs/WozhvCNoGvpM0P3bNf3Gq5ZRMlGr5f3r4/N8A==",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/bluebird": {
            "version": "3.7.2",
            "resolved": "https://registry.npmjs.org/bluebird/-/bluebird-3.7.2.tgz",
            "integrity": "sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg=="
        },
        "node_modules/bson": {
            "version": "6.10.1",
            "resolved": "https://registry.npmjs.org/bson/-/bson-6.10.1.tgz",
            "integrity": "sha512-P92xmHDQjSKPLHqFxefqMxASNq/aWJMEZugpCjf+AF/pgcUpMMQCg7t7+ewko0/u8AapvF3luf/FoehddEK+sA==",
            "engines": {
                "node": ">=16.20.1"
            }
        },
        "node_modules/buffer": {
            "version": "5.7.1",
            "resolved": "https://registry.npmjs.org/buffer/-/buffer-5.7.1.tgz",
            "integrity": "sha512-EHcyIPBQ4BSGlvjB16k5KgAJ27CIsHY/2JBmCRReo48y9rQ3MaUzWX3KVlBa4U7MyX02HdVj0K7C3WaB3ju7FQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ],
            "dependencies": {
                "base64-js": "^1.3.1",
                "ieee754": "^1.1.13"
            }
        },
        "node_modules/buffer-equal-constant-time": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
            "integrity": "sha1-+OcRMvf/5uAaXJaXpMbz5I1cyBk="
        },
        "node_modules/buffer-from": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.1.tgz",
            "integrity": "sha512-MQcXEUbCKtEo7bhqEs6560Hyd4XaovZlO/k9V3hjVUF/zwW7KBVdSK4gIt/bzwS9MbR5qob+F5jusZsb0YQK2A=="
        },
        "node_modules/caseless": {
            "version": "0.12.0",
            "resolved": "https://registry.npmjs.org/caseless/-/caseless-0.12.0.tgz",
            "integrity": "sha1-G2gcIf+EAzyCZUMJBolCDRhxUdw="
        },
        "node_modules/cfb": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/cfb/-/cfb-1.2.0.tgz",
            "integrity": "sha512-sXMvHsKCICVR3Naq+J556K+ExBo9n50iKl6LGarlnvuA2035uMlGA/qVrc0wQtow5P1vJEw9UyrKLCbtIKz+TQ==",
            "dependencies": {
                "adler-32": "~1.2.0",
                "crc-32": "~1.2.0",
                "printj": "~1.1.2"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/clone": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/clone/-/clone-2.1.2.tgz",
            "integrity": "sha1-G39Ln1kfHo+DZwQBYANFoCiHQ18=",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/codepage": {
            "version": "1.14.0",
            "resolved": "https://registry.npmjs.org/codepage/-/codepage-1.14.0.tgz",
            "integrity": "sha1-jL4lSBMjVZ19MHVxsP/5HnodL5k=",
            "dependencies": {
                "commander": "~2.14.1",
                "exit-on-epipe": "~1.0.1"
            },
            "bin": {
                "codepage": "bin/codepage.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/codepage/node_modules/commander": {
            "version": "2.14.1",
            "resolved": "https://registry.npmjs.org/commander/-/commander-2.14.1.tgz",
            "integrity": "sha512-+YR16o3rK53SmWHU3rEM3tPAh2rwb1yPcQX5irVn7mb0gXbwuCCrnkbV5+PBfETdfg1vui07nM6PCG1zndcjQw=="
        },
        "node_modules/combined-stream": {
            "version": "1.0.8",
            "resolved": "https://registry.npmjs.org/combined-stream/-/combined-stream-1.0.8.tgz",
            "integrity": "sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==",
            "dependencies": {
                "delayed-stream": "~1.0.0"
            },
            "engines": {
                "node": ">= 0.8"
            }
        },
        "node_modules/commander": {
            "version": "2.17.1",
            "resolved": "https://registry.npmjs.org/commander/-/commander-2.17.1.tgz",
            "integrity": "sha512-wPMUt6FnH2yzG95SA6mzjQOEKUU3aLaDEmzs1ti+1E9h+CsrZghRlqEM/EJ4KscsQVG8uNN4uVreUeT8+drlgg=="
        },
        "node_modules/core-util-is": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.2.tgz",
            "integrity": "sha1-tf1UIgqivFq1eqtxQMlAdUUDwac="
        },
        "node_modules/crc-32": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/crc-32/-/crc-32-1.2.0.tgz",
            "integrity": "sha512-1uBwHxF+Y/4yF5G48fwnKq6QsIXheor3ZLPT80yGBV1oEUwpPojlEhQbWKVw1VwcTQyMGHK1/XMmTjmlsmTTGA==",
            "dependencies": {
                "exit-on-epipe": "~1.0.1",
                "printj": "~1.1.0"
            },
            "bin": {
                "crc32": "bin/crc32.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/dashdash": {
            "version": "1.14.1",
            "resolved": "https://registry.npmjs.org/dashdash/-/dashdash-1.14.1.tgz",
            "integrity": "sha1-hTz6D3y+L+1d4gMmuN1YEDX24vA=",
            "dependencies": {
                "assert-plus": "^1.0.0"
            },
            "engines": {
                "node": ">=0.10"
            }
        },
        "node_modules/date-utils": {
            "version": "1.2.21",
            "resolved": "https://registry.npmjs.org/date-utils/-/date-utils-1.2.21.tgz",
            "integrity": "sha1-YfsWzcEnSzyayq/+n8ad+HIKK2Q=",
            "engines": {
                "node": ">0.4.0"
            }
        },
        "node_modules/delayed-stream": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/delayed-stream/-/delayed-stream-1.0.0.tgz",
            "integrity": "sha1-3zrhmayt+31ECqrgsp4icrJOxhk=",
            "engines": {
                "node": ">=0.4.0"
            }
        },
        "node_modules/diff": {
            "version": "4.0.2",
            "resolved": "https://registry.npmjs.org/diff/-/diff-4.0.2.tgz",
            "integrity": "sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==",
            "engines": {
                "node": ">=0.3.1"
            }
        },
        "node_modules/ecc-jsbn": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/ecc-jsbn/-/ecc-jsbn-0.1.2.tgz",
            "integrity": "sha1-OoOpBOVDUyh4dMVkt1SThoSamMk=",
            "dependencies": {
                "jsbn": "~0.1.0",
                "safer-buffer": "^2.1.0"
            }
        },
        "node_modules/ecdsa-sig-formatter": {
            "version": "1.0.11",
            "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
            "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
            "dependencies": {
                "safe-buffer": "^5.0.1"
            }
        },
        "node_modules/exit-on-epipe": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/exit-on-epipe/-/exit-on-epipe-1.0.1.tgz",
            "integrity": "sha512-h2z5mrROTxce56S+pnvAV890uu7ls7f1kEvVGJbw1OlFH3/mlJ5bkXu0KRyW94v37zzHPiUd55iLn3DA7TjWpw==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/extend": {
            "version": "3.0.2",
            "resolved": "https://registry.npmjs.org/extend/-/extend-3.0.2.tgz",
            "integrity": "sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g=="
        },
        "node_modules/extsprintf": {
            "version": "1.3.0",
            "resolved": "https://registry.npmjs.org/extsprintf/-/extsprintf-1.3.0.tgz",
            "integrity": "sha1-lpGEQOMEGnpBT4xS48V06zw+HgU=",
            "engines": [
                "node >=0.6.0"
            ]
        },
        "node_modules/fast-deep-equal": {
            "version": "3.1.3",
            "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
            "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q=="
        },
        "node_modules/fast-json-stable-stringify": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
            "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw=="
        },
        "node_modules/fflate": {
            "version": "0.3.11",
            "resolved": "https://registry.npmjs.org/fflate/-/fflate-0.3.11.tgz",
            "integrity": "sha512-Rr5QlUeGN1mbOHlaqcSYMKVpPbgLy0AWT/W0EHxA6NGI12yO1jpoui2zBBvU2G824ltM6Ut8BFgfHSBGfkmS0A=="
        },
        "node_modules/follow-redirects": {
            "version": "1.15.9",
            "resolved": "https://registry.npmjs.org/follow-redirects/-/follow-redirects-1.15.9.tgz",
            "integrity": "sha512-gew4GsXizNgdoRyqmyfMHyAmXsZDk6mHkSxZFCzW9gwlbtOW44CDtYavM+y+72qD/Vq2l550kMF52DT8fOLJqQ==",
            "funding": [
                {
                    "type": "individual",
                    "url": "https://github.com/sponsors/RubenVerborgh"
                }
            ],
            "engines": {
                "node": ">=4.0"
            },
            "peerDependenciesMeta": {
                "debug": {
                    "optional": true
                }
            }
        },
        "node_modules/forever-agent": {
            "version": "0.6.1",
            "resolved": "https://registry.npmjs.org/forever-agent/-/forever-agent-0.6.1.tgz",
            "integrity": "sha1-+8cfDEGt6zf5bFd60e1C2P2sypE=",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/form-data": {
            "version": "2.3.3",
            "resolved": "https://registry.npmjs.org/form-data/-/form-data-2.3.3.tgz",
            "integrity": "sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==",
            "dependencies": {
                "asynckit": "^0.4.0",
                "combined-stream": "^1.0.6",
                "mime-types": "^2.1.12"
            },
            "engines": {
                "node": ">= 0.12"
            }
        },
        "node_modules/frac": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/frac/-/frac-1.1.2.tgz",
            "integrity": "sha512-w/XBfkibaTl3YDqASwfDUqkna4Z2p9cFSr1aHDt0WoMTECnRfBOv2WArlZILlqgWlmdIlALXGpM2AOhEk5W3IA==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/getpass": {
            "version": "0.1.7",
            "resolved": "https://registry.npmjs.org/getpass/-/getpass-0.1.7.tgz",
            "integrity": "sha1-Xv+OPmhNVprkyysSgmBOi6YhSfo=",
            "dependencies": {
                "assert-plus": "^1.0.0"
            }
        },
        "node_modules/har-schema": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/har-schema/-/har-schema-2.0.0.tgz",
            "integrity": "sha1-qUwiJOvKwEeCoNkDVSHyRzW37JI=",
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/har-validator": {
            "version": "5.1.3",
            "resolved": "https://registry.npmjs.org/har-validator/-/har-validator-5.1.3.tgz",
            "integrity": "sha512-sNvOCzEQNr/qrvJgc3UG/kD4QtlHycrzwS+6mfTrrSq97BvaYcPZZI1ZSqGSPR73Cxn4LKTD4PttRwfU7jWq5g==",
            "deprecated": "this library is no longer supported",
            "dependencies": {
                "ajv": "^6.5.5",
                "har-schema": "^2.0.0"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/has-symbols": {
            "version": "1.0.1",
            "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.1.tgz",
            "integrity": "sha512-PLcsoqu++dmEIZB+6totNFKq/7Do+Z0u4oT0zKOJNl3lYK6vGwwu2hjHs+68OEZbTjiUE9bgOABXbP/GvrS0Kg==",
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/http-signature": {
            "version": "1.2.0",
            "resolved": "https://registry.npmjs.org/http-signature/-/http-signature-1.2.0.tgz",
            "integrity": "sha1-muzZJRFHcvPZW2WmCruPfBj7rOE=",
            "dependencies": {
                "assert-plus": "^1.0.0",
                "jsprim": "^1.2.2",
                "sshpk": "^1.7.0"
            },
            "engines": {
                "node": ">=0.8",
                "npm": ">=1.3.7"
            }
        },
        "node_modules/humanize-ms": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/humanize-ms/-/humanize-ms-1.2.1.tgz",
            "integrity": "sha512-Fl70vYtsAFb/C06PTS9dZBo7ihau+Tu/DNCk/OyHhea07S+aeMWpFFkUaXRa8fI+ScZbEI8dfSxwY7gxZ9SAVQ==",
            "dependencies": {
                "ms": "^2.0.0"
            }
        },
        "node_modules/ieee754": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/ieee754/-/ieee754-1.2.1.tgz",
            "integrity": "sha512-dcyqhDvX1C46lXZcVqCpK+FtMRQVdIMN6/Df5js2zouUsqG7I6sFxitIC+7KYK29KdXOLHdu9zL4sFnoVQnqaA==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ]
        },
        "node_modules/inherits": {
            "version": "2.0.4",
            "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
            "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
        },
        "node_modules/is-regex": {
            "version": "1.1.0",
            "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.0.tgz",
            "integrity": "sha512-iI97M8KTWID2la5uYXlkbSDQIg4F6o1sYboZKKTDpnDQMLtUL86zxhgDet3Q2SriaYsyGqZ6Mn2SjbRKeLHdqw==",
            "dependencies": {
                "has-symbols": "^1.0.1"
            },
            "engines": {
                "node": ">= 0.4"
            },
            "funding": {
                "url": "https://github.com/sponsors/ljharb"
            }
        },
        "node_modules/is-stream": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/is-stream/-/is-stream-2.0.0.tgz",
            "integrity": "sha512-XCoy+WlUr7d1+Z8GgSuXmpuUFC9fOhRXglJMx+dwLKTkL44Cjd4W1Z5P+BQZpr+cR93aGP4S/s7Ftw6Nd/kiEw==",
            "engines": {
                "node": ">=8"
            }
        },
        "node_modules/is-typedarray": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/is-typedarray/-/is-typedarray-1.0.0.tgz",
            "integrity": "sha1-5HnICFjfDBsR3dppQPlgEfzaSpo="
        },
        "node_modules/isarray": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
            "integrity": "sha1-u5NdSFgsuhaMBoNJV6VKPgcSTxE="
        },
        "node_modules/isstream": {
            "version": "0.1.2",
            "resolved": "https://registry.npmjs.org/isstream/-/isstream-0.1.2.tgz",
            "integrity": "sha1-R+Y/evVa+m+S4VAOaQ64uFKcCZo="
        },
        "node_modules/jsbn": {
            "version": "0.1.1",
            "resolved": "https://registry.npmjs.org/jsbn/-/jsbn-0.1.1.tgz",
            "integrity": "sha1-peZUwuWi3rXyAdls77yoDA7y9RM="
        },
        "node_modules/json-bigint": {
            "version": "1.0.0",
            "resolved": "https://registry.npmjs.org/json-bigint/-/json-bigint-1.0.0.tgz",
            "integrity": "sha512-SiPv/8VpZuWbvLSMtTDU8hEfrZWg/mH/nV/b4o0CYbSxu1UIQPLdwKOCIyLQX+VIPO5vrLX3i8qtqFyhdPSUSQ==",
            "dependencies": {
                "bignumber.js": "^9.0.0"
            }
        },
        "node_modules/json-schema": {
            "version": "0.2.3",
            "resolved": "https://registry.npmjs.org/json-schema/-/json-schema-0.2.3.tgz",
            "integrity": "sha1-tIDIkuWaLwWVTOcnvT8qTogvnhM="
        },
        "node_modules/json-schema-traverse": {
            "version": "0.4.1",
            "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
            "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg=="
        },
        "node_modules/json-stringify-safe": {
            "version": "5.0.1",
            "resolved": "https://registry.npmjs.org/json-stringify-safe/-/json-stringify-safe-5.0.1.tgz",
            "integrity": "sha1-Epai1Y/UXxmg9s4B1lcB4sc1tus="
        },
        "node_modules/jsonwebtoken": {
            "version": "8.5.1",
            "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-8.5.1.tgz",
            "integrity": "sha512-XjwVfRS6jTMsqYs0EsuJ4LGxXV14zQybNd4L2r0UvbVnSF9Af8x7p5MzbJ90Ioz/9TI41/hTCvznF/loiSzn8w==",
            "dependencies": {
                "jws": "^3.2.2",
                "lodash.includes": "^4.3.0",
                "lodash.isboolean": "^3.0.3",
                "lodash.isinteger": "^4.0.4",
                "lodash.isnumber": "^3.0.3",
                "lodash.isplainobject": "^4.0.6",
                "lodash.isstring": "^4.0.1",
                "lodash.once": "^4.0.0",
                "ms": "^2.1.1",
                "semver": "^5.6.0"
            },
            "engines": {
                "node": ">=4",
                "npm": ">=1.4.28"
            }
        },
        "node_modules/jsprim": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/jsprim/-/jsprim-1.4.1.tgz",
            "integrity": "sha1-MT5mvB5cwG5Di8G3SZwuXFastqI=",
            "engines": [
                "node >=0.6.0"
            ],
            "dependencies": {
                "assert-plus": "1.0.0",
                "extsprintf": "1.3.0",
                "json-schema": "0.2.3",
                "verror": "1.10.0"
            }
        },
        "node_modules/jsprim/node_modules/verror": {
            "version": "1.10.0",
            "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.0.tgz",
            "integrity": "sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==",
            "engines": [
                "node >=0.6.0"
            ],
            "dependencies": {
                "assert-plus": "^1.0.0",
                "core-util-is": "1.0.2",
                "extsprintf": "^1.2.0"
            }
        },
        "node_modules/jwa": {
            "version": "1.4.1",
            "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz",
            "integrity": "sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==",
            "dependencies": {
                "buffer-equal-constant-time": "1.0.1",
                "ecdsa-sig-formatter": "1.0.11",
                "safe-buffer": "^5.0.1"
            }
        },
        "node_modules/jws": {
            "version": "3.2.2",
            "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
            "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
            "dependencies": {
                "jwa": "^1.4.1",
                "safe-buffer": "^5.0.1"
            }
        },
        "node_modules/lodash": {
            "version": "4.17.21",
            "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
            "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
        },
        "node_modules/lodash.clonedeep": {
            "version": "4.5.0",
            "resolved": "https://registry.npmjs.org/lodash.clonedeep/-/lodash.clonedeep-4.5.0.tgz",
            "integrity": "sha1-4j8/nE+Pvd6HJSnBBxhXoIblzO8="
        },
        "node_modules/lodash.includes": {
            "version": "4.3.0",
            "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
            "integrity": "sha1-YLuYqHy5I8aMoeUTJUgzFISfVT8="
        },
        "node_modules/lodash.isboolean": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
            "integrity": "sha1-bC4XHbKiV82WgC/UOwGyDV9YcPY="
        },
        "node_modules/lodash.isinteger": {
            "version": "4.0.4",
            "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
            "integrity": "sha1-YZwK89A/iwTDH1iChAt3sRzWg0M="
        },
        "node_modules/lodash.isnumber": {
            "version": "3.0.3",
            "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
            "integrity": "sha1-POdoEMWSjQM1IwGsKHMX8RwLH/w="
        },
        "node_modules/lodash.isplainobject": {
            "version": "4.0.6",
            "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
            "integrity": "sha1-fFJqUtibRcRcxpC4gWO+BJf1UMs="
        },
        "node_modules/lodash.isstring": {
            "version": "4.0.1",
            "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
            "integrity": "sha1-1SfftUVuynzJu5XV2ur4i6VKVFE="
        },
        "node_modules/lodash.merge": {
            "version": "4.6.2",
            "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
            "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ=="
        },
        "node_modules/lodash.once": {
            "version": "4.1.1",
            "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
            "integrity": "sha1-DdOXEhPHxW34gJd9UEyI+0cal6w="
        },
        "node_modules/lodash.set": {
            "version": "4.3.2",
            "resolved": "https://registry.npmjs.org/lodash.set/-/lodash.set-4.3.2.tgz",
            "integrity": "sha1-2HV7HagH3eJIFrDWqEvqGnYjCyM="
        },
        "node_modules/lodash.unset": {
            "version": "4.5.2",
            "resolved": "https://registry.npmjs.org/lodash.unset/-/lodash.unset-4.5.2.tgz",
            "integrity": "sha1-Nw0dPoW3Kn4bDN8tJyEhMG8j5O0="
        },
        "node_modules/long": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/long/-/long-4.0.0.tgz",
            "integrity": "sha512-XsP+KhQif4bjX1kbuSiySJFNAehNxgLb6hPRGJ9QsUr8ajHkuXGdrHmFUTUUXhDwVX2R5bY4JNZEwbUiMhV+MA=="
        },
        "node_modules/make-error": {
            "version": "1.3.6",
            "resolved": "https://registry.npmjs.org/make-error/-/make-error-1.3.6.tgz",
            "integrity": "sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw=="
        },
        "node_modules/mime-db": {
            "version": "1.44.0",
            "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.44.0.tgz",
            "integrity": "sha512-/NOTfLrsPBVeH7YtFPgsVWveuL+4SjjYxaQ1xtM1KMFj7HdxlBlxeyNLzhyJVx7r4rZGJAZ/6lkKCitSc/Nmpg==",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mime-types": {
            "version": "2.1.27",
            "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.27.tgz",
            "integrity": "sha512-JIhqnCasI9yD+SsmkquHBxTSEuZdQX5BuQnS2Vc7puQQQ+8yiP5AY5uWhpdv4YL4VM5c6iliiYWPgJ/nJQLp7w==",
            "dependencies": {
                "mime-db": "1.44.0"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/ms": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
            "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w=="
        },
        "node_modules/mysql": {
            "version": "2.18.1",
            "resolved": "https://registry.npmjs.org/mysql/-/mysql-2.18.1.tgz",
            "integrity": "sha512-Bca+gk2YWmqp2Uf6k5NFEurwY/0td0cpebAucFpY/3jhrwrVGuxU2uQFCHjU19SJfje0yQvi+rVWdq78hR5lig==",
            "dependencies": {
                "bignumber.js": "9.0.0",
                "readable-stream": "2.3.7",
                "safe-buffer": "5.1.2",
                "sqlstring": "2.3.1"
            },
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/mysql/node_modules/safe-buffer": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
            "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        },
        "node_modules/node-xlsx": {
            "version": "0.16.1",
            "resolved": "https://registry.npmjs.org/node-xlsx/-/node-xlsx-0.16.1.tgz",
            "integrity": "sha512-mwEZKItGXKO+jp5Pz9+wDCXxqhJITGd6m81A8WmalBpGAzREiR5cIJ0xrSF0BxzU6Mh2mC0fA2X0/3GqNU6dIw==",
            "dependencies": {
                "@babel/runtime": "^7.12.5",
                "buffer-from": "^1.1.1",
                "xlsx": "^0.16.9"
            },
            "engines": {
                "node": ">=4.0.0"
            }
        },
        "node_modules/oauth-sign": {
            "version": "0.9.0",
            "resolved": "https://registry.npmjs.org/oauth-sign/-/oauth-sign-0.9.0.tgz",
            "integrity": "sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==",
            "engines": {
                "node": "*"
            }
        },
        "node_modules/performance-now": {
            "version": "2.1.0",
            "resolved": "https://registry.npmjs.org/performance-now/-/performance-now-2.1.0.tgz",
            "integrity": "sha1-Ywn04OX6kT7BxpMHrjZLSzd8nns="
        },
        "node_modules/printj": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/printj/-/printj-1.1.2.tgz",
            "integrity": "sha512-zA2SmoLaxZyArQTOPj5LXecR+RagfPSU5Kw1qP+jkWeNlrq+eJZyY2oS68SU1Z/7/myXM4lo9716laOFAVStCQ==",
            "bin": {
                "printj": "bin/printj.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/process-nextick-args": {
            "version": "2.0.1",
            "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
            "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag=="
        },
        "node_modules/protobufjs": {
            "version": "6.8.8",
            "resolved": "https://registry.npmjs.org/protobufjs/-/protobufjs-6.8.8.tgz",
            "integrity": "sha512-AAmHtD5pXgZfi7GMpllpO3q1Xw1OYldr+dMUlAnffGTAhqkg72WdmSY71uKBF/JuyiKs8psYbtKrhi0ASCD8qw==",
            "hasInstallScript": true,
            "dependencies": {
                "@protobufjs/aspromise": "^1.1.2",
                "@protobufjs/base64": "^1.1.2",
                "@protobufjs/codegen": "^2.0.4",
                "@protobufjs/eventemitter": "^1.1.0",
                "@protobufjs/fetch": "^1.1.0",
                "@protobufjs/float": "^1.0.2",
                "@protobufjs/inquire": "^1.1.0",
                "@protobufjs/path": "^1.1.2",
                "@protobufjs/pool": "^1.1.0",
                "@protobufjs/utf8": "^1.1.0",
                "@types/long": "^4.0.0",
                "@types/node": "^10.1.0",
                "long": "^4.0.0"
            },
            "bin": {
                "pbjs": "bin/pbjs",
                "pbts": "bin/pbts"
            }
        },
        "node_modules/psl": {
            "version": "1.8.0",
            "resolved": "https://registry.npmjs.org/psl/-/psl-1.8.0.tgz",
            "integrity": "sha512-RIdOzyoavK+hA18OGGWDqUTsCLhtA7IcZ/6NCs4fFJaHBDab+pDDmDIByWFRQJq2Cd7r1OoQxBGKOaztq+hjIQ=="
        },
        "node_modules/punycode": {
            "version": "1.3.2",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-1.3.2.tgz",
            "integrity": "sha1-llOgNvt8HuQjQvIyXM7v6jkmxI0="
        },
        "node_modules/qs": {
            "version": "6.5.2",
            "resolved": "https://registry.npmjs.org/qs/-/qs-6.5.2.tgz",
            "integrity": "sha512-N5ZAX4/LxJmF+7wN74pUD6qAh9/wnvdQcjq9TZjevvXzSUo7bfmw91saqMjzGS2xq91/odN2dW/WOl7qQHNDGA==",
            "engines": {
                "node": ">=0.6"
            }
        },
        "node_modules/querystring": {
            "version": "0.2.0",
            "resolved": "https://registry.npmjs.org/querystring/-/querystring-0.2.0.tgz",
            "integrity": "sha1-sgmEkgO7Jd+CDadW50cAWHhSFiA=",
            "deprecated": "The querystring API is considered Legacy. new code should use the URLSearchParams API instead.",
            "engines": {
                "node": ">=0.4.x"
            }
        },
        "node_modules/readable-stream": {
            "version": "2.3.7",
            "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.7.tgz",
            "integrity": "sha512-Ebho8K4jIbHAxnuxi7o42OrZgF/ZTNcsZj6nRKyUmkhLFq8CHItp/fy6hQZuZmP/n3yZ9VBUbp4zz/mX8hmYPw==",
            "dependencies": {
                "core-util-is": "~1.0.0",
                "inherits": "~2.0.3",
                "isarray": "~1.0.0",
                "process-nextick-args": "~2.0.0",
                "safe-buffer": "~5.1.1",
                "string_decoder": "~1.1.1",
                "util-deprecate": "~1.0.1"
            }
        },
        "node_modules/readable-stream/node_modules/safe-buffer": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
            "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        },
        "node_modules/regenerator-runtime": {
            "version": "0.13.7",
            "resolved": "https://registry.npmjs.org/regenerator-runtime/-/regenerator-runtime-0.13.7.tgz",
            "integrity": "sha512-a54FxoJDIr27pgf7IgeQGxmqUNYrcV338lf/6gH456HZ/PhX+5BcwHXG9ajESmwe6WRO0tAzRUrRmNONWgkrew=="
        },
        "node_modules/request": {
            "version": "2.88.2",
            "resolved": "https://registry.npmjs.org/request/-/request-2.88.2.tgz",
            "integrity": "sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==",
            "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142",
            "dependencies": {
                "aws-sign2": "~0.7.0",
                "aws4": "^1.8.0",
                "caseless": "~0.12.0",
                "combined-stream": "~1.0.6",
                "extend": "~3.0.2",
                "forever-agent": "~0.6.1",
                "form-data": "~2.3.2",
                "har-validator": "~5.1.3",
                "http-signature": "~1.2.0",
                "is-typedarray": "~1.0.0",
                "isstream": "~0.1.2",
                "json-stringify-safe": "~5.0.1",
                "mime-types": "~2.1.19",
                "oauth-sign": "~0.9.0",
                "performance-now": "^2.1.0",
                "qs": "~6.5.2",
                "safe-buffer": "^5.1.2",
                "tough-cookie": "~2.5.0",
                "tunnel-agent": "^0.6.0",
                "uuid": "^3.3.2"
            },
            "engines": {
                "node": ">= 6"
            }
        },
        "node_modules/request-promise": {
            "version": "4.2.6",
            "resolved": "https://registry.npmjs.org/request-promise/-/request-promise-4.2.6.tgz",
            "integrity": "sha512-HCHI3DJJUakkOr8fNoCc73E5nU5bqITjOYFMDrKHYOXWXrgD/SBaC7LjwuPymUprRyuF06UK7hd/lMHkmUXglQ==",
            "deprecated": "request-promise has been deprecated because it extends the now deprecated request package, see https://github.com/request/request/issues/3142",
            "dependencies": {
                "bluebird": "^3.5.0",
                "request-promise-core": "1.1.4",
                "stealthy-require": "^1.1.1",
                "tough-cookie": "^2.3.3"
            },
            "engines": {
                "node": ">=0.10.0"
            },
            "peerDependencies": {
                "request": "^2.34"
            }
        },
        "node_modules/request-promise-core": {
            "version": "1.1.4",
            "resolved": "https://registry.npmjs.org/request-promise-core/-/request-promise-core-1.1.4.tgz",
            "integrity": "sha512-TTbAfBBRdWD7aNNOoVOBH4pN/KigV6LyapYNNlAPA8JwbovRti1E88m3sYAwsLi5ryhPKsE9APwnjFTgdUjTpw==",
            "dependencies": {
                "lodash": "^4.17.19"
            },
            "engines": {
                "node": ">=0.10.0"
            },
            "peerDependencies": {
                "request": "^2.34"
            }
        },
        "node_modules/retry": {
            "version": "0.12.0",
            "resolved": "https://registry.npmjs.org/retry/-/retry-0.12.0.tgz",
            "integrity": "sha512-9LkiTwjUh6rT555DtE9rTX+BKByPfrMzEAtnlEtdEwr3Nkffwiihqe2bWADg+OQRjt9gl6ICdmB/ZFDCGAtSow==",
            "engines": {
                "node": ">= 4"
            }
        },
        "node_modules/safe-buffer": {
            "version": "5.2.1",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz",
            "integrity": "sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==",
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/feross"
                },
                {
                    "type": "patreon",
                    "url": "https://www.patreon.com/feross"
                },
                {
                    "type": "consulting",
                    "url": "https://feross.org/support"
                }
            ]
        },
        "node_modules/safer-buffer": {
            "version": "2.1.2",
            "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
            "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
        },
        "node_modules/sax": {
            "version": "1.2.4",
            "resolved": "https://registry.npmjs.org/sax/-/sax-1.2.4.tgz",
            "integrity": "sha512-NqVDv9TpANUjFm0N8uM5GxL36UgKi9/atZw+x7YFnQ8ckwFGKrl4xX4yWtrey3UJm5nP1kUbnYgLopqWNSRhWw=="
        },
        "node_modules/semver": {
            "version": "5.7.1",
            "resolved": "https://registry.npmjs.org/semver/-/semver-5.7.1.tgz",
            "integrity": "sha512-sauaDf/PZdVgrLTNYHRtpXa1iRiKcaebiKQ1BJdpQlWH2lCvexQdX55snPFyK7QzpudqbCI0qXFfOasHdyNDGQ==",
            "bin": {
                "semver": "bin/semver"
            }
        },
        "node_modules/source-map": {
            "version": "0.6.1",
            "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
            "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/source-map-support": {
            "version": "0.5.21",
            "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
            "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
            "dependencies": {
                "buffer-from": "^1.0.0",
                "source-map": "^0.6.0"
            }
        },
        "node_modules/sqlstring": {
            "version": "2.3.1",
            "resolved": "https://registry.npmjs.org/sqlstring/-/sqlstring-2.3.1.tgz",
            "integrity": "sha1-R1OT/56RR5rqYtyvDKPRSYOn+0A=",
            "engines": {
                "node": ">= 0.6"
            }
        },
        "node_modules/ssf": {
            "version": "0.11.2",
            "resolved": "https://registry.npmjs.org/ssf/-/ssf-0.11.2.tgz",
            "integrity": "sha512-+idbmIXoYET47hH+d7dfm2epdOMUDjqcB4648sTZ+t2JwoyBFL/insLfB/racrDmsKB3diwsDA696pZMieAC5g==",
            "dependencies": {
                "frac": "~1.1.2"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/sshpk": {
            "version": "1.16.1",
            "resolved": "https://registry.npmjs.org/sshpk/-/sshpk-1.16.1.tgz",
            "integrity": "sha512-HXXqVUq7+pcKeLqqZj6mHFUMvXtOJt1uoUx09pFW6011inTMxqI8BA8PM95myrIyyKwdnzjdFjLiE6KBPVtJIg==",
            "dependencies": {
                "asn1": "~0.2.3",
                "assert-plus": "^1.0.0",
                "bcrypt-pbkdf": "^1.0.0",
                "dashdash": "^1.12.0",
                "ecc-jsbn": "~0.1.1",
                "getpass": "^0.1.1",
                "jsbn": "~0.1.0",
                "safer-buffer": "^2.0.2",
                "tweetnacl": "~0.14.0"
            },
            "bin": {
                "sshpk-conv": "bin/sshpk-conv",
                "sshpk-sign": "bin/sshpk-sign",
                "sshpk-verify": "bin/sshpk-verify"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/stealthy-require": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.1.1.tgz",
            "integrity": "sha512-ZnWpYnYugiOVEY5GkcuJK1io5V8QmNYChG62gSit9pQVGErXtrKuPC55ITaVSukmMta5qpMU7vqLt2Lnni4f/g==",
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/string_decoder": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
            "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
            "dependencies": {
                "safe-buffer": "~5.1.0"
            }
        },
        "node_modules/string_decoder/node_modules/safe-buffer": {
            "version": "5.1.2",
            "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
            "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g=="
        },
        "node_modules/tcb-admin-node": {
            "version": "1.23.0",
            "resolved": "https://registry.npmjs.org/tcb-admin-node/-/tcb-admin-node-1.23.0.tgz",
            "integrity": "sha512-SAbjTqMsSi63SId1BJ4kWdyGJzhxh9Tjvy3YXxcsoaAC2PtASn4UIYsBsiNEUfcn58QEn2tdvCvvf69WLLjjrg==",
            "dependencies": {
                "@cloudbase/database": "0.9.15",
                "@cloudbase/signature-nodejs": "^1.0.0-beta.0",
                "is-regex": "^1.0.4",
                "jsonwebtoken": "^8.5.1",
                "lodash.merge": "^4.6.1",
                "request": "^2.87.0",
                "xml2js": "^0.4.19"
            },
            "engines": {
                "node": ">=8.6.0"
            }
        },
        "node_modules/tcb-admin-node/node_modules/@cloudbase/database": {
            "version": "0.9.15",
            "resolved": "https://registry.npmjs.org/@cloudbase/database/-/database-0.9.15.tgz",
            "integrity": "sha512-63e7iIl+van41B39Tw4ScNe9TRCt+5GHjc7q6i8NzkWBLC3U3KlbWo79YHsUHUPI79POpQ8UMlMVo7HXIAO3dg==",
            "dependencies": {
                "bson": "^4.0.2",
                "lodash.clonedeep": "4.5.0",
                "lodash.set": "4.3.2",
                "lodash.unset": "4.5.2"
            }
        },
        "node_modules/tcb-admin-node/node_modules/bson": {
            "version": "4.7.2",
            "resolved": "https://registry.npmjs.org/bson/-/bson-4.7.2.tgz",
            "integrity": "sha512-Ry9wCtIZ5kGqkJoi6aD8KjxFZEx78guTQDnpXWiNthsxzrxAK/i8E6pCHAIZTbaEFWcOCvbecMukfK7XUvyLpQ==",
            "dependencies": {
                "buffer": "^5.6.0"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/tough-cookie": {
            "version": "2.5.0",
            "resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.5.0.tgz",
            "integrity": "sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==",
            "dependencies": {
                "psl": "^1.1.28",
                "punycode": "^2.1.1"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/tough-cookie/node_modules/punycode": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
            "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/ts-node": {
            "version": "8.10.2",
            "resolved": "https://registry.npmjs.org/ts-node/-/ts-node-8.10.2.tgz",
            "integrity": "sha512-ISJJGgkIpDdBhWVu3jufsWpK3Rzo7bdiIXJjQc0ynKxVOVcg2oIrf2H2cejminGrptVc6q6/uynAHNCuWGbpVA==",
            "dependencies": {
                "arg": "^4.1.0",
                "diff": "^4.0.1",
                "make-error": "^1.1.1",
                "source-map-support": "^0.5.17",
                "yn": "3.1.1"
            },
            "bin": {
                "ts-node": "dist/bin.js",
                "ts-node-script": "dist/bin-script.js",
                "ts-node-transpile-only": "dist/bin-transpile.js",
                "ts-script": "dist/bin-script-deprecated.js"
            },
            "engines": {
                "node": ">=6.0.0"
            },
            "peerDependencies": {
                "typescript": ">=2.7"
            }
        },
        "node_modules/tslib": {
            "version": "1.13.0",
            "resolved": "https://registry.npmjs.org/tslib/-/tslib-1.13.0.tgz",
            "integrity": "sha512-i/6DQjL8Xf3be4K/E6Wgpekn5Qasl1usyw++dAA35Ue5orEn65VIxOA+YvNNl9HV3qv70T7CNwjODHZrLwvd1Q=="
        },
        "node_modules/tunnel-agent": {
            "version": "0.6.0",
            "resolved": "https://registry.npmjs.org/tunnel-agent/-/tunnel-agent-0.6.0.tgz",
            "integrity": "sha1-J6XeoGs2sEoKmWZ3SykIaPD8QP0=",
            "dependencies": {
                "safe-buffer": "^5.0.1"
            },
            "engines": {
                "node": "*"
            }
        },
        "node_modules/tweetnacl": {
            "version": "0.14.5",
            "resolved": "https://registry.npmjs.org/tweetnacl/-/tweetnacl-0.14.5.tgz",
            "integrity": "sha1-WuaBd/GS1EViadEIr6k/+HQ/T2Q="
        },
        "node_modules/typescript": {
            "version": "5.7.3",
            "resolved": "https://registry.npmjs.org/typescript/-/typescript-5.7.3.tgz",
            "integrity": "sha512-84MVSjMEHP+FQRPy3pX9sTVV/INIex71s9TL2Gm5FG/WG1SqXeKyZ0k7/blY/4FdOzI12CBy1vGc4og/eus0fw==",
            "peer": true,
            "bin": {
                "tsc": "bin/tsc",
                "tsserver": "bin/tsserver"
            },
            "engines": {
                "node": ">=14.17"
            }
        },
        "node_modules/uri-js": {
            "version": "4.2.2",
            "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.2.2.tgz",
            "integrity": "sha512-KY9Frmirql91X2Qgjry0Wd4Y+YTdrdZheS8TFwvkbLWf/G5KNJDCh6pKL5OZctEW4+0Baa5idK2ZQuELRwPznQ==",
            "dependencies": {
                "punycode": "^2.1.0"
            }
        },
        "node_modules/uri-js/node_modules/punycode": {
            "version": "2.1.1",
            "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.1.1.tgz",
            "integrity": "sha512-XRsRjdf+j5ml+y/6GKHPZbrF/8p2Yga0JPtdqTIY2Xe5ohJPD9saDJJLPvp9+NSBprVvevdXZybnj2cv8OEd0A==",
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/url": {
            "version": "0.11.0",
            "resolved": "https://registry.npmjs.org/url/-/url-0.11.0.tgz",
            "integrity": "sha1-ODjpfPxgUh63PFJajlW/3Z4uKPE=",
            "dependencies": {
                "punycode": "1.3.2",
                "querystring": "0.2.0"
            }
        },
        "node_modules/util-deprecate": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
            "integrity": "sha1-RQ1Nyfpw3nMnYvvS1KKJgUGaDM8="
        },
        "node_modules/uuid": {
            "version": "3.4.0",
            "resolved": "https://registry.npmjs.org/uuid/-/uuid-3.4.0.tgz",
            "integrity": "sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==",
            "deprecated": "Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.",
            "bin": {
                "uuid": "bin/uuid"
            }
        },
        "node_modules/verror": {
            "version": "1.10.1",
            "resolved": "https://registry.npmjs.org/verror/-/verror-1.10.1.tgz",
            "integrity": "sha512-veufcmxri4e3XSrT0xwfUR7kguIkaxBeosDg00yDWhk49wdwkSUrvvsm7nc75e1PUyvIeZj6nS8VQRYz2/S4Xg==",
            "dependencies": {
                "assert-plus": "^1.0.0",
                "core-util-is": "1.0.2",
                "extsprintf": "^1.2.0"
            },
            "engines": {
                "node": ">=0.6.0"
            }
        },
        "node_modules/wmf": {
            "version": "1.0.2",
            "resolved": "https://registry.npmjs.org/wmf/-/wmf-1.0.2.tgz",
            "integrity": "sha512-/p9K7bEh0Dj6WbXg4JG0xvLQmIadrner1bi45VMJTfnbVHsc7yIajZyoSoK60/dtVBs12Fm6WkUI5/3WAVsNMw==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/word": {
            "version": "0.3.0",
            "resolved": "https://registry.npmjs.org/word/-/word-0.3.0.tgz",
            "integrity": "sha512-OELeY0Q61OXpdUfTp+oweA/vtLVg5VDOXh+3he3PNzLGG/y0oylSOC1xRVj0+l4vQ3tj/bB1HVHv1ocXkQceFA==",
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/wx-server-sdk": {
            "version": "2.6.3",
            "resolved": "https://registry.npmjs.org/wx-server-sdk/-/wx-server-sdk-2.6.3.tgz",
            "integrity": "sha512-wCSAO94HScMVnalb4WVbOqjTyKxus4/jPYV41ct9liHXv/hGGlDqUWV1vb1icyQKXp+mSslvpBNNjYnZAM5MVA==",
            "dependencies": {
                "@cloudbase/node-sdk": "2.9.1",
                "json-bigint": "^1.0.0",
                "protobufjs": "^6.8.8",
                "tcb-admin-node": "latest",
                "tslib": "^1.9.3"
            }
        },
        "node_modules/xlsx": {
            "version": "0.16.9",
            "resolved": "https://registry.npmjs.org/xlsx/-/xlsx-0.16.9.tgz",
            "integrity": "sha512-gxi1I3EasYvgCX1vN9pGyq920Ron4NO8PNfhuoA3Hpq6Y8f0ECXiy4OLrK4QZBnj1jx3QD+8Fq5YZ/3mPZ5iXw==",
            "dependencies": {
                "adler-32": "~1.2.0",
                "cfb": "^1.1.4",
                "codepage": "~1.14.0",
                "commander": "~2.17.1",
                "crc-32": "~1.2.0",
                "exit-on-epipe": "~1.0.1",
                "fflate": "^0.3.8",
                "ssf": "~0.11.2",
                "wmf": "~1.0.1",
                "word": "~0.3.0"
            },
            "bin": {
                "xlsx": "bin/xlsx.njs"
            },
            "engines": {
                "node": ">=0.8"
            }
        },
        "node_modules/xml2js": {
            "version": "0.4.23",
            "resolved": "https://registry.npmjs.org/xml2js/-/xml2js-0.4.23.tgz",
            "integrity": "sha512-ySPiMjM0+pLDftHgXY4By0uswI3SPKLDw/i3UXbnO8M/p28zqexCUoPmQFrYD+/1BzhGJSs2i1ERWKJAtiLrug==",
            "dependencies": {
                "sax": ">=0.6.0",
                "xmlbuilder": "~11.0.0"
            },
            "engines": {
                "node": ">=4.0.0"
            }
        },
        "node_modules/xmlbuilder": {
            "version": "11.0.1",
            "resolved": "https://registry.npmjs.org/xmlbuilder/-/xmlbuilder-11.0.1.tgz",
            "integrity": "sha512-fDlsI/kFEx7gLvbecc0/ohLG50fugQp8ryHzMTuW9vSa1GJ0XYWKnhsUx7oie3G98+r56aTQIUB4kht42R3JvA==",
            "engines": {
                "node": ">=4.0"
            }
        },
        "node_modules/yn": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/yn/-/yn-3.1.1.tgz",
            "integrity": "sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==",
            "engines": {
                "node": ">=6"
            }
        }
    }
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\package.json
--------------------------------------------------
{
    "name": "cloud",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {
        "test": "echo \"Error: no test specified\" && exit 1"
    },
    "author": "",
    "license": "ISC",
    "dependencies": {
        "bson": "^6.10.1",
        "date-utils": "^1.2.21",
        "mysql": "^2.18.1",
        "node-xlsx": "^0.16.1",
        "verror": "^1.10.1",
        "wx-server-sdk": "~2.6.2"
    }
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\config\config.js
--------------------------------------------------
module.exports = {

	//### 环境相关 
	CLOUD_ID: 'partjob-1g5flu5ebe7aba48', //你的云环境id   

	// ##################################################################   
	COLLECTION_PRFIX: 'bx_',

	IS_DEMO: false, //是否演示版 (后台不可操作提交动作)  
	// ##################################################################
	// #### 调试相关 
	TEST_MODE: false, // 测试模式 涉及小程序码生成路径， 用以下 TEST_TOKEN_ID openid.. 
	TEST_TOKEN_ID: 'oD58U5Ej-gK0BjqSspqjQEPgXuQQ',
 

	// #### 内容安全
	CLIENT_CHECK_CONTENT: false, //前台图片文字是否校验
	ADMIN_CHECK_CONTENT: false, //后台图片文字是否校验     

	// ### 后台业务相关
	ADMIN_LOGIN_EXPIRE: 86400, //管理员token过期时间 (秒) 

	// ### 服务者相关
	WORK_LOGIN_EXPIRE: 86400, //服务者token过期时间 (秒) 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\cloud\cloud_base.js
--------------------------------------------------
/**
 * Notes: 云初始化实例
 * Ver : CCMiniCloud Framework 2.2.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const config = require('../../config/config.js');

/**
 * 获得云实例
 */
function getCloud() {
	const cloud = require('wx-server-sdk');
	cloud.init({
		env: config.CLOUD_ID
	});
	return cloud;
}

module.exports = {
	getCloud
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\cloud\cloud_util.js
--------------------------------------------------
/**
 * Notes: 云基本操作模块
 * Ver : CCMiniCloud Framework 2.3.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */
const cloudBase = require('./cloud_base.js');
const config = require('../../config/config.js');

function log(method, err, level = 'error') {
	const cloud = cloudBase.getCloud();
	const log = cloud.logger();
	log.error({
		method: method,
		errCode: err.code,
		errMsg: err.message,
		errStack: err.stack
	});
}

async function getTempFileURLOne(fileID) {
	if (!fileID) return '';

	const cloud = cloudBase.getCloud();
	let result = await cloud.getTempFileURL({
		fileList: [fileID],
	})
	if (result && result.fileList && result.fileList[0] && result.fileList[0].tempFileURL)
		return result.fileList[0].tempFileURL;
	return '';
}

async function getTempFileURL(tempFileList, isValid = false) {
	if (!tempFileList || tempFileList.length == 0) return [];

	const cloud = cloudBase.getCloud();
	let result = await cloud.getTempFileURL({
		fileList: tempFileList,
	})
	console.log(result);

	let list = result.fileList;
	let outList = [];
	for (let i = 0; i < list.length; i++) {
		let pic = {};
		if (list[i].status == 0) {
			//获取到地址的
			pic.url = list[i].tempFileURL;
			pic.cloudId = list[i].fileID;
			outList.push(pic)
		} else {
			//未获取到地址的（已经转换过的)
			if (!isValid) {
				pic.url = list[i].fileID; // fileID为URL, tempFileURL为空
				pic.cloudId = list[i].fileID;
				outList.push(pic)
			}
		}
	}
	return outList;
}

async function handlerCloudFilesForForms(oldForms, newsForms) {
	let oldFiles = [];
	let newFiles = [];

	for (let k = 0; k < oldForms.length; k++) {
		if (oldForms[k].type == 'image')
			oldFiles = oldFiles.concat(oldForms[k].val);
		else if (oldForms[k].type == 'content') {
			let contentVal = oldForms[k].val;
			for (let n in contentVal) {
				if (contentVal[n].type == 'img')
					oldFiles.push(contentVal[n].val);
			}

		}
	}

	for (let j in newsForms) {
		if (newsForms[j].type == 'image')
			newFiles = newFiles.concat(newsForms[j].val);
		else if (newsForms[j].type == 'content') {
			let contentVal = newsForms[j].val;
			for (let m in contentVal) {
				if (contentVal[m].type == 'img')
					newFiles.push(contentVal[m].val);
			}

		}
	}

	await handlerCloudFiles(oldFiles, newFiles);
}

async function handlerCloudFiles(oldFiles, newFiles) {
	//if (oldFiles.length == 0 && newFiles.length == 0) return [];

	const cloud = cloudBase.getCloud();
	for (let i = 0; i < oldFiles.length; i++) {
		let isDel = true;
		for (let j = 0; j < newFiles.length; j++) {
			if (oldFiles[i] == newFiles[j]) {
				// 从旧文件数组里 找到 新组 还存在的文件 ，则不删除
				isDel = false;
				break;
			}
		}
		// 新组里不存在，直接删除
		if (isDel && oldFiles[i]) {
			let result = await cloud.deleteFile({
				fileList: [oldFiles[i]],
			});
			console.log(result);
		}

	}

	return newFiles;
}


async function handlerCloudFilesByRichEditor(oldFiles, newFiles) {
	const cloud = cloudBase.getCloud();
	for (let i = 0; i < oldFiles.length; i++) {
		let isDel = true;
		for (let j = 0; j < newFiles.length; j++) {
			if (oldFiles[i].type == 'img' && newFiles[j].type == 'img' && oldFiles[i].val == newFiles[j].val) {
				// 从旧文件数组里 找到 新组 还存在的图片文件, 保存cloudID
				//newFiles[j].cloudId = oldFiles[i].cloudId;
				isDel = false;
				break;
			}
		}
		// 新组里不存在，直接删除
		if (isDel && oldFiles[i].type == 'img' && oldFiles[i].val) {

			let result = await cloud.deleteFile({
				fileList: [oldFiles[i].val],
			});
		}

	}

	return newFiles;
}

async function deleteFiles(list) {
	if (!list) return;
	if (!Array.isArray(list)) list = [list];
	if (list.length == 0) return;

	const cloud = cloudBase.getCloud();
	await cloud.deleteFile({
		fileList: list,
	});
}

// 延时执行，单位秒
async function delayTask(data, delayTime = 60 * 6, functionName = 'mcloud') {
	const cloud = cloudBase.getCloud();

	try {
		data = JSON.stringify(data);
		const result = await cloud.openapi.cloudbase.addDelayedFunctionTask({
			env: config.CLOUD_ID,
			data,
			functionName,
			delayTime
		})
		console.log(result, data);
	} catch (err) {
		console.error(err)
	}
}

module.exports = {
	log,
	getTempFileURL,
	getTempFileURLOne,
	deleteFiles,
	handlerCloudFiles,
	handlerCloudFilesByRichEditor,
	handlerCloudFilesForForms,
	delayTask
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\core\application.js
--------------------------------------------------
/**
 * Notes: 云函数业务主逻辑
 * Ver : CCMiniCloud Framework 2.8.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */
const util = require('../utils/util.js');
const cloudBase = require('../cloud/cloud_base.js');
const timeUtil = require('../utils/time_util.js');
const appUtil = require('./app_util.js');
const appCode = require('./app_code.js');
const appOther = require('./app_other.js');
const config = require('../../config/config.js');
global.PID = 'unknown';

async function app(event, context) { 

	// 非标业务处理
	let {
		eventX,
		isOther
	} = appOther.handlerOther(event);
	event = eventX;

	// 取得openid
	const cloud = cloudBase.getCloud();
	const wxContext = cloud.getWXContext();
	let r = '';
	let PID = '';
	try {

		if (!util.isDefined(event.route)) {
			showEvent(event);
			console.error('Route Not Defined');
			return appUtil.handlerSvrErr();
		}

		r = event.route.toLowerCase();
		if (!r.includes('/')) {
			showEvent(event);
			console.error('Route Format error[' + r + ']');
			return appUtil.handlerSvrErr();
		}

		PID = event.PID.trim();
		if (!PID) {
			showEvent(event);
			console.error('PID Is NULL]');
			return appUtil.handlerSvrErr();
		}
		global.PID = PID;
        
		// 路由不存在
        routes = require('project/' + PID + '/public/route.js');
        console.log('Loading routes from:', 'project/' + PID + '/public/route.js');
routes = require('project/' + PID + '/public/route.js');
console.log('Loaded Routes:', routes);
		if (!util.isDefined(routes[r])) {
			showEvent(event);
			console.error('Route [' + r + '] Is Not Exist');
			return appUtil.handlerSvrErr();
		}

		let routesArr = routes[r].split('@');

		let controllerName = routesArr[0];
		let actionName = routesArr[1];

		// 事前处理
		if (actionName.includes('#')) {
			let actionNameArr = actionName.split('#');
			actionName = actionNameArr[0];
			if (actionNameArr[1] && config.IS_DEMO) {
				console.log('### APP Before = ' + actionNameArr[1]);
				return beforeApp(actionNameArr[1]);
			}
		}

		console.log('');
		console.log('');
		let time = timeUtil.time('Y-M-D h:m:s');
		let timeTicks = timeUtil.time();
		let openId = wxContext.OPENID;

		console.log('▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤▤');
		console.log(`【↘${time} ENV (${config.CLOUD_ID})】【Request Base↘↘↘】\n【↘Route =***${r}】\n【↘Controller = ${controllerName}】\n【↘Action = ${actionName}】\n【↘OPENID = ${openId}】\n【↘PID = ${global.PID}】`);

		// 测试模式
		if (config.TEST_MODE)
			openId = config.TEST_TOKEN_ID; 

		if (!openId && r != 'job/timer') {
			console.error('OPENID is unfined');
			return appUtil.handlerSvrErr();
		}

		// 引入逻辑controller 
		controllerName = controllerName.toLowerCase().trim();
		const ControllerClass = require('project/'+PID +'/controller/' + controllerName + '.js');
		const controller = new ControllerClass(r, PID + '^^^' + openId, event);
 
		// 调用方法    
		await controller['initSetup']();
		let result = await controller[actionName]();

		// 返回值处理
		if (isOther) {
			// 非标处理
			return result;
		} else {
			if (!result)
				result = appUtil.handlerSucc(r); // 无数据返回
			else
				result = appUtil.handlerData(result, r); // 有数据返回
		}


		console.log('------');
		time = timeUtil.time('Y-M-D h:m:s');
		timeTicks = timeUtil.time() - timeTicks;
		console.log(`【${time}】【Return Base↗↗↗】\n【↗Route =***${r}】\n【↗Duration = ${timeTicks}ms】\n【↗↗OUT DATA】= `, result);
		console.log('▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦');
		console.log('');
		console.log('');

		return result;


	} catch (ex) {
		const log = cloud.logger();

		console.log('------');
		time = timeUtil.time('Y-M-D h:m:s');
		console.error(`【${time}】【Return Base↗↗↗】\n【↗Route = ${r}】\Exception MSG = ${ex.message}, CODE=${ex.code}`);

		// 系统级错误定位调试
		if (config.TEST_MODE && ex.name != 'AppError') throw ex;

		console.log('▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦▦');
		console.log('');
		console.log('');

		if (ex.name == 'AppError') {
			log.warn({
				route: r,
				errCode: ex.code,
				errMsg: ex.message
			});
			// 自定义error处理
			return appUtil.handlerAppErr(ex.message, ex.code);
		} else {
			//console.log(ex); 
			log.error({
				route: r,
				errCode: ex.code,
				errMsg: ex.message,
				errStack: ex.stack
			});


			// 系统error
			return appUtil.handlerSvrErr();
		}
	}
}

// 事前处理
function beforeApp(method) {
	switch (method) {
		case 'demo': {
			return appUtil.handlerAppErr('本系统仅为用户体验演示，后台提交的操作均不生效！如有需要请联系作者微信wxid_kyh093u96kxb22', appCode.LOGIC);
		}
	}
	console.error('事前处理, Method Not Find = ' + method);
}

// 展示当前输入数据
function showEvent(event) {
	console.log(event);
}

module.exports = {
	app
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\core\app_code.js
--------------------------------------------------
/**
 * Notes: 错误代码定义
 * Ver : CCMiniCloud Framework 2.4.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */
module.exports = {
	SUCC: 200,
	SVR: 500, // 服务器错误  
	LOGIC: 1600, //逻辑错误 
	DATA: 1301, // 数据校验错误 
	HEADER: 1302, // header 校验错误  


	//2000开始为业务错误代码，

	ADMIN_ERROR: 2401, //管理员错误
	WORK_ERROR: 2501 //服务者错误
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\core\app_error.js
--------------------------------------------------
/**
 * Notes: 应用异常处理类
 * Ver : CCMiniCloud Framework 2.5.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */


const appCode = require('./app_code.js');

class AppError extends Error {
    constructor(message, code = appCode.LOGIC) {
      super(message);  
	  this.name = 'AppError';  
	  this.code = code;
    }
  }

  module.exports = AppError;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\core\app_other.js
--------------------------------------------------
/**
 * Notes: 云函数非标业务处理
 * Ver : CCMiniCloud Framework 2.6.1 ALL RIGHTS RESERVED BY ccLinux@qq.com
 * Date: 2021-10-21 04:00:00 
 */

function handlerOther(event) {
	let isOther = false;

	if (!event) return {
		isOther,
		eventX
	};

	// 公众号事件处理
	if (event['FromUserName'] && event['MsgType']) {
		console.log('公众号事件处理');
		let ret = {
			route: 'oa/serve',
			params: event
		}
		return {
			isOther: true,
			eventX: ret
		};
	}

	return {
		isOther,
		eventX: event
	};
}


module.exports = {
	handlerOther,
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\core\app_util.js
--------------------------------------------------
/**
 * Notes: 云函数业务主逻辑函数
 * Ver : CCMiniCloud Framework 2.7.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-02-09 04:00:00 
 */

const appCode = require('./app_code.js');

function handlerBasic(code, msg = '', data = {}) {

	switch (code) {
		case appCode.SUCC:
			msg = (msg) ? msg + ':ok' : 'ok';
			break;
		case appCode.SVR:
			msg = '服务器繁忙，请稍后再试';
			break;
		case appCode.LOGIC:
			break;
		case appCode.DATA:
			break;

			/*
			default:
				msg = '服务器开小差了，请稍后再试';
				break;*/
	}

	return {
		code: code,
		msg: msg,
		data: data
	}

}

function handlerSvrErr(msg = '') {
	return handlerBasic(appCode.SVR, msg);
}

function handlerSucc(msg = '') {
	return handlerBasic(appCode.SUCC, msg);
}

function handlerAppErr(msg = '', code = appCode.LOGIC) {
	return handlerBasic(code, msg);
}


function handlerData(data, msg = '') {
	return handlerBasic(appCode.SUCC, msg, data);
}

module.exports = {
	handlerBasic,
	handlerData,
	handlerSucc,
	handlerSvrErr,
	handlerAppErr
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\database\db_util.js
--------------------------------------------------
/**
 * Notes: 数据库基本操作
 * Ver : CCMiniCloud Framework 2.9.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const util = require('../utils/util.js');
const dataUtil = require('../utils/data_util.js');

const cloudBase = require('../cloud/cloud_base.js');
const MAX_RECORD_SIZE = 1000;
const DEFAULT_RECORD_SIZE = 20;

const cloud = cloudBase.getCloud();
const db = cloud.database();
const dbCmd = db.command;
const dbAggr = dbCmd.aggregate;


// 获得一个命令操作
function getCmd() {
	return dbCmd;
}


async function insertBatch(collectionName, data, size = 1000) {

	let dataArr = dataUtil.spArr(data, size);
	for (let k = 0; k < dataArr.length; k++) {
		await db.collection(collectionName).add({
			data: dataArr[k]
		});
	}

	//return query._id;
}

async function insert(collectionName, data) {

	let query = await db.collection(collectionName).add({
		data
	});
	return query._id;
}

async function edit(collectionName, where, data) {

	let query = await db.collection(collectionName);

	// 查询条件
	if (util.isDefined(where)) {
		if (typeof (where) == 'string' || typeof (where) == 'number')
			query = await query.doc(where);
		else
			query = await query.where(fmtWhere(where));
	}

	query = await query.update({
		data
	});

	return query.stats.updated;
}

async function inc(collectionName, where, field, val = 1) {
	let query = await db.collection(collectionName);

	// 查询条件
	if (util.isDefined(where)) {
		if (typeof (where) == 'string' || typeof (where) == 'number')
			query = await query.doc(where);
		else
			query = await query.where(fmtWhere(where));
	}

	query = await query.update({
		data: {
			[field]: dbCmd.inc(val)
		}
	});

	return query.stats.updated;
}

async function mul(collectionName, where, field, val = 1) {
	let query = await db.collection(collectionName);

	// 查询条件
	if (util.isDefined(where)) {
		if (typeof (where) == 'string' || typeof (where) == 'number')
			query = await query.doc(where);
		else
			query = await query.where(fmtWhere(where));
	}

	query = await query.update({
		data: {
			[field]: dbCmd.mul(val)
		}
	});

	return query.stats.updated;
}

async function del(collectionName, where) {
	let query = await db.collection(collectionName);

	// 查询条件
	if (util.isDefined(where)) {
		if (typeof (where) == 'string' || typeof (where) == 'number')
			query = await query.doc(where);
		else
			query = await query.where(fmtWhere(where));
	}

	query = await query.remove();
	return query.stats.removed;
}

async function count(collectionName, where) {
	let query = await db.collection(collectionName);

	// 查询条件
	if (typeof (where) == 'string' || typeof (where) == 'number')
		query = await query.doc(where);
	else
		query = await query.where(fmtWhere(where));

	query = await query.count();
	return query.total;
}

async function distinct(collectionName, where, field) {
	let query = await db.collection(collectionName);
	query = await query.aggregate();

	// 查询条件
	query = await query.match(fmtWhere(where));

	query = await query.group({
		_id: null,
		'uniqueValues': dbAggr.addToSet('$' + field)

	}).end();

	if (query && query.list && query.list[0] && query.list[0]['uniqueValues']) {
		return query.list[0]['uniqueValues'];
	} else
		return [];
}

async function distinctCnt(collectionName, where, field) {
	let data = await distinct(collectionName, where, field);
	return data.length;
}

async function groupSum(collectionName, where, groupField, fields) {

	let query = await db.collection(collectionName);
	query = await query.aggregate();

	// 查询条件
	query = await query.match(fmtWhere(where));

	if (!Array.isArray(fields)) {
		fields = [fields];
	}
	let node = {};
	for (let k = 0; k < fields.length; k++) {
		node[fields[k]] = dbAggr.sum('$' + fields[k]);
	}

	query = await query.group({
		_id: {
			[groupField]: '$' + groupField
		},
		...node

	}).end();

	if (query && query.list) {
		let list = query.list;
		let ret = {};
		for (let k = 0; k < list.length; k++) {
			//list[k][groupField] = list[k]['_id'][groupField]; 
			ret[groupField + '_' + list[k]['_id'][groupField]] = list[k][fields[0]];
		 
		}
		return ret;
	} else
		return null;
}

async function groupCount(collectionName, where, groupField) {

	let query = await db.collection(collectionName);
	query = await query.aggregate();

	// 查询条件
	query = await query.match(fmtWhere(where));

	query = await query.group({
		_id: '$' + groupField,
		total: dbAggr.sum(1)

	}).end();

	if (query && query.list) {
		let list = query.list;
		let ret = {};
		for (let k = 0; k < list.length; k++) {
			ret[groupField + '_' + list[k]['_id']] = list[k].total;
		}
		return ret;
	} else
		return null;
}

async function sum(collectionName, where, field) {
	// TODO 可扩展为支持多个字段同时统计
	let query = await db.collection(collectionName);
	query = await query.aggregate();

	// 查询条件
	query = await query.match(fmtWhere(where));

	query = await query.group({
		_id: null,
		'summ': dbAggr.sum('$' + field)

	}).end();

	if (query && query.list && query.list[0] && query.list[0]['summ']) {
		return query.list[0]['summ'];
	} else
		return 0;
}

async function max(collectionName, where, field) {
	let query = await db.collection(collectionName);
	query = await query.aggregate();

	// 查询条件
	query = await query.match(fmtWhere(where));

	query = await query.group({
		_id: null,
		'maxx': dbAggr.max('$' + field)

	}).end();

	if (query && query.list && query.list[0] && query.list[0]['maxx']) {
		return query.list[0]['maxx'];
	} else
		return 0;
}

async function min(collectionName, where, field) {
	let query = await db.collection(collectionName);
	query = await query.aggregate();

	// 查询条件
	query = await query.match(fmtWhere(where));

	query = await query.group({
		_id: null,
		'minx': dbAggr.min('$' + field)

	}).end();

	if (query && query.list && query.list[0] && query.list[0]['minx']) {
		return query.list[0]['minx'];
	} else
		return 0;
}

async function clear(collectionName) {
	await db.collection(collectionName).where({
		_id: dbCmd.neq(1)
	}).remove().then(res => {

	});
}

async function isExistCollection(collectionName) {
	try {
		await getOne(collectionName, {});
		return true;

	} catch (err) {
		return false;
	}
}

async function createCollection(collectionName) {
	try {
		await db.createCollection(collectionName);

		console.log('>> Create New Collection [' + collectionName + '] Succ, OVER.');
		return true;

	} catch (err) {
		console.error('>> Create New Collection [' + collectionName + '] Failed, Code=' + err.errCode + '|' + err.errMsg);
		return false;
	}

}

async function rand(collectionName, where = {}, fields = '*', size = 1) {

	size = Number(size);

	if (size > MAX_RECORD_SIZE) size = MAX_RECORD_SIZE;


	let query = await db.collection(collectionName)
		.aggregate();

	if (util.isDefined(where))
		query = await query.match(fmtWhere(where));

	if (util.isDefined(fields) && fields != '*')
		query = await query.project(fmtFields(fields));


	query = await query.sample({
		size
	});

	query = await query.end();

	if (size == 1) {
		if (query.list.length == 1)
			return query.list[0];
		else
			return null;
	} else
		return query.list;

}

async function getListByArray(collectionName, arrField, where, fields, orderBy, page = 1, size = DEFAULT_RECORD_SIZE, isTotal = true, oldTotal = 0) {

	if (typeof (where) == 'string' || typeof (where) == 'number') {
		where = {
			_id: where,
		};
	}

	page = Number(page);
	size = Number(size);

	if (size > MAX_RECORD_SIZE) size = MAX_RECORD_SIZE;

	data = {
		page: page,
		size: size
	}

	let offset = 0; //记录偏移量 防止新增数据列表重复 

	// 计算总页数
	if (isTotal) {
		// 联表
		let queryCnt = await db.collection(collectionName)
			.aggregate();

		// 查询条件
		if (util.isDefined(where))
			queryCnt = await queryCnt.match(fmtWhere(where));

		let total = await queryCnt.count('total').end();
		if (!total.list.length)
			total = 0;
		else
			total = total.list[0].total;

		data.total = total;
		data.count = Math.ceil(total / size);

		if (page > 1 && oldTotal > 0) {
			offset = data.total - oldTotal
			if (offset < 0) offset = 0;
		}
	}

	// 拆分查询
	let query = await db.collection(collectionName)
		.aggregate()
		.unwind('$' + arrField);

	// 查询条件
	if (util.isDefined(where))
		query = await query.match(fmtWhere(where));

	// 取出特定字段
	if (util.isDefined(fields) && fields != '*')
		query = await query.project(fmtFields(fields));

	// 排序   
	if (util.isDefined(orderBy)) {
		query = await query.sort(fmtJoinSort(orderBy));
	}

	// 分页
	query = await query.skip((page - 1) * size + offset).limit(size);

	// 取数据
	query = await query.end();
	data.list = query.list;

	return data;
}

async function getListJoin(collectionName, joinParams, where, fields, orderBy, page = 1, size = DEFAULT_RECORD_SIZE, isTotal = true, oldTotal = 0, is2Many = false) {

	if (typeof (where) == 'string' || typeof (where) == 'number') {
		where = {
			_id: where,
		};
	}

	page = Number(page);
	size = Number(size);

	if (size > MAX_RECORD_SIZE) size = MAX_RECORD_SIZE;

	data = {
		page: page,
		size: size
	}

	let offset = 0; //记录偏移量 防止新增数据列表重复 

	// 计算总页数
	if (isTotal) {
		// 联表
		let queryCnt = await db.collection(collectionName)
			.aggregate()
			.lookup(joinParams);

		// 查询条件
		if (util.isDefined(where))
			queryCnt = await queryCnt.match(fmtWhere(where));

		let total = await queryCnt.count('total').end();
		if (!total.list.length)
			total = 0;
		else
			total = total.list[0].total;

		data.total = total;
		data.count = Math.ceil(total / size);

		if (page > 1 && oldTotal > 0) {
			offset = data.total - oldTotal
			if (offset < 0) offset = 0;
		}
	}

	// 联表
	let query = await db.collection(collectionName)
		.aggregate()
		.lookup(joinParams);

	/*
	query = await query.replaceRoot({
	newRoot: $.mergeObjects([ $.arrayElemAt(['$USER_DETAIL', 0]), '$$ROOT' ])
	})*/

	// 查询条件
	if (util.isDefined(where))
		query = await query.match(fmtWhere(where));

	// 取出特定字段
	if (util.isDefined(fields) && fields != '*')
		query = await query.project(fmtFields(fields));

	// 排序   
	if (util.isDefined(orderBy)) {
		query = await query.sort(fmtJoinSort(orderBy));
	}

	// 分页
	query = await query.skip((page - 1) * size + offset).limit(size);


	// 取数据
	query = await query.end();
	data.list = query.list;

	if (!is2Many) {
		for (let k = 0; k < data.list.length; k++) {
			if (util.isDefined(data.list[k][joinParams.as])) {
				if (Array.isArray(data.list[k][joinParams.as]) &&
					data.list[k][joinParams.as].length > 0)
					data.list[k][joinParams.as] = data.list[k][joinParams.as][0];
				else {
					data.list[k][joinParams.as] = {};
				}
			}
		}
	}

	return data;
}

async function getListJoinCount(collectionName, joinParams, where) {

	if (typeof (where) == 'string' || typeof (where) == 'number') {
		where = {
			_id: where,
		};
	}

	// 联表
	let queryCnt = await db.collection(collectionName)
		.aggregate()
		.lookup(joinParams);

	// 查询条件
	if (util.isDefined(where))
		queryCnt = await queryCnt.match(fmtWhere(where));

	let total = await queryCnt.count('total').end();
	if (!total.list.length)
		total = 0;
	else
		total = total.list[0].total;

	return total;

}

async function getList(collectionName, where, fields = '*', orderBy = {}, page = 1, size = DEFAULT_RECORD_SIZE, isTotal = true, oldTotal = 0) {
	page = Number(page);
	size = Number(size);

	if (size > MAX_RECORD_SIZE || size == 0) size = MAX_RECORD_SIZE;

	let data = {
		page: page,
		size: size
	}

	let offset = 0;
	// 计算总页数
	if (isTotal) {
		let total = await count(collectionName, where);
		data.total = total;
		data.count = Math.ceil(total / size);

		if (page > 1 && oldTotal > 0) {
			offset = data.total - oldTotal
			if (offset < 0) offset = 0;

		}
	}

	// 分页 
	let query = await db.collection(collectionName)
		.skip((page - 1) * size + offset)
		.limit(size);

	// 查询条件  
	if (util.isDefined(where) && where)
		query = await query.where(fmtWhere(where));

	// 取出特定字段
	if (util.isDefined(fields) && fields != '*')
		query = await query.field(fmtFields(fields));

	// 排序  
	if (util.isDefined(orderBy)) {
		query = await fmtOrderBy(query, orderBy);
	}

	// 取数据
	query = await query.get();

	data.list = query.data;

	return data;
}

async function getAllBig(collectionName, where, fields = '*', orderBy, size = MAX_RECORD_SIZE) {
	size = Number(size);
	if (size > MAX_RECORD_SIZE) size = MAX_RECORD_SIZE;

	// 计算总数
	let total = await await count(collectionName, where);

	// 页数
	let page = Math.ceil(total / size);

	let list = [];
	for (let i = 1; i <= page; i++) {
		let data = await getList(collectionName, where, fields, orderBy, i, size, false);

		if (data && data.list)
			list = list.concat(data.list);
	}

	return list;
}


async function getAll(collectionName, where, fields = '*', orderBy, size = MAX_RECORD_SIZE) {
	size = Number(size);
	if (size > MAX_RECORD_SIZE) size = MAX_RECORD_SIZE;

	let query = await db.collection(collectionName).limit(size);

	// 查询条件
	if (where)
		query = await query.where(fmtWhere(where));

	// 取出特定字段
	if (fields && fields != '*')
		query = await query.field(fmtFields(fields));

	// 排序 
	if (orderBy) {
		query = await fmtOrderBy(query, orderBy);
	}

	// 取数据
	query = await query.get();

	return query.data;
}

async function getAllByArray(collectionName, arrField, where, fields = '*', orderBy, size = MAX_RECORD_SIZE) {
	size = Number(size);
	if (size > MAX_RECORD_SIZE) size = MAX_RECORD_SIZE;

	// 拆分
	let query = await db.collection(collectionName).aggregate()
		.unwind('$' + arrField);

	// 查询条件
	if (util.isDefined(where))
		query = await query.match(fmtWhere(where));

	// 取出特定字段
	if (util.isDefined(fields) && fields != '*')
		query = await query.project(fmtFields(fields));

	// 排序 
	if (util.isDefined(orderBy)) {
		query = await query.sort(fmtJoinSort(orderBy));
	}

	// 取数据
	query = await query.limit(size).end();
	return query.list;
}

async function getOne(collectionName, where, fields = '*', orderBy = {}) {
	if (typeof (where) == 'string' || typeof (where) == 'number') {
		where = {
			_id: where
		};
	}

	// 查询条件 
	let query = await db.collection(collectionName)
		.where(fmtWhere(where))
		.limit(1);

	// 取出特定字段 
	if (fields != '*')
		query = await query.field(fmtFields(fields));

	// 排序
	if (orderBy)
		query = await fmtOrderBy(query, orderBy);

	// 取数据
	query = await query.get();

	if (query && query.data.length > 0) {
		return query.data[0];
	} else
		return null;
}

async function fmtOrderBy(query, orderBy) {
	for (let key in orderBy) {
		query = await query.orderBy(key, orderBy[key].toLowerCase())
	}
	return query;
}

function fmtJoinSort(sort) {
	for (let key in sort) {
		let v = sort[key];
		if (typeof (v) == 'string') {
			v = v.toLowerCase();
			if (v === 'asc')
				v = 1;
			else
				v = -1;
		}
		sort[key] = v;
	}
	return sort;
}


function fmtFields(fields) {
	if (typeof (fields) == 'string') {
		let obj = {};
		fields = fields.replace(/，/g, ",");
		let arr = fields.split(',');
		for (let i = 0; i < arr.length; i++) {
			if (arr[i].trim().length > 0)
				obj[arr[i].trim()] = true;
		}
		return obj;
	}

	return fields;
}


function fmtWhere(where) {
	if (util.isDefined(where.and) || util.isDefined(where.or)) {
		let whereEx = null;
		if (util.isDefined(where.and))
			whereEx = dbCmd.and(fmtWhere(where.and));

		if (util.isDefined(where.or)) {
			if (whereEx)
				whereEx = whereEx.and(dbCmd.or(fmtWhere(where.or)));
			else
				whereEx = dbCmd.or(fmtWhere(where.or));
		}

		//console.log(whereEx);
		return whereEx;
	}

	if (Array.isArray(where)) {
		for (let i = 0; i < where.length; i++)
			where[i] = fmtWhere(where[i]);
	}

	for (let key in where) {
		/* 判断是否有条件数组  
			INFO_EXPIRE_TIME: [
				['>=', 3], 
				['<=', 8],
				['<>', 5],
				['in', '6,7']
				],
		*/
		if (Array.isArray(where[key])) {
			let w = null;
			if (!Array.isArray(where[key][0]) && where[key][0].toLowerCase().trim() == 'between') {
				// 条件查询特殊处理
				where[key] = [
					['>=', where[key][1]],
					['<=', where[key][2]]
				];
			}

			if (!Array.isArray(where[key][0])) {
				// 一维数组 
				w = fmtWhereSimple(where[key]);
			} else {
				// 二维数组 
				for (let i = 0; i < where[key].length; i++) {
					let wTemp = fmtWhereSimple(where[key][i]);
					w = (w) ? w.and(wTemp) : wTemp;
				}
			}

			where[key] = w;

		}
	}
	return where;
}

function fmtWhereSimple(arr) {
	let sql = '';

	let op = arr[0].toLowerCase().trim();
	let val = arr[1];
	let where = {};
	switch (op) {
		case '=':
			where = dbCmd.eq(val);
			break;
		case '!=':
		case '<>':
			where = dbCmd.neq(val);
			break;
		case '<':
			where = dbCmd.lt(val);
			break;
		case '<=':
			where = dbCmd.lte(val);
			break;
		case '>':
			where = dbCmd.gt(val);
			break;
		case '>=':
			where = dbCmd.gte(val);
			break;
		case 'like':
			if (!util.isDefined(val) || !val) break; //无条件不搜索
			where = {
				$regex: val,
				$options: 'i'
			}
			break;
		case 'in':
			val = dataUtil.str2Arr(val);
			where = dbCmd.in(val);
			break;
		case 'not in':
			val = dataUtil.str2Arr(val);
			where = dbCmd.nin(val);
			break;
		default:
			console.error('error where oprt=' + op);
			break;
	}
	return where;
}

module.exports = {
	getCmd,

	insert,
	insertBatch,
	edit,
	del,

	count,
	inc,
	sum,
	groupCount,
	groupSum,
	distinct,
	distinctCnt,
	max,
	min,
	mul,

	isExistCollection,
	createCollection,
	clear,
	rand,
	getOne,
	getAll,
	getAllBig,

	getAllByArray,
	getList,
	getListJoin,
	getListJoinCount,
	getListByArray,
	MAX_RECORD_SIZE,
	DEFAULT_RECORD_SIZE
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\database\model.js
--------------------------------------------------
/**
 * Notes: 数据持久化与操作模块
 * Ver : CCMiniCloud Framework 2.11.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-04 04:00:00 
 */

const dbUtil = require('./db_util.js');
const util = require('../utils/util.js');
const timeUtil = require('../utils/time_util.js');
const dataUtil = require('../utils/data_util.js');
const AppError = require('../core/app_error.js');
const cloudBase = require('../cloud/cloud_base.js');

class Model {

	static async getOne(where, fields = '*', orderBy = {}) {
		return await dbUtil.getOne(this.CL, where, fields, orderBy);
	}

	static async edit(where, data) {

		if (this.UPDATE_TIME) {
			let editField = this.FIELD_PREFIX + 'EDIT_TIME';
			if (!util.isDefined(data[editField])) data[editField] = timeUtil.time();
		}

		if (this.UPDATE_IP) {
			let cloud = cloudBase.getCloud();
			let ip = cloud.getWXContext().CLIENTIP;


			let editField = this.FIELD_PREFIX + 'EDIT_IP';
			if (!util.isDefined(data[editField])) data[editField] = ip;
		}

		data = this.clearEditData(data);

		return await dbUtil.edit(this.CL, where, data);
	}

	static async count(where) {
		return await dbUtil.count(this.CL, where);
	}

	static async insert(data) {
		// 自动ID
		if (this.ADD_ID) {
			let idField = this.FIELD_PREFIX + 'ID';
			if (!util.isDefined(data[idField])) data[idField] = dataUtil.makeID();
		}

		// 更新时间
		if (this.UPDATE_TIME) {
			let timestamp = timeUtil.time();
			let addField = this.FIELD_PREFIX + 'ADD_TIME';
			if (!util.isDefined(data[addField])) data[addField] = timestamp;

			let editField = this.FIELD_PREFIX + 'EDIT_TIME';
			if (!util.isDefined(data[editField])) data[editField] = timestamp;
		}

		// 更新IP
		if (this.UPDATE_IP) {
			let cloud = cloudBase.getCloud();
			let ip = cloud.getWXContext().CLIENTIP;

			let addField = this.FIELD_PREFIX + 'ADD_IP';
			if (!util.isDefined(data[addField])) data[addField] = ip;

			let editField = this.FIELD_PREFIX + 'EDIT_IP';
			if (!util.isDefined(data[editField])) data[editField] = ip;
		}

		// 数据清洗
		data = this.clearCreateData(data);

		return await dbUtil.insert(this.CL, data);
	}

	static async insertOrUpdate(where, data) {
		let model = await dbUtil.getOne(this.CL, where, '_id');
		if (model) {
			await this.edit(model._id, data);
			return model._id;
		} else {
			return await this.insert(Object.assign(data, where));
		}
	}

	static async insertBatch(data = [], size = 1000) {
		if (this.ADD_ID) {
			let idField = this.FIELD_PREFIX + 'ID';
			for (let k = 0; k < data.length; k++) {
				if (!util.isDefined(data[k][idField])) data[k][idField] = dataUtil.makeID();
			}
		}

		if (this.UPDATE_TIME) {
			let timestamp = timeUtil.time();
			let addField = this.FIELD_PREFIX + 'ADD_TIME';
			let editField = this.FIELD_PREFIX + 'EDIT_TIME';

			for (let k = 0; k < data.length; k++) {
				if (!util.isDefined(data[k][addField])) data[k][addField] = timestamp;
				if (!util.isDefined(data[k][editField])) data[k][editField] = timestamp;
			}

		}

		if (this.UPDATE_IP) {
			let cloud = cloudBase.getCloud();
			let ip = cloud.getWXContext().CLIENTIP;

			let addField = this.FIELD_PREFIX + 'ADD_IP';
			let editField = this.FIELD_PREFIX + 'EDIT_IP';

			for (let k = 0; k < data.length; k++) {
				if (!util.isDefined(data[k][addField])) data[k][addField] = ip;
				if (!util.isDefined(data[k][editField])) data[k][editField] = ip;
			}

		}

		for (let k = 0; k < data.length; k++) {
			data[k] = this.clearCreateData(data[k]);
		}

		return await dbUtil.insertBatch(this.CL, data, size);
	}

	static async del(where) {
		return await dbUtil.del(this.CL, where);
	}

	static async inc(where, field, val = 1) {
		return await dbUtil.inc(this.CL, where, field, val);
	}

	static async mul(where, field, val = 1) {
		return await dbUtil.mul(this.CL, where, field, val);
	}

	static async groupSum(where, groupField, field) {
		return await dbUtil.groupSum(this.CL, where, groupField, field);
	}

	static async groupCount(where, groupField) {
		return await dbUtil.groupCount(this.CL, where, groupField);
	}

	static async sum(where, field) {
		return await dbUtil.sum(this.CL, where, field);
	}

	static async distinct(where, field) {
		return await dbUtil.distinct(this.CL, where, field);
	}

	static async distinctCnt(where, field) {
		return await dbUtil.distinctCnt(this.CL, where, field);
	}

	static async max(where, field) {
		return await dbUtil.max(this.CL, where, field);
	}

	static async min(where, field) {
		return await dbUtil.min(this.CL, where, field);
	}

	static async clear() {
		return await dbUtil.clear(this.CL);
	}

	static async rand(where = {}, fields = '*', size = 1) {
		return await dbUtil.rand(this.CL, where, fields, size);
	}

	static async getAll(where, fields, orderBy, size = 100) {
		return await dbUtil.getAll(this.CL, where, fields, orderBy, size);
	}

	static async getAllBig(where, fields, orderBy, size = 1000) {
		return await dbUtil.getAllBig(this.CL, where, fields, orderBy, size);
	}

	static async getAllByArray(arrField, where, fields, orderBy, size = 100) {
		return await dbUtil.getAllByArray(this.CL, arrField, where, fields, orderBy, size);
	}

	static async getList(where, fields, orderBy, page, size, isTotal, oldTotal) {
		return await dbUtil.getList(this.CL, where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	static async getListJoin(joinParams, where, fields, orderBy, page = 1, size, isTotal = true, oldTotal = 0, is2Many = false) {
		return await dbUtil.getListJoin(this.CL, joinParams, where, fields, orderBy, page, size, isTotal, oldTotal, is2Many);
	}

	static async getListJoinCount(joinParams, where) {
		return await dbUtil.getListJoinCount(this.CL, joinParams, where);
	}

	static async getListByArray(arrField, where, fields, orderBy, page = 1, size, isTotal = true, oldTotal = 0) {
		return await dbUtil.getListByArray(this.CL, arrField, where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	static converDBStructure(stru) {
		let newStru = {};
		for (let key in stru) {
			newStru[key] = {};

			let arr = stru[key].split('|');
			for (let k = 0; k < arr.length; k++) {

				// 类型
				let val = arr[k].toLowerCase().trim();
				let orginal = arr[k];

				let type = 'string';
				if (val === 'float' || val === 'int' || val === 'string' || val === 'array' || val === 'object' || val === 'bool') {
					type = val;
					newStru[key]['type'] = type;
					continue;
				}

				// 是否必填
				if (val === 'true' || val === 'false') {
					let required = (val === 'true') ? true : false;
					newStru[key]['required'] = required;
					continue;
				}

				// 默认值
				if (val.startsWith('default=') && util.isDefined(newStru[key]['type'])) {
					let defVal = orginal.replace('default=', '');
					switch (newStru[key]['type']) {
						case 'int':
						case 'float':
							defVal = Number(defVal);
							break;
						case 'bool':
							defVal = defVal.toLowerCase();
							defVal = defVal == 'true' ? true : false;
							break;
						case 'object':
							defVal = defVal.replace('{', '');
							defVal = defVal.replace('}', '').trim();
							if (!defVal)
								defVal = {};
							else {
								let arr = defVal.split(',');
								defVal = {};
								for (let m = 0; m < arr.length; m++) {
									if (arr[m]) defVal[arr[m]] = '';
								}
							}

							break;
						case 'array':
							defVal = defVal.replace('[', '');
							defVal = defVal.replace(']', '').trim();
							if (!defVal)
								defVal = [];
							else
								defVal = defVal.split(',');
							break;
						default:
							defVal = String(defVal);
					}
					newStru[key]['defVal'] = defVal;
					continue;
				}

				// 注释
				if (val.startsWith('comment=')) {
					let comment = orginal.replace('comment=', '');
					newStru[key]['comment'] = comment;
					continue;
				}

				// 长度
				if (val.startsWith('length=')) {
					let length = orginal.replace('length=', '');
					length = Number(length);
					newStru[key]['length'] = length;
					continue;
				}

			}

			// 如果非必填字段没有默认值，则主动赋予一个
			if (!newStru[key]['required'] && !util.isDefined(newStru[key]['defVal'])) {
				let defVal = '';
				switch (newStru[key]['type']) {
					case 'bool':
						defVal = false;
						break;
					case 'int':
					case 'float':
						defVal = Number(0);
						break;
					case 'array':
						defVal = [];
						break;
					case 'object':
						defVal = {};
						break;
					default:
						defVal = String('');
				}
				newStru[key]['defVal'] = defVal;
			}

			// 如果没有长度
			if (!util.isDefined(newStru[key]['length'])) {
				let length = 20;
				switch (newStru[key]['type']) {
					case 'int':
					case 'float':
						length = 30;
						break;
					case 'array':
					case 'object':
						length = 1500;
						break;
					default:
						length = 300;
				}
				newStru[key]['length'] = length;
			}
		}
		return newStru;
	}

	static clearDirtyData(data) {
		for (let key in data) {
			if (!this.DB_STRUCTURE.hasOwnProperty(key) && !key.includes('.')) {
				console.error('脏数据:' + key);
				throw new AppError('脏数据');
			}
		}
	}

	static converDataType(data, dbStructure) {
		for (let key in data) {
			if (dbStructure.hasOwnProperty(key)) {
				let type = dbStructure[key].type.toLowerCase();
				// 字段类型转换
				switch (type) {
					case 'string':
						data[key] = String(data[key]);
						break;
					case 'bool':
						//data[key] = data[key];
						break;
					case 'float':
					case 'int':
						data[key] = Number(data[key]);
						break;
					case 'array':
						if (data[key].constructor != Array)
							data[key] = [];
						break;
					case 'object':
						if (data[key] === undefined || data[key] === null) {
							data[key] = {};
						}
						else if (data[key].constructor != Object)
							data[key] = {};

						//data[key] = dbUtil.getCmd().set(data[key]); // 指定字段等于一个对象 TODO
						break;
					default:
						console.error('字段类型错误：' + key + dbStructure[key].type);
						throw new AppError("字段类型错误");
				}
			}
		}

		return data;
	}


	static clearCreateData(data) {

		let dbStructure = Model.converDBStructure(this.DB_STRUCTURE);

		for (let key in dbStructure) {

			// 数据类型
			if (!util.isDefined(dbStructure[key].type)) {
				console.log('[数据填写错误1]字段类型未定义：' + key);
				throw new AppError('数据填写错误1');
			}

			// 是否定义必填 
			if (!util.isDefined(dbStructure[key].required)) {
				console.log('[数据填写错误2]required未定义：' + key);
				throw new AppError('数据填写错误2');
			}

			//  键值未赋值情况
			if (!data.hasOwnProperty(key)) {
				// 必填
				if (dbStructure[key].required) {
					if (util.isDefined(dbStructure[key].defVal))
						// 必填且有缺省值
						data[key] = dbStructure[key].defVal;
					else {
						// 必填且无缺省值 
						console.log('[数据填写错误3]字段未填写：' + key);
						throw new AppError('数据填写错误3 ' + key);
					}
				} else {
					// 非必填字段必须有缺省值
					if (!util.isDefined(dbStructure[key].defVal)) {
						console.log('[数据填写错误4]非必填字段必须有缺省值：' + key);
						throw new AppError('数据填写错误4');
					}
					data[key] = dbStructure[key].defVal;
				}
			}
		}

		// 去掉脏数据
		this.clearDirtyData(data, dbStructure);

		data = this.converDataType(data, dbStructure);

		return data;
	}

	static clearEditData(data) {
		let dbStructure = Model.converDBStructure(this.DB_STRUCTURE);

		// 去掉脏数据
		this.clearDirtyData(data, dbStructure);

		data = this.converDataType(data, dbStructure);

		return data;
	}

	static getDesc(enumName, val) {
		let baseEnum = this[enumName];
		let descEnum = this[enumName + '_DESC']
		let enumKey = '';

		// 先找出KEY
		for (let key in baseEnum) {
			if (baseEnum[key] === val) {
				enumKey = key;
				break;
			}
		}
		if (enumKey == '') return 'unknown';

		// 再从Desc里找出描述
		return descEnum[enumKey];
	}

}

// 集合名 collection
Model.CL = 'no-collection';

// 集合结构
Model.DB_STRUCTURE = 'no-dbStructure';

// 字段前缀
Model.FIELD_PREFIX = 'NO_';

// 开关自带更新ADD_TIME,EDIT_TIME,DEL_TIME的操作 
Model.UPDATE_TIME = true;

// 开关自带更新ADD_IP,EDIT_IP,DEL_IP的操作 
Model.UPDATE_IP = true;

// 开关添加ID
Model.ADD_ID = true;

// 默认排序
Model.ORDER_BY = {
	_id: 'desc'
}

module.exports = Model;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\database\multi_model.js
--------------------------------------------------
/**
 * Notes: 实体基类 
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.12.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */


const Model = require('./model.js');
const util = require('../utils/util.js');
const dataUtil = require('../utils/data_util.js');
const config = require('../../config/config.js');

class MultiModel extends Model {

	static C(cl) {
		return config.COLLECTION_PRFIX + cl;
	}

	static _getWhere(where, mustPID = true) {
		if (mustPID) {
			if (typeof (where) == 'string' || typeof (where) == 'number') {
				where = {
					_id: where,
					_pid: util.getProjectId()
				};
			} else
				where._pid = util.getProjectId();
		}
		return where;
	}

	static async getOneField(where, field, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		let one = await super.getOne(where, field);
		if (!one)
			return null;
		else {
			let ret = one[field];
			if (ret === undefined)
				return '';
			else
				return one[field];
		}
	}

	static async getOne(where, fields = '*', orderBy = {}, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getOne(where, fields, orderBy);
	}

	static async edit(where, data, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.edit(where, data);
	}

	static async editForms(where, formName, objName, hasImageForms, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);

		let forms = await this.getOneField(where, formName, mustPID);
		if (!forms) return;


		// 赋值
		for (let k = 0; k < hasImageForms.length; k++) {
			for (let j in forms) {
				if ((forms[j].type == 'image' || forms[j].type == 'content')
					&& forms[j].mark == hasImageForms[k].mark
					&& forms[j].type == hasImageForms[k].type) {
					forms[j].val = hasImageForms[k].val;
					break;
				}
			}
		}

		let data = {
			[formName]: forms,
			[objName]: dataUtil.dbForms2Obj(forms)
		};

		return await super.edit(where, data);
	}

	static async count(where, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.count(where);
	}

	static async insert(data, mustPID = true) {
		if (mustPID) data._pid = util.getProjectId();
		return await super.insert(data);
	}

	static async insertBatch(data = [], size = 1000, mustPID = true) {
		if (mustPID) {
			for (let k = 0; k < data.length; k++) {
				data[k]._pid = util.getProjectId();
			}
		}

		return await super.insertBatch(data, size);
	}

	static async insertOrUpdate(where, data, mustPID = true) {
		if (mustPID) {
			where._pid = util.getProjectId();
		}
		return await super.insertOrUpdate(where, data);
	}

	static async del(where, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.del(where);
	}

	static async clear() {
		return await super.clear();
	}

	static async inc(where, field, val = 1, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.inc(where, field, val);
	}

	static async mul(where, field, val = 1, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.mul(where, field, val);
	}

	static async groupSum(where, groupField, field, mustPID = true) {
		if (mustPID) where._pid = util.getProjectId();
		return await super.groupSum(where, groupField, field);
	}

	static async groupCount(where, groupField, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.groupCount(where, groupField);
	}

	static async sum(where, field, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.sum(where, field);
	}

	static async distinct(where, field, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.distinct(where, field);
	}

	static async distinctCnt(where, field, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.distinctCnt(where, field);
	}

	static async max(where, field, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.max(where, field);
	}

	static async min(where, field, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.min(where, field);
	}

	static async rand(where, field, size = 1, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.rand(where, field, size);
	}

	static async getAll(where, fields, orderBy, size = 100, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getAll(where, fields, orderBy, size);
	}

	static async getAllBig(where, fields, orderBy, size = 1000, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getAllBig(where, fields, orderBy, size);
	}

	static async getAllByArray(arrField, where, fields, orderBy, size = 100, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getAllByArray(arrField, where, fields, orderBy, size);
	}

	static async getList(where, fields, orderBy, page, size, isTotal, oldTotal, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	static async getListJoin(joinParams, where, fields, orderBy, page = 1, size, isTotal = true, oldTotal = 0, is2Many = false, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getListJoin(joinParams, where, fields, orderBy, page, size, isTotal, oldTotal, is2Many);
	}

	static async getListJoinCount(joinParams, where, mustPID = true) {
		where = MultiModel._getWhere(where, mustPID);
		return await super.getListJoinCount(joinParams, where);
	}

}

module.exports = MultiModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\lib\faker_lib.js
--------------------------------------------------
﻿/**
 * Notes: 测试数据构造类
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-05-26 14:00:00 
 */ 
const timeUtil = require('../utils/time_util.js');


/** 随机获取数据 */
function getRnd(arr, isNullable = false, ex = '') {

	if (isNullable) { // 允许为空
		let rd = getIntBetween(0, 1);
		if (rd % 2 == 0) return '';
	}


	if (!Array.isArray(arr)) {
		arr = arr.replace(/ /g, '').replace(/，/g, ',').split(',');
	}

	let exArr = ex.replace(/ /g, '').replace(/，/g, ',').split(',');
	let ret = '';

	let i = 0;
	while (true) {
		i++;
		if (i > 1000) return '';

		ret = arr[Math.floor((Math.random() * arr.length))];
		if (!exArr.includes(ret))
			return ret;
	}

}

/** 省份 */
function getProvince(isNullable = false, ex = '') {
	let data = ['北京市', '天津市', '河北省', '山西省',
		'内蒙古自治区', '辽宁省', '吉林省',
		'黑龙江省', '上海市', '江苏省',
		'浙江省', '安徽省', '福建省', '江西省',
		'山东省', '河南省', '湖北省', '湖南省',
		'广东省', '广西壮族自治区', '海南省',
		'重庆市', '四川省', '贵州省', '云南省',
		'西藏自治区', '陕西省', '甘肃省', '青海省',
		'宁夏回族自治区', '新疆维吾尔自治区',
		'香港特别行政区', '澳门特别行政区', '台湾省'
	];
	return getRnd(data, isNullable, ex);
}


function getProvinceAbbr(isNullable = false, ex = '') {
	let data = ['京', '皖', '渝', '闽',
		'甘', '粤', '桂', '黔',
		'琼', '冀', '豫', '黑',
		'鄂', '湘', '吉', '苏',
		'赣', '辽', '蒙', '宁',
		'青', '鲁', '晋', '陕',
		'沪', '川', '津', '藏',
		'新', '滇', '浙', '港',
		'澳', '台'
	];
	return getRnd(data, isNullable, ex);
}

/** 城市 */
function getCity(isNullable = false, ex = '') {
	let data = ['北京', '上海', '天津', '重庆',
		'哈尔滨', '长春', '沈阳', '呼和浩特',
		'石家庄', '乌鲁木齐', '兰州', '西宁',
		'西安', '银川', '郑州', '济南',
		'太原', '合肥', '武汉', '长沙',
		'南京', '成都', '贵阳', '昆明',
		'南宁', '拉萨', '杭州', '南昌',
		'广州', '福州', '海口',
		'香港', '澳门'
	];
	return getRnd(data, isNullable, ex);
}

/** 地区 */
function getArea(isNullable = false, ex = '') {
	let data = ['西夏区', '永川区', '秀英区', '高港区',
		'清城区', '兴山区', '锡山区', '清河区',
		'龙潭区', '华龙区', '海陵区', '滨城区',
		'东丽区', '高坪区', '沙湾区', '平山区',
		'城北区', '海港区', '沙市区', '双滦区',
		'长寿区', '山亭区', '南湖区', '浔阳区',
		'南长区', '友好区', '安次区', '翔安区',
		'沈河区', '魏都区', '西峰区', '萧山区',
		'金平区', '沈北新区', '孝南区', '上街区',
		'城东区', '牧野区', '大东区', '白云区',
		'花溪区', '吉利区', '新城区', '怀柔区',
		'六枝特区', '涪城区', '清浦区', '南溪区',
		'淄川区', '高明区', '金水区', '中原区',
		'高新开发区', '经济开发新区', '新区'
	];
	return getRnd(data, isNullable, ex);
}

/** 街道 */
function getStreet(isNullable = false, ex = '') {
	let data = '朱雀大街,太乙路,太白路,太华路,长乐坊,长樱路,案板街,竹笆市,骡马市,东木头市,西木头市,安仁坊,端履门,德福巷,洒金桥,冰窖巷,菊花园,下马陵,粉巷,索罗巷,后宰门,书院门,炭市街,马厂子,景龙池,甜水井,柏树林,桃花坞,人民路,解放路,黄河路,长江路,中山路,抚顺街,天津街,上海路,胜利路,西安路,长春路,太原街,沈阳路,鞍山路,五四路,唐山街,武汉街,延安路,朝阳街,鲁迅路,八一路,东北路,华南路,华北路,山东路,松江路,东方路,南沙街';
	return getRnd(data, isNullable, ex);
}

/**  门牌地址 */
function getAddress() {
	return getProvince() + '' + getCity() + '市' + getArea() + '' + getStreet() + getIntBetween(1, 100) + '号';
}

/** 国家 */
function getCountry(isNullable = false, ex = '') {
	let data = ['阿富汗', '阿拉斯加', '阿尔巴尼亚', '阿尔及利亚',
		'安道尔', '安哥拉', '安圭拉岛英', '安提瓜和巴布达',
		'阿根廷', '亚美尼亚', '阿鲁巴岛', '阿森松', '澳大利亚',
		'奥地利', '阿塞拜疆', '巴林', '孟加拉国', '巴巴多斯',
		'白俄罗斯', '比利时', '伯利兹', '贝宁', '百慕大群岛',
		'不丹', '玻利维亚', '波斯尼亚和黑塞哥维那', '博茨瓦纳',
		'巴西', '保加利亚', '布基纳法索', '布隆迪', '喀麦隆',
		'加拿大', '加那利群岛', '佛得角', '开曼群岛', '中非',
		'乍得', '智利', '圣诞岛', '科科斯岛', '哥伦比亚',
		'巴哈马国', '多米尼克国', '科摩罗', '刚果', '科克群岛',
		'哥斯达黎加', '克罗地亚', '古巴', '塞浦路斯', '捷克',
		'丹麦', '迪戈加西亚岛', '吉布提', '多米尼加共和国',
		'厄瓜多尔', '埃及', '萨尔瓦多', '赤道几内亚',
		'厄立特里亚', '爱沙尼亚', '埃塞俄比亚', '福克兰群岛',
		'法罗群岛', '斐济', '芬兰', '法国', '法属圭亚那',
		'法属波里尼西亚', '加蓬', '冈比亚', '格鲁吉亚', '德国',
		'加纳', '直布罗陀', '希腊', '格陵兰岛', '格林纳达',
		'瓜德罗普岛', '关岛', '危地马拉', '几内亚', '几内亚比绍',
		'圭亚那', '海地', '夏威夷', '洪都拉斯', '匈牙利', '冰岛',
		'印度', '印度尼西亚', '伊郎', '伊拉克', '爱尔兰', '以色列',
		'意大利', '科特迪瓦', '牙买加', '日本', '约旦', '柬埔塞',
		'哈萨克斯坦', '肯尼亚', '基里巴斯', '朝鲜', '韩国', '科威特',
		'吉尔吉斯斯坦', '老挝', '拉脱维亚', '黎巴嫩', '莱索托',
		'利比里亚', '利比亚', '列支敦士登', '立陶宛', '卢森堡',
		'马其顿', '马达加斯加', '马拉维', '马来西亚', '马尔代夫',
		'马里', '马耳他', '马里亚纳群岛', '马绍尔群岛', '马提尼克',
		'毛里塔尼亚', '毛里求斯', '马约特岛', '墨西哥', '密克罗尼西亚',
		'中途岛', '摩尔多瓦', '摩纳哥', '蒙古', '蒙特塞拉特岛',
		'摩洛哥', '莫桑比克', '缅甸', '纳米比亚', '瑙鲁', '尼泊尔',
		'荷兰', '荷属安的列斯群岛', '新喀里多尼亚群岛', '新西兰',
		'尼加拉瓜', '尼日尔', '尼日利亚', '纽埃岛', '诺福克岛',
		'挪威', '阿曼', '帕劳', '巴拿马', '巴布亚新几内亚', '巴拉圭',
		'秘鲁', '菲律宾', '波兰', '葡萄牙', '巴基斯坦', '波多黎各',
		'卡塔尔', '留尼汪岛', '罗马尼亚', '俄罗斯', '卢旺达',
		'东萨摩亚', '西萨摩亚', '圣马力诺', '圣皮埃尔岛及密克隆岛',
		'圣多美和普林西比', '沙特阿拉伯', '塞内加尔', '塞舌尔',
		'新加坡', '斯洛伐克', '斯洛文尼亚', '所罗门群岛', '索马里',
		'南非', '西班牙', '斯里兰卡', '圣克里斯托弗和尼维斯',
		'圣赫勒拿', '圣卢西亚', '圣文森特岛', '苏丹', '苏里南',
		'斯威士兰', '瑞典', '瑞士', '叙利亚', '塔吉克斯坦', '坦桑尼亚',
		'泰国', '阿拉伯联合酋长国', '多哥', '托克劳群岛', '汤加',
		'特立尼达和多巴哥', '突尼斯', '土耳其', '土库曼斯坦',
		'特克斯和凯科斯群岛(', '图瓦卢', '美国', '乌干达', '乌克兰',
		'英国', '乌拉圭', '乌兹别克斯坦', '瓦努阿图', '梵蒂冈',
		'委内瑞拉', '越南', '维尔京群岛', '维尔京群岛和圣罗克伊',
		'威克岛', '瓦里斯和富士那群岛', '西撒哈拉', '也门', '南斯拉夫',
		'扎伊尔', '赞比亚', '桑给巴尔', '津巴布韦', '中华人民共和国', '中国'
	];
	return getRnd(data, isNullable, ex);
}


/** 公司简称 */
function getCompanyPrefix(isNullable = false, ex = '') {
	let data = ['超艺', '和泰', '九方', '鑫博腾飞', '戴硕电子',
		'济南亿次元', '海创', '创联世纪', '凌云', '泰麒麟',
		'彩虹', '兰金电子', '晖来计算机', '天益', '恒聪百汇',
		'菊风公司', '惠派国际公司', '创汇', '思优', '时空盒数字',
		'易动力', '飞海科技', '华泰通安', '盟新', '商软冠联',
		'图龙信息', '易动力', '华远软件', '创亿', '时刻',
		'开发区世创', '明腾', '良诺', '天开', '毕博诚', '快讯',
		'凌颖信息', '黄石金承', '恩悌', '雨林木风计算机',
		'双敏电子', '维旺明', '网新恒天', '数字100', '飞利信',
		'立信电子', '联通时科', '中建创业', '新格林耐特',
		'新宇龙信息', '浙大万朋', 'MBP软件', '昂歌信息',
		'万迅电脑', '方正科技', '联软', '七喜', '南康', '银嘉',
		'巨奥', '佳禾', '国讯', '信诚致远', '浦华众城', '迪摩',
		'太极', '群英', '合联电子', '同兴万点', '襄樊地球村',
		'精芯', '艾提科信', '昊嘉', '鸿睿思博', '四通', '富罳',
		'商软冠联', '诺依曼软件', '东方峻景', '华成育卓', '趋势',
		'维涛', '通际名联'
	];
	return getRnd(data, isNullable, ex);
}

/** 公司类型 */
function getCompanyType(isNullable = false, ex = '') {
	let data = ['科技', '网络', '信息', '传媒', '集团', '控股', '投资', '制造'];
	return getRnd(data, isNullable, ex);
}

/** 公司名 */
function getCompany(isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	return getCompanyPrefix(false, ex) + getCompanyType() + '有限公司';
}

/** 内容 */
function getContent(size = 1, isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	let data = [
		'燕舞，燕舞，一曲歌来一片情。',
		'康师傅方便面，好吃看得见。',
		'不要太潇洒！',
		'让一亿人先聪明起来。',
		'共创美的前程，共度美的人生。',
		'省优，部优，葛优？',
		'喝孔府宴酒，做天下文章。',
		'健康成就未来。',
		'牙好，胃口就好，身体倍儿棒，吃嘛嘛香。',
		'永远的绿色，永远的秦池。',
		'坐红旗车，走中国路。',
		'要想皮肤好，早晚用大宝。',
		'孔府家酒，叫人想家。',
		'补钙新观念，吸收是要害。',
		'喝汇源果汁，走健康之路。',
		'爱的就是你!',
		'一种可以世袭的古典浪漫',
		'实力创造价值',
		'爱生活，爱拉芳！',
		'人类失去联想，世界将会怎样？',
		'做女人挺好！',
		'世界在你眼中？',
		'今天你有否亿唐？',
		'只溶在口，不溶在手。',
		'三千烦恼丝，健康新开始。',
		'维维豆奶，欢乐开怀。',
		'我们的光彩来自你的风采。',
		'钻石恒久远，一颗永流传。',
		'放我的真心在你的手心。',
		'小身材，大味道。',
		'牛奶香浓，丝般感受。',
		'聆听并不代表沉默，有时安静也是一种力量。',
		'滴滴香浓，意犹未尽。',
		'水晶之恋，一生不变。',
		'中国移动通信，沟通从心开始！',
		'网易，网聚人的力量！',
		'科技以人为本，诺基亚',
		'我们一直在努力！',
		'阳光总在风雨后',
		'男人对西服的要求，就是女人对男人的要求',
		'晚报，不晚报',
		'原来生活可以更美的',
		'明天的明天，你还会送我“水晶之恋”吗？',
		'卫浴出出进进的快感',
		'有家就有联合利华',
		'减脂减肥，其实是一种生活态度',
		'人头马一开，好事自然来。',
		'假如五指一样长，怎能满足用户不同需求？',
		'新飞广告做的好，不好新飞冰箱好',
		'传奇品质，百年张裕',
		'李宁：把出色留给自己',
		'一旦拥有，别无选择',
		'科技让你更轻松',
		'情系中国结，联通四海心',
		'海尔，中国造',
		'SOHU：足迹生活每一天',
		'果冻我要喜之郎',
		'国宝大熊猫，心纯天自高',
		'世界因为不同',
		'放低偏见，你会有出色发现！',
		'Just',
		'创意似金，敬业如牛',
		'不要让男人一手把握',
		'如同情人的手',
		'金窝银窝，不如自己的安乐窝。',
		'没有什么大不了的',
		'时间因我存在',
		'只要有梦想',
		'南方周末',
		'时间改变一切',
		'地球人都知道了',
		'众里寻他千百度，想要几度就几度',
		'您身边的银行，可信赖的银行',
		'三叶钢琴：学琴的孩子不会变坏',
		'柯达：串起生活每一刻',
		'大众甲克虫汽车：想想还是小的好',
		'一直被模拟,从未被超越',
		'幸福生活',
		'朗讯的创造力科技的原动力',
		'事事因你而出色',
		'运动之美，世界共享',
		'鹤舞白沙',
		'想知道“清嘴”的味道吗？',
		'弹指一挥间，世界皆互联',
		'更多选择、更多欢笑',
		'方太，让家的感觉更好',
		'世上仅此一件，今生与你结缘！',
		'白里透红与众不同',
		'没有蛀牙-佳洁士',
		'有线的价值',
		'享受快乐科技',
		'四海一家的解决之道',
		'娃哈哈纯净水：爱你等于爱自己',
		'农民山泉：有点甜',
		'博大精深，西门子',
		'一切尽在把握',
		'声声百思特，遥遥两相知',
		'一呼天下应',
		'让我们做得更好！',
		'暖和亲情，金龙鱼的大家庭。',
		'自然最健康，绿色好心情',
		'支起网络世界',
		'立邦漆：处处放光彩！',
		'fm365:真情互动！',
		'庄重一生，吉祥一生。',
		'人人都为礼品愁，我送北极海狗油。',
		'假如说人生的离合是一场戏，那么百年的好合更是早有安排！',
		'一品黄山天高云淡',
		'上上下下的享受！',
		'我是、我行、我素',
		'让无力者有力，让悲观者前行',
		'金利来—-男人的世界！',
		'百衣百顺',
		'聪明何必绝顶，慧根长留',
		'水往高处流',
		'大石化小，小石化了！',
		'“闲”妻良母',
		'“口服”，“心服”！',
		'盛满青春的秘密！',
		'三十六计走为上',
		'为了她的节日，献上您纯金般的心！',
		'用我们的钓线，你可以在鱼儿发现你之前先找到它',
		'生活就是一场运动，喝下它。',
		'选择维聚阿尔，已经表明你心明眼亮。',
		'佳能，我们看得见你想表达什么。',
		'天天都是春天',
		'假如你不来，广告明星就是他',
		'享受黑夜中偷拍的快感！',
		'彩信发送动人一刻',
		'灵感点亮生活!',
		'聪明演绎，无处不在！',
		'事业我一定争取，对你我从未放弃!',
		'波导手机，手机中的战斗机',
		'鄂尔多斯羊绒衫暖和全世界',
		'洁婷245再大的动作也不要紧',
		'做光明的牛，产光明的奶',
		'假如你的汽车会游泳的话，请照直开，不必刹车。',
		'永远要让驾驶执照比你自己先到期。',
		'请记住，上帝并不是十全十美的，它给汽车预备了备件，而人没有。',
		'小别意酸酸，欢聚心甜甜。',
		'除钞票外，承印一切。',
		'更多欢乐，更多选择',
		'美由你做主',
		'由我天地宽',
		'Sun是太阳，Java是月亮。',
		'不断创新，因为专心',
		'趁早下『斑』，请勿『痘』留。',
		'创新就是生活',
		'有一个漂亮的地方，万科四季花城',
		'建筑无限生活',
		'臭名远扬，香飘万里',
		'尝尝欢笑，经常麦当劳',
		'深入成就深度',
		'出色湖南，红网了然！',
		'因为网络，地球如村！',
		'一种质感',
		'恒久期盼',
		'繁荣民族文化',
		'不信，死给你看！',
		'天生的，强生的',
		'雪津啤酒，真情的味道！',
		'听世界，打天下',
		'雅芳比女人更了解女人',
		'Sun是太阳，Java是月亮。',
		'中国网通',
		'无线你的无限',
		'家有三洋，冬暖夏凉',
		'倾诉冬日暖语',
		'谁让我心动？',
		'灵活，让篮球场不再是一个平面',
		'别吻我，我怕修。',
		'一呼四应！',
		'无所不包！',
		'当之无愧',
		'以帽取人！',
		'一毛不拔！',
		'自讨苦吃！',
		'成功与科技共辉映',
		'没有最',
	];

	if (size == 1)
		return getRnd(data, false, ex);
	else {
		ret = '';
		for (let i = 0; i < size; i++) {
			ret += getRnd(data, false, ex) + ', ';
		}
		return ret;
	}
}

/** 获得一句话 */
function getWord(isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	let ret = getContent(1, false, ex);
	ret = ret.replace('。', '').replace('！', '').replace('？', '').replace('“', '”').replace('：', '');
	return ret;
}

/** 星期 */
function getWeek(isNullable = false, ex = '') {
	let data = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'];
	return getRnd(data, isNullable, ex);
}

/** 月份 */
function getMonth(isNullable = false, ex = '') {
	let data = ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'];
	return getRnd(data, isNullable, ex);
}

/** 获得姓名 */
function getFirstName(isNullable = false, ex = '') {
	let data = ['李', '王', '张', '刘', '陈', '杨', '赵', '黄', '周', '吴',
		'徐', '孙', '胡', '朱', '高', '林', '何', '郭', '马', '罗',
		'梁', '宋', '郑', '谢', '韩', '唐', '冯', '于', '董', '萧',
		'程', '曹', '袁', '邓', '许', '傅', '沉', '曾', '彭', '吕',
		'苏', '卢', '蒋', '蔡', '贾', '丁', '林', '薛', '叶', '阎',
		'余', '潘', '杜', '戴', '夏', '钟', '汪', '田', '任', '姜',
		'范', '方', '石', '姚', '谭', '廖', '邹', '熊', '金', '陆',
		'郝', '孔', '白', '崔', '康', '毛', '邱', '秦', '江', '史',
		'顾', '侯', '邵', '孟', '龙', '万', '段', '雷', '钱', '汤',
		'尹', '黎', '易', '常', '武', '乔', '贺', '赖', '龚', '文',
		'庞', '樊', '兰', '殷', '施', '陶', '洪', '翟', '安', '颜',
		'倪', '严', '牛', '温', '芦', '季', '俞', '章', '鲁', '葛',
		'伍', '韦', '申', '尤', '毕', '聂', '丛', '焦', '向', '柳',
		'邢', '路', '岳', '齐', '沿', '梅', '莫', '庄', '辛', '管',
		'祝', '左', '涂', '谷', '祁', '时', '舒', '耿', '牟', '卜',
		'路', '詹', '关', '苗', '凌', '费', '纪', '靳', '盛', '童',
		'欧', '甄', '项', '曲', '成', '游', '阳', '裴', '席', '卫',
		'查', '屈', '鲍', '位', '覃', '霍', '翁', '隋', '植', '甘',
		'景', '薄', '单', '包', '司', '柏', '宁', '柯', '阮', '桂',
		'闵', '欧阳', '解', '强', '柴', '华', '车', '冉', '房', '边',
		'辜', '吉', '饶', '刁', '瞿', '戚', '丘', '古', '米', '池',
		'滕', '晋', '苑', '邬', '臧', '畅', '宫', '来', '嵺', '苟',
		'全', '褚', '廉', '简', '娄', '盖', '符', '奚', '木', '穆',
		'党', '燕', '郎', '邸', '冀', '谈', '姬', '屠', '连', '郜',
		'晏', '栾', '郁', '商', '蒙', '计', '喻', '揭', '窦', '迟',
		'宇', '敖', '糜', '鄢', '冷', '卓', '花', '仇', '艾', '蓝',
		'都', '巩', '稽', '井', '练', '仲', '乐', '虞', '卞', '封',
		'竺', '冼', '原', '官', '衣', '楚', '佟', '栗', '匡', '宗',
		'应', '台', '巫', '鞠', '僧', '桑', '荆', '谌', '银', '扬',
		'明', '沙', '薄', '伏', '岑', '习', '胥', '保', '和', '蔺'
	];
	return getRnd(data, isNullable, ex);
}


/** 女生名 */
function getFemaleName(isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	let data = ['芳', '娜', '敏', '静', '敏静', '秀英', '丽', '洋', '艳', '娟',
		'文娟', '君', '文君', '珺', '霞', '明霞', '秀兰', '燕', '芬', '桂芬',
		'玲', '桂英', '丹', '萍', '华', '红', '玉兰', '桂兰', '英', '梅',
		'莉', '秀珍', '雪', '依琳', '旭', '宁', '婷', '馨予', '玉珍', '凤英',
		'晶', '欢', '玉英', '颖', '红梅', '佳', '倩', '琴', '兰英', '云',
		'洁', '爱华', '淑珍', '春梅', '海燕', '晨', '冬梅', '秀荣', '瑞', '桂珍',
		'莹', '秀云', '桂荣', '秀梅', '丽娟', '婷婷', '玉华', '琳', '雪梅', '淑兰',
		'丽丽', '玉', '秀芳', '欣', '淑英', '桂芳', '丽华', '丹丹', '桂香', '淑华',
		'秀华', '桂芝', '小红', '金凤', '文', '利', '楠', '红霞', '瑜', '桂花',
		'璐', '凤兰', '腊梅', '瑶', '嘉', '怡', '冰冰', '玉梅', '慧', '婕'
	];
	return getFirstName(false, ex) + getRnd(data, false, ex);
}

/** 男生名 */
function getMaleName(isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	let data = ['伟', '强', '磊', '洋', '勇', '军', '杰', '涛', '超', '明',
		'刚', '平', '辉', '鹏', '华', '飞', '鑫', '波', '斌', '宇',
		'浩', '凯', '健', '俊', '帆', '帅', '旭', '宁', '龙', '林',
		'欢', '阳', '建华', '亮', '成', '畅', '建', '峰', '建国', '建军',
		'晨', '瑞', '志强', '兵', '雷', '东', '欣', '博', '彬', '坤',
		'全安', '荣', '岩', '杨', '文', '利', '楠', '建平', '嘉俊', '晧',
		'建明', '子安', '新华', '鹏程', '学明', '博涛', '捷', '文彬', '楼', '鹰',
		'松', '伦', '超', '钟', '瑜', '振国', '洪', '毅', '昱然', '哲',
		'翔', '翼', '祥', '国庆', '哲彦', '正诚', '正豪', '正平', '正业', '志诚',
		'志新', '志勇', '志明', '志强', '志文', '致远', '智明', '智勇', '智敏', '智渊'
	];
	return getFirstName(false, ex) + getRnd(data, false, ex);
}

/** 随机获得姓名 */
function getName(isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	let rd = Math.round(Math.random());
	return (rd % 2 == 0) ? getFemaleName(false, ex) : getMaleName(false, ex);
}

/** 身份证号码 */
function getIdCard(birthday = '', isNullable = false) {
	if (getNullable(isNullable)) return '';

	let coefficientArray = ["7", "9", "10", "5", "8", "4", "2", "1", "6", "3", "7", "9", "10", "5", "8", "4", "2"]; // 加权因子
	let lastNumberArray = ["1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2"]; // 校验码
	let address = "420101"; // 住址

	if (!birthday)
		birthday = "19810101"; // 生日

	let s = Math.floor(Math.random() * 10).toString() + Math.floor(Math.random() * 10).toString() + Math.floor(Math.random() * 10).toString();
	let array = (address + birthday + s).split("");
	let total = 0;
	for (i in array) {
		total = total + parseInt(array[i]) * parseInt(coefficientArray[i]);
	}
	let lastNumber = lastNumberArray[parseInt(total % 11)];
	let str = address + birthday + s + lastNumber;
	return str;

}

/** 手机号码 */
function getMobile(isNullable = false, ex = '') {

	if (getNullable(isNullable)) return '';

	let data = ['133', '149', '153', '173', '177', '180', '181', '189', '190', '191', '193', '199', '130', '131', '132', '145', '155', '156', '166', '167', '171', '175', '176', '185', '186', '196', '134', '135', '136', '137', '138', '139', '147', '148', '150', '151', '152', '157', '158', '159', '172', '178', '182', '183', '184', '187', '188', '195', '197', '198'];

	return getRnd(data, false, ex) + getInt(8);
}

/** 电话号码 */
function getPhone(isNullable = false, ex = '') {

	if (getNullable(isNullable)) return '';

	let data = ['010', '021', '022', '023', '020', '024', '025', '027', '028', '029', '0755', '0731', '0769'];

	return getRnd(data, false, ex) + '-' + getInt(8);
}

/** 常用英文单词 */
function getEnWord(isNullable = false, ex = '') {
	let data = 'earthday,org,suggests,that,every,household,take,time,this,earth,day,to,perform,a,plastic,audit,which,involves,counting,how,many,plastic,containers,wraps,bottles,and,bags,are,purchased,for,at,home,use,it,may,surprise,you,how,many,you,use,until,you,start,counting,while,were,not,saying,that,you,have,to,get,rid,of,every,single,ounce,of,plastic,in,your,home,it,is,important,to,be,aware,of,your,familys,plastic,usage,and,to,take,time,to,research,more,sustainable,products,and,start,to,incorporate,them,into,your,daily,life,simple,swaps2,like,glass,containers,instead,of,plastic,or,stainless3,steel,bottles,instead,of,single,use,plastics,can,go,a,long,way,to,making,a,difference';

	return getRnd(data, isNullable, ex);
}

/** 常用域名 */
function getDomain(isNullable = false, ex = '') {

	if (getNullable(isNullable)) return '';

	let data = 'com,net,org,cn,hk,us,uk,jp,kr';

	return '.' + getRnd(data, false, ex);
}

/** 常用邮箱 */
function getEmail(isNullable = false, ex = '') {
	if (getNullable(isNullable)) return '';

	let data = 'qq.com,163.com,gmail.com,263.com,tom.com,163.net,189.cn,sina.com,sohu.com,360.com,tencent.com,china.com,netease.com,126.com,139.com';

	return getEnWord() + '@' + getRnd(data, false, ex);
}

/** 获取时间戳 step 秒 */
function getTimestamp(step = 0) {
	return timeUtil.time() + step * 1000;
}

/**
 * 以当天为基点，获取随机时间戳，默认为当天
 * @param {*} min  起始天
 * @param {*} max  终止天
 */
function getAddTimestamp(min = 0, max = 1) {
	let now = timeUtil.timestamp2Time(timeUtil.time(), 'Y-M-D'); //转为当天0点
	now = timeUtil.time2Timestamp(now);
	return now + getIntBetween(min * 86400 * 1000, max * 86400 * 1000);
}

/** 生日 fmt=Y, Y-M, Y-M-D */
function getDate(start = '1900', end = '2020', fmt = 'Y') {

	if (fmt == 'Y') {
	start = start + '-01-01 00:00:00';
		end = end + '-12-31 23:59:59';
	}
	else if (fmt == 'Y-M') {
		start = start + '-01 00:00:00';
		end = end + '-28 23:59:59';
	}
	else if (fmt == 'Y-M-D') {
		start = start + ' 00:00:00';
		end = end + ' 23:59:59';
	}

	start = timeUtil.time2Timestamp(start);
	end = timeUtil.time2Timestamp(end);

	let time = getIntBetween(start, end);
	return timeUtil.timestamp2Time(time, 'Y-M-D');
}

/** 整数 */
function getInt(size) {
	let t = '';
	for (var i = 0; i < size; i++) {
		t += Math.floor(Math.random() * 10);
	}
	return t;
}

/** 随机数组 */
function getRdArr(arr) {
	return getRnd(arr);
}

/** 随机数 */
function getIntBetween(min, max) {
	return min + Math.floor(Math.random() * (max - min + 1));
}

/** 随机字符串 */
function getStr(size) {

	let text = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
	let rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < size; rdmString += text.charAt(rdmIndex(text)));
	return rdmString;

}

/** 随机数字字符串 */
function getIntStr(size) {

	let text = '0123456789';
	let rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < size; rdmString += text.charAt(rdmIndex(text)));
	return String(rdmString);

}

/** 随机字符串小写 */
function getStrLower(size) {
	return getStr(size).toLowerCase();
}

/** 随机字符串大写 */
function getStrUpper(size) {
	return getStr(size).toUpperCase();
}

function getUuid() {
	let s = [];
	let hexDigits = "0123456789abcdef";
	for (var i = 0; i < 36; i++) {
		s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
	}
	s[14] = "4"; // bits 12-15 of the time_hi_and_version field to 0010
	s[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01
	s[8] = s[13] = s[18] = s[23] = "-";

	let uuid = s.join("");
	return uuid;
}

/** 学院 */
function getCollege(isNullable = false, ex = '') {
	let data = '地球科学学院,环境科学与工程学院,化学与生物工程学院,材料科学与工程学院,土木与建筑工程学院,测绘地理信息学院,信息科学与工程学院,机械与控制工程学院,珠宝学院,马克思主义学院,公共管理与传媒学院,商学院,旅游与风景园林学院,艺术学院,外国语学院,理学院,文学与新闻传播学院,外国语学院,建筑与艺术学院,商学院,法学院,马克思主义学院,公共管理学院,数学与统计学院,物理与电子学院,化学化工学院,文学系,法学系,哲学系,医学系,力学系,理学系,数学系,物理系,化学系,计算机系,自动化系,口腔医学系,英语系,外语系,法语系,德语系,日语系,西班牙语系';

	return getRnd(data, isNullable, ex);
}

/** 专业 */
function getItem(isNullable = false, ex = '') {
	let data = '音乐表演,音乐学,作曲与作曲技术理论,舞蹈表演,舞蹈学,舞蹈编导,舞蹈教育,航空服务艺术与管理,流行音乐,音乐治疗,流行舞蹈,表演,戏剧学,电影学,戏剧影视文学,广播电视编导,戏剧影视导演,戏剧影视美术设计,录音艺术,播音与主持艺术,动画,美术学,绘画,雕塑,摄影,书法学,中国画,实验艺术,跨媒体艺术,文物保护与修复,漫画,艺术设计学,视觉传达设计,环境设计,产品设计,服装与服饰设计,公共艺术,工艺美术,数字媒体艺术,艺术与科技,陶瓷艺术设计,新媒体设计,包装设计,教育学,科学教育,人文教育,教育技术学,艺术教育,学前教育,小学教育,特殊教育,华文教育,教育康复学,卫生教育,法学,知识产权,监狱学,信用风险管理与法律防控,国际经贸规则,司法警察学,社区矫正,工商管理,市场营销,会计学,财务管理,国际商务,人力资源管理,审计学,资产评估,物业管理,文化产业管理,劳动关系,体育经济与管理,财务会计教育,市场营销教育,零售业管理,农林经济管理,农村区域发展 ,公共事业管理,行政管理,劳动与社会保障,土地资源管理,城市管理,海关管理,交通管理,海事管理,公共关系学,健康服务与管理,海警后勤管理,数学与应用数学,信息与计算科学,数理基础科学,数据计算及应用 ,物理学,应用物理学,核物理,声学,系统科学与工程,地理科学,自然地理与资源环境,人文地理与城乡规划,地理信息科学 ,机械设计制造及其自动化,材料成型及控制工程,机械电子工程,工业设计,过程装备与控制工程,车辆工程,汽车服务工程,机械工艺技术,微机电系统工程,机电技术教育,汽车维修工程教育,智能制造工程,材料科学与工程材料物理,材料化学,冶金工程,金属材料工程,无机非金属材料工程,高分子材料与工程,复合材料与工程,粉体材料科学与工程,宝石及材料工艺学,焊接技术与工程,功能材料,纳米材料与技术,新能源材料与器件,材料设计科学与工程,光电信息科学与工程,信息工程,广播电视工程,水声工程,电子封装技术,集成电路设计与集成系统,医学信息工程,电磁场与无线技术,电波传播与天线,电子信息科学与技术,电信工程及管理,应用电子技术教育,数字媒体技术,智能科学与技术,空间信息与数字技术,电子与计算机工程,数据科学与大数据技术,网络空间安全,新媒体技术,电影制作,保密技术,服务科学与工程,虚拟现实技术,区块链工程,建筑环境与能源应用工程,给排水科学与工程,建筑电气与智能化,城市地下空间工程,道路桥梁与渡河工程,铁道工程,智能建造,土木、水利与海洋工程,土木、水利与交通工程,采矿工程,石油工程,矿物加工工程,油气储运工程,矿物资源工程,海洋油气工程 ,纺织工程,服装设计与工程,非织造材料与工程,服装设计与工艺教育,丝绸设计与工程';

	return getRnd(data, isNullable, ex);
}

/** 行业 */
function getTrade(isNullable = false, ex = '') {
	let data = ['经营', '销售', '市场营销', '公关', '客户服务', '人力资源', '行政HR', '财务/审计/统计', '文职', '翻译', '计算机/IT', '电子/通讯', '设计', '工业/工厂', '金融/经济', '法律', '机械', '技工', '房地产/土建', '咨询/顾问', '医疗/护理/保健', '服务业', '政府机关', '事业单位', '学生/研究生', '化工', '冶金/地质'];

	return getRnd(data, isNullable, ex);
}

/** 学历 */
function getEdu(isNullable = false, ex = '') {
	let data = '中学,高职,大专,本科,硕士,博士,博士后,其他';

	return getRnd(data, isNullable, ex);
}

/** 职位 */
function getDuty(isNullable = false, ex = '') {
	let data = 'CTO,CEO,CFO,研发,销售,采购,董事长,老板,自由自由者,中层领导,部门经理,大区经理';

	return getRnd(data, isNullable, ex);
}

/** 资源 */
function getResource(isNullable = false, ex = '') {
	let data = '法律咨询,管理咨询,企业辅导,上市辅导,创业交流,投资融资,医疗咨询,教育交流,开发技术交流,研发交流,未来探讨,大宗商品,销售网络共享,艺术品鉴赏,供应链共享,进修交流,财会督导,审计辅导,企业治理,工程监理,硬件生产,小商品生产,电商,二类电商,早教,公考,艺术设计,人力资源,地质勘探,招工招聘,游戏开发,销售采购,市场营销,电子通讯,经济探讨,机械制造,产业经理,轻工业,化工化学,海外电商,企业出海,翻译,心理咨询,餐饮酒店,民宿,旅游自驾,服务业,租车,自媒体新媒体行业,文职人员,军迷,学习共勉,体育活动,打球约饭,户外旅行,文艺青年,小镇青年,斜杠青年,交通运输,民航机票,系统集成,售前服务,维修';

	return getRnd(data, isNullable, ex);
}

/** 评论 */
function getComment(isNullable = false, ex = '') {
	let data = '很用心的活动,谢谢你们,很Nice,很美妙的聚会,学到了新东西,很高兴,难得啊,你们都到家了吗,活动主题是？,大家都很不错,谢谢小姐姐,下次期待在家门口,你们最近有参加吗,好久没搞活动了,我一定准时到达,大家记得不要迟到哦,公交地铁都可以到,有点远,很近啊,要带些什么,有活动须知吗,要带什么东西呢,要提前准备吗?,管饭不？哈哈,可以带宠物吗,和我的女朋友就是这样认识的,开阔了眼界,周末也不能放弃学习,人啊！就是要学到老,我是社恐咋办,很棒的活动！,很不错！期待下次,很高兴认识大家,物超所值,度过了很开心的一天！谢谢主办方,可圈可点，期待下次,认识了新朋友!真不错,难得的周末,难得的假期,活动办得很好,活动还行,希望下次改善,社恐找到了新天地,谢谢大家,今天真的很开心~学到了新知识！认识了新朋友,希望下次再组织这样的活动,好久没参加活动了~今天的感觉真不错,下次活动是哪天？,还会举办这样的活动吗？期待ing,能在我们这边举行就好了！我隔得有点远,认识了一群很真诚的朋友~度过了一个有意义的周末,请问下次还会举行这样的活动吗,下次活动是哪天呢?,我来晚了！下次一定准时,时间有点赶！希望下次安排的更宽裕点,还是有很多槽点~希望下次举办方改进,活动免费不？哈哈,我是来看热闹的,我是来打酱油的,活动很好!我就是个路人甲,为你们点赞~,好开心~haha,你们还好吗,大家晚安,周一要上班了！今天真开心,日知其所无,很有收获,有点乱~希望改进啊,我可以多带一个人么,可以带家属不,有免费的不,有深圳这边的不,有北京这边的不,very good!,See YOU,nice!!!!,我喜欢你们';

	return getRnd(data, isNullable, ex);
}

/** 自我介绍 */
function getMotto(isNullable = false, ex = '') {
	let data = '生无一锥土，常有四海心 ,志在山顶的人，不会贪念山腰的风景 ,人之所以能，是相信能 ,卒子过河，意在吃帅 ,心志要坚，意趣要乐 ,贫困教会贫困者一切 ,欲望以提升热忱，毅力以磨平高山 ,人生不得行胸怀，虽寿百岁犹为无也 ,人之所以异于禽者，唯志而已矣！,每一发奋努力的背后，必有加倍的赏赐 ,治天下者必先立其志 ,以天下为己任 ,一人立志，万夫莫敌 ,志高山峰矮，路从脚下伸 ,鹰爱高飞，鸦栖一枝 ,莫为一身之谋，而有天下之志 ,人之所以能，是相信能,励志短语,没有天生的信心，只有不断培养的信心 ,世上没有绝望的处境，只有对处境绝望的人 ,人格的完善是本，财富的确立是末 ,在年轻人的颈项上，没有什么东西能比事业心这颗灿烂的宝珠 ,壮志与毅力是事业的双翼 ,心有多大，舞台就有多大 ,志正则众邪不生 ,母鸡的理想不过是一把糠 ,死犹未肯输心去，贫亦其能奈我何！,鸟贵有翼，人贵有志 ,有志登山顶，无志站山脚 ,没有一种不通过蔑视忍受和奋斗就可以征服的命运 ,远大的希望造就伟大的人物 ,志不立，天下无可成之事 ,有志者能使石头长出青草来 ,莫找借口失败，只找理由成功 ,男子千年志，吾生未有涯 ,鱼跳龙门往上游 ,有志者，事竟成  ,强行者有志 ,心随朗月高，志与秋霜洁 ,与其当一辈子乌鸦，莫如当一次鹰 ,石看纹理山看脉，人看志气树看材 ,志当存高远 ,任何的限制，都是从自己的内心开始的 ,志，气之帅也 ,一个人如果胸无大志，既使再有壮丽的举动也称不上是伟人  ,立志是事业的大门，工作是登门入室的旅程 ,志气和贫困是患难兄弟，世人常见他们伴在一起 ,失败是成功之母 ,对的，坚持；错的，放弃！,丈夫志不大，何以佐乾坤 ,鸭仔无娘也长大，几多白手也成家  ,我走得很慢，但是我从来不会后退,面对太阳，阴影将落在你的背后,困境之中，饱含机遇,执着于理想，纯粹于当下,不要轻言放弃，否则对不起自己,含泪播种的人一定能含笑收获,日益努力，而后风生水起,若要梦想实现，先从梦中醒来,今天比昨天好，就是希望,希望叫醒你的不是闹钟而是理想,坚定信念的人都是英雄,欲戴皇冠，必承其重,昨日之深渊，来日之浅谈,天越黑，星星越亮,岂能尽如人意，但求无愧我心,世上没什么运气，只有努力去挑战,日出之美便在于它脱胎于最深的黑暗,不要等待机会，而要创造机会,成功的秘诀在于对目标的执着追求,我把苦难挫折当作自己生存的最好导师,黑夜无论怎样悠长，白昼总会到来,海到无边天作岸，山登绝顶我为峰,除了放弃尝试以外没有失败,有梦就别怕痛，想赢就别喊停, 与其羡慕别人，不如自己努力,努力就能成功，坚持确保胜利,永不言败，是成功者的最佳品格,人生没有彩排，每天都是现场直播,火把倒下，火焰依然向上,低头哭过别忘了抬头继续走,有种脾气叫不放弃,风乍起，合当奋意向人生,莫问收获，但问耕耘,即使身在生活，也要做你理想的卧底,我只身前行，却仿佛带着一万雄兵,熬过一切，星光璀璨,没有人帮你，说明你一个人可以,让理想生活的样子清晰可见,趁我们头脑发热，我们要不顾一切,念念不忘，必有回响,一生很短，你要大胆,容易走的路，一般都很拥挤,那些杀不死我们的，终将让我们更强大,你利用时间的方式，就是塑造自己的方式,每一个不曾起舞的日子，都是对生命的辜负,猛兽总是独行，牛羊才成群结队,你迷茫的原因在于读书太少而想的太多,对未来真正的慷慨，是把一切献给现在,没有一点儿疯狂，生活就不值得过,生活在阴沟里，但仍有人仰望星空,怕输的人已经输了,不要忘记人生是要战斗到死, 抱怨身处黑暗，不如提灯前行,患难困苦，是磨炼人格之高等学校,失败不是悲剧，放弃才是,画工须画云中龙，为人须为人中雄,博观而约取，厚积而薄发,志在山顶的人，不会贪恋山腰的风景,别为失败找理由，要为成功找方法,迷失的时候，选择更艰辛的那条路,命是弱者的借口，运是强者的谦词,如果今天不走的话，明天就要跑,今天度过的一天明天就找不回来了,生活绝不会因为你胆小怯懦而饶过你,最可怕的敌人，就是没有坚强的信念,梦想一旦被付诸行动，就会变得神圣,寄言燕雀莫相唣，自有云霄万里高,人若有志，万事可为,志不可一日坠，人不可一日放,苦难，是化了妆的祝福,没有实力的愤怒毫无意义,在避风的港湾里，找不到昂扬的帆,大胆的尝试只等于成功了一半,天才就是无止境刻苦勤奋的能力,你是自己人生的设计师,苦想没盼头，苦干有奔头,世界会向那些有目标和远见的人让路,挫折其实就是迈向成功所应缴的学费,欲望以提升热忱，毅力以磨平高山,用行动祈祷比用言语更能够使上帝了解,志不立，天下无可成之事,志向和热爱是伟大行为的双翼,水激石则鸣，人激志则宏,雄心壮志是茫茫黑夜中的北斗星,贫而懒惰乃真穷，贱而无志乃真贱,目标越接近，困难越增加,绳锯木断，水滴石穿,男儿不展风云志，空负天生八尺躯,天才就是无止境刻苦勤奋的能力,苦难是人生的老师,成功的秘诀，在永不改变既定的目的,平凡的脚步也可以走完伟大的行程,如果你有梦想的话，就要去捍卫它,永远要面对眼前的这些困境,如果我放弃，就是向那些错看我的人屈服,运气，就是机会碰巧撞到了你的努力,哪有什么胜利可言，挺住就意味着一切,过去属于死神，未来属于你自己,失败是坚忍的最后考验,流水在碰到底处时才会释放活力';

	return getRnd(data, isNullable, ex);
}

/** 用户头像 */
function getAvatar(isNullable) {
	if (getNullable(isNullable)) return '';

	return 'https://7265-release-7g51ulsq6451a0a6-1304820041.tcb.qcloud.la/mini/user_pic/' + getIntBetween(1, 200) + '.jpg';
}


/** 是否为空 */
function getNullable(isNullable) {
	if (!isNullable) return false;

	let rd = getIntBetween(0, 1);
	if (rd % 2 == 0)
		return true;
	else
		return false;
}





module.exports = {
	getUuid,
	getRnd,

	getIdCard,

	getProvince,
	getProvinceAbbr,

	getCity,
	getArea,
	getCountry,
	getStreet,
	getAddress,

	getCompany,
	getCompanyPrefix,
	getResource,
	getMotto,
	getComment,

	getContent,
	getWord,

	getWeek,
	getMonth,
	getTimestamp,
	getAddTimestamp,

	getFirstName,
	getFemaleName,
	getMaleName,
	getName,

	getInt,
	getRdArr,
	getIntBetween,
	getIntStr,
	getStr,
	getStrLower,
	getStrUpper,

	getMobile,
	getPhone,

	getEnWord,
	getEmail,
	getDomain,

	getDate,

	getItem,
	getCollege,
	getTrade,
	getEdu,
	getDuty,

	getAvatar
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\lib\md5_lib.js
--------------------------------------------------
/**
 * Notes: MD5类库
 * Ver : CCMiniCloud Framework 2.15.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-03-01 14:00:00 
 */

function safe_add(x, y) {
	var lsw = (x & 0xFFFF) + (y & 0xFFFF)
	var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
	return (msw << 16) | (lsw & 0xFFFF)
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function rol(num, cnt) {
	return (num << cnt) | (num >>> (32 - cnt))
}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function cmn(q, a, b, x, s, t) {
	return safe_add(rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
}

function ff(a, b, c, d, x, s, t) {
	return cmn((b & c) | ((~b) & d), a, b, x, s, t)
}

function gg(a, b, c, d, x, s, t) {
	return cmn((b & d) | (c & (~d)), a, b, x, s, t)
}

function hh(a, b, c, d, x, s, t) {
	return cmn(b ^ c ^ d, a, b, x, s, t)
}

function ii(a, b, c, d, x, s, t) {
	return cmn(c ^ (b | (~d)), a, b, x, s, t)
}

/*
 * Calculate the MD5 of an array of little-endian words, producing an array
 * of little-endian words.
 */
function coreMD5(x) {
	var a = 1732584193
	var b = -271733879
	var c = -1732584194
	var d = 271733878

	for (var i = 0; i < x.length; i += 16) {
		var olda = a
		var oldb = b
		var oldc = c
		var oldd = d

		a = ff(a, b, c, d, x[i + 0], 7, -680876936)
		d = ff(d, a, b, c, x[i + 1], 12, -389564586)
		c = ff(c, d, a, b, x[i + 2], 17, 606105819)
		b = ff(b, c, d, a, x[i + 3], 22, -1044525330)
		a = ff(a, b, c, d, x[i + 4], 7, -176418897)
		d = ff(d, a, b, c, x[i + 5], 12, 1200080426)
		c = ff(c, d, a, b, x[i + 6], 17, -1473231341)
		b = ff(b, c, d, a, x[i + 7], 22, -45705983)
		a = ff(a, b, c, d, x[i + 8], 7, 1770035416)
		d = ff(d, a, b, c, x[i + 9], 12, -1958414417)
		c = ff(c, d, a, b, x[i + 10], 17, -42063)
		b = ff(b, c, d, a, x[i + 11], 22, -1990404162)
		a = ff(a, b, c, d, x[i + 12], 7, 1804603682)
		d = ff(d, a, b, c, x[i + 13], 12, -40341101)
		c = ff(c, d, a, b, x[i + 14], 17, -1502002290)
		b = ff(b, c, d, a, x[i + 15], 22, 1236535329)

		a = gg(a, b, c, d, x[i + 1], 5, -165796510)
		d = gg(d, a, b, c, x[i + 6], 9, -1069501632)
		c = gg(c, d, a, b, x[i + 11], 14, 643717713)
		b = gg(b, c, d, a, x[i + 0], 20, -373897302)
		a = gg(a, b, c, d, x[i + 5], 5, -701558691)
		d = gg(d, a, b, c, x[i + 10], 9, 38016083)
		c = gg(c, d, a, b, x[i + 15], 14, -660478335)
		b = gg(b, c, d, a, x[i + 4], 20, -405537848)
		a = gg(a, b, c, d, x[i + 9], 5, 568446438)
		d = gg(d, a, b, c, x[i + 14], 9, -1019803690)
		c = gg(c, d, a, b, x[i + 3], 14, -187363961)
		b = gg(b, c, d, a, x[i + 8], 20, 1163531501)
		a = gg(a, b, c, d, x[i + 13], 5, -1444681467)
		d = gg(d, a, b, c, x[i + 2], 9, -51403784)
		c = gg(c, d, a, b, x[i + 7], 14, 1735328473)
		b = gg(b, c, d, a, x[i + 12], 20, -1926607734)

		a = hh(a, b, c, d, x[i + 5], 4, -378558)
		d = hh(d, a, b, c, x[i + 8], 11, -2022574463)
		c = hh(c, d, a, b, x[i + 11], 16, 1839030562)
		b = hh(b, c, d, a, x[i + 14], 23, -35309556)
		a = hh(a, b, c, d, x[i + 1], 4, -1530992060)
		d = hh(d, a, b, c, x[i + 4], 11, 1272893353)
		c = hh(c, d, a, b, x[i + 7], 16, -155497632)
		b = hh(b, c, d, a, x[i + 10], 23, -1094730640)
		a = hh(a, b, c, d, x[i + 13], 4, 681279174)
		d = hh(d, a, b, c, x[i + 0], 11, -358537222)
		c = hh(c, d, a, b, x[i + 3], 16, -722521979)
		b = hh(b, c, d, a, x[i + 6], 23, 76029189)
		a = hh(a, b, c, d, x[i + 9], 4, -640364487)
		d = hh(d, a, b, c, x[i + 12], 11, -421815835)
		c = hh(c, d, a, b, x[i + 15], 16, 530742520)
		b = hh(b, c, d, a, x[i + 2], 23, -995338651)

		a = ii(a, b, c, d, x[i + 0], 6, -198630844)
		d = ii(d, a, b, c, x[i + 7], 10, 1126891415)
		c = ii(c, d, a, b, x[i + 14], 15, -1416354905)
		b = ii(b, c, d, a, x[i + 5], 21, -57434055)
		a = ii(a, b, c, d, x[i + 12], 6, 1700485571)
		d = ii(d, a, b, c, x[i + 3], 10, -1894986606)
		c = ii(c, d, a, b, x[i + 10], 15, -1051523)
		b = ii(b, c, d, a, x[i + 1], 21, -2054922799)
		a = ii(a, b, c, d, x[i + 8], 6, 1873313359)
		d = ii(d, a, b, c, x[i + 15], 10, -30611744)
		c = ii(c, d, a, b, x[i + 6], 15, -1560198380)
		b = ii(b, c, d, a, x[i + 13], 21, 1309151649)
		a = ii(a, b, c, d, x[i + 4], 6, -145523070)
		d = ii(d, a, b, c, x[i + 11], 10, -1120210379)
		c = ii(c, d, a, b, x[i + 2], 15, 718787259)
		b = ii(b, c, d, a, x[i + 9], 21, -343485551)

		a = safe_add(a, olda)
		b = safe_add(b, oldb)
		c = safe_add(c, oldc)
		d = safe_add(d, oldd)
	}
	return [a, b, c, d]
}

/*
 * Convert an array of little-endian words to a hex string.
 */
function binl2hex(binarray) {
	var hex_tab = "0123456789abcdef"
	var str = ""
	for (var i = 0; i < binarray.length * 4; i++) {
		str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) +
			hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF)
	}
	return str
}

/*
 * Convert an array of little-endian words to a base64 encoded string.
 */
function binl2b64(binarray) {
	var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	var str = ""
	for (var i = 0; i < binarray.length * 32; i += 6) {
		str += tab.charAt(((binarray[i >> 5] << (i % 32)) & 0x3F) |
			((binarray[i >> 5 + 1] >> (32 - i % 32)) & 0x3F))
	}
	return str
}

/*
 * Convert an 8-bit character string to a sequence of 16-word blocks, stored
 * as an array, and append appropriate padding for MD4/5 calculation.
 * If any of the characters are >255, the high byte is silently ignored.
 */
function str2binl(str) {
	var nblk = ((str.length + 8) >> 6) + 1 // number of 16-word blocks
	var blks = new Array(nblk * 16)
	for (var i = 0; i < nblk * 16; i++) blks[i] = 0
	for (var i = 0; i < str.length; i++)
		blks[i >> 2] |= (str.charCodeAt(i) & 0xFF) << ((i % 4) * 8)
	blks[i >> 2] |= 0x80 << ((i % 4) * 8)
	blks[nblk * 16 - 2] = str.length * 8
	return blks
}

/*
 * Convert a wide-character string to a sequence of 16-word blocks, stored as
 * an array, and append appropriate padding for MD4/5 calculation.
 */
function strw2binl(str) {
	var nblk = ((str.length + 4) >> 5) + 1 // number of 16-word blocks
	var blks = new Array(nblk * 16)
	for (var i = 0; i < nblk * 16; i++) blks[i] = 0
	for (var i = 0; i < str.length; i++)
		blks[i >> 1] |= str.charCodeAt(i) << ((i % 2) * 16)
	blks[i >> 1] |= 0x80 << ((i % 2) * 16)
	blks[nblk * 16 - 2] = str.length * 16
	return blks
}

/*
 * External interface
 */
function hexMD5(str) {
	return binl2hex(coreMD5(str2binl(str)))
}

function hexMD5w(str) {
	return binl2hex(coreMD5(strw2binl(str)))
}

function b64MD5(str) {
	return binl2b64(coreMD5(str2binl(str)))
}

function b64MD5w(str) {
	return binl2b64(coreMD5(strw2binl(str)))
}
/* Backward compatibility */
function calcMD5(str) {
	return binl2hex(coreMD5(str2binl(str)))
}
module.exports = {
	md5: hexMD5
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\lib\mini_lib.js
--------------------------------------------------
/**
 * Notes: 小程序封装类库
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-06 14:00:00 
 */
const cloudBase = require('../cloud/cloud_base.js');
const cloudUtil = require('../cloud/cloud_util.js');
const config = require('../../config/config');


// 消息长度截取
function fmtThing(str) { //20个以内字符,可汉字、数字、字母或符号组合
	return str.substr(0, 20);
}

function fmtCharacterString(str) { //32位以内数字、字母或符号
	return str.substr(0, 32);
}

function fmtPhrase(str) { //5个以内汉字
	return str.substr(0, 5);
} 

/**
 * 发送一次性消息
 * @param {*} body 
 * @param {*} key 
 */
async function sendMiniOnceTempMsg(body, key = '') {
	//	console.log('##sendOnceTempMsg[' + key + ']', body);
	let cloud = cloudBase.getCloud();
	try {
		// 默认参数
		body.lang = 'zh_CN';
		body.miniprogramState = 'formal';

		await cloud.openapi.subscribeMessage.send(body);
	} catch (err) {
		cloudUtil.log('##sendOnceTempMsg[' + key + ']', err);
	}
}
module.exports = {
	sendMiniOnceTempMsg,

	fmtThing,
	fmtCharacterString,
	fmtPhrase
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\controller\base_admin_controller.js
--------------------------------------------------
/**
 * Notes: 后台管理控制器模块
 * Ver : CCMiniCloud Framework 2.0.3 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-26 19:20:00 
 */

const BaseController = require('./base_controller.js');
const BaseAdminService = require('../service/base_admin_service.js');
const LogModel = require('../model/log_model.js');

const timeUtil = require('../../../framework/utils/time_util.js');

class BaseAdminController extends BaseController {

	constructor(route, openId, event) {
		super(route, openId, event);

		// 当前时间戳
		this._timestamp = timeUtil.time();

		this._admin = null;
		this._adminId = '0';

	}

	/** 是否管理员  */
	async isAdmin() {
		// 判断是否管理员
		let service = new BaseAdminService();
		let admin = await service.isAdmin(this._token);
		this._admin = admin;
		this._adminId = admin._id;
	}

	/** 是否超级管理员  */
	async isSuperAdmin() {
		// 判断是否管理员
		let service = new BaseAdminService();
		let admin = await service.isSuperAdmin(this._token);
		this._admin = admin;
		this._adminId = admin._id;
	}

	/** 记录日志 */
	async log(content, type) {
		let service = new BaseAdminService();
		await service.insertLog(content, this._admin, type);
	}

	async logSys(content) {
		await this.log(content, LogModel.TYPE.SYS);
	}

	async logUser(content) {
		await this.log(content, LogModel.TYPE.USER);
	}

	async logOther(content) {
		await this.log(content, LogModel.TYPE.OTHER);
	}

	async logNews(content) {
		await this.log(content, LogModel.TYPE.NEWS);
	}

}

module.exports = BaseAdminController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\controller\base_controller.js
--------------------------------------------------
/**
 * Notes: 基础控制器
 * Ver : CCMiniCloud Framework 2.0.4 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const config = require('../../../config/config.js');
const timeUtil = require('../../utils/time_util.js');
const util = require('../../utils/util.js');
const dataCheck = require('../../validate/data_check.js');

const AppError = require('../../core/app_error.js');
const appCode = require('../../core/app_code.js');

class BaseController {

	constructor(route, openId, event) {

		this._route = route; // 路由
		this._openId = openId; //用户身份
		this._event = event; // 所有参数   
		this._request = event.params; //数据参数

		if (!openId) {
			console.error('OPENID is unfined');
			throw new AppError('OPENID is unfined', appCode.SVR);
		}

		let userId = openId;

		this._token = event.token || '';
		this._userId = userId;

		// 当前时间戳
		this._timestamp = timeUtil.time();
		let time = timeUtil.time('Y-M-D h:m:s');

		console.log('------------------------');
		console.log(`【${time}】【Request -- ↘↘↘】\n【↘Token = ${this._token}】\n【↘USER-ID = ${userId}】\n【↘↘IN DATA】=\n`, JSON.stringify(this._request, null, 4));

	}

	/**
	 * 数据校验
	 * @param {*} rules 
	 */
	validateData(rules = {}) {
		let input = this._request;
		return dataCheck.check(input, rules);
	}

	// 取得某个具体的参数值
	getParameter(name) {
		let input = this._request;
		if (util.isDefined(input[name]))
			return input[name];
		else
			return '';
	}
}

module.exports = BaseController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\model\admin_model.js
--------------------------------------------------
/**
 * Notes: 系统管理员实体 
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.5 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */


const BaseModel = require('./base_model.js');

class AdminModel extends BaseModel {

}

// 集合名
AdminModel.CL = BaseModel.C('admin');

AdminModel.DB_STRUCTURE = {
	_pid: 'string|true',
	ADMIN_ID: 'string|true',
	ADMIN_NAME: 'string|true', 
	ADMIN_DESC: 'string|true',
	ADMIN_PHONE: 'string|false|comment=手机',
	ADMIN_PASSWORD: 'string|true|comment=密码',
	ADMIN_STATUS: 'int|true|default=1|comment=状态：0=禁用 1=启用',

	ADMIN_LOGIN_CNT: 'int|true|default=0|comment=登录次数',
	ADMIN_LOGIN_TIME: 'int|true|default=0|comment=最后登录时间',
	ADMIN_TYPE: 'int|true|default=0|comment=类型 0=普通管理员 1=超级管理员',

	ADMIN_TOKEN: 'string|false|comment=当前登录token',
	ADMIN_TOKEN_TIME: 'int|true|default=0|comment=当前登录token time',

	ADMIN_ADD_TIME: 'int|true',
	ADMIN_EDIT_TIME: 'int|true',
	ADMIN_ADD_IP: 'string|false',
	ADMIN_EDIT_IP: 'string|false',
};

// 字段前缀
AdminModel.FIELD_PREFIX = "ADMIN_";






module.exports = AdminModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\model\base_model.js
--------------------------------------------------
/**
 * Notes: 实体基类 
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.6 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */


const MultiModel = require('../../../framework/database/multi_model.js');

class BaseModel extends MultiModel {

}

module.exports = BaseModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\model\log_model.js
--------------------------------------------------
/**
 * Notes: 后台操作日志实体
 * Ver : CCMiniCloud Framework 2.0.7 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-10-16 19:20:00 
 */


const BaseModel = require('./base_model.js');

class LogModel extends BaseModel {

}

// 集合名
LogModel.CL = BaseModel.C('log');

LogModel.DB_STRUCTURE = {
	_pid: 'string|true',
	LOG_ID: 'string|true',

	LOG_ADMIN_ID: 'string|true|comment=管理员',
	LOG_ADMIN_DESC: 'string|false',
	LOG_ADMIN_NAME: 'string|true',

	LOG_CONTENT: 'string|true',

	LOG_TYPE: 'int|true|comment=日志类型 ',

	LOG_ADD_TIME: 'int|true',
	LOG_EDIT_TIME: 'int|true',
	LOG_ADD_IP: 'string|false',
	LOG_EDIT_IP: 'string|false',
};

// 字段前缀
LogModel.FIELD_PREFIX = "LOG_";

LogModel.TYPE = {
	SYS: 0,
	USER: 1,
	NEWS: 2,
	OTHER: 99,

}
LogModel.TYPE_DESC = {
	SYS: '系统',
	USER: '用户',
	NEWS: '文章',
	OTHER: '其他',
}

module.exports = LogModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\service\base_admin_service.js
--------------------------------------------------
/**
 * Notes: 后台管理模块业务基类
 * Date: 2021-03-15 07:48:00 
 * Ver : CCMiniCloud Framework 2.0.8 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseService = require('./base_service.js');

const timeUtil = require('../../../framework/utils/time_util.js');
const appCode = require('../../../framework/core/app_code.js');

const config = require('../../../config/config.js');

const AdminModel = require('../model/admin_model.js');
const LogModel = require('../model/log_model.js'); 

class BaseAdminService extends BaseService {


	/** 是否管理员 */
	async isAdmin(token) {

		if (config.IS_DEMO) { // 演示版本
			let admin = {};
			admin.ADMIN_NAME = 'demo-admin';
			admin.ADMIN_DESC = '体验用户';
			admin.ADMIN_ID = '1';
			admin.ADMIN_PHONE = '13900000000';
			admin.ADMIN_LOGIN_CNT = 0;
			admin.ADMIN_LOGIN_TIME = '';
			admin.ADMIN_TYPE = 0;
			admin.ADMIN_STATUS = 1;
			return admin;
		}

		let where = {
			ADMIN_TOKEN: token,
			ADMIN_TOKEN_TIME: ['>', timeUtil.time() - config.ADMIN_LOGIN_EXPIRE * 1000], // token有效时间
			ADMIN_STATUS: 1,
		}
		let admin = await AdminModel.getOne(where, 'ADMIN_ID,ADMIN_PHONE,ADMIN_NAME,ADMIN_TYPE,ADMIN_DESC');
		if (!admin)
			this.AppError('管理员不存在', appCode.ADMIN_ERROR);

		return admin;
	}

	/** 是否超级管理员 */
	async isSuperAdmin(token) {

		let where = {
			ADMIN_TOKEN: token,
			ADMIN_TOKEN_TIME: ['>', timeUtil.time() - config.ADMIN_LOGIN_EXPIRE * 1000], // token有效时间
			ADMIN_STATUS: 1,
			ADMIN_TYPE: 1
		}
		let admin = await AdminModel.getOne(where, 'ADMIN_ID,ADMIN_PHONE,ADMIN_NAME,ADMIN_TYPE');
		if (!admin)
			this.AppError('超级管理员不存在', appCode.ADMIN_ERROR);

		return admin;
	}

	/** 写入日志 */
	async insertLog(content, admin, type) {
		if (!admin) return;

		let data = {
			LOG_CONTENT: content,
			LOG_ADMIN_ID: admin._id,
			LOG_ADMIN_NAME: admin.ADMIN_NAME,
			LOG_ADMIN_DESC: admin.ADMIN_DESC,
			LOG_TYPE: type
		}
		await LogModel.insert(data);
	} 

}

module.exports = BaseAdminService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\platform\service\base_service.js
--------------------------------------------------
/**
 * Notes: 基础业务逻辑
 * Ver : CCMiniCloud Framework 2.0.9 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-04-24 04:00:00 
 */

const AppError = require('../../core/app_error.js');
const appCode = require('../../core/app_code.js');
const timeUtil = require('../../utils/time_util.js');

class BaseService {
	constructor() {
		// 当前时间戳
		this._timestamp = timeUtil.time();

	}

	/**
	 * 抛出异常
	 * @param {*} msg 
	 * @param {*} code 
	 */
	AppError(msg, code = appCode.LOGIC) {
		throw new AppError(msg, code);
	}

	/** 时期范围处理 */
	fmtSearchDate(where, search, field) {
		if (!search || search.length != 21 || !search.includes('#')) return where;

		let arr = search.split('#');
		let start = arr[0];
		let end = arr[1];
		where[field] = ['between', start, end];
		return where;
	}

	/* 数据库字段排序处理 */
	fmtOrderBySort(sortVal, defaultSort) {
		let orderBy = {
			[defaultSort]: 'desc'
		};

		if (sortVal.includes('|')) {
			let field = sortVal.split('|')[0];
			let order = sortVal.split('|')[1];
			orderBy = {
				[field]: order,
			};
			if (defaultSort != field) orderBy[defaultSort] = 'desc';
		}
		return orderBy;
	}

}

module.exports = BaseService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\constant.js
--------------------------------------------------
 /**
 * Notes: 通用常量定义
 * Ver : CCMiniCloud Framework 2.32.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */
module.exports = {
 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\data_util.js
--------------------------------------------------
/**
 * Notes: 字符相关操作函数
* Ver : CCMiniCloud Framework 2.33.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const timeUtil = require('./time_util.js');

/**
 * 生成一个特定范围内的随机数
 */
const genRandomNum = (min, max) => (Math.random() * (max - min + 1) | 0) + min;

// 生成一个随机的数字字母字符串
const genRandomString = len => {
	const text = 'abcdefghijklmnopqrstuvwxyz0123456789';
	const rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text)));
	return rdmString;
}

// 生成一个随机的数字字符串
const genRandomIntString = len => {
	const text = '0123456789';
	const rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text)));
	return rdmString;
}

// 生成一个随机的字母字符串
const genRandomAlpha = len => {
	const text = 'abcdefghijklmnopqrstuvwxyz';
	const rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text)));
	return rdmString;
}

// 根据数据库自定义表单提取导出表格标题
function getTitleByForm(arr) {
	let formTitle = [];
	for (let k = 0; k < arr.length; k++) {
		if (arr.type == 'image' || arr.type == 'content' || arr[k].type == 'line' || arr[k].type == 'slot') continue;

		formTitle.push({
			column: arr[k].title,
			wch: 30
		});
	}
	return formTitle;
}


// 根据数据库自定义表单提取数据
function getValByForm(arr, mark, title) {
	for (let k = 0; k < arr.length; k++) {

		if (arr[k].mark == mark || arr[k].title == title) {
			if (arr[k].type == 'image') return '[图片]';
			if (arr[k].type == 'content') return '[图文内容]';

			if (arr[k].type == 'switch') {
				if (arr[k].val === true)
					return '是';
				else
					return '否';
			}

			return arr[k].val;
		}

	}

	return '';
}

// 数据库自定义表单forms值修正
function dbFormsFix(forms) {
	for (let k = 0; k < forms.length; k++) {
		if (forms[k].type == 'number' || forms[k].type == 'digit' || forms[k].type == 'int') {
			forms[k].val = Number(forms[k].val);
			if (isNaN(forms[k].val)) forms[k].val = null;
		}
	}
	return forms;
}

// 数据库自定义表单forms转为obj
function dbForms2Obj(forms, excludeContent = false) {
	forms = dbFormsFix(forms); //数据类型修正

	if (forms.length == 0) return { 'no': 'none' };

	let obj = {};
	for (let k = 0; k < forms.length; k++) {
		if (excludeContent && forms[k].type == 'content') continue;
		obj[forms[k].mark] = forms[k].val;
	}
	return obj;
}

// 构造当前ID 
function makeID() {
	let id = timeUtil.time('YMDhms') + ''; //秒

	//毫秒3位
	let miss = timeUtil.time() % 1000 + '';
	if (miss.length == 0)
		miss = '000';
	else if (miss.length == 1)
		miss = '00' + miss;
	else if (miss.length == 2)
		miss = '0' + miss;

	return id + miss;
}

// 拆分一维数组为二维数组
function spArr(arr, size) {
	if (!arr || !Array.isArray(arr) || arr.length == 0) return arr;

	let newArray = [];
	let index = 0;
	while (index < arr.length) {
		newArray.push(arr.slice(index, index += size));
	}
	return newArray;
}

/**
 * 把字符串格式化为数组
 * @param {*} str 
 * @param {*} sp 
 */
function str2Arr(str, sp = ',') {
	if (str && Array.isArray(str)) return str;

	str = str.replace(/，/g, sp);
	let arr = str.split(sp);
	for (let i = 0; i < arr.length; i++) {
		arr[i] = arr[i].trim();

		if (isNumber(arr[i])) {
			arr[i] = Number(arr[i]);
		}

	}
	return arr;
}

/**
 *  校验只要是数字（包含正负整数，0以及正负浮点数）就返回true 
 * @param {*} val 
 * @returns bool
 */
function isNumber(val) {
	var reg = /^[0-9]+.?[0-9]*$/;
	if (reg.test(val)) {
		return true;
	} else {
		return false;
	}
}

/**
 * 提取对象数组的某个属性数组,如[{'x':1},{'x':2}] 提取 x得到[1,2]
 * @param {*} arr 
 * @param {*} key 
 * @returns []
 */
function getArrByKey(arr, key) {
	if (!Array.isArray(arr)) return;
	return arr.map((item) => {
		return item[key]
	});
}

/**
 * 提取对象数组的多个属性数组, 
 * 如 [{'x':1,'y':11,'z':111},{'x':2,'y':22,'z':222}] 
 * 提取 ['x','y'] 得到[{'x':1,'y':11},{'x':2,'y':22}]
 * @param {*} arr 
 * @param {*} keys 
 * @returns []
 */
function getArrByKeyMulti(arr, keys = []) {
	if (!Array.isArray(arr)) return;
	if (!Array.isArray(keys)) return;

	let ret = [];
	for (let k = 0; k < arr.length; k++) {
		let node = {};
		for (let j in keys) {
			node[keys[j]] = arr[k][keys[j]];
		}
		ret.push(node);
	}

	return ret;
}

/**
 * 提取对象数组某个键值等于某值的对象数据
 * @param {*} arr 
 * @param {*} key  
 * @param {*} val 
 * @returns object {}
 */
function getDataByKey(arr, key, val) {
	if (!Array.isArray(arr)) return null;

	for (let k = 0; k < arr.length; k++) {
		if (arr[k][key] == val)
			return arr[k];
	}

	return null;
}

/**
 * 文本内容格式化处理
 * @param {*} content 
 * @param {*} len 截取长度 -1不截取
 */
function fmtText(content, len = -1) {
	if (!content) return content;
	let str = content.replace(/[\r\n]/g, ""); //去掉回车换行
	if (len > 0) {
		str = str.substr(0, len);
	}
	return str.trim();
}

// 下划线转换驼峰
function toHump(name) {
	name = name.replace(/\_(\w)/g, function (all, letter) {
		return letter.toUpperCase();
	});

	// 首字母大写 
	let firstChar = name.charAt(0).toUpperCase();
	return firstChar + name.slice(1);
}

// 驼峰转换下划线
function toLine(name) {
	name = name.replace(/([A-Z])/g, "_$1").toLowerCase();

	//如果首字符为下划线，干掉
	if (name.charAt(0) === '_')
		return name.slice(1);
	else
		return name;
}

// 金额格式化 dot为金额每隔三位用","或" "间隔
function fmtMoneyShow(s, dot = ',', prefix = '¥') {
	if (s === '' || s === null || s === undefined) s = 0;

	s = parseFloat((s + "").replace(/[^\d\.-]/g, "")).toFixed(2) + "";
	var l = s.split(".")[0].split("").reverse(),
		r = s.split(".")[1];
	t = "";
	for (i = 0; i < l.length; i++) {
		t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? dot : "");
	}
	return prefix + t.split("").reverse().join("") + "." + r;
}

// 金额格式化 不能超过16位
function fmtMoney(money) {
	money = Number(money);
	if (!money) money = 0;
	money = money.toFixed(2);
	money = Number(money);
	return money;
}

/**
 *简单数组转对象数组
 * @param {*} arr [1,2,3]
 * @param {*} key [x1,x2,x3]
 * @returns [{x1:1,x2:1,x3:1},{x1:2,x2:2,x3:2},{x1:3,x2:3,x3:3}]
 */
function arr2ObjectArr(arr, key1, key2, key3) {
	let ret = [];
	for (let k = 0; k < arr.length; k++) {
		let obj = {};
		if (key1) obj[key1] = arr[k];
		if (key2) obj[key2] = arr[k];
		if (key3) obj[key3] = arr[k];
		ret.push(obj);
	}
	return ret;
}

/**
 * property
 * @param {*} property 排序属性
 * @returns 排序好的数组 
 * 用法 arr.sort(compare('age'))
 */
function objArrSortAsc(property) {
	return function (a, b) {
		var value1 = a[property];
		var value2 = b[property];
		if (value1 < value2)
			return -1;
		else if (value1 > value2)
			return 1;
		else return 0;
	}
}

/**
 * property
 * @param {*} property 排序属性
 * @returns 排序好的数组 
 * 用法 arr.sort(compare('age'))
 */
function objArrSortDesc(property) {
	return function (a, b) {
		var value1 = a[property];
		var value2 = b[property];
		if (value1 < value2)
			return 1;
		else if (value1 > value2)
			return -1;
		else return 0;
	}
}

/**
 * 数组有则减少，无则增加
 * @param {*} arr 
 * @param {*} data 
 * @param {*} sort 排序方式 asc/desc
 */
function arrAddDel(arr, data, sort = 'asc') {
	if (!arr) return arr;
	if (!Array.isArray(arr)) return arr;

	let idx = arr.indexOf(data);
	if (idx > -1)
		arr.splice(idx, 1);
	else
		arr.push(data)

	if (sort == 'asc')
		return arr.sort();
	else
		return arr.reverse();
}  

//数据深度拷贝
function deepClone(data) {
	if (data === null || typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean' || typeof data === 'undefined') {
		return data;
	}

	return JSON.parse(JSON.stringify(data));
}

function padLeft(str, len, charStr) {
	if (!str)
		str = '';
	else
		str = str + '';
	return new Array(len - str.length + 1).join(charStr || '') + str;
}

function padRight(str, len, charStr) {
	if (!str)
		str = '';
	else
		str = str + '';
	return str + new Array(len - str.length + 1).join(charStr || '');
}


// 选项表单处理
function getSelectOptions(str) {
	if (!str)
		return [];
	else if (str.includes('=')) {
		let arr = str.split(',');
		for (let k = 0; k < arr.length; k++) {
			let node = arr[k].split('=');
			arr[k] = {};
			arr[k].label = node[1];
			arr[k].val = node[0];
		}
		return arr;
	} else {
		return str.split(',');
	}
}

// 数组元素交换位置 index1和index2分别是两个数组的索引值
function arraySwap(arr, index1, index2) {
	arr[index1] = arr.splice(index2, 1, arr[index1])[0];
	return arr;
}

// 数组置顶
function arrayTop(arr, idx) {
	let node = arr.splice(idx, 1)[0];
	arr.unshift(node);
	return arr;
}

// 数组置底
function arrayBottom(arr, idx) {
	let node = arr.splice(idx, 1)[0];
	arr.push(node);
	return arr;
}

/**
 * 把某个值/对象按key插到某个对象数组
 * @param {*} arr  目标数组
 * @param {*} key  键
 * @param {*} val  判断值
 * @param {*} obj  插入对象{}
 */
function insertObjArrByKey(arr, key, val, obj) {
	if (!arr) return arr;

	for (let k = 0; k < arr.length; k++) {
		if (arr[k][key] == val) {
			// 发现存在
			arr[k].list.push(obj);
			return arr;
		}
	}

	// 不存在
	let newObj = {
		[key]: val,
		list: [obj]
	}
	arr.push(newObj);
	return arr;
}

/**
 * 从对象数组中， 根据某个键值 获取满足的对象
 * @param {*} arr 
 * @param {*} key 
 * @param {*} val 
 */
function getValFromArr(arr, key = 'val', val = '') {
	if (!Array.isArray(arr)) return null;
	for (let k = 0; k < arr.length; k++) {
		if (arr[k][key] == val)
			return arr[k];
	}

	return null;
}

// 把字符串按关键字转为数组
function splitTextByKey(txt, key) {
	if (txt === null || txt === undefined) return [];
	if (key === null || key === undefined || key.trim() == '') return [String(txt)];

	key = String(key).trim();
	txt = String(txt);
	let arr = txt.split(key);
	let ret = [];
	for (let i = 0; i < arr.length; i++) {
		if (arr[i] !== '') ret.push(arr[i]);
		if (i != (arr.length - 1)) ret.push(key);
	}
	return ret;
}

// 检查某个对象数组里的是否包含某个对象 最多支持6个
function checkObjArrExist(arr, obj, fields = []) {
	let result = arr.some(item => {
		if (fields.length == 1 &&
			item[fields[0]] == obj[fields[0]]) {
			return true;
		} else if (fields.length == 2 &&
			item[fields[0]] == obj[fields[0]] &&
			item[fields[1]] == obj[fields[1]]) {
			return true;
		} else if (fields.length == 3 &&
			item[fields[0]] == obj[fields[0]] &&
			item[fields[1]] == obj[fields[1]] &&
			item[fields[2]] == obj[fields[2]]) {
			return true;
		} else if (fields.length == 4 &&
			item[fields[0]] == obj[fields[0]] &&
			item[fields[1]] == obj[fields[1]] &&
			item[fields[2]] == obj[fields[2]] &&
			item[fields[3]] == obj[fields[3]]) {
			return true;
		} else if (fields.length == 5 &&
			item[fields[0]] == obj[fields[0]] &&
			item[fields[1]] == obj[fields[1]] &&
			item[fields[2]] == obj[fields[2]] &&
			item[fields[3]] == obj[fields[3]] &&
			item[fields[4]] == obj[fields[4]]) {
			return true;
		} else if (fields.length == 6 &&
			item[fields[0]] == obj[fields[0]] &&
			item[fields[1]] == obj[fields[1]] &&
			item[fields[2]] == obj[fields[2]] &&
			item[fields[3]] == obj[fields[3]] &&
			item[fields[4]] == obj[fields[4]] &&
			item[fields[5]] == obj[fields[5]]) {
			return true;
		}
	});

	return result;
}

module.exports = {
	arrayTop,
	arraySwap,
	arrayBottom,

	getTitleByForm,
	getValByForm,
	dbForms2Obj,
	dbFormsFix,

	getValFromArr,
	getArrByKey,
	getArrByKeyMulti, //提取对象数组的多个属性数组
	spArr, //拆分一维数组为二维
	getDataByKey,
	str2Arr,
	arr2ObjectArr,
	insertObjArrByKey,
	arrAddDel,
	objArrSortAsc,
	objArrSortDesc,
	splitTextByKey,

	arrAddDel,
	isNumber,

	padLeft,
	padRight,

	makeID,

	genRandomString, // 随机字符串
	genRandomIntString,
	genRandomAlpha,
	genRandomNum, // 随机数字 
	fmtText, // 文本内容格式化处理
	fmtMoneyShow, //金额格式化
	fmtMoney,

	toHump,
	toLine,

	getSelectOptions, //选项表单处理

	checkObjArrExist,

	deepClone

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\export_util.js
--------------------------------------------------
/**
 * Notes: 导出相关函数
 * Ver : CCMiniCloud Framework 2.0.14 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-25 04:00:00 
 */

const cloudBase = require('../../framework/cloud/cloud_base.js');
const cloudUtil = require('../../framework/cloud/cloud_util.js');
const timeUtil = require('../../framework/utils/time_util.js');
const util = require('../../framework/utils/util.js');
const md5Lib = require('../../framework/lib/md5_lib.js');
const config = require('../../config/config.js');
const setupUtil = require('../utils/setup/setup_util.js');

// 获得当前导出链接
async function getExportDataURL(key) {

	let url = '';
	let time = '';
	let expData = await setupUtil.get(key);
	if (!expData)
		url = '';
	else {
		url = expData.EXPORT_CLOUD_ID;
		url = await cloudUtil.getTempFileURLOne(url) + '?rd=' + timeUtil.time();
		time = timeUtil.timestamp2Time(expData.EXPORT_ADD_TIME);
	}

	return {
		url,
		time
	}
}

// 删除数据文件
async function deleteDataExcel(key) {
	console.log('[deleteExcel]  BEGIN... , key=' + key)

	// 取出数据  
	let expData = await setupUtil.get(key);
	if (!expData) return;

	// 文件路径
	let xlsPath = expData.EXPORT_CLOUD_ID;

	console.log('[deleteExcel]  path = ' + xlsPath);

	const cloud = cloudBase.getCloud();
	await cloud.deleteFile({
		fileList: [xlsPath],
	}).then(async res => {
		console.log(res.fileList);
		if (res.fileList && res.fileList[0] && res.fileList[0].status == -503003) {
			console.log('[deleteUserExcel]  ERROR = ', res.fileList[0].status + ' >> ' + res.fileList[0].errMsg);
			//this.AppError('文件不存在或者已经删除');
		}

		// 删除导出数据记录
		await setupUtil.remove(key);

		console.log('[deleteExcel]  OVER.');

	}).catch(error => {
		if (error.name != 'AppError') {
			console.log('[deleteExcel]  ERROR = ', error);
			this.AppError('操作失败，请重新删除');
		} else
			throw error;
	});


}

// 导出数据  
async function exportDataExcel(key, title, total, data, options = {}) {
	// 删除导出表

	await setupUtil.remove(key);

	let fileName = key + '_' + md5Lib.md5(key + config.CLOUD_ID);
	let xlsPath = util.getProjectId() + '/' + 'export/' + fileName + '.xlsx';

	// 操作excel用的类库
	const xlsx = require('node-xlsx');

	// 把数据保存到excel里
	let buffer = await xlsx.build([{
		name: title + timeUtil.time('Y-M-D'),
		data,
		options
	}]);

	// 把excel文件保存到云存储里
	console.log('[ExportData]  Save to ' + xlsPath);
	const cloud = cloudBase.getCloud();
	let upload = await cloud.uploadFile({
		cloudPath: xlsPath,
		fileContent: buffer, //excel二进制文件
	});
	if (!upload || !upload.fileID) return;

	// 入导出表 
	let dataExport = {
		EXPORT_ADD_TIME: timeUtil.time(),
		EXPORT_KEY: key,
		EXPORT_CLOUD_ID: upload.fileID
	}
	//console.log(dataExport)
	await setupUtil.set(key, dataExport, 'export');

	console.log('[ExportData]  OVER.')

	let url = await cloudUtil.getTempFileURLOne(upload.fileID) + '?rd=' + timeUtil.time();
	return {
		total,
		url
	}
}

module.exports = {
	getExportDataURL,
	deleteDataExcel,
	exportDataExcel
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\log_util.js
--------------------------------------------------
 /**
  * Notes: 日志操作函数
  * Ver : CCMiniCloud Framework 2.34.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
  * Date: 2021-06-12 04:00:00 
  */
 const timeUtil = require('./time_util.js');

 class LogUtil {

 	constructor(level = 'info') {
 		this.logOut = ''; // 输出日志内容

 		level = level.toLowerCase();
 		if (level == 'err') level = 'error';

 		switch (level) {
 			case 'debug':
 				level = LogUtil.LEVEL.DEBUG;
 				break;
 			case 'info':
 				level = LogUtil.LEVEL.INFO;
 				break;
 			case 'warn':
 				level = LogUtil.LEVEL.WARN;
 				break;
 			case 'error':
 				level = LogUtil.LEVEL.ERROR;
 				break;
 			case 'fatal':
 				level = LogUtil.LEVEL.FATAL;
 				break;
 			case 'none':
 				level = LogUtil.LEVEL.NONE;
 				break;
 			default:
 				level = LogUtil.LEVEL.INFO;
 		}
 		this.level = level;
 	}

 	debug(str, ex = '') {
 		if (this.level > LogUtil.LEVEL.DEBUG) return;

 		console.debug('[' + this._getTime() + '] DEBUG: ' + str, ex);
 		this.logOut += "######" + '[' + this._getTime() + '] DEBUG: ' + str + (ex ? JSON.stringify(ex) : '');
 	}

 	info(str, ex = '') {
 		if (this.level > LogUtil.LEVEL.INFO) return;

 		console.log('[' + this._getTime() + '] INFO: ' + str, ex);

 		this.logOut += "######" + '[' + this._getTime() + '] INFO: ' + str + (ex ? JSON.stringify(ex) : '');
 	}

 	warn(str, ex = '') {
 		if (this.level > LogUtil.LEVEL.WARN) return;

 		console.warn('[' + this._getTime() + '] WARN: ' + str, ex);
 		this.logOut += "######" + '[' + this._getTime() + '] WARN: ' + str + (ex ? JSON.stringify(ex) : '');
 	}

 	error(str, ex = '') {
 		if (this.level > LogUtil.LEVEL.ERROR) return;

 		console.error('[' + this._getTime() + '] ERROR: ' + str, ex);
 		this.logOut += "######" + '[' + this._getTime() + '] ERROR: ' + str + (ex ? JSON.stringify(ex) : '');
 	}

 	fatal(str, ex = '') {
 		if (this.level > LogUtil.LEVEL.FATAL) return;
 		console.error('[' + this._getTime() + '] FATAL: ' + str, ex);
 		this.logOut += "######" + '[' + this._getTime() + '] FATAL: ' + str + (ex ? JSON.stringify(ex) : '');
 	}


 	_getTime() {
 		return timeUtil.time('Y-M-D h:m:s');
 	}

 	err(str) {
 		error(str);
 	}

 	getLogOut() {
 		return this.logOut;
 	}

 }

 LogUtil.LEVEL = {
 	DEBUG: 10,
 	INFO: 20,
 	WARN: 30,
 	ERROR: 40,
 	FATAL: 50,
 	NONE: 100,
 };

 module.exports = LogUtil;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\math_util.js
--------------------------------------------------
 /**
  * Notes: 数学计算相关操作函数
  * Ver : CCMiniCloud Framework 2.35.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
  * Date: 2021-10-04 04:00:00 
  */


 /** 获取百分比, 保留2位小数 */
 function percent(num1, num2) {
 	return Math.round(num1 / num2 * 10000) / 100.00;
 }

 /** 数组对象排序 */
 function arrayObjecSortAsc(property) {
 	return function (a, b) {
 		var value1 = a[property];
 		var value2 = b[property];
 		return value1 - value2;
 	}
 }

 /** 数组对象排序 */
 function arrayObjecSortDesc(property) {
 	return function (a, b) {
 		var value1 = a[property];
 		var value2 = b[property];
 		return value2 - value1;
 	}
 }

 module.exports = {
 	percent, // 百分比，保留2位小数 
 	arrayObjecSortAsc, // 数组对象排序
 	arrayObjecSortDesc, // 数组对象排序
 }
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\time_util.js
--------------------------------------------------
/**
 * Notes: 时间相关函数
 * Ver : CCMiniCloud Framework 2.36.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const util = require('./util.js');

/** 日期简化，去掉多余的前缀0 */
function simpleDate(date) {
	let arr = date.split('-');
	if (arr.length < 3) return date;
	let month = arr[1];
	if (month.indexOf('0') == 0)
		month = month.replace('0', '');

	let day = arr[2];
	if (day.indexOf('0') == 0)
		day = day.replace('0', '');

	return arr[0] + '-' + month + '-' + day;
}

/** 时间格式化为年月日点分 */
function fmtDateCHN(date, fmt = 'Y-M-D') {
	if (!date) return '';
	if (fmt == 'hh:mm' && date.includes(':')) {
		if (date.includes(' ')) date = date.split(' ')[1];
		let arr = date.split(':');
		return Number(arr[0]) + '点' + arr[1] + '分';
	} else if (fmt == 'Y-M-D hh:mm') {
		let arr = date.split(' ');
		if (arr.length != 2) return date;
		return fmtDateCHN(arr[0], 'Y-M-D') + fmtDateCHN(arr[1], 'hh:mm');
	} else if (fmt == 'M-D hh:mm') {
		let arr = date.split(' ');
		if (arr.length != 2) return date;
		return fmtDateCHN(arr[0], 'M-D') + ' ' + fmtDateCHN(arr[1], 'hh:mm');
	} else {
		if (date.includes(' ')) date = date.split(' ')[0];

		let arr = date.split('-');
		if (fmt == 'Y-M') //年月
			return arr[0] + '年' + Number(arr[1]) + '月';
		else if (fmt == 'M-D') //月日
			return arr[1] + '月' + Number(arr[2]) + '日';
		else if (fmt == 'Y') //年
			return arr[0] + '年';
		else
			return arr[0] + '年' +Number(arr[1]) + '月' + Number(arr[2]) + '日';
	}


}

/**
 * 毫秒时间戳转时间格式
 * @param {*} unixtime  毫秒
 * @param {*} format  Y-M-D h:m:s
 * @param {*} diff  时区差异 毫秒
 */
function timestamp2Time(unixtime, format = 'Y-M-D h:m:s', diff = 0) {
	unixtime = Number(unixtime);
	let formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
	let returnArr = [];
	let date = new Date(unixtime + diff);
	returnArr.push(date.getFullYear());
	returnArr.push(formatNumber(date.getMonth() + 1));
	returnArr.push(formatNumber(date.getDate()));
	returnArr.push(formatNumber(date.getHours()));
	returnArr.push(formatNumber(date.getMinutes()));
	returnArr.push(formatNumber(date.getSeconds()));
	for (let i in returnArr) {
		format = format.replace(formateArr[i], returnArr[i]);
	}
	return format;
}


function timestame2Ago(dateTimeStamp, fmt = 'Y-M-D', diff = 0) { //dateTimeStamp是一个时间毫秒，注意时间戳是秒的形式，在这个毫秒的基础上除以1000，就是十位数的时间戳。13位数的都是时间毫秒。
	let minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示
	let hour = minute * 60;
	let day = hour * 24;
	let week = day * 7;
	let month = day * 30;
	let now = new Date().getTime(); //获取当前时间毫秒

	let diffValue = now - dateTimeStamp; //时间差

	if (diffValue < 0) {
		return;
	}
	let minC = diffValue / minute; //计算时间差的分，时，天，周，月
	let hourC = diffValue / hour;
	let dayC = diffValue / day;

	let result = '';

	let weekC = diffValue / week;
	let monthC = diffValue / month;
	if (monthC >= 1 && monthC <= 3) {
		result = ' ' + parseInt(monthC) + '月前'
	} else if (weekC >= 1 && weekC <= 3) {
		result = ' ' + parseInt(weekC) + '周前'
	} else if (dayC >= 1 && dayC <= 6) {
		result = ' ' + parseInt(dayC) + '天前'
	} else if (hourC >= 1 && hourC <= 23) {
		result = ' ' + parseInt(hourC) + '小时前'
	} else if (minC >= 1 && minC <= 59) {
		result = ' ' + parseInt(minC) + '分钟前'
	} else if (diffValue >= 0 && diffValue <= minute) {
		result = '刚刚'
	} else {
		result = timestamp2Time(dateTimeStamp, fmt, diff);

	}
	return result;
}

function formatNumber(n) {
	n = n.toString()
	return n[1] ? n : '0' + n
}


/**
 * 时间转时间戳 
 * @param {*} date  支持 Y-M-D h:m:s / Y-M-D  
 */
function time2Timestamp(date) {
	if (date.length < 10) {
		let arr = date.split('-');
		if (arr[1].length == 1) arr[1] = '0' + arr[1];
		if (arr[2].length == 1) arr[2] = '0' + arr[2];
		date = arr[0] + '-' + arr[1] + '-' + arr[2];
	}
	if (date.length == 10) date = date + ' 00:00:00';
	let d = new Date(date.replace(/-/g, '/'));
	return d.getTime();
}

/**
 *  获取当前时间戳/时间Y-M-D h:m:s
 * @param {*} 时间格式 Y-M-D h:m:s
 * @param {int} 时间步长 (秒)
 */
function time(fmt, step = 0) {
	let t = 0;
	if (util.isDefined(fmt)) {
		let t = new Date().getTime() + step * 1000;
		return timestamp2Time(t, fmt);
	}
	return new Date().getTime() + t * 1000;
}

// 获取某天0点
function getDayFirstTimestamp(timestamp) {
	if (!timestamp) timestamp = time();
	return time2Timestamp(timestamp2Time(timestamp, 'Y-M-D'));
}

/**
 * 根据出生日期计算年龄周岁 传参格式为1996-06-08
 * @param {*} birth 
 */
function getAge(birth, isMonth = false) {
	var returnAge = '';
	var mouthAge = '';
	var arr = birth.split('-');
	var birthYear = arr[0];
	var birthMonth = arr[1];
	var birthDay = arr[2];
	var d = new Date();
	var nowYear = d.getFullYear();
	var nowMonth = d.getMonth() + 1;
	var nowDay = d.getDate();
	if (nowYear == birthYear) {
		// returnAge = 0; //同年 则为0岁
		var monthDiff = nowMonth - birthMonth; //月之差 
		if (monthDiff < 0) {} else {
			mouthAge = monthDiff + '个月';
		}
	} else {
		var ageDiff = nowYear - birthYear; //年之差
		if (ageDiff > 0) {
			if (nowMonth == birthMonth) {
				var dayDiff = nowDay - birthDay; //日之差 
				if (dayDiff < 0) {
					returnAge = ageDiff - 1 + '岁';
				} else {
					returnAge = ageDiff + '岁';
				}
			} else {
				var monthDiff = nowMonth - birthMonth; //月之差 
				if (monthDiff < 0) {
					returnAge = ageDiff - 1 + '岁';
				} else {
					mouthAge = monthDiff + '个月';
					returnAge = ageDiff + '岁';
				}
			}
		} else {
			returnAge = -1; //返回-1 表示出生日期输入错误 晚于今天
		}
	}
	if (isMonth)
		return returnAge + mouthAge; //返回周岁年龄+月份
	else
		return returnAge;
}

/**
 * 日期计算周几
 * @param {*} day  日期为输入日期，格式为 2013-03-10
 */
function week(day) { 
	if (!day || !day.includes('-')) return '';
	let arys1 = new Array();
	arys1 = day.split('-');
	let ssdate = new Date(arys1[0], parseInt(arys1[1] - 1), arys1[2]);
	let week1 = String(ssdate.getDay()).replace("0", "日").replace("1", "一").replace("2", "二").replace("3", "三").replace("4", "四").replace("5", "五").replace("6", "六") //就是你要的星期几
	return "周" + week1; //就是你要的星期几 
}

/** 获取某天所在某月第一天时间戳 */
function getMonthFirstTimestamp(timestamp) {
	let inDate = new Date(timestamp);
	let year = inDate.getFullYear();
	let month = inDate.getMonth();
	return new Date(year, month, 1).getTime();
}

/** 获取某天所在某月最后一天时间戳 */
function getMonthLastTimestamp(timestamp) {
	let inDate = new Date(timestamp);
	let year = inDate.getFullYear();
	let month = inDate.getMonth();
	return new Date(year, month + 1, 1).getTime() - 1;
}

// 取得分钟时间戳
function getNowMinTimestamp() {
	let min = time('Y-M-D h:m') + ':00';
	let timestamp = time2Timestamp(min);
	return {
		min,
		timestamp
	}
}


// 获取当前日期所在周一 输入和返回格式=yyyy-mm-dd
function getFirstOfWeek(date) {
	let now = new Date(date);
	let nowTime = now.getTime();
	let day = now.getDay();
	if (day == 0) day = 7;
	let oneDayTime = 24 * 60 * 60 * 1000;
	let mondayTime = nowTime - (day - 1) * oneDayTime;
	return timestamp2Time(mondayTime, 'Y-M-D');
}

// 获取当前日期所在周一 输入和返回格式=yyyy-mm-dd
function getLastOfWeek(date) {
	let now = new Date(date);
	let nowTime = now.getTime();
	let day = now.getDay();
	if (day == 0) day = 7;
	let oneDayTime = 24 * 60 * 60 * 1000;
	let sundayTime = nowTime + (7 - day) * oneDayTime;
	return timestamp2Time(sundayTime, 'Y-M-D');
}

// 获取当前日期所在月第一天 输入和返回格式=yyyy-mm-dd
function getFirstOfMonth(date) {
	let arr = date.split('-');
	return arr[0] + '-' + arr[1] + '-01';
}

// 获取当前日期所在月最后一天 输入和返回格式=yyyy-mm-dd
function getLastOfMonth(date) {
	let now = new Date(date);
	let y = now.getFullYear();
	let m = now.getMonth();
	let lastDay = new Date(y, m + 1, 0).getTime();
	return timestamp2Time(lastDay, 'Y-M-D');
}

/**
 * 取倒计时（天时分秒） 支持时间戳或者Y-M-D/Y-M-D h:m:s
 * @param {*} datetimeTo 
 * @param {*} flag 1=正 -1=负
 */
function getTimeLeft(datetimeTo, flag = 1) {
	let time1 = datetimeTo;

	if (String(datetimeTo).includes('-')) {
		datetimeTo = String(datetimeTo);
		if (!datetimeTo.includes(':'))
			datetimeTo += ' 00:00:00';
		time1 = new Date(datetimeTo).getTime();
	}

	let time2 = new Date().getTime();
	let mss = time1 - time2;

	// 将时间差（毫秒）格式为：天时分秒
	let days = parseInt(mss / (1000 * 60 * 60 * 24));
	let hours = parseInt((mss % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
	let minutes = parseInt((mss % (1000 * 60 * 60)) / (1000 * 60));
	let seconds = parseInt((mss % (1000 * 60)) / 1000);

	if (mss < 0 && mss < -86400 * 1000) {
		(days != 0) ? days = -flag * days + "天": days = '';
		return days + "前";
	} else if (mss < 0) {
		return "今天";
	} else {
		(days != 0) ? days = flag * days + "天": days = '';
		(hours != 0) ? hours = flag * hours + "时": hours = '';
		(minutes != 0) ? minutes = flag * minutes + "分": minutes = '';
		return days + hours + minutes + flag * seconds + "秒"
	}

}


module.exports = {
	fmtDateCHN,
	simpleDate,

	getTimeLeft,

	getNowMinTimestamp,

	getMonthFirstTimestamp,
	getMonthLastTimestamp,

	getDayFirstTimestamp,

	timestamp2Time,
	timestame2Ago,
	time2Timestamp,
	time,
	getAge,
	week, //星期

	getFirstOfWeek,
	getLastOfWeek,
	getFirstOfMonth,
	getLastOfMonth
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\util.js
--------------------------------------------------
/**
 * Notes: 通用工具函数
 * Ver : CCMiniCloud Framework 2.38.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

function getProjectId() {
	if (global.PID)
		return global.PID;
	else
		return 'ONE';
}

/**
 * 判断变量，参数，对象属性是否定义
 * @param {*} val 
 */
function isDefined(val) {
	// ==  不能判断是否为null
	if (val === undefined)
		return false;
	else
		return true;
}

/**
 * 判断对象是否为空
 * @param {*} obj 
 */
function isObjectNull(obj) {
	return (Object.keys(obj).length == 0);
}



/**
 * 休眠时间，配合await使用 
 * @param {*} time 毫秒
 */
function sleep(time) {
	return new Promise((resolve) => setTimeout(resolve, time));
};




module.exports = {
	getProjectId,
	isDefined, //判断变量，参数，对象属性是否定义  
	sleep,
	isObjectNull,

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\setup\setup_model.js
--------------------------------------------------
/**
 * Notes: 系统设置实体
 * Ver : CCMiniCloud Framework 2.0.15 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-05 19:20:00 
 */


const MultiModel = require('../../database/multi_model.js');

class SetupModel extends MultiModel {

}

// 集合名
SetupModel.CL = MultiModel.C('setup');

SetupModel.DB_STRUCTURE = {
	_pid: 'string|true',
	SETUP_ID: 'string|true',

	SETUP_TYPE: 'string|false', //content/cache/vouch
	SETUP_KEY: 'string|true',
	SETUP_VALUE: 'object|true', // {val:}
 
	SETUP_ADD_TIME: 'int|true',
	SETUP_EDIT_TIME: 'int|true',
	SETUP_ADD_IP: 'string|false',
	SETUP_EDIT_IP: 'string|false',
};

// 字段前缀
SetupModel.FIELD_PREFIX = "SETUP_"; 


module.exports = SetupModel;

/* 
### 富文本
[{"type":"text","val":"xxx"},{"type":"img","val":"cloudId://xxxx"}]

### 导出
{"EXPORT_CLOUD_ID":"","EXPORT_EDIT_TIME":""}
*/
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\utils\setup\setup_util.js
--------------------------------------------------
/**
 * Notes: 系统设置相关函数
 * Ver : CCMiniCloud Framework 2.31.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-25 04:00:00 
 */

const SetupModel = require('./setup_model.js');

/**
 * 设置
 * key 键key
 * val 值value
 * t 秒
 */
async function set(key, val, type = '') {
	if (!key) return null;

	let where = {
		SETUP_KEY: key
	}

	let data = {
		SETUP_TYPE: type,
		SETUP_VALUE: {
			val
		}, 
	}
	 
	await SetupModel.insertOrUpdate(where, data);

}

/**
 * 获取
 * k 键key
 * def 默认值
 */
async function get(key) {

	if (!key) return null;

	let where = {
		SETUP_KEY: key
	}

	let setup = await SetupModel.getOne(where, 'SETUP_VALUE');
	if (!setup) return null;


	let res = setup.SETUP_VALUE.val;

	if (res === undefined) {
		return null;
	} else {
		return res;
	}
}

async function get(key) {

	if (!key) return null;

	let where = {
		SETUP_KEY: key
	}

	let setup = await SetupModel.getOne(where, 'SETUP_VALUE');
	if (!setup) return null;


	let res = setup.SETUP_VALUE.val;

	if (res === undefined) {
		return null;
	} else {
		return res;
	}
}

async function remove(key, fuzzy = false) {
	if (!key) return;

	let where = {
		SETUP_KEY: key
	}

	if (fuzzy) {
		where.SETUP_KEY = {
			$regex: '.*' + key,
			$options: 'i'
		};
	}

	await SetupModel.del(where);
}

module.exports = {
	set,
	get,
	remove
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\validate\content_check.js
--------------------------------------------------
/**
 * Notes: 内容审核
 * Ver : CCMiniCloud Framework 2.39.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const AppError = require('../core/app_error.js');
const cloudBase = require('../cloud/cloud_base.js');
const config = require('../../config/config.js');

/**
 * 前台校验
 * @param {*} imgData 
 * @param {*} mine 
 */
async function checkImgClient(imgData, mine) {
	if (!config.CLIENT_CHECK_CONTENT) return;
	return await checkImg(imgData, mine);
}

/**
 * 后台校验
 * @param {*} imgData 
 * @param {*} mine 
 */
async function checkImgAdmin(imgData, mine) {
	if (!config.ADMIN_CHECK_CONTENT) return;
	return await checkImg(imgData, mine);
}
/**
 * 校验图片信息
 * @param {*} 图片流buffer 
 */
async function checkImg(imgData, mine) {


	let cloud = cloudBase.getCloud();
	try {
		const result = await cloud.openapi.security.imgSecCheck({
			media: {
				contentType: 'image/' + mine,
				value: Buffer.from(imgData, 'base64') // 这里必须要将小程序端传过来的进行Buffer转化,否则就会报错,接口异常
			}

		})
		console.log('imgcheck', result);
		if (!result || result.errCode !== 0) {
			throw new AppError('图片内容不合适，请修改');
		}

	} catch (err) {
		console.log('imgcheck ex', err);
		throw new AppError('图片内容不合适，请修改');
	}

}

/**
 * 后台把输入数据里的文本数据提交内容审核
 * @param {*} input 
 */
async function checkTextMultiAdmin(input) {
	if (!config.ADMIN_CHECK_CONTENT) return;
	return checkTextMulti(input);
}

/**
 * 前台把输入数据里的文本数据提交内容审核
 * @param {*} input 
 */
async function checkTextMultiClient(input) {
	if (!config.CLIENT_CHECK_CONTENT) return;
	return checkTextMulti(input);
}

/**
 * 把输入数据里的文本数据提交内容审核
 * @param {*} input 
 */
async function checkTextMulti(input) {

	let txt = '';
	for (let key in input) {
		if (typeof (input[key]) === 'string')
			txt += input[key];
		else if (typeof (input[key]) === 'object') //包括数组和对象
			txt += JSON.stringify(input[key]);
	}

	await checkText(txt);
}
/**
 * 后台校验文字信息
 * @param {*}  
 */
async function checkTextAdmin(txt) {
	if (!config.ADMIN_CHECK_CONTENT) return;
	return checkText(txt);
}

/**
 * 前台校验文字信息
 * @param {*}  
 */
async function checkTextClient(txt) {
	if (!config.CLIENT_CHECK_CONTENT) return;
	return checkText(txt);
}

/**
 * 校验文字信息
 * @param {*}  
 */
async function checkText(txt) { 
	if (!txt) return; 
	let cloud = cloudBase.getCloud();
	try { 
		const result = await cloud.openapi.security.msgSecCheck({
			content: txt

		})
		if (!result || result.errCode !== 0) {
			throw new AppError('文字内容不合适，请修改或者重试');
		}

	} catch (err) {
		console.log('checkText ex', err);
		throw new AppError('文字内容不合适，请修改或者重试');
	}

}

module.exports = {
	checkImg,
	checkImgClient,
	checkImgAdmin,
	checkTextMulti,
	checkTextMultiClient,
	checkTextMultiAdmin,
	checkText,
	checkTextClient,
	checkTextAdmin
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\framework\validate\data_check.js
--------------------------------------------------
/**
  * Notes: 数据校验类库
 * Ver : CCMiniCloud Framework 2.21.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
  * Date: 2021-01-07 07:48:00 
  *  
 */
const AppError = require('../core/app_error.js');
const appCode = require('../core/app_code.js');

const CHECK_OPEN = true;
const CHECK_SOURCE = 'admin'; //client/admin

/**
 * 判断变量，参数，对象属性是否定义
 * @param {*} val 
 */
function isDefined(val) {
	// ==  不能判断是否为null
	if (val === undefined)
		return false;
	else
		return true;
}

function isNull(value) {
	if (value === null || value === undefined) return true;
	if (getDataType(value) == String && value === '') return true;
	return false;
}

function isStrAndArrNull(value) {
	if (value === null || value === undefined) return true;

	let type = getDataType(value);
	if (type == String && value === '') return true;
	if (type == Array && value.length == 0) return true;

	return false;
}

function isRealNull(value) {
	if (value === null || value === undefined) return true;

	let type = getDataType(value);
	if (type == String && value === '') return true;
	if (type == Array && value.length == 0) return true;
	if (type == Object && JSON.stringify(value) == '{}') return true;

	return false;
}

function getDataType(value) {
	if (value === null || value === undefined) return value;
	let ret = value.constructor;

	let str = ret.toString();

	if (str.indexOf('function Object') == 0) ret = Object;
	if (str.indexOf('function Array') == 0) ret = Array;
	if (str.indexOf('function String') == 0) ret = String;

	return ret;
}

// 是否必填
function checkRequired(value, desc = '') {
	switch (getDataType(value)) {
		case Object:
			if (JSON.stringify(value) == '{}')
				return desc + '不能为空obj';
			break;
		case Array:
			if (value.length == 0)
				return desc + '不能为空arr';
			break;
		case String:
			if (value.length == 0)
				return desc + '不能为空';
			break;
		case null:
		case undefined:
			return desc + '不能为空';
	}
}

// 校验字符/数组长度，校验数字大小
function checkMin(value, min, desc = '') {
	if (isStrAndArrNull(value)) return;

	min = Number(min);
	switch (getDataType(value)) {
		case Array:
			if (value.length < min)
				return desc + '不能少于' + min + '项';
			break;
		case String:
			if (value.length < min)
				return desc + '不能少于' + min + '位';
			break;
		case Number:
			if (value < min)
				return desc + '不能小于' + min;
			break;
	}
};

// 校验字符/数组长度，校验数字大小
function checkMax(value, max, desc = '') {
	if (isStrAndArrNull(value)) return;

	max = Number(max);
	switch (getDataType(value)) {
		case Array:
			if (value.length > max)
				return desc + '不能多于' + max + '项';
			break;
		case String:
			if (value.length > max)
				return desc + '不能多于' + max + '位';
			break;
		case Number:
			if (value > max)
				return desc + '不能大于' + max;
			break;
	}
};

// 校验字符/数组长度 
function checkLen(value, len, desc = '') {
	if (isStrAndArrNull(value)) return;

	len = Number(len);
	switch (getDataType(value)) {
		case Array:
			if (value.length != len)
				return desc + '必须为' + len + '项';
			break;
		case String:
			if (value.length != len)
				return desc + '必须为' + len + '位';
			break;
	}
};

function checkMobile(value, desc = '') {
	if (isNull(value)) return;

	if (!/(^1[1|2|3|4|5|6|7|8|9][0-9]{9}$)/.test(value))
		return desc + '格式不正确';
}

function checkInt(value, desc = '') {
	if (isNull(value)) return;

	if (!/^[0-9]+$/.test(value))
		return desc + '必须为数字';
}

function checkDigit(value, desc = '') {
	if (isNull(value)) return;

	if (!/^\d+(\.\d+)?$/.test(value))
		return desc + '必须为数字或小数';
}

function checkLetter(value, desc = '') {
	if (isNull(value)) return;

	if (!/^[A-Za-z]+$/.test(value))
		return desc + '必须为字母';
}

function checkMoney(value, desc = '') {
	if (isNull(value)) return;

	if (!/(^[1-9]([0-9]+)?(\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\.[0-9]([0-9])?$)/.test(value))
		return desc + '必须为金额格式，例如2.00';
}


function checkLetterNum(value, desc = '') {
	if (isNull(value)) return;

	if (!/^\w+$/.test(value))
		return desc + '必须为字母，数字和下划线';
}

function checkId(value, desc = '', min = 1, max = 200) {
	if (isNull(value)) return;

	min = Number(min);
	max = Number(max);

	if (getDataType(value) != String) return desc + '必须为ID字符串格式';

	if (value.length < min || value.length > max) return desc + '必须为ID格式';
	/*if (!/^\w+$/.test(value))
		return desc + '必须为ID格式';*/
}

//  邮箱
function checkEmail(value, desc = '') {
	if (isNull(value)) return;

	let reg = /^[A-Za-z0-9+]+[A-Za-z0-9\.\_\-+]*@([A-Za-z0-9\-]+\.)+[A-Za-z0-9]+$/;
	if (!reg.test(value)) return desc + '必须为邮箱格式';
}

// 短日期，形如 (yyyy-mm-dd 2008-07-22)
function checkDate(value, desc = '') {
	if (isNull(value)) return;

	let hint = '请选择' + desc;
	if (value.length != 10) return hint;
	let r = value.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/);
	if (r == null) return hint;
	let d = new Date(r[1], r[3] - 1, r[4]);
	let chk = d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3] && d.getDate() == r[4];
	if (!chk) return hint;
}

// 年份，形如 (yyyy 2008)
function checkYear(value, desc = '') {
	if (isNull(value)) return;

	let hint = '请选择' + desc;
	if (value.length != 4) return hint;
	value += '-01-01';
	return checkDate(value, desc);
}

// 年月，形如 (yyyy-mm 2008-01)
function checkYearMonth(value, desc = '') {
	if (isNull(value)) return;

	let hint = '请选择' + desc;
	if (value.length != 7) return hint;

	value += '-01';
	return checkDate(value, desc);
}

// 短时间(时分秒)，形如 (13:04:06)
function checkTime(value, desc = '') {
	if (isNull(value)) return;

	let hint = desc + '必须为时间格式';
	if (value.length != 8) return hint;

	let a = value.match(/^(\d{1,2})(:)?(\d{1,2})\2(\d{1,2})$/);
	if (a == null) return hint;
	if (a[1] > 23 || a[3] > 59 || a[4] > 59) return hint;
}

// 短时间(时分)，形如 (hh:mm 13:04)
function checkHourMinute(value, desc = '') {
	if (isNull(value)) return;

	let hint = desc + '必须为时分时间格式';
	if (value.length != 5) return hint;

	value += ':01';
	return checkTime(value, desc);
}

// 长时间，形如 (2008-07-22 13:04:06)
function checkDatimeTime(value, desc = '') {
	if (isNull(value)) return;

	let hint = desc + '必须为完整时间格式';
	if (value.length != 19) return hint;

	var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/;
	var r = value.match(reg);
	if (r == null) return hint;
	var d = new Date(r[1], r[3] - 1, r[4], r[5], r[6], r[7]);
	let chk = d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3] && d.getDate() == r[4] && d.getHours() == r[5] && d.getMinutes() == r[6] && d.getSeconds() == r[7];
	if (!chk) return hint;
}

function checkArray(value, desc = '') {
	if (!Array.isArray(value))
		return desc + '填写错误arr';
}

function checkObject(value, desc = '') {
	if (value.constructor != Object)
		return desc + '填写错误obj';
}

function checkBoolean(value, desc = '') {
	if (value.constructor != Boolean)
		return desc + '填写错误bool';
}

// 枚举 ref=1,2,3,4格式
function checkIn(value, ref, desc = '') {
	if (isNull(value)) return;

	let type = getDataType(value);
	if (type != String && type != Number) return desc + '填写范围错误';

	let arr = String(ref).split(',');
	if (!arr.includes(value) && !arr.includes(value + ''))
		return desc + '填写范围错误';
}

function checkIds(value, desc) {}

function checkString(value, desc) {
	if (value.constructor != String)
		return desc + '填写错误';
}


function check(data, rules, that) {
	let returnData = {};
	for (let key in rules) {
		let arr = rules[key].split('|');

		let desc = key; // 字段说明
		let defVal = undefined; // 缺省值
		let dataType = 'String'; //数据类型   

		if (!CHECK_OPEN) { // 不校验
			// 取值
			let val = data[formName];
			returnData[key] = val;
			continue;
		}

		// 小循环获取规则
		for (let i = 0; i < arr.length; i++) {
			// 数据项说明  
			if (arr[i].startsWith('name=')) {
				desc = '「' + arr[i].replace('name=', '') + '」';
				continue;
			}

			// 缺省值 
			if (arr[i].startsWith('default=')) {
				defVal = arr[i].replace('default=', '').trim();
				continue;
			}

			// 数据类型 
			switch (arr[i].toLowerCase()) {
				case 'int':
				case 'digit':
					dataType = 'Number';
					break;
				case 'array':
				case 'arr':
					dataType = 'Array';
					break;
				case 'object':
				case 'obj':
					dataType = 'Object';
					break;
				case 'bool':
				case 'boolean':
					dataType = 'Boolean';
					break;
			}
		}

		// 校验 
		let formName = (CHECK_SOURCE == 'admin') ? key : arr[0]; // 表单名  admin/client

		// 取值
		let val = data[formName];

		switch (dataType) {
			case 'Array': {
				if (defVal !== undefined) {
					try {
						defVal = JSON.parse(defVal);

						if (getDataType(defVal) != Array)
							return _showError(desc + '默认值数组格式错误', formName, that);
					} catch (ex) {
						return _showError(desc + '默认值数组格式错误', formName, that);
					}
				}
				if (val === null || val === undefined) val = defVal;

				if (val !== undefined && getDataType(val) != Array)
					return _showError(desc + '数组格式错误', formName, that);

				break;
			}
			case 'Object': {
				if (defVal !== undefined) {
					try {
						defVal = JSON.parse(defVal);

						if (getDataType(defVal) != Object)
							return _showError(desc + '默认值对象格式错误', formName, that);
					} catch (ex) {
						return _showError(desc + '默认值对象格式错误', formName, that);
					}
				}
				if (val === null || val === undefined) val = defVal;

				if (val !== undefined && getDataType(val) != Object)
					return _showError(desc + '对象格式错误', formName, that);

				break;
			}
			case 'Boolean': {
				if (defVal !== undefined) {
					try {
						defVal = JSON.parse(defVal);

						if (getDataType(defVal) != Boolean)
							return _showError(desc + '默认值布尔格式错误', formName, that);
					} catch (ex) {
						return _showError(desc + '默认值布尔格式错误');
					}
				}
				if (val === null || val === undefined) val = defVal;

				if (val !== undefined && getDataType(val) != Boolean)
					return _showError(desc + '布尔格式错误', formName, that);

				break;
			}
			case 'Number': {
				if (checkDigit(defVal, desc + '默认值'))
					return _showError(desc + '默认值格式错误', formName, that);

				if (val === null || val === undefined) val = defVal;

				if (val === undefined) break;

				if (val === '') //数字不能为空
					return _showError(desc + '不能为空', formName, that);

				let dataType = getDataType(val);
				if (dataType == Object || dataType == Boolean || dataType == Array)
					return _showError(desc + '必须为数字格式', formName, that);

				// 数字格式校验
				let result = checkDigit(val, desc);
				if (result) return _showError(result, formName, that);

				val = Number(val);

				break;
			}
			case 'String': {
				let dataType = getDataType(val);
				if (dataType == Object || dataType == Boolean || dataType == Array)
					return _showError(desc + '必须为字符串格式', formName, that);

				if (val === null || val === undefined) val = defVal;

				if (val === undefined) break;

				try {
					val = String(val).trim(); // 数字会被转为字符串
				} catch (ex) {
					return _showError(desc + '必须为字符串格式', formName, that);
				}
				break;
			}
		}

		returnData[key] = val;

		let fromStep = (CHECK_SOURCE == 'admin') ? 0 : 1; //admin/client
		for (let i = fromStep; i < arr.length; i++) {
			let result = '';

			let rules = arr[i].split(':');
			let ruleName = rules[0];

			// 空 且非必填的 不校验 
			if (ruleName != 'must' && val === undefined) continue;

			switch (ruleName) {
				case 'must':
					result = checkRequired(val, desc);
					break;
				case 'str':
				case 'string':
					result = checkString(val, desc);
					break;
				case 'arr':
				case 'array':
					result = checkArray(val, desc);
					break;
				case 'obj':
				case 'object':
					result = checkObject(val, desc);
					break;
				case 'bool':
				case 'boolean':
					result = checkBoolean(val, desc);
					break;
				case 'money':
					result = checkMoney(val, desc);
					break;
				case 'year':
					result = checkYear(val, desc);
					break;
				case 'yearmonth':
					result = checkYearMonth(val, desc);
					break;
				case 'date':
					result = checkDate(val, desc);
					break;
				case 'time':
					result = checkTime(val, desc);
					break;
				case 'hourminute':
					result = checkHourMinute(val, desc);
					break;
				case 'datetime':
					result = checkDatimeTime(val, desc);
					break;
				case 'min':
					result = checkMin(val, Number(rules[1]), desc);
					break;
				case 'max':
					result = checkMax(val, Number(rules[1]), desc);
					break;
				case 'len':
					result = checkLen(val, Number(rules[1]), desc);
					break;
				case 'in':
					result = checkIn(val, rules[1], desc);
					break;
				case 'email':
					result = checkEmail(val, desc);
					break;
				case 'mobile':
					result = checkMobile(val, desc);
					break;
				case 'int': // 正整数  
					result = checkInt(val, desc);
					break;
				case 'digit': // 正小整数
					result = checkDigit(val, desc);
					break;
				case 'id':
					result = checkId(val, desc);
					break;
				case 'letter':
					result = checkLetter(val, desc);
					break;
				case 'letter_num':
					result = checkLetterNum(val, desc);
					break;
			}

			if (result) {
				_showError(result, formName, that);
				return false;
			} else {

				if (that) {
					if (CHECK_SOURCE == 'client') {
						// 删除原有的自动聚焦 //admin/client
						if (isDefined(that.data[formName + 'Focus'])) {
							that.setData({ //TODO delete?
								[formName + 'Focus']: false
							});
						}
					}
				}
			}

		}
	}
	return returnData;
}

function _showError(result, formName, that) { //admin/client
	if (CHECK_SOURCE == 'client') {
		wx.showModal({
			title: '温馨提示',
			content: result,
			showCancel: false,
			success(res) {
				// 自动聚焦
				if (that) {
					pageHelper.anchor(formName, that);

					that.setData({
						[formName + 'Focus']: result,
					});
				}

			}
		});
	} else {
		throw new AppError(result, appCode.DATA);
	}

}

module.exports = {
	check,

	checkString,
	checkArray,
	checkObject,
	checkMoney,
	checkYear,
	checkYearMonth,
	checkDate,
	checkTime,
	checkHourMinute,
	checkDatimeTime,
	checkMin,
	checkMax,
	checkLen,
	checkIn,
	checkEmail,
	checkMobile,
	checkInt, // 正小整数
	checkDigit,
	checkId,
	checkLetter,
	checkLetterNum,

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\activity_controller.js
--------------------------------------------------
/**
 * Notes: 职位模块控制器
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-23 04:00:00 
 */

const BaseProjectController = require('./base_project_controller.js');
const ActivityService = require('../service/activity_service.js');
const timeUtil = require('../../../framework/utils/time_util.js');

class ActivityController extends BaseProjectController {

	_getTimeShow(start, end) {
		let startDay = timeUtil.timestamp2Time(start, 'M月D日');
		let startTime = timeUtil.timestamp2Time(start, 'h:m');
		let endDay = timeUtil.timestamp2Time(end, 'M月D日');
		let endTime = timeUtil.timestamp2Time(end, 'h:m');
		let week = timeUtil.week(timeUtil.timestamp2Time(start, 'Y-M-D'));
		if (startDay != endDay)
			return `${startDay} ${startTime} ${week}～${endDay} ${endTime}`;
		else
			return `${startDay} ${startTime}～${endTime} ${week}`;
	}

	async getMyStat() {
		// 数据校验
		let rules = {
		 
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new ActivityService();
		return  await service.getMyStat(this._userId );
 
	} 

	/** 列表 */
	async getActivityList() {

		// 数据校验
		let rules = { 
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new ActivityService();
		let result = await service.getActivityList(input);

		// 数据格式化
		let list = result.list;

		for (let k = 0; k < list.length; k++) {
			list[k].time = timeUtil.timestamp2Time(list[k].ACTIVITY_START, 'Y年M月D日 h:m');
			list[k].statusDesc = service.getJoinStatusDesc(list[k]);

			if (list[k].ACTIVITY_OBJ && list[k].ACTIVITY_OBJ.desc)
				delete list[k].ACTIVITY_OBJ.desc;
		}

		return result;

	}


	/** 浏览详细 */
	async viewActivity() {
		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new ActivityService();
		let activity = await service.viewActivity(this._userId, input.id);

		if (activity) {

			activity.start = timeUtil.timestamp2Time(activity.ACTIVITY_START, 'M月D日 h:m');

			activity.end = timeUtil.timestamp2Time(activity.ACTIVITY_END, 'M月D日 h:m');
			activity.statusDesc = service.getJoinStatusDesc(activity);
		}

		return activity;
	} 


	/** 我的职位申请列表 */
	async getMyActivityJoinList() {

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new ActivityService();
		let result = await service.getMyActivityJoinList(this._userId, input);

		// 数据格式化
		let list = result.list;


		for (let k = 0; k < list.length; k++) {  

			list[k].ACTIVITY_JOIN_ADD_TIME = timeUtil.timestamp2Time(list[k].ACTIVITY_JOIN_ADD_TIME, 'Y-M-D h:m');
		}

		result.list = list;

		return result;

	}
  

	/** 申请提交 */
	async activityJoin() {
		// 数据校验
		let rules = {
			activityId: 'must|id',
			forms: 'array',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new ActivityService();
		return await service.activityJoin(this._userId, input.activityId, input.forms);
	}

	/** 申请取消*/
	async cancelMyActivityJoin() {
		// 数据校验
		let rules = {
			activityJoinId: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new ActivityService();
		return await service.cancelMyActivityJoin(this._userId, input.activityJoinId);
	}
  
}

module.exports = ActivityController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\base_project_controller.js
--------------------------------------------------
/**
 * Notes: 本业务基本控制器
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseController = require('../../../framework/platform/controller/base_controller.js');
const BaseProjectService = require('../service/base_project_service.js');

class BaseProjectController extends BaseController {

	// TODO
	async initSetup() {
		let service = new BaseProjectService();
		await service.initSetup();
	}
}

module.exports = BaseProjectController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\cate_controller.js
--------------------------------------------------
/**
 * Notes: 内容检测控制器
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */
const CateService = require('../service/cate_service.js');
const BaseProjectController = require('./base_project_controller.js');
const timeUtil = require('../../../framework/utils/time_util.js');

class CateController extends BaseProjectController {
	async getAllCateOptions() {
		let service = new CateService();
		return await service.getAllCateOptions();

	}

	async getCateList() {

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new CateService();
		let result = await service.getCateList(input);

		// 数据格式化
		let list = result.list;

		for (let k = 0; k < list.length; k++) {
			if (list[k].CATE_OBJ && list[k].CATE_OBJ.content)
				delete list[k].CATE_OBJ.content;
		}

		return result;

	}

	/** 浏览信息 */
	async viewCate() {
		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new CateService();
		let cate = await service.viewCate(input.id);

		if (cate) {
			// 显示转换 
			cate.CATE_ADD_TIME = timeUtil.timestamp2Time(cate.CATE_ADD_TIME, 'Y-M-D');
		}

		return cate;
	}

}

module.exports = CateController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\check_controller.js
--------------------------------------------------
/**
 * Notes: 内容检测控制器
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectController = require('./base_project_controller.js');
const contentCheck = require('../../framework/validate/content_check.js');

class CheckController extends BaseProjectController {

	/**
	 * 图片校验 
	 */
	async checkImg() {

		// 数据校验
		let rules = {
			img: 'name=img',
			mine: 'must|default=jpg',
		};

		// 取得数据
		let input = this.validateData(rules);

		return await contentCheck.checkImg(input.img, 'jpg');

	}

}

module.exports = CheckController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\fav_controller.js
--------------------------------------------------
/**
 * Notes: 预约模块控制器
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-12-10 04:00:00 
 */

const BaseProjectController = require('./base_project_controller.js');
const FavService = require('../service/fav_service.js');
const timeUtil = require('../../../framework/utils/time_util.js');

class FavController extends BaseProjectController {

	/** 更新某人收藏 */
	async updateFav() {
		// 数据校验
		let rules = {
			oid: 'id|must',
			title: 'string|must',
			type: 'string|must',
			path: 'string|must',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new FavService();
		return await service.updateFav(this._userId, input.oid, input.title, input.type, input.path);
	}


	/** 删除收藏 */
	async delFav() {
		// 数据校验
		let rules = {
			oid: 'id|must'
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new FavService();
		return await service.updateFav(this._userId, input.oid);
	}


	/** 是否收藏 */
	async isFav() {
		// 数据校验
		let rules = {
			oid: 'id|must',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new FavService();
		return await service.isFav(this._userId, input.oid);
	}

	/** 我的收藏列表 */
	async getMyFavList() {

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new FavService();
		let result = await service.getMyFavList(this._userId, input);

		// 数据格式化
		let list = result.list;
		// 显示转换
		for (let k = 0; k < list.length; k++) {
			list[k].FAV_ADD_TIME = timeUtil.timestamp2Time(list[k].FAV_ADD_TIME);
		}
		result.list = list;

		return result;

	}

}

module.exports = FavController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\home_controller.js
--------------------------------------------------
/**
 * Notes: 全局或者主页模块控制器 
 * Date: 2020-11-05 10:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectController = require('./base_project_controller.js');
const HomeService = require('../service/home_service.js');

class HomeController extends BaseProjectController {

	async getSetup() {
		// 数据校验
		let rules = {
			key: 'must|string|name=KEY',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new HomeService();
		return await service.getSetup(input.key);

	}


	/** 首页推荐列表 */
	async getHomeList() {
		let service = new HomeService();
		return await service.getHomeList(); 
	}

}

module.exports = HomeController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\my_controller.js
--------------------------------------------------
/**
 * Notes: 用户中心模块控制器
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectController = require('./base_project_controller.js');

class MyController extends BaseProjectController { 

}

module.exports = MyController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\news_controller.js
--------------------------------------------------
/**
 * Notes: 资讯模块控制器
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-29 04:00:00 
 */

const BaseProjectController = require('./base_project_controller.js');
const NewsService = require('../service/news_service.js');
const timeUtil = require('../../../framework/utils/time_util.js');

class NewsController extends BaseProjectController {

	// 把列表转换为显示模式
	transNewsList(list) {
		let ret = [];
		for (let k = 0; k < list.length; k++) {
			let node = {};
			node.type = 'news';
			node.id = list[k]._id;
			node.title = list[k].NEWS_TITLE;
			node.desc = list[k].NEWS_DESC;
			node.ext = list[k].NEWS_ADD_TIME;
			node.pic = list[k].NEWS_PIC[0];
			ret.push(node);
		}
		return ret;
	} 

	/** 资讯列表 */
	async getNewsList() {

		// 数据校验
		let rules = {
			cateId: 'string',
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序', 
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new NewsService();
		let result = await service.getNewsList(input);

		// 数据格式化
		let list = result.list;

		for (let k = 0; k < list.length; k++) {
			list[k].NEWS_ADD_TIME = timeUtil.timestamp2Time(list[k].NEWS_ADD_TIME, 'Y-M-D');

			if (list[k].NEWS_OBJ && list[k].NEWS_OBJ.desc)
				delete list[k].NEWS_OBJ.desc;
		}
		result.list = this.transNewsList(list);

		return result;

	}


	/** 浏览资讯信息 */
	async viewNews() {
		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new NewsService();
		let news = await service.viewNews(input.id);

		if (news) {
			// 显示转换 
			news.NEWS_ADD_TIME = timeUtil.timestamp2Time(news.NEWS_ADD_TIME, 'Y-M-D');
		}

		return news;
	}



}

module.exports = NewsController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\passport_controller.js
--------------------------------------------------
/**
 * Notes: passport模块控制器
 * Date: 2021-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectController = require('./base_project_controller.js');
const PassportService = require('../service/passport_service.js');
const contentCheck = require('../../../framework/validate/content_check.js');

class PassportController extends BaseProjectController {

	/** 取得我的用户信息 */
	async getMyDetail() {
		let service = new PassportService();
		return await service.getMyDetail(this._userId);
	}

	/** 获取手机号码 */
	async getPhone() {

		// 数据校验
		let rules = {
			cloudID: 'must|string|min:1|max:200|name=cloudID',
		};

		// 取得数据
		let input = this.validateData(rules);


		let service = new PassportService();
		return await service.getPhone(input.cloudID);
	}


	/** 注册 */
	async register() {
		// 数据校验
		let rules = {
			name: 'must|string|min:1|max:30|name=姓名',
			mobile: 'must|mobile|name=手机',
			pic: 'must|string|name=头像',
			forms: 'array|name=表单',
			status: 'int|default=1'
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiClient(input);

		let service = new PassportService();
		return await service.register(this._userId, input);
	}
	
	/** 修改用户资料 */
	async editBase() {
		// 数据校验
		let rules = {
			name: 'must|string|min:1|max:30|name=姓名',
			mobile: 'must|mobile|name=手机',
			pic: 'must|string|name=头像',
			forms: 'array|name=表单',
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiClient(input);

		let service = new PassportService();
		return await service.editBase(this._userId, input);
	}

	/** 登录 */
	async login() {
		// 数据校验
		let rules = {};

		// 取得数据
		let input = this.validateData(rules);

		let service = new PassportService();
		return await service.login(this._userId);
	}

}

module.exports = PassportController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_activity_controller.js
--------------------------------------------------
/**
 * Notes: 职位模块后台管理-控制器
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-23 10:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');

const AdminActivityService = require('../../service/admin/admin_activity_service.js');
const ActivityService = require('../../service/activity_service.js');

const timeUtil = require('../../../../framework/utils/time_util.js');
const contentCheck = require('../../../../framework/validate/content_check.js');
const ActivityModel = require('../../model/activity_model.js');

class AdminActivityController extends BaseProjectAdminController {

	/** 置顶与排序设定 */
	async sortActivity() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			sort: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		await service.sortActivity(input.id, input.sort);
	}

	/** 首页设定 */
	async vouchActivity() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			vouch: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		await service.vouchActivity(input.id, input.vouch);
	}

	/** 状态修改 */
	async statusActivity() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			status: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		return await service.statusActivity(input.id, input.status);

	}

	/** 列表 */
	async getAdminActivityList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			whereEx: 'object|name=附加查询条件',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let adminService = new AdminActivityService();
		let result = await adminService.getAdminActivityList(input);

		let service = new ActivityService();

		// 数据格式化
		let list = result.list;
		for (let k = 0; k < list.length; k++) {
			list[k].ACTIVITY_ADD_TIME = timeUtil.timestamp2Time(list[k].ACTIVITY_ADD_TIME, 'Y-M-D h:m:s');

			list[k].statusDesc = service.getJoinStatusDesc(list[k]);

			list[k].ACTIVITY_START = timeUtil.timestamp2Time(list[k].ACTIVITY_START, 'Y-M-D h:m');
			list[k].end = timeUtil.timestamp2Time(list[k].ACTIVITY_END, 'Y-M-D h:m'); 

			if (list[k].ACTIVITY_OBJ && list[k].ACTIVITY_OBJ.desc)
				delete list[k].ACTIVITY_OBJ.desc;
		}
		result.list = list;

		return result;

	}

	/** 发布 */
	async insertActivity() {
		await this.isAdmin();

		// 数据校验 
		let rules = {
			title: 'must|string|min:2|max:50|name=职位名称',
			cateId: 'string|name=企业',
			cateName: 'string|name=企业名称',
			order: 'must|int|min:0|max:9999|name=排序号',

			maxCnt: 'must|int|name=人数上限',
			start: 'must|string|name=申请开始时间',
			end: 'must|string|name=申请截止时间', 

			address: 'must|string|name=地点',
			addressGeo: 'must|object|name=地点GEO',

			cancelSet: 'must|int|name=取消设置',
			checkSet: 'must|int|name=审核设置', 

			forms: 'array|name=表单',

			joinForms: 'array|name=用户申请资料设置',
		};


		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminActivityService();
		let result = await service.insertActivity(input);

		this.logOther('添加了职位《' + input.title + '》');

		return result;

	}

	/** 获取信息用于编辑修改 */
	async getActivityDetail() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		let activity = await service.getActivityDetail(input.id);
		if (activity) {
			activity.ACTIVITY_START = timeUtil.timestamp2Time(activity.ACTIVITY_START, 'Y-M-D h:m');
			activity.ACTIVITY_END = timeUtil.timestamp2Time(activity.ACTIVITY_END, 'Y-M-D h:m'); 
		}

		return activity;

	}

	/** 编辑 */
	async editActivity() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			title: 'must|string|min:2|max:50|name=职位名称',
			cateId: 'string|name=企业',
			cateName: 'string|name=企业名称',

			maxCnt: 'must|int|name=人数上限',
			start: 'must|string|name=申请开始时间',
			end: 'must|string|name=申请截止时间', 

			address: 'must|string|name=地点',
			addressGeo: 'must|object|name=地点GEO',

			cancelSet: 'must|int|name=取消设置',
			checkSet: 'must|int|name=审核设置', 

			order: 'must|int|min:0|max:9999|name=排序号',
			forms: 'array|name=表单',

			joinForms: 'array|name=用户申请资料设置',
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminActivityService();
		let result = service.editActivity(input);

		this.logOther('修改了职位《' + input.title + '》');

		return result;
	}

	async clearActivityAll() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		return await service.clearActivityAll(input.id);
	}

	/** 删除 */
	async delActivity() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let title = await ActivityModel.getOneField(input.id, 'ACTIVITY_TITLE');

		let service = new AdminActivityService();
		await service.delActivity(input.id);

		if (title)
			this.logOther('删除了职位《' + title + '》');

	}

	/** 更新图片信息 */
	async updateActivityForms() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			hasImageForms: 'array'
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminActivityService();
		return await service.updateActivityForms(input);
	}

	//########################## 名单
	/** 预约名单列表 */
	async getActivityJoinList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			activityId: 'must|id',
			page: 'must|int|default=1',
			size: 'int|default=10',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		let result = await service.getActivityJoinList(input);

		// 数据格式化
		let list = result.list;
		for (let k = 0; k < list.length; k++) {
			list[k].ACTIVITY_JOIN_ADD_TIME = timeUtil.timestamp2Time(list[k].ACTIVITY_JOIN_ADD_TIME);

		}
		result.list = list;

		return result;

	}

	/** 申请状态修改 */
	async statusActivityJoin() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			activityJoinId: 'must|id',
			status: 'must|int|in:0,1,8,9,10,98,99',
			reason: 'string|max:200',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		return await service.statusActivityJoin(input.activityJoinId, input.status, input.reason);
	}

 

	/** 申请删除 */
	async delActivityJoin() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			activityJoinId: 'must|id'
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		return await service.delActivityJoin(input.activityJoinId);
	}

	 
 

	/**************申请数据导出 BEGIN ********************* */
	/** 当前是否有导出文件生成 */
	async activityJoinDataGet() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			isDel: 'int|must', //是否删除已有记录
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();

		if (input.isDel === 1)
			await service.deleteActivityJoinDataExcel(); //先删除

		return await service.getActivityJoinDataURL();
	}

	/** 导出数据 */
	async activityJoinDataExport() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			activityId: 'id|must',
			status: 'int|must|default=1'
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		return await service.exportActivityJoinDataExcel(input);
	}

	/** 删除导出的申请数据文件 */
	async activityJoinDataDel() {
		await this.isAdmin();

		// 数据校验
		let rules = {};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminActivityService();
		return await service.deleteActivityJoinDataExcel();
	}
}

module.exports = AdminActivityController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_cate_controller.js
--------------------------------------------------
/**
 * Notes: 资讯模块后台管理-控制器
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 10:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');
const AdminCateService = require('../../service/admin/admin_cate_service.js');
const timeUtil = require('../../../../framework/utils/time_util.js');
const CateModel = require('../../model/cate_model.js');

class AdminCateController extends BaseProjectAdminController {


	async sortCate() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			sort: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		await service.sortCate(input.id, input.sort);
	}

	async statusCate() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			status: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		await service.statusCate(input.id, input.status);

	}


	async delCate() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let title = await CateModel.getOneField(input.id, 'CATE_TITLE');

		let service = new AdminCateService();
		await service.delCate(input.id);

		if (title)
			this.logOther('删除了产品分类《' + title + '》');

	}

	async getAdminCateList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			whereEx: 'object|name=附加查询条件',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		let result = await service.getAdminCateList(input);

		// 数据格式化
		let list = result.list;
		for (let k in list) {

			list[k].CATE_ADD_TIME = timeUtil.timestamp2Time(list[k].CATE_ADD_TIME);

			if (list[k].CATE_OBJ && list[k].CATE_OBJ.content)
				delete list[k].CATE_OBJ.content;

		}
		result.list = list;

		return result;
	}

	/** 首页设定 */
	async vouchCate() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			vouch: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		await service.vouchCate(input.id, input.vouch);
	}

	async insertCate() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			title: 'must|string|name=名称',
			order: 'must|int|min:0|max:9999|name=排序号',
			forms: 'array|name=表单',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		let result = await service.insertCate(input);

		this.logOther('添加了产品分类《' + input.title + '》');

		return result;
	}

	async editCate() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id|name=id',
			title: 'must|string|name=名称',
			order: 'must|int|min:0|max:9999|name=排序号',
			forms: 'array|name=表单',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		let result = await service.editCate(input);

		this.logOther('修改了产品分类《' + input.title + '》');

		return result;
	}

	async getCateDetail() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		return await service.getCateDetail(input.id);

	}

	async updateCateForms() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			hasImageForms: 'array'
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminCateService();
		return await service.updateCateForms(input);
	}

}

module.exports = AdminCateController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_home_controller.js
--------------------------------------------------
/**
 * Notes: 后台登录与首页模块
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-03-15 19:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');
const AdminHomeService = require('../../service/admin/admin_home_service.js');

class AdminHomeController extends BaseProjectAdminController {


	// 管理首页 
	async adminHome() {
		await this.isAdmin();

		// 数据校验
		let rules = {

		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminHomeService();
		return await service.adminHome();
	}

	 
	// 清除首页推荐
	async clearVouchData() {
		await this.isAdmin();

		// 数据校验
		let rules = {

		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminHomeService();
		return await service.clearVouchData();
	}

}

module.exports = AdminHomeController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_mgr_controller.js
--------------------------------------------------
/**
 * Notes: 管理员控制模块
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 10:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');
const LogModel = require('../../../../framework/platform/model/log_model.js');

const AdminMgrService = require('../../service/admin/admin_mgr_service.js');
const timeUtil = require('../../../../framework/utils/time_util.js');
const contentCheck = require('../../../../framework/validate/content_check.js');

class AdminMgrController extends BaseProjectAdminController {
	// 管理员登录  
	async adminLogin() {

		// 数据校验
		let rules = {
			name: 'must|string|min:5|max:30|name=管理员名',
			pwd: 'must|string|min:5|max:30|name=密码',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminMgrService();
		return await service.adminLogin(input.name, input.pwd);
	}

	/** 删除管理员 */
	async delMgr() {
		await this.isSuperAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminMgrService();
		await service.delMgr(input.id, this._adminId);

	}

	/** 管理员状态修改 */
	async statusMgr() {
		await this.isSuperAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			status: 'must|int|in:0,1',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminMgrService();
		await service.statusMgr(input.id, input.status, this._admin.ADMIN_PHONE);
	}

	/** 管理员列表 */
	async getMgrList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			whereEx: 'object|name=附加查询条件',
			page: 'must|int|default=1',
			size: 'int|default=10',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminMgrService();
		let result = await service.getMgrList(input);

		// 数据格式化
		let list = result.list;
		for (let k = 0; k < list.length; k++) {
			list[k].ADMIN_EDIT_TIME = timeUtil.timestamp2Time(list[k].ADMIN_EDIT_TIME);
			list[k].ADMIN_LOGIN_TIME = (list[k].ADMIN_LOGIN_TIME == 0) ? '未登录' : timeUtil.timestamp2Time(list[k].ADMIN_LOGIN_TIME);
		}
		result.list = list;
		return result;
	}

	/** 添加管理员 */
	async insertMgr() {
		await this.isSuperAdmin();

		// 数据校验
		let rules = {
			name: 'must|string|min:5|max:30|name=账号',
			desc: 'must|string|max:30|name=姓名',
			phone: 'string|len:11|name=手机',
			password: 'must|string|min:6|max:30|name=密码',
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminMgrService();
		await service.insertMgr(input);
	}

	/** 修改管理员 */
	async editMgr() {
		await this.isSuperAdmin();

		// 数据校验
		let rules = {
			id: 'must|id|name=id',
			name: 'must|string|min:5|max:30|name=账号',
			desc: 'must|string|max:30|name=姓名',
			phone: 'string|len:11|name=手机',
			password: 'string|min:6|max:30|name=新密码',

		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminMgrService();
		await service.editMgr(input.id, input);
	}

	/** 修改自己的密码 */
	async pwdMgr() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			oldPassword: 'must|string|min:6|max:30|name=旧密码',
			password: 'must|string|min:6|max:30|name=新密码',
			password2: 'must|string|min:6|max:30|name=新密码再次填写',

		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminMgrService();
		await service.pwdtMgr(this._adminId, input.oldPassword, input.password);
	}

	/** 获取管理员信息用于编辑修改 */
	async getMgrDetail() {
		await this.isSuperAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminMgrService();
		return await service.getMgrDetail(input.id);

	} 

	async clearLog() {
		await this.isAdmin();

		let service = new AdminMgrService();
		return await service.clearLog();

	}

	async getLogList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			whereEx: 'object|name=附加查询条件',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminMgrService();
		let result = await service.getLogList(input);

		// 数据格式化
		let list = result.list;
		for (let k = 0; k < list.length; k++) {
			list[k].LOG_TYPE_DESC = LogModel.getDesc('TYPE', list[k].LOG_TYPE);
			list[k].LOG_ADD_TIME = timeUtil.timestamp2Time(list[k].LOG_ADD_TIME);
		}
		result.list = list;

		return result;

	}
}

module.exports = AdminMgrController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_news_controller.js
--------------------------------------------------
/**
 * Notes: 资讯模块后台管理-控制器
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 10:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');

const AdminNewsService = require('../../service/admin/admin_news_service.js');

const timeUtil = require('../../../../framework/utils/time_util.js');
const contentCheck = require('../../../../framework/validate/content_check.js');
const NewsModel = require('../../model/news_model.js');

class AdminNewsController extends BaseProjectAdminController {

	/** 置顶与排序设定 */
	async sortNews() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			sort: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminNewsService();
		await service.sortNews(input.id, input.sort);
	} 
  
	/** 资讯状态修改 */
	async statusNews() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			status: 'must|int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminNewsService();
		await service.statusNews(input.id, input.status);

	}

	/** 资讯列表 */
	async getAdminNewsList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			whereEx: 'object|name=附加查询条件',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminNewsService();
		let result = await service.getAdminNewsList(input);

		// 数据格式化
		let list = result.list;
		for (let k = 0; k < list.length; k++) {
			list[k].NEWS_ADD_TIME = timeUtil.timestamp2Time(list[k].NEWS_ADD_TIME, 'Y-M-D h:m');
			list[k].NEWS_EDIT_TIME = timeUtil.timestamp2Time(list[k].NEWS_EDIT_TIME, 'Y-M-D h:m');

			if (list[k].NEWS_OBJ && list[k].NEWS_OBJ.desc)
				delete list[k].NEWS_OBJ.desc;
		}
		result.list = list;

		return result;

	}

	/**
	 * 更新富文本信息
	 */
	async updateNewsContent() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			content: 'array'
		};

		// 取得数据
		let input = this.validateData(rules);

			// 内容审核
			await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminNewsService();
		return await service.updateNewsContent(input);
	}


	/** 发布资讯信息 */
	async insertNews() {
		await this.isAdmin();

		// 数据校验 
		let rules = {
			title: 'must|string|min:4|max:50|name=标题',
			cateId: 'must|string|name=分类',
			cateName: 'must|string|name=分类名',
			order: 'must|int|min:0|max:9999|name=排序号',
			desc: 'must|string|min:10|max:200|name=简介',
			forms: 'array|name=表单',
		};


		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminNewsService();
		let result = await service.insertNews(input);

		this.logNews('添加了文章《' + input.title + '》');

		return result;

	}


	/** 获取资讯信息用于编辑修改 */
	async getNewsDetail() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminNewsService();
		return await service.getNewsDetail(input.id);

	}

	/** 编辑资讯 */
	async editNews() {
		await this.isAdmin();

		let rules = {
			id: 'must|id',
			title: 'must|string|min:4|max:50|name=标题',
			cateId: 'must|string|name=分类',
			cateName: 'must|string|name=分类',
			order: 'must|int|min:0|max:9999|name=排序号',
			desc: 'string|min:10|max:200|name=简介',
			forms: 'array|name=表单',
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminNewsService();
		let result = service.editNews(input);

		this.logNews('修改了文章《' + input.title + '》');

		return result;
	}

	/** 删除资讯 */
	async delNews() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let title = await NewsModel.getOneField(input.id, 'NEWS_TITLE');

		let service = new AdminNewsService();
		await service.delNews(input.id);

		if (title)
			this.logNews('删除了文章《' + title + '》');

	}

	/**
	 * 更新图片信息
	 * @returns 返回 urls数组 [url1, url2, url3, ...]
	 */
	async updateNewsPic() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			imgList: 'array'
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminNewsService();
		return await service.updateNewsPic(input);
	}

	/** 更新图片信息 */
	async updateNewsForms() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			hasImageForms: 'array'
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminNewsService();
		return await service.updateNewsForms(input);
	}

}

module.exports = AdminNewsController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_setup_controller.js
--------------------------------------------------
/**
 * Notes: 设置控制模块
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 10:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');
const AdminSetupService = require('../../service/admin/admin_setup_service.js');
const contentCheck = require('../../../../framework/validate/content_check.js');

class AdminSetupController extends BaseProjectAdminController {

	// 通用setup
	async setSetup() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			key: 'must|string|name=KEY',
			content: 'name=内容',
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminSetupService();
		await service.setSetup(input.key, input.content);
	}

	// 富文本setup
	async setContentSetup() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|string|name=KEY',
			content: 'must|array|name=内容'
		};

		// 取得数据
		let input = this.validateData(rules);

		// 内容审核
		await contentCheck.checkTextMultiAdmin(input);

		let service = new AdminSetupService();
		await service.setContentSetup(input.id, input.content, 'content');
	}

	async genMiniQr() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			path: 'must|string',
			sc: 'string',
		};

		// 取得数据
		let input = this.validateData(rules);


		let service = new AdminSetupService();
		return await service.genMiniQr(input.path, input.sc);
	}
}

module.exports = AdminSetupController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\admin_user_controller.js
--------------------------------------------------
/**
 * Notes: 用户控制模块
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-01-22 10:20:00 
 */

const BaseProjectAdminController = require('./base_project_admin_controller.js');

const UserModel = require('../../model/user_model.js');
const AdminUserService = require('../../service/admin/admin_user_service.js');
const timeUtil = require('../../../../framework/utils/time_util.js');

class AdminUserController extends BaseProjectAdminController {


	/** 用户信息 */
	async getUserDetail() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminUserService();
		let user = await service.getUser({
			userId: input.id
		});

		if (user) {
			// 显示转换  
			user.USER_ADD_TIME = timeUtil.timestamp2Time(user.USER_ADD_TIME);
			user.USER_LOGIN_TIME = user.USER_LOGIN_TIME ? timeUtil.timestamp2Time(user.USER_LOGIN_TIME) : '未登录';
		}

		return user;
	}


	/** 用户列表 */
	async getUserList() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			search: 'string|min:1|max:30|name=搜索条件',
			sortType: 'string|name=搜索类型',
			sortVal: 'name=搜索类型值',
			orderBy: 'object|name=排序',
			whereEx: 'object|name=附加查询条件',
			page: 'must|int|default=1',
			size: 'int',
			isTotal: 'bool',
			oldTotal: 'int',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminUserService();
		let result = await service.getUserList(input);

		// 数据格式化
		let list = result.list;
		for (let k = 0; k < list.length; k++) {
			list[k].USER_STATUS_DESC = UserModel.getDesc('STATUS', list[k].USER_STATUS);
			list[k].USER_ADD_TIME = timeUtil.timestamp2Time(list[k].USER_ADD_TIME);
			list[k].USER_LOGIN_TIME = list[k].USER_LOGIN_TIME ? timeUtil.timestamp2Time(list[k].USER_LOGIN_TIME) : '未登录';

		}
		result.list = list;
		return result;
	}

	/** 删除用户 */
	async delUser() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
		};

		// 取得数据
		let input = this.validateData(rules);

		let title = await UserModel.getOneField({ USER_MINI_OPENID: input.id }, 'USER_NAME');

		let service = new AdminUserService();
		await service.delUser(input.id);

		if (title)
			this.logUser('删除了用户「' + title + '」');

	}

	async statusUser() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			id: 'must|id',
			status: 'must|int',
			reason: 'string'
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminUserService();
		await service.statusUser(input.id, input.status, input.reason);
	}

	/************** 用户数据导出 BEGIN ********************* */
	/** 当前是否有导出文件生成 */
	async userDataGet() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			isDel: 'int|must', //是否删除已有记录
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminUserService();

		if (input.isDel === 1)
			await service.deleteUserDataExcel(); //先删除 

		return await service.getUserDataURL();
	}

	/** 导出数据 */
	async userDataExport() {
		await this.isAdmin();

		// 数据校验
		let rules = {
			condition: 'string|name=导出条件',
			fields: 'array',
		};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminUserService();
		return await service.exportUserDataExcel(input.condition, input.fields);
	}

	/** 删除导出的用户数据 */
	async userDataDel() {
		await this.isAdmin();

		// 数据校验
		let rules = {};

		// 取得数据
		let input = this.validateData(rules);

		let service = new AdminUserService();
		return await service.deleteUserDataExcel();
	}
}

module.exports = AdminUserController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\controller\admin\base_project_admin_controller.js
--------------------------------------------------
/**
 * Notes: 后台管理控制模块
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-03-15 19:20:00 
 */

const BaseAdminController = require('../../../../framework/platform/controller/base_admin_controller.js');
const BaseProjectService = require('../../service/base_project_service.js');

class BaseProjectAdminController extends BaseAdminController {
	// TODO
	async initSetup() {
		let service = new BaseProjectService();
		await service.initSetup();
	}

}

module.exports = BaseProjectAdminController;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\activity_join_model.js
--------------------------------------------------
/**
 * Notes: 职位申请实体
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-07-01 19:20:00 
 */


const BaseProjectModel = require('./base_project_model.js');

class ActivityJoinModel extends BaseProjectModel {

}

// 集合名
ActivityJoinModel.CL = BaseProjectModel.C('activity_join');

ActivityJoinModel.DB_STRUCTURE = {
	_pid: 'string|true',
	ACTIVITY_JOIN_ID: 'string|true',
	ACTIVITY_JOIN_ACTIVITY_ID: 'string|true|comment=申请PK',

	ACTIVITY_JOIN_ACTIVITY_TITLE: 'string|false|comment=职位标题冗余',
	ACTIVITY_JOIN_ACTIVITY_CATE_NAME: 'string|false|comment=企业冗余', 


	ACTIVITY_JOIN_USER_ID: 'string|true|comment=用户ID',


	ACTIVITY_JOIN_FORMS: 'array|true|default=[]|comment=表单',
	ACTIVITY_JOIN_OBJ: 'object|true|default={}',

	ACTIVITY_JOIN_STATUS: 'int|true|default=1|comment=状态  0=待审核 1=已录用, 99=未录用',
	ACTIVITY_JOIN_REASON: 'string|false|comment=审核拒绝或者取消理由',

	ACTIVITY_JOIN_ADD_TIME: 'int|true',
	ACTIVITY_JOIN_EDIT_TIME: 'int|true',
	ACTIVITY_JOIN_ADD_IP: 'string|false',
	ACTIVITY_JOIN_EDIT_IP: 'string|false',
};

// 字段前缀
ActivityJoinModel.FIELD_PREFIX = "ACTIVITY_JOIN_";

/**
 * 状态 0=待审核 1=已录用, 99=未录用
 */
ActivityJoinModel.STATUS = {
	WAIT: 0,
	SUCC: 1,
	ADMIN_CANCEL: 99
};

ActivityJoinModel.STATUS_DESC = {
	WAIT: '待审核',
	SUCC: '已录用',
	ADMIN_CANCEL: '未录用'
};


module.exports = ActivityJoinModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\activity_model.js
--------------------------------------------------
/**
 * Notes: 职位实体
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-23 19:20:00 
 */

const BaseProjectModel = require('./base_project_model.js');

class ActivityModel extends BaseProjectModel {

}

// 集合名
ActivityModel.CL = BaseProjectModel.C('activity');

ActivityModel.DB_STRUCTURE = {
	_pid: 'string|true',
	ACTIVITY_ID: 'string|true',

	ACTIVITY_TITLE: 'string|true|comment=标题',
	ACTIVITY_STATUS: 'int|true|default=1|comment=状态 0=未启用,1=使用中',

	ACTIVITY_CATE_ID: 'string|false|default=0|comment=分类',
	ACTIVITY_CATE_NAME: 'string|false|comment=分类冗余',

	ACTIVITY_CANCEL_SET: 'int|true|default=1|comment=取消设置 0=不允,1=允许,2=仅截止前可取消',
	ACTIVITY_CHECK_SET: 'int|true|default=0|comment=审核 0=不需要审核,1=需要审核',  

	ACTIVITY_MAX_CNT: 'int|true|default=20|comment=人数上限 0=不限',
	ACTIVITY_START: 'int|false|comment=申请开始时间',
	ACTIVITY_END: 'int|false|comment=申请截止时间', 

	ACTIVITY_START_DAY: 'string|false|comment=申请开始时间', 
	ACTIVITY_END_DAY: 'string|false|comment=申请截止时间', 

	ACTIVITY_ORDER: 'int|true|default=9999',
	ACTIVITY_VOUCH: 'int|true|default=0',

	ACTIVITY_FORMS: 'array|true|default=[]',
	ACTIVITY_OBJ: 'object|true|default={}',

	ACTIVITY_JOIN_FORMS: 'array|true|default=[]',

	ACTIVITY_ADDRESS: 'string|false|comment=详细地址',
	ACTIVITY_ADDRESS_GEO: 'object|false|comment=详细地址坐标参数',

	ACTIVITY_QR: 'string|false',
	ACTIVITY_VIEW_CNT: 'int|true|default=0',
	ACTIVITY_JOIN_CNT: 'int|true|default=0',
	ACTIVITY_COMMENT_CNT: 'int|true|default=0',
 

	ACTIVITY_ADD_TIME: 'int|true',
	ACTIVITY_EDIT_TIME: 'int|true',
	ACTIVITY_ADD_IP: 'string|false',
	ACTIVITY_EDIT_IP: 'string|false',
};

// 字段前缀
ActivityModel.FIELD_PREFIX = "ACTIVITY_";

/**
 * 状态 0=未启用,1=使用中 
 */
ActivityModel.STATUS = {
	UNUSE: 0,
	COMM: 1
};



module.exports = ActivityModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\base_project_model.js
--------------------------------------------------
/**
 * Notes: 实体ORM基类 
 * Date: 2022-03-15 19:20:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */


const BaseModel = require('../../../framework/platform/model/base_model.js');

class BaseProjectModel extends BaseModel {


}

module.exports = BaseProjectModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\cate_model.js
--------------------------------------------------
/**
 * Notes:企业
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2023-11-04 19:20:00 
 */


const BaseProjectModel = require('./base_project_model.js');

class CateModel extends BaseProjectModel {

}

// 集合名
CateModel.CL = BaseProjectModel.C('cate');

CateModel.DB_STRUCTURE = {
	_pid: 'string|true',
	CATE_ID: 'string|true',


	CATE_TITLE: 'string|false|comment=标题',
	CATE_STATUS: 'int|true|default=1|comment=状态 0/1',

	CATE_CNT: 'int|true|default=0',

	CATE_FORMS: 'array|true|default=[]',
	CATE_OBJ: 'object|true|default={}',


	CATE_ORDER: 'int|true|default=9999',
	CATE_VOUCH: 'int|true|default=0',

	CATE_QR: 'string|false',

	CATE_ADD_TIME: 'int|true',
	CATE_EDIT_TIME: 'int|true',
	CATE_ADD_IP: 'string|false',
	CATE_EDIT_IP: 'string|false',
};

// 字段前缀
CateModel.FIELD_PREFIX = "CATE_";


module.exports = CateModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\fav_model.js
--------------------------------------------------
/**
 * Notes: 收藏实体
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-24 19:20:00 
 */


const BaseProjectModel = require('./base_project_model.js');

class FavModel extends BaseProjectModel {

}

// 集合名
FavModel.CL = BaseProjectModel.C('fav');

FavModel.DB_STRUCTURE = {
	_pid: 'string|true',
	FAV_ID: 'string|true',

	FAV_USER_ID: 'string|true',

	FAV_TITLE: 'string|true|comment=标题',
	FAV_TYPE: 'string|true|comment=类型',
	FAV_OID: 'string|true|comment=相关表主键',
	FAV_PATH: 'string|true|comment=路径',

	FAV_ADD_TIME: 'int|true',
	FAV_EDIT_TIME: 'int|true',
	FAV_ADD_IP: 'string|false',
	FAV_EDIT_IP: 'string|false',
};

// 字段前缀
FavModel.FIELD_PREFIX = "FAV_";

module.exports = FavModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\news_model.js
--------------------------------------------------
/**
 * Notes: 资讯实体
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-10-28 19:20:00 
 */


const BaseProjectModel = require('./base_project_model.js');

class NewsModel extends BaseProjectModel {

}

// 集合名
NewsModel.CL = BaseProjectModel.C('news');

NewsModel.DB_STRUCTURE = {
	_pid: 'string|true',
	NEWS_ID: 'string|true',  

	NEWS_TITLE: 'string|false|comment=标题',
	NEWS_DESC: 'string|false|comment=描述',
	NEWS_STATUS: 'int|true|default=1|comment=状态 0/1',

	NEWS_CATE_ID: 'string|true|comment=分类编号',
	NEWS_CATE_NAME: 'string|true|comment=分类冗余',

	NEWS_ORDER: 'int|true|default=9999', 
	NEWS_VOUCH: 'int|true|default=0',

	NEWS_CONTENT: 'array|true|default=[]|comment=内容', 

	NEWS_QR: 'string|false',
	NEWS_VIEW_CNT: 'int|true|default=0|comment=访问次数',  

	NEWS_PIC: 'array|false|default=[]|comment=封面图  [cloudId1,cloudId2,cloudId3...]',

	NEWS_FORMS: 'array|true|default=[]',
	NEWS_OBJ: 'object|true|default={}',

	NEWS_ADD_TIME: 'int|true',
	NEWS_EDIT_TIME: 'int|true',
	NEWS_ADD_IP: 'string|false',
	NEWS_EDIT_IP: 'string|false',
};

// 字段前缀
NewsModel.FIELD_PREFIX = "NEWS_";


module.exports = NewsModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\model\user_model.js
--------------------------------------------------
/**
 * Notes: 用户实体
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-10-14 19:20:00 
 */


const BaseProjectModel = require('./base_project_model.js');
class UserModel extends BaseProjectModel { }

// 集合名
UserModel.CL = BaseProjectModel.C('user');

UserModel.DB_STRUCTURE = {
	_pid: 'string|true',
	USER_ID: 'string|true',

	USER_MINI_OPENID: 'string|true|comment=小程序openid',
	USER_STATUS: 'int|true|default=1|comment=状态 0=待审核,1=正常,8=审核未过,9=禁用',
	USER_CHECK_REASON: 'string|false|comment=审核未过的理由',

	USER_NAME: 'string|false|comment=姓名',
	USER_MOBILE: 'string|false|comment=联系电话',
	USER_PIC: 'string|false|comment=头像',

	USER_FORMS: 'array|true|default=[]',
	USER_OBJ: 'object|true|default={}',

	USER_LOGIN_CNT: 'int|true|default=0|comment=登陆次数',
	USER_LOGIN_TIME: 'int|false|comment=最近登录时间',


	USER_ADD_TIME: 'int|true',
	USER_ADD_IP: 'string|false',

	USER_EDIT_TIME: 'int|true',
	USER_EDIT_IP: 'string|false',
}

// 字段前缀
UserModel.FIELD_PREFIX = "USER_";

/**
 * 状态 0=待审核,1=正常,2=审核未过,9=禁用
 */
UserModel.STATUS = {
	UNUSE: 0,
	COMM: 1,
	UNCHECK: 8,
	FORBID: 9
};

UserModel.STATUS_DESC = {
	UNUSE: '待审核',
	COMM: '正常',
	UNCHECK: '未通过审核',
	FORBID: '禁用'
};


module.exports = UserModel;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\public\constants.js
--------------------------------------------------
module.exports = {    
	// 首页推荐
	SETUP_HOME_VOUCH_KEY : 'SETUP_HOME_VOUCH_KEY',
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\public\project_config.js
--------------------------------------------------
module.exports = {   
	// ## 缓存相关  
	CACHE_CALENDAR_TIME: 60 * 30, //日历缓存      
 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\public\route.js
--------------------------------------------------
/**
 * Notes: 路由配置文件
  * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * User: CC
 * Date: 2020-10-14 07:00:00
 */

module.exports = {
	//'test/test': 'test/test_controller@test',

	'home/setup_get': 'home_controller@getSetup',

	'passport/login': 'passport_controller@login',
	'passport/phone': 'passport_controller@getPhone',
	'passport/my_detail': 'passport_controller@getMyDetail',
	'passport/register': 'passport_controller@register',
	'passport/edit_base': 'passport_controller@editBase',

	// 收藏
	'fav/update': 'fav_controller@updateFav',
	'fav/del': 'fav_controller@delFav',
	'fav/is_fav': 'fav_controller@isFav',
	'fav/my_list': 'fav_controller@getMyFavList',

	'admin/home': 'admin/admin_home_controller@adminHome',
	'admin/clear_vouch': 'admin/admin_home_controller@clearVouchData',

	'admin/login': 'admin/admin_mgr_controller@adminLogin',
	'admin/mgr_list': 'admin/admin_mgr_controller@getMgrList',
	'admin/mgr_insert': 'admin/admin_mgr_controller@insertMgr#demo',
	'admin/mgr_del': 'admin/admin_mgr_controller@delMgr#demo',
	'admin/mgr_detail': 'admin/admin_mgr_controller@getMgrDetail',
	'admin/mgr_edit': 'admin/admin_mgr_controller@editMgr#demo',
	'admin/mgr_status': 'admin/admin_mgr_controller@statusMgr#demo',
	'admin/mgr_pwd': 'admin/admin_mgr_controller@pwdMgr#demo',
	'admin/log_list': 'admin/admin_mgr_controller@getLogList',
	'admin/log_clear': 'admin/admin_mgr_controller@clearLog#demo',

	'admin/setup_set': 'admin/admin_setup_controller@setSetup#demo',
	'admin/setup_set_content': 'admin/admin_setup_controller@setContentSetup#demo',
	'admin/setup_qr': 'admin/admin_setup_controller@genMiniQr',

	// 用户
	'admin/user_list': 'admin/admin_user_controller@getUserList',
	'admin/user_detail': 'admin/admin_user_controller@getUserDetail',
	'admin/user_del': 'admin/admin_user_controller@delUser#demo',
	'admin/user_status': 'admin/admin_user_controller@statusUser#demo',

	'admin/user_data_get': 'admin/admin_user_controller@userDataGet',
	'admin/user_data_export': 'admin/admin_user_controller@userDataExport',
	'admin/user_data_del': 'admin/admin_user_controller@userDataDel',


	// 内容  
	'home/list': 'home_controller@getHomeList',
	'news/list': 'news_controller@getNewsList',
	'news/view': 'news_controller@viewNews',

	'admin/news_list': 'admin/admin_news_controller@getAdminNewsList',
	'admin/news_insert': 'admin/admin_news_controller@insertNews#demo',
	'admin/news_detail': 'admin/admin_news_controller@getNewsDetail',
	'admin/news_edit': 'admin/admin_news_controller@editNews#demo',
	'admin/news_update_forms': 'admin/admin_news_controller@updateNewsForms#demo',
	'admin/news_update_pic': 'admin/admin_news_controller@updateNewsPic#demo',
	'admin/news_update_content': 'admin/admin_news_controller@updateNewsContent#demo',
	'admin/news_del': 'admin/admin_news_controller@delNews#demo',
	'admin/news_sort': 'admin/admin_news_controller@sortNews#demo',
	'admin/news_status': 'admin/admin_news_controller@statusNews#demo',


	// 职位
	'activity/list': 'activity_controller@getActivityList', 
	'activity/view': 'activity_controller@viewActivity', 
	'activity/join': 'activity_controller@activityJoin', 
	'activity/my_stat': 'activity_controller@getMyStat',
	'activity/my_join_list': 'activity_controller@getMyActivityJoinList',
	'activity/my_join_cancel': 'activity_controller@cancelMyActivityJoin', 

	'admin/activity_list': 'admin/admin_activity_controller@getAdminActivityList',
	'admin/activity_insert': 'admin/admin_activity_controller@insertActivity#demo',
	'admin/activity_detail': 'admin/admin_activity_controller@getActivityDetail',
	'admin/activity_edit': 'admin/admin_activity_controller@editActivity#demo',
	'admin/activity_update_forms': 'admin/admin_activity_controller@updateActivityForms#demo',
	'admin/activity_clear': 'admin/admin_activity_controller@clearActivityAll#demo',
	'admin/activity_del': 'admin/admin_activity_controller@delActivity#demo',
	'admin/activity_sort': 'admin/admin_activity_controller@sortActivity#demo',
	'admin/activity_vouch': 'admin/admin_activity_controller@vouchActivity#demo',
	'admin/activity_status': 'admin/admin_activity_controller@statusActivity#demo',
	'admin/activity_join_list': 'admin/admin_activity_controller@getActivityJoinList',
	'admin/activity_join_status': 'admin/admin_activity_controller@statusActivityJoin#demo', 
	'admin/activity_join_del': 'admin/admin_activity_controller@delActivityJoin#demo',
	'admin/activity_join_data_get': 'admin/admin_activity_controller@activityJoinDataGet',
	'admin/activity_join_data_export': 'admin/admin_activity_controller@activityJoinDataExport',
	'admin/activity_join_data_del': 'admin/admin_activity_controller@activityJoinDataDel',


	// 分类 
	'cate/view': 'cate_controller@viewCate',
	'cate/all_options': 'cate_controller@getAllCateOptions',
	'cate/list': 'cate_controller@getCateList',

	'admin/cate_list': 'admin/admin_cate_controller@getAdminCateList',
	'admin/cate_insert': 'admin/admin_cate_controller@insertCate#demo',
	'admin/cate_del': 'admin/admin_cate_controller@delCate#demo',
	'admin/cate_detail': 'admin/admin_cate_controller@getCateDetail',
	'admin/cate_edit': 'admin/admin_cate_controller@editCate#demo',
	'admin/cate_status': 'admin/admin_cate_controller@statusCate#demo',
	'admin/cate_vouch': 'admin/admin_cate_controller@vouchCate#demo',
	'admin/cate_sort': 'admin/admin_cate_controller@sortCate#demo',
    'admin/cate_update_forms': 'admin/admin_cate_controller@updateCateForms#demo',

 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\activity_service.js
--------------------------------------------------
/**
 * Notes: 职位模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-23 07:48:00 
 */

const BaseProjectService = require('./base_project_service.js');
const util = require('../../../framework/utils/util.js');

const dataUtil = require('../../../framework/utils/data_util.js');
const ActivityModel = require('../model/activity_model.js');
const UserModel = require('../model/user_model.js');
const CateModel = require('../model/cate_model.js');
const ActivityJoinModel = require('../model/activity_join_model.js');

class ActivityService extends BaseProjectService {

	async getMyStat(userId) {
		let status0Cnt = await ActivityJoinModel.count({ ACTIVITY_JOIN_STATUS: 0, ACTIVITY_JOIN_USER_ID: userId });
		let status1Cnt = await ActivityJoinModel.count({ ACTIVITY_JOIN_STATUS: 1, ACTIVITY_JOIN_USER_ID: userId });
		let status99Cnt = await ActivityJoinModel.count({ ACTIVITY_JOIN_STATUS: 99, ACTIVITY_JOIN_USER_ID: userId });
		let stat = {
			status0Cnt,
			status1Cnt,
			status99Cnt,
		}
		return stat;
	}

	// 获取当前职位状态
	getJoinStatusDesc(activity) {
		let timestamp = this._timestamp;

		if (activity.ACTIVITY_STATUS == 0)
			return '职位已停止招聘';
		else if (activity.ACTIVITY_END <= timestamp)
			return '申请已结束';
		else if (activity.ACTIVITY_MAX_CNT > 0
			&& activity.ACTIVITY_JOIN_CNT >= activity.ACTIVITY_MAX_CNT)
			return '申请已满';
		else
			return '招聘中';
	}

	/** 浏览信息 */
	async viewActivity(userId, id) {

		let fields = '*';

		let where = {
			_id: id,
			ACTIVITY_STATUS: ActivityModel.STATUS.COMM
		}
		let activity = await ActivityModel.getOne(where, fields);
		if (!activity) return null;

		ActivityModel.inc(id, 'ACTIVITY_VIEW_CNT', 1);

		// 判断是否有申请
		let whereJoin = {
			ACTIVITY_JOIN_USER_ID: userId,
			ACTIVITY_JOIN_ACTIVITY_ID: id,
		}
		let activityJoin = await ActivityJoinModel.getOne(whereJoin);
		if (activityJoin && activityJoin.ACTIVITY_JOIN_STATUS == ActivityJoinModel.STATUS.WAIT) {
			activity.myActivityJoinId = activityJoin._id;
			activity.myActivityJoinTag = '待审核';
		}
		else if (activityJoin && activityJoin.ACTIVITY_JOIN_STATUS == ActivityJoinModel.STATUS.SUCC) {
			activity.myActivityJoinId = activityJoin._id;
			activity.myActivityJoinTag = '已录用';
		}
		else if (activityJoin && activityJoin.ACTIVITY_JOIN_STATUS == ActivityJoinModel.STATUS.ADMIN_CANCEL) {
			activity.myActivityJoinId = '';
			activity.myActivityJoinTag = '未被录用';
		}

		else {
			activity.myActivityJoinId = '';
			activity.myActivityJoinTag = '';
		}

		// 企业信息
		if (activity.ACTIVITY_CATE_ID) {
			let cate = await CateModel.getOne(activity.ACTIVITY_CATE_ID);
			if (cate) activity.cate = cate;
		}


		return activity;
	}

	/** 取得分页列表 */
	async getActivityList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序 
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'ACTIVITY_ORDER': 'asc',
			'ACTIVITY_END': 'desc',
			'ACTIVITY_ADD_TIME': 'desc'
		};
		let fields = 'ACTIVITY_JOIN_CNT,ACTIVITY_OBJ,ACTIVITY_VIEW_CNT,ACTIVITY_TITLE,ACTIVITY_MAX_CNT,ACTIVITY_START,ACTIVITY_END,ACTIVITY_ORDER,ACTIVITY_STATUS,ACTIVITY_CATE_NAME,ACTIVITY_OBJ,cate.CATE_TITLE,cate.CATE_OBJ.cover';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};

		where.and.ACTIVITY_STATUS = ActivityModel.STATUS.COMM; // 状态  


		if (util.isDefined(search) && search) {
			where.or = [
				{ ACTIVITY_TITLE: ['like', search] },
				{ 'cate.CATE_TITLE': ['like', search] },
			];
		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'type': {
					if (sortVal) where.and['ACTIVITY_OBJ.type'] = String(sortVal);
					break;
				}
				case 'pay': {
					if (sortVal) where.and['ACTIVITY_OBJ.pay'] = String(sortVal);
					break;
				}
				case 'biz': {
					if (sortVal) where.and['ACTIVITY_OBJ.biz'] = String(sortVal);
					break;
				}
				case 'sort': {
					// 排序
					orderBy = this.fmtOrderBySort(sortVal, 'ACTIVITY_ADD_TIME');
					break;
				}
			}
		}

		let joinParams = {
			from: CateModel.CL,
			localField: 'ACTIVITY_CATE_ID',
			foreignField: '_id',
			as: 'cate',
		};

		return await ActivityModel.getListJoin(joinParams, where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	/** 取得我的申请分页列表 */
	async getMyActivityJoinList(userId, {
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序 
		page,
		size,
		isTotal = true,
		oldTotal
	}) {
		orderBy = orderBy || {
			'ACTIVITY_JOIN_ADD_TIME': 'desc'
		};
		let fields = '*';

		let where = {
			ACTIVITY_JOIN_USER_ID: userId
		};

		if (util.isDefined(search) && search) {
			where['ACTIVITY_JOIN_ACTIVITY_TITLE'] = {
				$regex: '.*' + search,
				$options: 'i'
			};
		} else if (sortType) {
			// 搜索菜单
			switch (sortType) {
				case 'timedesc': { //按时间倒序
					orderBy = {
						'activity.ACTIVITY_START': 'desc',
						'ACTIVITY_JOIN_ADD_TIME': 'desc'
					};
					break;
				}
				case 'timeasc': { //按时间正序
					orderBy = {
						'activity.ACTIVITY_START': 'asc',
						'ACTIVITY_JOIN_ADD_TIME': 'asc'
					};
					break;
				}
				case 'status': {
					where.ACTIVITY_JOIN_STATUS = Number(sortVal);
					break;
				}

			}
		}

		let result = await ActivityJoinModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);

		return result;
	}

	/** 取得我的申请详情 */
	async getMyActivityJoinDetail(userId, activityJoinId) {

		let fields = '*';

		let where = {
			_id: activityJoinId,
			ACTIVITY_JOIN_USER_ID: userId
		};
		let activityJoin = await ActivityJoinModel.getOne(where, fields);
		if (activityJoin) {
			activityJoin.activity = await ActivityModel.getOne(activityJoin.ACTIVITY_JOIN_ACTIVITY_ID, 'ACTIVITY_TITLE,ACTIVITY_START,ACTIVITY_END');
		}
		return activityJoin;
	}

	//################## 申请
	// 申请职位
	async activityJoin(userId, activityId, forms) {
		try {
			// 数据校验
			if (!userId) this.AppError('用户ID不能为空');
			if (!activityId) this.AppError('职位ID不能为空');
			if (!Array.isArray(forms)) this.AppError('表单数据必须为数组');

			// 查询用户是否存在
			let user = await UserModel.getOne({ USER_MINI_OPENID: userId });
			if (!user) {
				this.AppError('用户不存在');
				return;
			}

			// 查询职位是否存在
			let activity = await ActivityModel.getOne(activityId);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			if (activity.ACTIVITY_STATUS == 0) this.AppError('该职位已停止招聘');

			// 查询是否已经申请过
			let where = {
				ACTIVITY_JOIN_USER_ID: userId,
				ACTIVITY_JOIN_ACTIVITY_ID: activityId
			}
			let cnt = await ActivityJoinModel.count(where);
			if (cnt > 0) {
				this.AppError('您已经申请过此职位');
				return;
			}

			// 检查申请人数是否已满
			if (activity.ACTIVITY_MAX_CNT > 0) {
				let whereCnt = {
					ACTIVITY_JOIN_ACTIVITY_ID: activityId,
					ACTIVITY_JOIN_STATUS: ActivityJoinModel.STATUS.SUCC
				}
				let joinCnt = await ActivityJoinModel.count(whereCnt);
				if (joinCnt >= activity.ACTIVITY_MAX_CNT) {
					this.AppError('该职位申请人数已满');
					return;
				}
			}

			// 检查申请时间
			let now = this._timestamp;
			if (now < activity.ACTIVITY_START || now > activity.ACTIVITY_END) {
				this.AppError('该职位不在申请时间范围内');
				return;
			}
             // 根据职位审核设置决定申请状态
        let joinStatus = activity.ACTIVITY_CHECK_SET == 0 ? 
        ActivityJoinModel.STATUS.SUCC :  // 无需审核，直接通过
        ActivityJoinModel.STATUS.WAIT;   // 需要审核，设为待审核
			// 入库
			let data = {
				ACTIVITY_JOIN_USER_ID: userId,
				ACTIVITY_JOIN_ACTIVITY_ID: activityId,
				ACTIVITY_JOIN_ACTIVITY_TITLE: activity.ACTIVITY_TITLE,
				ACTIVITY_JOIN_ACTIVITY_CATE_NAME: activity.ACTIVITY_CATE_NAME,
				ACTIVITY_JOIN_STATUS: joinStatus,
				ACTIVITY_JOIN_FORMS: forms,
				ACTIVITY_JOIN_OBJ: dataUtil.dbForms2Obj(forms)
			}

			let joinId = await ActivityJoinModel.insert(data);

			// 统计
			await this.statActivityJoin(activityId);

			return {
				joinId
			};

		} catch (err) {
			if (err.name == 'AppError') {
                // 业务错误直接抛出，保留具体错误信息
                throw err;
            } else {
                // 系统错误记录日志，返回友好提示
                console.error(err);
                this.AppError('申请失败，系统异常，请稍后重试');
            }
		}
	}


	async statActivityJoin(id) {
		// 申请数
		let where = {
			ACTIVITY_JOIN_ACTIVITY_ID: id,
			ACTIVITY_JOIN_STATUS: ['in', [ActivityJoinModel.STATUS.WAIT, ActivityJoinModel.STATUS.SUCC]]
		}
		let cnt = await ActivityJoinModel.count(where);


		// 用户列表
		where = {
			ACTIVITY_JOIN_ACTIVITY_ID: id,
			ACTIVITY_JOIN_STATUS: ActivityJoinModel.STATUS.SUCC
		}
		let joinParams = {
			from: UserModel.CL,
			localField: 'ACTIVITY_JOIN_USER_ID',
			foreignField: 'USER_MINI_OPENID',
			as: 'user',
		};
		let orderBy = {
			ACTIVITY_JOIN_ADD_TIME: 'desc'
		}
		let list = await ActivityJoinModel.getListJoin(joinParams, where, 'ACTIVITY_JOIN_ADD_TIME,user.USER_MINI_OPENID,user.USER_NAME,user.USER_PIC', orderBy, 1, 6, false, 0);
		list = list.list;

		for (let k = 0; k < list.length; k++) {
			list[k] = list[k].user;
		}

		await ActivityModel.edit(id, { ACTIVITY_JOIN_CNT: cnt });
	}

	/** 取消我的申请 只有成功和待审核可以取消 取消即为删除记录 */
	async cancelMyActivityJoin(userId, activityJoinId) {
		let where = {
			ACTIVITY_JOIN_USER_ID: userId,
			_id: activityJoinId,
			ACTIVITY_JOIN_STATUS: ['in', [ActivityJoinModel.STATUS.WAIT, ActivityJoinModel.STATUS.SUCC]]
		};
		let activityJoin = await ActivityJoinModel.getOne(where);

		if (!activityJoin) {
			this.AppError('未找到可取消的申请记录');
		}


		let activity = await ActivityModel.getOne(activityJoin.ACTIVITY_JOIN_ACTIVITY_ID);
		if (!activity)
			this.AppError('该职位不存在');

		if (activity.ACTIVITY_CANCEL_SET == 2 && activity.ACTIVITY_END <= this._timestamp)
			this.AppError('该职位已经结束申请，无法取消');

		if (activity.ACTIVITY_CANCEL_SET == 0)
			this.AppError('该申请不能取消');


		await ActivityJoinModel.del(where);

		// 统计
		await this.statActivityJoin(activityJoin.ACTIVITY_JOIN_ACTIVITY_ID);
	}


}

module.exports = ActivityService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\base_project_service.js
--------------------------------------------------
/**
 * Notes: 业务基类 
 * Date: 2021-03-15 04:00:00 
 */

const dbUtil = require('../../../framework/database/db_util.js');
const util = require('../../../framework/utils/util.js');
const AdminModel = require('../../../framework/platform/model/admin_model.js');
const NewsModel = require('../model/news_model.js');
const CateModel = require('../model/cate_model.js');
const ActivityModel = require('../model/activity_model.js');
const BaseService = require('../../../framework/platform/service/base_service.js');

class BaseProjectService extends BaseService {
	getProjectId() {
		return util.getProjectId();
	}

	async initSetup() {
		let F = (c) => 'bx_' + c;
		const INSTALL_CL = 'setup_jobpart';
		const COLLECTIONS = ['setup', 'admin', 'log', 'news', 'activity', 'activity_join', 'cate', 'fav', 'user'];
		const CONST_PIC = '/images/cover.gif';


		const NEWS_CATE = '1=通知公告';
		const ACTIVITY_CATE = '1=职位';
		const CATE_CATE = '1=企业';


		if (await dbUtil.isExistCollection(F(INSTALL_CL))) {
			return;
		}

		console.log('### initSetup...');

		let arr = COLLECTIONS;
		for (let k = 0; k < arr.length; k++) {
			if (!await dbUtil.isExistCollection(F(arr[k]))) {
				await dbUtil.createCollection(F(arr[k]));
			}
		}

		if (await dbUtil.isExistCollection(F('admin'))) {
			let adminCnt = await AdminModel.count({});
			if (adminCnt == 0) {
				let data = {};
				data.ADMIN_NAME = 'admin';
				data.ADMIN_PASSWORD = 'e10adc3949ba59abbe56e057f20f883e';
				data.ADMIN_DESC = '超管';
				data.ADMIN_TYPE = 1;
				await AdminModel.insert(data);
			}
		}


		if (await dbUtil.isExistCollection(F('news'))) {
			let newsCnt = await NewsModel.count({});
			if (newsCnt == 0) {
				let newsArr = NEWS_CATE.split(',');
				for (let j in newsArr) {
					let title = newsArr[j].split('=')[1];
					let cateId = newsArr[j].split('=')[0];

					let data = {};
					data.NEWS_TITLE = title + '标题1';
					data.NEWS_DESC = title + '简介1';
					data.NEWS_CATE_ID = cateId;
					data.NEWS_CATE_NAME = title;
					data.NEWS_CONTENT = [{ type: 'text', val: title + '内容1' }];
					data.NEWS_PIC = [CONST_PIC];

					await NewsModel.insert(data);
				}
			}
		}

		if (await dbUtil.isExistCollection(F('activity'))) {
			let activityCnt = await ActivityModel.count({});
			if (activityCnt == 0) {
				let activityArr = ACTIVITY_CATE.split(',');
				for (let j in activityArr) {
					let title = activityArr[j].split('=')[1];
					let cateId = activityArr[j].split('=')[0];

					let data = {};
					data.ACTIVITY_TITLE = title + '1';
					data.ACTIVITY_CATE_ID = cateId;
					data.ACTIVITY_CATE_NAME = '企业1'; 
					data.ACTIVITY_START = this._timestamp;
					data.ACTIVITY_END = this._timestamp + 86400 * 1000 * 30;
					data.ACTIVITY_JOIN_FORMS = [

					];
					data.ACTIVITY_OBJ = {
						cover: [CONST_PIC],
						type: '临时兼职',
						pay: '日结',
						biz: '主播',
						money: '100/天'
					};

					await ActivityModel.insert(data);
				}
			}
		}

		if (await dbUtil.isExistCollection(F('cate'))) {
			let cateCnt = await CateModel.count({});
			if (cateCnt == 0) {
				let cateArr = CATE_CATE.split(',');
				for (let j in cateArr) {
					let title = cateArr[j].split('=')[1];
					let cateId = cateArr[j].split('=')[0];

					let data = {};
					data.CATE_TITLE = title + '1'; 
					data.CATE_OBJ = {
						cover: [CONST_PIC],
						type: '国企',
						size: '大型',
						trade: '娱乐',
						money: '五星推荐'
					};

					await CateModel.insert(data);
				}
			}
		}


		if (!await dbUtil.isExistCollection(F(INSTALL_CL))) {
			await dbUtil.createCollection(F(INSTALL_CL));
		}
	}

}

module.exports = BaseProjectService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\cate_service.js
--------------------------------------------------
﻿/**
 * Notes: 分类管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2023-11-20 07:48:00 
 */

const BaseProjectService = require('./base_project_service.js');
const CateModel = require('../model/cate_model.js');
const util = require('../../../framework/utils/util.js');

class CateService extends BaseProjectService {

	async getAllCateOptions(status = 1) {
		let cateList = await CateModel.getAll({ CATE_STATUS: status }, '*', { 'CATE_ORDER': 'asc', 'CATE_ADD_TIME': 'desc' });

		let arr = [];
		for (let k in cateList) {
			let cateId = cateList[k]._id;

			let cateNode = {
				level: 1,
				label: cateList[k].CATE_TITLE,
				val: cateId,
				order: cateList[k].CATE_ORDER,
				obj: cateList[k].CATE_OBJ,
				parentId: ''
			}

			arr.push(cateNode);
		}

		return arr;
	}


	async getCateList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序 
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'CATE_ORDER': 'asc',
			'CATE_ADD_TIME': 'desc'
		};
		let fields = '*';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};

		where.and.CATE_STATUS = 1; // 状态  


		if (util.isDefined(search) && search) {
			where.or = [
				{ CATE_TITLE: ['like', search] },
			];
		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'sort': {
					// 排序
					orderBy = this.fmtOrderBySort(sortVal, 'CATE_ADD_TIME');
					break;
				}
				case 'trade': {
					where.and['CATE_OBJ.trade'] = sortVal;
					break;
				}
				case 'size': {
					where.and['CATE_OBJ.size'] = sortVal;
					break;
				}
				case 'type': {
					where.and['CATE_OBJ.type'] = sortVal;
					break;
				}
				case 'star': {
					where.and['CATE_OBJ.star'] = sortVal;
					break;
				}
			}
		}

		return await CateModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	async viewCate(id) {

		let fields = '*';

		let where = {
			_id: id,
			CATE_STATUS: 1
		}
		let cate = await CateModel.getOne(where, fields);
		if (!cate) return null;

		return cate;
	}
}

module.exports = CateService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\fav_service.js
--------------------------------------------------
/**
 * Notes: 收藏模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-24 07:48:00 
 */

const BaseProjectService = require('./base_project_service.js');
const util = require('../../../framework/utils/util.js');
const FavModel = require('../model/fav_model.js'); 

class FavService extends BaseProjectService {

	/** 是否收藏 */
	async isFav(userId, oid) {
		let where = {
			FAV_OID: oid,
			FAV_USER_ID: userId
		}
		let isFav = await FavModel.count(where);
		return {
			isFav
		};
	}

	/**
	 * 更新某人收藏
	 * @param {*} userId 
	 * @param {*} oid 
	 * @param {*} cancelIfExist  已收藏的情况下是否取消
	 */
	async updateFav(userId, oid, title, type, path, cancelIfExist = true) {

		let {
			isFav
		} = await this.isFav(userId, oid);
		if (isFav > 0) {
			if (cancelIfExist) {
				// 取消
				await this.delFav(userId, oid);
				return {
					isFav: 0
				};
			} else
				return {
					isFav: 1
				};
		}


		// 保存 
		let data = {};
		data.FAV_TITLE = title;
		data.FAV_OID = oid;
		data.FAV_TYPE = type;
		data.FAV_PATH = path;
		data.FAV_USER_ID = userId; 

		await FavModel.insert(data);
 
		return {
			isFav: 1
		};
	}

	/** 删除收藏 */
	async delFav(userId, oid) {
		let where = {
			FAV_OID: oid,
			FAV_USER_ID: userId
		}
		let effect = await FavModel.del(where);

		return {
			effect
		};
	}

	/** 我的收藏列表 */
	async getMyFavList(userId, {
		search, // 搜索条件 
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序  
		page,
		size,
		isTotal = true,
		oldTotal = 0
	}) {
		orderBy = orderBy || {
			'FAV_ADD_TIME': 'desc'
		};
		let fields = 'FAV_TITLE,FAV_ADD_TIME,FAV_OID,FAV_TYPE,FAV_PATH';

		let where = {};
		if (util.isDefined(search) && search) {
			where.FAV_TITLE = {
				$regex: '.*' + search,
				$options: 'i'
			};
		}
		where.FAV_USER_ID = userId;

		return await FavModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);

	}

}

module.exports = FavService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\home_service.js
--------------------------------------------------
/**
 * Notes: 全局/首页模块业务逻辑
 * Date: 2021-03-15 04:00:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectService = require('./base_project_service.js');
const setupUtil = require('../../../framework/utils/setup/setup_util.js');
const timeUtil = require('../../../framework/utils/time_util.js');
const ActivityModel = require('../model/activity_model.js');
const CateModel = require('../model/cate_model.js');
const NewsModel = require('../model/news_model.js');

class HomeService extends BaseProjectService {

	async getSetup(key) {
		return await setupUtil.get(key);
	}

	/**首页列表 */
	async getHomeList() {

		let fields = 'CATE_TITLE,CATE_OBJ.cover';
		let where = {
			CATE_STATUS: 1
		}
		let cateList = await CateModel.getAll(where, fields, { 'CATE_VOUCH': 'desc', 'CATE_ORDER': 'asc', 'CATE_ADD_TIME': 'desc' }, 10);

		where = {
			NEWS_STATUS: 1,
		};
		let orderBy = {
			'NEWS_VOUCH': 'desc',
			'NEWS_ORDER': 'asc',
			'NEWS_ADD_TIME': 'desc'
		}
		fields = 'NEWS_TITLE,NEWS_CATE_NAME,NEWS_PIC,NEWS_DESC,NEWS_ADD_TIME';
		let newsList = await NewsModel.getAll(where, fields, orderBy, 10);


		where = {
			ACTIVITY_STATUS: 1,
		};
		orderBy = {
			'ACTIVITY_VOUCH': 'desc',
			'ACTIVITY_ORDER': 'asc',
			'ACTIVITY_END': 'desc',
			'ACTIVITY_ADD_TIME': 'desc'
		}
		fields = 'ACTIVITY_TITLE,ACTIVITY_OBJ.money,ACTIVITY_OBJ.type,ACTIVITY_OBJ.biz,ACTIVITY_MAX_CNT';
		let activityList = await ActivityModel.getAll(where, fields, orderBy, 8);

		return { newsList, cateList, activityList }

	}
}

module.exports = HomeService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\news_service.js
--------------------------------------------------
/**
 * Notes: 资讯模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-10-29 07:48:00 
 */

const BaseProjectService = require('./base_project_service.js');
const util = require('../../../framework/utils/util.js');
const NewsModel = require('../model/news_model.js');

class NewsService extends BaseProjectService {

	/** 浏览资讯信息 */
	async viewNews(id) {

		let fields = '*';

		let where = {
			_id: id,
			NEWS_STATUS: 1
		}
		let news = await NewsModel.getOne(where, fields);
		if (!news) return null;



		return news;
	}


	/** 取得分页列表 */
	async getNewsList({
		cateId, 
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序 
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'NEWS_ORDER': 'asc',
			'NEWS_ADD_TIME': 'desc'
		};
		let fields = 'NEWS_PIC,NEWS_VIEW_CNT,NEWS_TITLE,NEWS_DESC,NEWS_CATE_ID,NEWS_ADD_TIME,NEWS_ORDER,NEWS_STATUS,NEWS_CATE_NAME,NEWS_OBJ';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};
		where.and.NEWS_STATUS = 1; // 状态 

		if (cateId && cateId !== '0') where.and.NEWS_CATE_ID = cateId;

		if (util.isDefined(search) && search) {
			where.or = [
				{ NEWS_TITLE: ['like', search] },
			];
		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'sort': {
					orderBy = this.fmtOrderBySort(sortVal, 'NEWS_ADD_TIME');
					break;
				}
				case 'cateId': {
					if (sortVal) where.and.NEWS_CATE_ID = String(sortVal);
					break;
				}
			}
		}

		return await NewsModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}  

}

module.exports = NewsService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\passport_service.js
--------------------------------------------------
/**
 * Notes: passport模块业务逻辑 
 * Date: 2020-10-14 07:48:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectService = require('./base_project_service.js');
const cloudBase = require('../../../framework/cloud/cloud_base.js');
const UserModel = require('../model/user_model.js');
const dataUtil = require('../../../framework/utils/data_util.js');
const cloudUtil = require('../../../framework/cloud/cloud_util.js');

class PassportService extends BaseProjectService {

	// 注册
	async register(userId, {
		mobile,
		name,
		pic,
		forms,
		status
	}) {
		// 判断是否存在
		let where = {
			USER_MINI_OPENID: userId
		}
		let cnt = await UserModel.count(where);
		if (cnt > 0)
			return await this.login(userId);

		where = {
			USER_MOBILE: mobile
		}
		cnt = await UserModel.count(where);
		if (cnt > 0) this.AppError('该手机已注册');

		// 入库
		let data = {
			USER_MINI_OPENID: userId,
			USER_MOBILE: mobile,
			USER_NAME: name,
			USER_PIC: pic,
			USER_OBJ: dataUtil.dbForms2Obj(forms),
			USER_FORMS: forms,
			USER_STATUS: Number(status)
		}
		await UserModel.insert(data);

		return await this.login(userId);
	}

	/** 获取手机号码 */
	async getPhone(cloudID) {
		let cloud = cloudBase.getCloud();
		let res = await cloud.getOpenData({
			list: [cloudID], // 假设 event.openData.list 是一个 CloudID 字符串列表
		});
		if (res && res.list && res.list[0] && res.list[0].data) {

			let phone = res.list[0].data.phoneNumber;

			return phone;
		} else
			return '';
	}

	/** 取得我的用户信息 */
	async getMyDetail(userId) {
		let where = {
			USER_MINI_OPENID: userId
		}
		let fields = 'USER_PIC,USER_MOBILE,USER_NAME,USER_FORMS,USER_OBJ,USER_STATUS,USER_CHECK_REASON'
		return await UserModel.getOne(where, fields);
	}

	/** 修改用户资料 */
	async editBase(userId, {
		mobile,
		name,
		pic,
		forms
	}) {
		let whereMobile = {
			USER_MOBILE: mobile,
			USER_MINI_OPENID: ['<>', userId]
		}
		let cnt = await UserModel.count(whereMobile);
		if (cnt > 0) this.AppError('该手机已注册');

		let where = {
			USER_MINI_OPENID: userId
		}

		let user = await UserModel.getOne(where);
		if (!user) return; 


		let data = {
			USER_MOBILE: mobile,
			USER_NAME: name,
			USER_PIC: pic,
			USER_OBJ: dataUtil.dbForms2Obj(forms),
			USER_FORMS: forms,
		};

		if (user.USER_STATUS == UserModel.STATUS.UNCHECK)
			data.USER_STATUS = UserModel.STATUS.UNUSE;

		await UserModel.edit(where, data);

	}

	/** 登录 */
	async login(userId) {

		let where = {
			'USER_MINI_OPENID': userId
		};
		let fields = 'USER_ID,USER_MINI_OPENID,USER_NAME,USER_PIC,USER_STATUS';
		let user = await UserModel.getOne(where, fields);
		let token = {};
		if (user) {

			// 正常用户
			token.id = user.USER_MINI_OPENID;
			token.key = user.USER_ID;
			token.name = user.USER_NAME;
			token.pic = user.USER_PIC;
			token.status = user.USER_STATUS;

			// 异步更新最近更新时间
			let dataUpdate = {
				USER_LOGIN_TIME: this._timestamp
			};
			UserModel.edit(where, dataUpdate);
			UserModel.inc(where, 'USER_LOGIN_CNT', 1);

		} else
			token = null;

		return {
			token
		};
	}



}

module.exports = PassportService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_activity_service.js
--------------------------------------------------
/**
 * Notes: 职位后台管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-23 07:48:00 
 */

const BaseProjectAdminService = require('./base_project_admin_service.js');
const ActivityService = require('../activity_service.js');
const util = require('../../../../framework/utils/util.js');
const cloudUtil = require('../../../../framework/cloud/cloud_util.js');
const timeUtil = require('../../../../framework/utils/time_util.js');
const dataUtil = require('../../../../framework/utils/data_util.js');
const ActivityModel = require('../../model/activity_model.js');
const ActivityJoinModel = require('../../model/activity_join_model.js');
const exportUtil = require('../../../../framework/utils/export_util.js');
const CateModel = require('../../model/cate_model.js');
const UserModel = require('../../model/user_model.js');

// 导出申请数据KEY
const EXPORT_ACTIVITY_JOIN_DATA_KEY = 'EXPORT_ACTIVITY_JOIN_DATA';

class AdminActivityService extends BaseProjectAdminService {


	async statCateCnt(id) {
		if (!id) return;
		let cnt = await ActivityModel.count({ ACTIVITY_CATE_ID: id });
		await CateModel.edit(id, { CATE_CNT: cnt });
	}


	/**取得分页列表 */
	async getAdminActivityList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		whereEx, //附加查询条件
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'ACTIVITY_ORDER': 'asc',
			'ACTIVITY_END': 'desc',
			'ACTIVITY_ADD_TIME': 'desc'
		};
		let fields = 'ACTIVITY_JOIN_CNT,ACTIVITY_TITLE,ACTIVITY_CATE_ID,ACTIVITY_CATE_NAME,ACTIVITY_EDIT_TIME,ACTIVITY_ADD_TIME,ACTIVITY_ORDER,ACTIVITY_STATUS,ACTIVITY_VOUCH,ACTIVITY_MAX_CNT,ACTIVITY_START,ACTIVITY_END,ACTIVITY_CANCEL_SET,ACTIVITY_CHECK_SET,ACTIVITY_QR,ACTIVITY_OBJ';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};

		if (util.isDefined(search) && search) {
			where.or = [
				{ ACTIVITY_TITLE: ['like', search] },
				{ ACTIVITY_CATE_NAME: ['like', search] },
			];

		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'type': {
					if (sortVal) where.and['ACTIVITY_OBJ.type'] = String(sortVal);
					break;
				}
				case 'pay': {
					if (sortVal) where.and['ACTIVITY_OBJ.pay'] = String(sortVal);
					break;
				}
				case 'biz': {
					if (sortVal) where.and['ACTIVITY_OBJ.biz'] = String(sortVal);
					break;
				}
				case 'cateId': {
					where.and.ACTIVITY_CATE_ID = String(sortVal);
					break;
				}
				case 'status': {
					where.and.ACTIVITY_STATUS = Number(sortVal);
					break;
				}
				case 'vouch': {
					where.and.ACTIVITY_VOUCH = 1;
					break;
				}
				case 'top': {
					where.and.ACTIVITY_ORDER = 0;
					break;
				}
				case 'sort': {
					orderBy = this.fmtOrderBySort(sortVal, 'ACTIVITY_ADD_TIME');
					break;
				}
			}
		}

		return await ActivityModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	/**置顶与排序设定 */
	async sortActivity(id, sort) {
		try {
			// 数据校验
			if (!id) this.AppError('职位ID不能为空');
			if (sort < 0) this.AppError('排序号不能小于0');

			// 获取职位信息
			let activity = await ActivityModel.getOne(id);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 更新数据
			let data = {
				ACTIVITY_ORDER: sort,
				ACTIVITY_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await ActivityModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('排序操作失败，请重试');
		}
	}

	/**获取信息 */
	async getActivityDetail(id) {
		let fields = '*';

		let where = {
			_id: id
		}

		let activity = await ActivityModel.getOne(where, fields);
		if (!activity) return null;

		return activity;
	}


	/**首页设定 */
	async vouchActivity(id, vouch) {
		try {
			// 数据校验
			if (!id) this.AppError('职位ID不能为空');
			if (vouch !== 0 && vouch !== 1) this.AppError('推荐状态值错误');

			// 获取职位信息
			let activity = await ActivityModel.getOne(id);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 更新数据
			let data = {
				ACTIVITY_VOUCH: vouch,
				ACTIVITY_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await ActivityModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('首页推荐设置失败，请重试');
		}
	}

	/**添加 */
	async insertActivity({
		title,
		cateId,
		cateName,

		maxCnt,
		start,
		end,

		address,
		addressGeo,

		cancelSet,
		checkSet,

		order,
		forms,
		joinForms,
	}) {
		try {
			// 数据校验
			if (!title) this.AppError('职位名称不能为空');
			if (!address) this.AppError('工作地点不能为空');

			// 处理表单数据
			let activityObj = {};
			if (forms && forms.length > 0) {
				forms.forEach(form => {
					activityObj[form.mark] = form.val;
				});
			}

			// 转换时间
			let timestamp = Math.floor(new Date().getTime() / 1000);
			start = timeUtil.time2Timestamp(start);
			end = timeUtil.time2Timestamp(end);

			// 准备数据
			let data = {
				ACTIVITY_TITLE: title,
				ACTIVITY_CATE_ID: cateId,
				ACTIVITY_CATE_NAME: cateName,
				ACTIVITY_MAX_CNT: maxCnt,
				ACTIVITY_START: start,
				ACTIVITY_END: end,
				ACTIVITY_ADDRESS: address,
				ACTIVITY_ADDRESS_GEO: addressGeo,
				ACTIVITY_CANCEL_SET: cancelSet,
				ACTIVITY_CHECK_SET: checkSet,
				ACTIVITY_ORDER: order || 9999,
				ACTIVITY_STATUS: 1,
				ACTIVITY_FORMS: forms || [],
				ACTIVITY_JOIN_FORMS: joinForms || [],
				ACTIVITY_OBJ: activityObj,
				ACTIVITY_ADD_TIME: timestamp,
				ACTIVITY_EDIT_TIME: timestamp,
			}

			// 插入数据
			let id = await ActivityModel.insert(data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('添加失败，请重试');
		}
	}

	//#############################   
	/** 清空 */
	async clearActivityAll(activityId) {
		try {
			// 数据校验
			if (!activityId) this.AppError('职位ID不能为空');

			// 获取职位信息
			let activity = await ActivityModel.getOne(activityId);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 删除该职位下的所有申请记录
			await ActivityJoinModel.del({ ACTIVITY_JOIN_ACTIVITY_ID: activityId });

			// 更新职位的申请数量
			await ActivityModel.edit(activityId, { ACTIVITY_JOIN_CNT: 0 });

			return {
				id: activityId
			};

		} catch (err) {
			console.error(err);
			this.AppError('清空失败，请重试');
		}
	}


	/**删除数据 */
	async delActivity(id) {
		try {
			// 数据校验
			if (!id) this.AppError('职位ID不能为空');

			// 获取职位信息
			let activity = await ActivityModel.getOne(id);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 删除职位记录
			await ActivityModel.del(id);

			// 删除该职位下的所有申请记录
			await ActivityJoinModel.del({ ACTIVITY_JOIN_ACTIVITY_ID: id });

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('删除失败，请重试');
		}
	}

	// 更新forms信息
	async updateActivityForms({
		id,
		hasImageForms
	}) {
		try {
			// 数据校验
			if (!id) this.AppError('职位ID不能为空');

			// 获取职位信息
			let activity = await ActivityModel.getOne(id);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 获取原有表单数据
			let forms = activity.ACTIVITY_FORMS;
			if (!forms) forms = [];

			// 更新图片表单
			for (let i = 0; i < forms.length; i++) {
				for (let j = 0; j < hasImageForms.length; j++) {
					if (forms[i].mark == hasImageForms[j].mark) {
						forms[i].val = hasImageForms[j].val;
						break;
					}
				}
			}

			// 更新数据
			let data = {
				ACTIVITY_FORMS: forms,
				ACTIVITY_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await ActivityModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('更新失败，请重试');
		}
	}

	/**更新数据 */
	async editActivity({id, 
		title,
		cateId,
		cateName,
		maxCnt,
		start,
		end,
		address,
		addressGeo,
		checkSet,
		cancelSet,
		order,
		forms
	}) {
		try {
			// 数据校验 
			if (!id) this.AppError('职位ID不能为空');
			if (!title) this.AppError('职位标题不能为空');
			if (!cateId) this.AppError('企业不能为空');

			// 查询职位是否存在
			let activity = await ActivityModel.getOne(id);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 生成开始时间和结束时间
			let startTime = timeUtil.time2Timestamp(start);
			let endTime = timeUtil.time2Timestamp(end);
			if (startTime > endTime) this.AppError('开始时间不能大于结束时间');

			// 更新数据
			let data = {
				ACTIVITY_TITLE: title,
				ACTIVITY_CATE_ID: cateId,
				ACTIVITY_CATE_NAME: cateName,
				ACTIVITY_MAX_CNT: maxCnt,
				ACTIVITY_START: startTime,
				ACTIVITY_END: endTime,
				ACTIVITY_START_DAY: start,
				ACTIVITY_END_DAY: end,
				ACTIVITY_ORDER: order,
				ACTIVITY_CHECK_SET: checkSet,
				ACTIVITY_CANCEL_SET: cancelSet,
				ACTIVITY_ADDRESS: address,
				ACTIVITY_ADDRESS_GEO: addressGeo,
				ACTIVITY_FORMS: forms,
				ACTIVITY_OBJ: dataUtil.dbForms2Obj(forms),
				ACTIVITY_EDIT_TIME: timeUtil.time()
			}

			await ActivityModel.edit(id, data);

			// 更新对应企业的职位数量
			await this.statCateCnt(cateId);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('编辑失败，请重试');
		}
	}

	/**修改状态 */
	async statusActivity(id, status) {
		try {
			// 数据校验
			if (!id) this.AppError('职位ID不能为空');
			if (status !== 0 && status !== 1) this.AppError('状态值错误');

			// 获取职位信息
			let activity = await ActivityModel.getOne(id);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 更新数据
			let data = {
				ACTIVITY_STATUS: status,
				ACTIVITY_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await ActivityModel.edit(id, data);

			let statusDesc = (status == 0) ? '停用' : '正常';

			return {
				id,
				statusDesc
			};

		} catch (err) {
			console.error(err);
			this.AppError('状态修改失败，请重试');
		}
	}

	//#############################
	/**申请分页列表 */
	async getActivityJoinList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		activityId,
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'ACTIVITY_JOIN_ADD_TIME': 'desc'
		};
		let fields = 'ACTIVITY_JOIN_ACTIVITY_TITLE,ACTIVITY_JOIN_ACTIVITY_CATE_NAME,ACTIVITY_JOIN_ACTIVITY_ID,ACTIVITY_JOIN_ADD_TIME,ACTIVITY_JOIN_FORMS,ACTIVITY_JOIN_ID,ACTIVITY_JOIN_OBJ,ACTIVITY_JOIN_REASON,ACTIVITY_JOIN_STATUS,ACTIVITY_JOIN_USER_ID,user.USER_NAME,user.USER_MOBILE';

		let where = {
			ACTIVITY_JOIN_ACTIVITY_ID: activityId
		};
		if (util.isDefined(search) && search) {
			where['ACTIVITY_JOIN_FORMS.val'] = {
				$regex: '.*' + search,
				$options: 'i'
			};
		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'status':
					// 按类型  
					where.ACTIVITY_JOIN_STATUS = Number(sortVal);
					break;
			}
		}


		let joinParams = {
			from: UserModel.CL,
			localField: 'ACTIVITY_JOIN_USER_ID',
			foreignField: 'USER_MINI_OPENID',
			as: 'user',
		};

		return await ActivityJoinModel.getListJoin(joinParams, where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	/**修改申请状态  
	 */
	async statusActivityJoin(activityJoinId, status, reason = '') {
		try {
			// 数据校验
			if (!activityJoinId) this.AppError('预约记录ID不能为空');

			// 获取申请记录
			let activityJoin = await ActivityJoinModel.getOne(activityJoinId);
			if (!activityJoin) {
				this.AppError('预约记录不存在');
				return;
			}

			// 更新数据
			let data = {
				ACTIVITY_JOIN_STATUS: status,
				ACTIVITY_JOIN_REASON: reason,
				ACTIVITY_JOIN_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await ActivityJoinModel.edit(activityJoinId, data);

			return {
				id: activityJoinId
			};

		} catch (err) {
			console.error(err);
			this.AppError('状态修改失败，请重试');
		}
	}




	/** 删除申请 */
	async delActivityJoin(activityJoinId) {
		try {
			// 数据校验
			if (!activityJoinId) this.AppError('预约记录ID不能为空');

			// 获取申请记录
			let activityJoin = await ActivityJoinModel.getOne(activityJoinId);
			if (!activityJoin) {
				this.AppError('预约记录不存在');
				return;
			}

			// 删除申请记录
			await ActivityJoinModel.del(activityJoinId);

			// 更新对应职位的申请数量
			let activityId = activityJoin.ACTIVITY_JOIN_ACTIVITY_ID;
			let cnt = await ActivityJoinModel.count({ ACTIVITY_JOIN_ACTIVITY_ID: activityId });
			await ActivityModel.edit(activityId, { ACTIVITY_JOIN_CNT: cnt });

			return {
				id: activityJoinId
			};

		} catch (err) {
			console.error(err);
			this.AppError('删除失败，请重试');
		}
	}


	// #####################导出申请数据
	/**获取申请数据 */
	async getActivityJoinDataURL() {
		return await exportUtil.getExportDataURL(EXPORT_ACTIVITY_JOIN_DATA_KEY);
	}

	/**删除申请数据 */
	async deleteActivityJoinDataExcel() {
		return await exportUtil.deleteDataExcel(EXPORT_ACTIVITY_JOIN_DATA_KEY);
	}

	/**导出申请数据 */
	async exportActivityJoinDataExcel({
		activityId,
		status
	}) {
		try {
			// 数据校验
			if (!activityId) this.AppError('职位ID不能为空');

			// 获取职位信息
			let activity = await ActivityModel.getOne(activityId);
			if (!activity) {
				this.AppError('职位不存在');
				return;
			}

			// 查询条件
			let where = {
				ACTIVITY_JOIN_ACTIVITY_ID: activityId
			};
			if (status !== -1) where.ACTIVITY_JOIN_STATUS = status;

			// 查询申请记录
			let orderBy = {
				ACTIVITY_JOIN_ADD_TIME: 'desc'
			};
			let list = await ActivityJoinModel.getAll(where, 'ACTIVITY_JOIN_FORMS,ACTIVITY_JOIN_STATUS,ACTIVITY_JOIN_ADD_TIME', orderBy);

			// 处理数据
			let data = [];
			for (let k = 0; k < list.length; k++) {
				let forms = list[k].ACTIVITY_JOIN_FORMS;
				let row = {};
				for (let j in forms) {
					row[forms[j].title] = forms[j].val;
				}
				row['申请时间'] = timeUtil.timestamp2Time(list[k].ACTIVITY_JOIN_ADD_TIME);
				row['状态'] = this.getJoinStatusDesc(list[k].ACTIVITY_JOIN_STATUS);
				data.push(row);
			}

			// 生成Excel
			let filename = `${activity.ACTIVITY_TITLE}申请名单.xlsx`;
			await exportUtil.exportDataExcel(EXPORT_ACTIVITY_JOIN_DATA_KEY, filename, data);

			return {
				downloadUrl: await exportUtil.getExportDataURL(EXPORT_ACTIVITY_JOIN_DATA_KEY)
			};

		} catch (err) {
			console.error(err);
			this.AppError('导出失败，请重试');
		}
	}
}

module.exports = AdminActivityService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_cate_service.js
--------------------------------------------------
﻿/**
 * Notes: 活动后台管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-23 07:48:00 
 */

const BaseProjectAdminService = require('./base_project_admin_service.js');
const util = require('../../../../framework/utils/util.js');
const dataUtil = require('../../../../framework/utils/data_util.js');
const cloudUtil = require('../../../../framework/cloud/cloud_util.js');
const CateModel = require('../../model/cate_model.js');
const ActivityModel = require('../../model/activity_model.js');

class AdminCateService extends BaseProjectAdminService {


	async sortCate(id, sort) {
		try {
			// 数据校验
			if (!id) this.AppError('分类ID不能为空');
			if (sort < 0) this.AppError('排序号不能小于0');

			// 获取分类信息
			let cate = await CateModel.getOne(id);
			if (!cate) {
				this.AppError('分类不存在');
				return;
			}

			// 更新数据
			let data = {
				CATE_ORDER: sort,
				CATE_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await CateModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('排序操作失败，请重试');
		}
	}

	async statusCate(id, status) {
		try {
			// 数据校验
			if (!id) this.AppError('分类ID不能为空');
			if (status !== 0 && status !== 1) this.AppError('状态值错误');

			// 获取分类信息
			let cate = await CateModel.getOne(id);
			if (!cate) {
				this.AppError('分类不存在');
				return;
			}

			// 更新数据
			let data = {
				CATE_STATUS: status,
				CATE_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await CateModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('状态修改失败，请重试');
		}
	}

	async getAdminCateList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		whereEx, //附加查询条件
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'CATE_ORDER': 'asc',
			'CATE_ADD_TIME': 'desc'
		};
		let fields = 'CATE_OBJ,CATE_VOUCH,CATE_ORDER,CATE_STATUS,CATE_TITLE,CATE_CNT,CATE_QR';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};

		if (util.isDefined(search) && search) {
			where.or = [{
				CATE_TITLE: ['like', search]
			},];

		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'vouch': {
					where.and.CATE_VOUCH = 1;
					break;
				}
				case 'trade': {
					where.and['CATE_OBJ.trade'] = sortVal;
					break;
				}
				case 'size': {
					where.and['CATE_OBJ.size'] = sortVal;
					break;
				}
				case 'type': {
					where.and['CATE_OBJ.type'] = sortVal;
					break;
				}
				case 'star': {
					where.and['CATE_OBJ.star'] = sortVal;
					break;
				}
				case 'top': {
					where.and.CATE_ORDER = 0;
					break;
				}
				case 'sort': {
					orderBy = this.fmtOrderBySort(sortVal, 'CATE_ADD_TIME');
					break;
				}
				case 'status':
					// 按类型
					where.and.CATE_STATUS = Number(sortVal);
					break;
			}
		}

		return await CateModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	async delCate(id) {
		try {
			// 数据校验
			if (!id) this.AppError('分类ID不能为空');

			// 获取分类信息
			let cate = await CateModel.getOne(id);
			if (!cate) {
				this.AppError('分类不存在');
				return;
			}

			// 判断分类下是否有职位
			let activityCount = await ActivityModel.count({
				ACTIVITY_CATE_ID: id
			});
			if (activityCount > 0) {
				this.AppError('该分类下还有职位信息，不能删除');
				return;
			}

			// 删除分类
			await CateModel.del(id);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('删除失败，请重试');
		}
	}

   
   /**
     * 插入分类数据
     * @param {Object} param0
     * @param {string} title 分类标题
     * @param {number} order 排序号
     * @param {Array} forms 表单数据
     */
    async insertCate({ title, order, forms }) {
        try {
            console.log('准备插入分类数据:');
            console.log('Title:', title);
            console.log('Order:', order);
            console.log('Forms:', forms);

            // 处理表单数据
            let cateObj = {};
            if (forms && forms.length > 0) {
                forms.forEach(form => {
                    cateObj[form.mark] = form.val; // 将表单的 mark 字段作为对象的键，val 作为值
                });
            }

            // 准备插入数据
            let data = {
                CATE_TITLE: title,
                CATE_ORDER: order || 9999, // 排序号，默认为 9999
                CATE_FORMS: forms || [], // 原始表单数据
                CATE_OBJ: cateObj, // 处理后的对象数据
                CATE_STATUS: 1, // 默认状态为 1
                CATE_ADD_TIME: Math.floor(new Date().getTime() / 1000), // 当前时间戳
                CATE_EDIT_TIME: Math.floor(new Date().getTime() / 1000), // 当前时间戳
                _pid: this.getProjectId(), // 项目 ID
            };

            // 插入数据
            let result = await CateModel.insert(data);
            console.log('分类数据插入成功:', result);

            return {
                code: 200,
                msg: '分类数据插入成功',
                id: result,
            };
        } catch (err) {
            console.error('分类数据插入失败:', err);

            return {
                code: 500,
                msg: '分类数据插入失败',
                error: err,
            };
        }
    }

	async getCateDetail(id) {
		let fields = '*';

		let cate = await CateModel.getOne(id, fields);
		if (!cate) return null;

		return cate;
	}

	/**首页设定 */
	async vouchCate(id, vouch) {
		try {
			// 数据校验
			if (!id) this.AppError('分类ID不能为空');
			if (vouch !== 0 && vouch !== 1) this.AppError('推荐状态值错误');

			// 获取分类信息
			let cate = await CateModel.getOne(id);
			if (!cate) {
				this.AppError('分类不存在');
				return;
			}

			// 更新数据
			let data = {
				CATE_VOUCH: vouch,
				CATE_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await CateModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('首页推荐设置失败，请重试');
		}
	}

	async editCate({
		id,
		title,
		order,
		forms
	}) {
		try {
			// 数据校验 
			if (!title) this.AppError('标题不能为空');

			// 获取分类信息
			let cate = await CateModel.getOne(id);
			if (!cate) {
				this.AppError('分类不存在');
				return;
			}

			// 处理表单数据
			let cateObj = {};
			if (forms && forms.length > 0) {
				forms.forEach(form => {
					cateObj[form.mark] = form.val;
				});
			}

			// 更新数据
			let data = {
				CATE_TITLE: title,
				CATE_ORDER: order || 9999,
				CATE_FORMS: forms || [],
				CATE_OBJ: cateObj,
				CATE_EDIT_TIME: Math.floor(new Date().getTime() / 1000)
			}

			await CateModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('编辑失败，请重试');
		}
	}

	async updateCateForms({
		id,
		hasImageForms
	}) {
		// 更新图片表单
		try {
			// 获取分类信息
			let cate = await CateModel.getOne(id);
			if (!cate) {
				this.AppError('分类不存在');
				return;
			}

			// 获取原有表单数据
			let forms = cate.CATE_FORMS;
			if (!forms) forms = [];

			// 更新图片表单
			for (let i = 0; i < forms.length; i++) {
				for (let j = 0; j < hasImageForms.length; j++) {
					if (forms[i].mark == hasImageForms[j].mark) {
						forms[i].val = hasImageForms[j].val;
						break;
					}
				}
			}

			// 更新数据
			let data = {
				CATE_FORMS: forms,
				CATE_EDIT_TIME: Math.floor(new Date().getTime() / 1000), // 更新时间
			}

			await CateModel.edit(id, data);

			return {
				code: 200,
				msg: '更新成功'
			};

		} catch (err) {
			console.error(err);
			this.AppError('更新失败，请重试');
		}
	}


}

module.exports = AdminCateService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_home_service.js
--------------------------------------------------
/**
 * Notes: 后台HOME/登录模块 
 * Date: 2021-06-15 07:48:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseProjectAdminService = require('./base_project_admin_service.js');
const UserModel = require('../../model/user_model.js'); 
const NewsModel = require('../../model/news_model.js');  
const CateModel = require('../../model/cate_model.js');  
const ActivityModel = require('../../model/activity_model.js');
const constants = require('../../public/constants.js');
const setupUtil = require('../../../../framework/utils/setup/setup_util.js');

class AdminHomeService extends BaseProjectAdminService {

	/**
	 * 首页数据归集
	 */
	async adminHome() {
		let where = {};

		let userCnt = await UserModel.count(where);
		let newsCnt = await NewsModel.count(where);
		let cateCnt = await CateModel.count(where);
		let activityCnt = await ActivityModel.count(where);  
		return [
			{ title: '用户数', cnt: userCnt },
			{ title: '公告数', cnt: newsCnt },
			{ title: '职位数', cnt: activityCnt },  
			{ title: '企业数', cnt: cateCnt },  
		]
	}

	// 用户数据清理  
	async clearUserData(userId) {

	}


	//##################首页推荐
	// 首页推荐清理
	async clearVouchData() {
		await setupUtil.remove(constants.SETUP_HOME_VOUCH_KEY);

		NewsModel.edit({}, { NEWS_VOUCH: 0 });
		AlbumModel.edit({}, { ALBUM_VOUCH: 0 });
		EnrollModel.edit({}, { ENROLL_VOUCH: 0 });

	}


	/**添加首页推荐 */
	async updateHomeVouch(node) {
		if (node.ext) node.ext = '#' + node.ext;
		let key = constants.SETUP_HOME_VOUCH_KEY;
		let list = await setupUtil.get(key);
		if (!list || !Array.isArray(list)) list = [];
 
		// 重复性判断
		for (let k = 0; k < list.length; k++) {
			if (list[k].id == node.id) {
				// 已存在
				list[k] = node;
				return await setupUtil.set(key, list, 'vouch');
			} 
		}

		// 赋值 
		let data = node;
		list.unshift(data);
		await setupUtil.set(key, list, 'vouch');

	}  

	/**删除推荐数据 */
	async delHomeVouch(id) {
		let key = constants.SETUP_HOME_VOUCH_KEY;
		let list = await setupUtil.get(key);
		if (!list || !Array.isArray(list)) return;

		let newList = [];
		for (let k = 0; k < list.length; k++) {
			if (list[k].id != id) {
				newList.push(list[k]);
			}
		}

		return await setupUtil.set(key, newList, 'vouch');

	}  
}

module.exports = AdminHomeService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_mgr_service.js
--------------------------------------------------
/**
 * Notes: 管理员管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 07:48:00 
 */

const BaseProjectAdminService = require('./base_project_admin_service.js');
const util = require('../../../../framework/utils/util.js');
const dataUtil = require('../../../../framework/utils/data_util.js');
const timeUtil = require('../../../../framework/utils/time_util.js');
const AdminModel = require('../../../../framework/platform/model/admin_model.js');
const LogModel = require('../../../../framework/platform/model/log_model.js');
const md5Lib = require('../../../../framework/lib/md5_lib.js');

class AdminMgrService extends BaseProjectAdminService {

	//**管理员登录  */
	async adminLogin(name, password) {

		// 判断是否存在
		let where = {
			ADMIN_STATUS: 1,
			ADMIN_NAME: name,
			ADMIN_PASSWORD: md5Lib.md5(password)
		}
		let fields = 'ADMIN_ID,ADMIN_NAME,ADMIN_DESC,ADMIN_TYPE,ADMIN_LOGIN_TIME,ADMIN_LOGIN_CNT';
		let admin = await AdminModel.getOne(where, fields);
		if (!admin)
			this.AppError('管理员不存在或者已停用');

		let cnt = admin.ADMIN_LOGIN_CNT;

		// 生成token
		let token = dataUtil.genRandomString(32);
		let tokenTime = timeUtil.time();
		let data = {
			ADMIN_TOKEN: token,
			ADMIN_TOKEN_TIME: tokenTime,
			ADMIN_LOGIN_TIME: timeUtil.time(),
			ADMIN_LOGIN_CNT: cnt + 1
		}
		await AdminModel.edit(where, data);

		let type = admin.ADMIN_TYPE;
		let last = (!admin.ADMIN_LOGIN_TIME) ? '尚未登录' : timeUtil.timestamp2Time(admin.ADMIN_LOGIN_TIME);

		// 写日志
		this.insertLog('登录了系统', admin, LogModel.TYPE.SYS);

		return {
			token,
			name: admin.ADMIN_NAME,
			type,
			last,
			cnt
		}

	}

	// 清除日志
	async clearLog() {
		try {
			await LogModel.clear();
			return {
				cleared: true
			};
		} catch (err) {
			console.error(err);
			this.AppError('日志清理失败，请重试');
		}
	}

	/** 取得日志分页列表 */
	async getLogList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		whereEx, //附加查询条件 
		page,
		size,
		oldTotal = 0
	}) {

		orderBy = orderBy || {
			LOG_ADD_TIME: 'desc'
		};
		let fields = '*';
		let where = {};

		if (util.isDefined(search) && search) {
			where.or = [{
				LOG_CONTENT: ['like', search]
			}, {
				LOG_ADMIN_DESC: ['like', search]
			}, {
				LOG_ADMIN_NAME: ['like', search]
			}];

		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'type':
					// 按类型
					where.LOG_TYPE = Number(sortVal);
					break;
			}
		}
		let result = await LogModel.getList(where, fields, orderBy, page, size, true, oldTotal);


		return result;
	}

	/** 获取所有管理员 */
	async getMgrList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		whereEx, //附加查询条件
		page,
		size,
		isTotal = true,
		oldTotal
	}) {
		orderBy = {
			ADMIN_ADD_TIME: 'desc'
		}
		let fields = 'ADMIN_NAME,ADMIN_STATUS,ADMIN_PHONE,ADMIN_TYPE,ADMIN_LOGIN_CNT,ADMIN_LOGIN_TIME,ADMIN_DESC,ADMIN_EDIT_TIME,ADMIN_EDIT_IP';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};
		if (util.isDefined(search) && search) {
			where.or = [{
				ADMIN_NAME: ['like', search]
			},
			{
				ADMIN_PHONE: ['like', search]
			},
			{
				ADMIN_DESC: ['like', search]
			}
			];
		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'status':
					// 按类型
					where.and.ADMIN_STATUS = Number(sortVal);
					break;
				case 'type':
					// 按类型
					where.and.ADMIN_TYPE = Number(sortVal);
					break;
			}
		}

		return await AdminModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	// 删除管理员
	async delMgr(id, myAdminId) {
		try {
			if (!id) this.AppError('管理员ID不能为空');
			if (id === myAdminId) this.AppError('不能删除自己');

			let admin = await AdminModel.getOne(id);
			if (!admin) {
				this.AppError('管理员不存在');
				return;
			}

			if (admin.ADMIN_TYPE == 1) {
				this.AppError('不能删除超级管理员');
				return;
			}

			await AdminModel.del(id);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('删除失败，请重试');
		}
	}

	// 添加管理员
	async insertMgr({
		name,
		desc,
		phone,
		password
	}) {
		try {
			if (!name) this.AppError('账号不能为空');
			if (!password) this.AppError('密码不能为空');

			// 判断是否存在
			let where = {
				ADMIN_NAME: name
			}
			let cnt = await AdminModel.count(where);
			if (cnt > 0)
				this.AppError('该账号已存在');

			// 加密
			let data = {
				ADMIN_NAME: name,
				ADMIN_DESC: desc,
				ADMIN_PHONE: phone,
				ADMIN_PASSWORD: md5Lib.md5(password),
				ADMIN_TYPE: 0
			}

			let id = await AdminModel.insert(data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('添加失败，请重试');
		}
	}

	// 修改管理员状态
	async statusMgr(id, status, myAdminId) {
		try {
			if (!id) this.AppError('管理员ID不能为空');
			if (id === myAdminId) this.AppError('不能修改自己的状态');

			let admin = await AdminModel.getOne(id);
			if (!admin) {
				this.AppError('管理员不存在');
				return;
			}

			if (admin.ADMIN_TYPE == 1) {
				this.AppError('不能修改超级管理员状态');
				return;
			}

			let data = {
				ADMIN_STATUS: status
			}
			await AdminModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('修改失败，请重试');
		}
	}

	/** 获取管理员信息 */
	async getMgrDetail(id) {
		let fields = '*';

		let where = {
			_id: id
		}
		let mgr = await AdminModel.getOne(where, fields);
		if (!mgr) return null;

		return mgr;
	}

	// 修改管理员
	async editMgr(id, {
		name,
		desc,
		phone,
		password
	}) {
		try {
			if (!id) this.AppError('管理员ID不能为空');
			if (!name) this.AppError('账号不能为空');

			// 判断是否存在
			let where = {
				ADMIN_NAME: name,
				_id: ['<>', id]
			}
			let cnt = await AdminModel.count(where);
			if (cnt > 0)
				this.AppError('该账号已存在');

			let data = {
				ADMIN_NAME: name,
				ADMIN_DESC: desc,
				ADMIN_PHONE: phone
			}

			if (password) data.ADMIN_PASSWORD = md5Lib.md5(password);

			await AdminModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('修改失败，请重试');
		}
	}

	// 修改自己的密码
	async pwdtMgr(adminId, oldPassword, password) {
		try {
			if (!adminId) this.AppError('管理员ID不能为空');
			if (!oldPassword) this.AppError('旧密码不能为空');
			if (!password) this.AppError('新密码不能为空');

			let where = {
				_id: adminId,
				ADMIN_PASSWORD: md5Lib.md5(oldPassword)
			}
			let admin = await AdminModel.getOne(where);
			if (!admin)
				this.AppError('旧密码错误');

			let data = {
				ADMIN_PASSWORD: md5Lib.md5(password)
			}
			await AdminModel.edit(adminId, data);

			return {
				id: adminId
			};

		} catch (err) {
			console.error(err);
			this.AppError('修改失败，请重试');
		}
	}
}

module.exports = AdminMgrService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_news_service.js
--------------------------------------------------
/**
 * Notes: 资讯后台管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 07:48:00 
 */

const BaseProjectAdminService = require('./base_project_admin_service.js'); 
const dataUtil = require('../../../../framework/utils/data_util.js');
const util = require('../../../../framework/utils/util.js'); 
const cloudUtil = require('../../../../framework/cloud/cloud_util.js');

const NewsModel = require('../../model/news_model.js');

class AdminNewsService extends BaseProjectAdminService {


	/**添加资讯 */
	async insertNews({
		title,
		cateId, //分类
		cateName,
		order,
		desc = '',
		forms
	}) {
		try {
			let data = {
				NEWS_TITLE: title,
				NEWS_CATE_ID: cateId,
				NEWS_CATE_NAME: cateName,
				NEWS_ORDER: order,
				NEWS_DESC: desc,
				NEWS_FORMS: forms,
				NEWS_OBJ: dataUtil.dbForms2Obj(forms)
			}

			let id = await NewsModel.insert(data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('添加失败，请重试');
		}
	}

	/**删除资讯数据 */
	async delNews(id) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			await NewsModel.del(id);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('删除失败，请重试');
		}
	}

	/**获取资讯信息 */
	async getNewsDetail(id) {
		let fields = '*';

		let where = {
			_id: id
		}
		let news = await NewsModel.getOne(where, fields);
		if (!news) return null;

		return news;
	}

	// 更新forms信息
	async updateNewsForms({
		id,
		hasImageForms
	}) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			await NewsModel.editForms(id, 'NEWS_FORMS', 'NEWS_OBJ', hasImageForms);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('更新失败，请重试');
		}
	}


	/**
	 * 更新富文本详细的内容及图片信息
	 * @returns 返回 urls数组 [url1, url2, url3, ...]
	 */
	async updateNewsContent({
		id,
		content // 富文本数组
	}) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			let data = {
				NEWS_CONTENT: content
			}
			await NewsModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('更新失败，请重试');
		}
	}

	/**
	 * 更新资讯图片信息
	 * @returns 返回 urls数组 [url1, url2, url3, ...]
	 */
	async updateNewsPic({
		id,
		imgList // 图片数组
	}) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			let data = {
				NEWS_PIC: imgList
			}
			await NewsModel.edit(id, data);

			return {
				urls: imgList
			};

		} catch (err) {
			console.error(err);
			this.AppError('更新失败，请重试');
		}
	}


	/**更新资讯数据 */
	async editNews({
		id,
		title,
		cateId, //分类
		cateName,
		order,
		desc = '',
		forms
	}) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			let data = {
				NEWS_TITLE: title,
				NEWS_CATE_ID: cateId,
				NEWS_CATE_NAME: cateName,
				NEWS_ORDER: order,
				NEWS_DESC: desc,
				NEWS_FORMS: forms,
				NEWS_OBJ: dataUtil.dbForms2Obj(forms)
			}

			await NewsModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('编辑失败，请重试');
		}
	}

	/**取得资讯分页列表 */
	async getAdminNewsList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		whereEx, //附加查询条件
		page,
		size,
		isTotal = true,
		oldTotal
	}) {

		orderBy = orderBy || {
			'NEWS_ORDER': 'asc',
			'NEWS_ADD_TIME': 'desc'
		};
		let fields = 'NEWS_TITLE,NEWS_DESC,NEWS_CATE_ID,NEWS_CATE_NAME,NEWS_EDIT_TIME,NEWS_ADD_TIME,NEWS_ORDER,NEWS_STATUS,NEWS_VOUCH,NEWS_QR,NEWS_OBJ';

		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};

		if (util.isDefined(search) && search) {
			where.or = [
				{ NEWS_TITLE: ['like', search] },
			];

		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'cateId': {
					where.and.NEWS_CATE_ID = String(sortVal);
					break;
				}
				case 'status': {
					where.and.NEWS_STATUS = Number(sortVal);
					break;
				}
				case 'top': {
					where.and.NEWS_ORDER = 0;
					break;
				}
				case 'sort': {
					orderBy = this.fmtOrderBySort(sortVal, 'NEWS_ADD_TIME');
					break;
				}

			}
		}

		return await NewsModel.getList(where, fields, orderBy, page, size, isTotal, oldTotal);
	}

	/**修改资讯状态 */
	async statusNews(id, status) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			let data = {
				NEWS_STATUS: status
			}
			await NewsModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('修改失败，请重试');
		}
	}

	/**置顶与排序设定 */
	async sortNews(id, sort) {
		try {
			let news = await NewsModel.getOne(id);
			if (!news) {
				this.AppError('资讯不存在');
				return;
			}

			let data = {
				NEWS_ORDER: sort
			}
			await NewsModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('排序失败，请重试');
		}
	}
}

module.exports = AdminNewsService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_setup_service.js
--------------------------------------------------
/**
 * Notes: 设置管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-07-11 07:48:00 
 */

const BaseProjectAdminService = require('./base_project_admin_service.js');
const cloudBase = require('../../../../framework/cloud/cloud_base.js');
const cloudUtil = require('../../../../framework/cloud/cloud_util.js');
const setupUtil = require('../../../../framework/utils/setup/setup_util.js');
const config = require('../../../../config/config.js');
const md5Lib = require('../../../../framework/lib/md5_lib.js');

class AdminSetupService extends BaseProjectAdminService {

	// 通用setup
	async setSetup(key, val, type = '') {
		await setupUtil.set(key, val, type);
	}

	// 富文本setup
	async setContentSetup(key, val, type = '') {
		let oldVal = await setupUtil.get(key);
		if (oldVal)
			await cloudUtil.handlerCloudFilesByRichEditor(oldVal, val);

		await setupUtil.set(key, val, type);
	}

	/** 小程序码 */
	async genMiniQr(page, sc = 'qr') {
		//生成小程序qr buffer
		let cloud = cloudBase.getCloud();

		if (page.startsWith('/')) page = page.substring(1);
		console.log('page=' + page, ', scene=' + sc);

		let result = await cloud.openapi.wxacode.getUnlimited({
			scene: sc,
			width: 280,
			check_path: false,
			//env_version: 'trial', //release,trial,develop
			page
		});

		let cloudPath = PID + '/' + 'setup/' + md5Lib.md5(page) + '.png';
		let upload = await cloud.uploadFile({
			cloudPath,
			fileContent: result.buffer,
		});

		if (!upload || !upload.fileID) return;

		let ret = await cloudUtil.getTempFileURLOne(upload.fileID);
		return ret + '?rd=' + this._timestamp;
	}

}

module.exports = AdminSetupService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\admin_user_service.js
--------------------------------------------------
/**
 * Notes: 用户管理
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-01-22  07:48:00 
 */

const BaseProjectAdminService = require('./base_project_admin_service.js');

const util = require('../../../../framework/utils/util.js');
const exportUtil = require('../../../../framework/utils/export_util.js');
const timeUtil = require('../../../../framework/utils/time_util.js');
const dataUtil = require('../../../../framework/utils/data_util.js');
const UserModel = require('../../model/user_model.js');
const AdminHomeService = require('./admin_home_service.js');

// 导出用户数据KEY
const EXPORT_USER_DATA_KEY = 'EXPORT_USER_DATA';

class AdminUserService extends BaseProjectAdminService {


	/** 获得某个用户信息 */
	async getUser({
		userId,
		fields = '*'
	}) {
		let where = {
			USER_MINI_OPENID: userId,
		}
		return await UserModel.getOne(where, fields);
	}

	/** 取得用户分页列表 */
	async getUserList({
		search, // 搜索条件
		sortType, // 搜索菜单
		sortVal, // 搜索菜单
		orderBy, // 排序
		whereEx, //附加查询条件 
		page,
		size,
		oldTotal = 0
	}) {

		orderBy = orderBy || {
			USER_ADD_TIME: 'desc'
		};
		let fields = '*';


		let where = {};
		where.and = {
			_pid: this.getProjectId() //复杂的查询在此处标注PID
		};

		if (util.isDefined(search) && search) {
			where.or = [{
				USER_NAME: ['like', search]
			},
			{
				USER_MOBILE: ['like', search]
			},
			{
				USER_MEMO: ['like', search]
			},
			];

		} else if (sortType && util.isDefined(sortVal)) {
			// 搜索菜单
			switch (sortType) {
				case 'status':
					where.and.USER_STATUS = Number(sortVal);
					break;
				case 'sort': {
					orderBy = this.fmtOrderBySort(sortVal, 'USER_ADD_TIME');
					break;
				}
			}
		}
		let result = await UserModel.getList(where, fields, orderBy, page, size, true, oldTotal, false);


		// 为导出增加一个参数condition
		result.condition = encodeURIComponent(JSON.stringify(where));

		return result;
	}

	// 修改用户状态
	async statusUser(id, status, reason) {
		try {
			let user = await UserModel.getOne(id);
			if (!user) {
				this.AppError('用户不存在');
				return;
			}

			let data = {
				USER_STATUS: status
			}
			
			if (status == UserModel.STATUS.UNCHECK) {
				if (!reason) this.AppError('请输入审核不通过理由');
				data.USER_CHECK_REASON = reason;
			} else {
				data.USER_CHECK_REASON = '';
			}

			await UserModel.edit(id, data);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('修改失败，请重试');
		}
	}

	// 删除用户
	async delUser(id) {
		try {
			let user = await UserModel.getOne(id);
			if (!user) {
				this.AppError('用户不存在');
				return;
			}

			await UserModel.del(id);

			return {
				id
			};

		} catch (err) {
			console.error(err);
			this.AppError('删除失败，请重试');
		}
	}

	// #####################导出用户数据

	/**获取用户数据 */
	async getUserDataURL() {
		return await exportUtil.getExportDataURL(EXPORT_USER_DATA_KEY);
	}

	/**删除用户数据 */
	async deleteUserDataExcel() {
		return await exportUtil.deleteDataExcel(EXPORT_USER_DATA_KEY);
	}

	/**导出用户数据 */
	async exportUserDataExcel(condition, fields) {
		try {
			let where = JSON.parse(decodeURIComponent(condition));

			// 取得数据
			let list = await UserModel.getAll(where, fields);

			// 数据格式化
			for (let k = 0; k < list.length; k++) {
				list[k].USER_STATUS_DESC = UserModel.getDesc('STATUS', list[k].USER_STATUS);
				list[k].USER_ADD_TIME = timeUtil.timestamp2Time(list[k].USER_ADD_TIME);
				list[k].USER_LOGIN_TIME = list[k].USER_LOGIN_TIME ? timeUtil.timestamp2Time(list[k].USER_LOGIN_TIME) : '未登录';

				// 生成行数据
				let row = {};
				for (let key in list[k]) {
					if (key.includes('USER_') && !key.includes('USER_MINI_OPENID')) {
						row[key.replace('USER_', '')] = list[k][key];
					}
				}
				list[k] = row;
			}

			// 生成Excel
			let filename = '用户数据' + timeUtil.time('YMD') + '.xlsx';
			await exportUtil.exportDataExcel(EXPORT_USER_DATA_KEY, filename, list);

			return {
				downloadUrl: await exportUtil.getExportDataURL(EXPORT_USER_DATA_KEY)
			};

		} catch (err) {
			console.error(err);
			this.AppError('导出失败，请重试');
		}
	}

}

module.exports = AdminUserService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\cloudfunctions\mcloud\project\jobpart\service\admin\base_project_admin_service.js
--------------------------------------------------
/**
 * Notes: 后台管理模块 基类
 * Date: 2021-03-15 07:48:00 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 */

const BaseAdminService = require('../../../../framework/platform/service/base_admin_service.js');
;
const util = require('../../../../framework/utils/util.js');
const cloudBase = require('../../../../framework/cloud/cloud_base.js');

class BaseProjectAdminService extends BaseAdminService {

	getProjectId() {
		return util.getProjectId();
	}

	async genDetailQr(type, id) {
		let cloud = cloudBase.getCloud();

		let page = `projects/${this.getProjectId()}/pages/${type}/detail/${type}_detail`;
		console.log('page=', page);
		let result = await cloud.openapi.wxacode.getUnlimited({
			scene: id,
			width: 280,
			check_path: false,
			//env_version: 'trial', //release,trial,develop
			page
		});

		let cloudPath = `${this.getProjectId()}/${type}/${id}/qr.png`;
		console.log('cloudPath=', cloudPath);
		let upload = await cloud.uploadFile({
			cloudPath,
			fileContent: result.buffer,
		});

		if (!upload || !upload.fileID) return;

		return upload.fileID;
	}
}

module.exports = BaseProjectAdminService;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\app.js
--------------------------------------------------
const setting = require('./setting/setting.js');

App({
	onLaunch: function (options) {

		if (!wx.cloud) {
			console.error('请使用 2.2.3 或以上的基础库以使用云能力')
		} else {
			wx.cloud.init({
				// env 参数说明：
				//   env 参数决定接下来小程序发起的云开发调用（wx.cloud.xxx）会默认请求到哪个云环境的资源
				//   此处请填入环境 ID, 环境 ID 可打开云控制台查看
				//   如不填则使用默认环境（第一个创建的环境）
				// env: 'my-env-id',
				env: setting.CLOUD_ID,
				traceUser: true,
			})
		}

		this.globalData = {};

		// 用于自定义导航栏
		wx.getSystemInfo({
			success: e => {
					this.globalData.statusBarHeight = e.statusBarHeight;
				let capsule = wx.getMenuButtonBoundingClientRect();
				if (capsule) { 
					this.globalData.customBarHeight = capsule.bottom + capsule.top - e.statusBarHeight;
					this.globalData.capsule = capsule;
				} else {
					this.globalData.customBarHeight = e.statusBarHeight + 50;
				
				} 
			}
		});
	}, 
	 
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\app.json
--------------------------------------------------
{
	"pages": [
		"projects/jobpart/pages/default/index/default_index",
		"projects/jobpart/pages/about/index/about_index",
		"projects/jobpart/pages/search/search",
		"projects/jobpart/pages/my/index/my_index",
		"projects/jobpart/pages/my/reg/my_reg",
		"projects/jobpart/pages/my/edit/my_edit",
		"projects/jobpart/pages/my/foot/my_foot",
		"projects/jobpart/pages/my/fav/my_fav",
		"projects/jobpart/pages/news/index/news_index",
		"projects/jobpart/pages/news/detail/news_detail",
		"projects/jobpart/pages/news/cate1/news_cate1",
		"projects/jobpart/pages/admin/news/list/admin_news_list",
		"projects/jobpart/pages/admin/news/add/admin_news_add",
		"projects/jobpart/pages/admin/news/edit/admin_news_edit",
		"projects/jobpart/pages/admin/setup/about/admin_setup_about",
		"projects/jobpart/pages/admin/setup/about_list/admin_setup_about_list",
		"projects/jobpart/pages/admin/setup/qr/admin_setup_qr",
		"projects/jobpart/pages/admin/index/home/admin_home",
		"projects/jobpart/pages/admin/index/login/admin_login",
		"projects/jobpart/pages/admin/content/admin_content",
		"projects/jobpart/pages/admin/mgr/log/admin_log_list",
		"projects/jobpart/pages/admin/mgr/edit/admin_mgr_edit",
		"projects/jobpart/pages/admin/mgr/list/admin_mgr_list",
		"projects/jobpart/pages/admin/mgr/add/admin_mgr_add",
		"projects/jobpart/pages/admin/mgr/pwd/admin_mgr_pwd",
		"projects/jobpart/pages/admin/user/list/admin_user_list",
		"projects/jobpart/pages/admin/user/detail/admin_user_detail",
		"projects/jobpart/pages/admin/user/export/admin_user_export",
		"projects/jobpart/pages/cate/index/cate_index",
		"projects/jobpart/pages/cate/detail/cate_detail",
		"projects/jobpart/pages/admin/cate/list/admin_cate_list",
		"projects/jobpart/pages/admin/cate/add/admin_cate_add",
		"projects/jobpart/pages/admin/cate/edit/admin_cate_edit",
		"projects/jobpart/pages/activity/index/activity_index",
		"projects/jobpart/pages/activity/detail/activity_detail",
		"projects/jobpart/pages/activity/my_join_list/activity_my_join_list",
		"projects/jobpart/pages/activity/query/activity_query",
		"projects/jobpart/pages/admin/activity/join_list/admin_activity_join_list",
		"projects/jobpart/pages/admin/activity/export/admin_activity_export",
		"projects/jobpart/pages/admin/activity/list/admin_activity_list",
		"projects/jobpart/pages/admin/activity/add/admin_activity_add",
		"projects/jobpart/pages/admin/activity/edit/admin_activity_edit",
		"cmpts/public/form/form_set/field/form_set_field",
		"cmpts/public/form/form_show/content/form_show_content",
		"projects/jobpart/pages/test1/test1"
	],
	"window": {
		"backgroundColor": "#f1f1f1",
		"backgroundTextStyle": "dark",
		"navigationBarBackgroundColor": "#FFDD52",
		"navigationBarTitleText": "徕兼职招聘小程序",
		"navigationBarTextStyle": "black"
	},
	"tabBar": {
		"custom": false,
		"backgroundColor": "#FFFFFF",
		"color": "#999999",
		"selectedColor": "#000000",
		"list": [
			{
				"pagePath": "projects/jobpart/pages/default/index/default_index",
				"text": "首页",
				"iconPath": "/projects/jobpart/images/tabbar/home.png",
				"selectedIconPath": "/projects/jobpart/images/tabbar/home_cur.png"
			},
			{
				"pagePath": "projects/jobpart/pages/news/index/news_index",
				"text": "公告",
				"iconPath": "/projects/jobpart/images/tabbar/news.png",
				"selectedIconPath": "/projects/jobpart/images/tabbar/news_cur.png"
			},
			{
				"pagePath": "projects/jobpart/pages/activity/index/activity_index",
				"text": "职位",
				"iconPath": "/projects/jobpart/images/tabbar/enroll.png",
				"selectedIconPath": "/projects/jobpart/images/tabbar/enroll_cur.png"
			},
			{
				"pagePath": "projects/jobpart/pages/cate/index/cate_index",
				"text": "企业库",
				"iconPath": "/projects/jobpart/images/tabbar/cate.png",
				"selectedIconPath": "/projects/jobpart/images/tabbar/cate_cur.png"
			},
			{
				"pagePath": "projects/jobpart/pages/my/index/my_index",
				"text": "我的",
				"iconPath": "/projects/jobpart/images/tabbar/my.png",
				"selectedIconPath": "/projects/jobpart/images/tabbar/my_cur.png"
			}
		]
	},
	"requiredPrivateInfos": [
		"chooseLocation"
	],
	"permission": {
		"scope.userLocation": {
			"desc": "获取你当前位置信息用于小程序位置接口的效果展示"
		}
	},
	"usingComponents": {
		"cmpt-comm-list": "/cmpts/public/list/comm_list_cmpt",
		"cmpt-picker": "/cmpts/public/picker/picker_cmpt",
		"cmpt-modal": "/cmpts/public/modal/modal_cmpt"
	},
	"sitemapLocation": "sitemap.json"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\app.wxss
--------------------------------------------------
@import "style/base/comm.wxss";
@import "style/public/project.wxss"; 

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\sitemap.json
--------------------------------------------------
{
  "desc": "关于本文件的更多信息，请参考文档 https://developers.weixin.qq.com/miniprogram/dev/framework/sitemap.html",
  "rules": [{
    "action": "disallow",
    "page": "*"
  }]
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\detail\detail_cmpt.js
--------------------------------------------------
const pageHelper = require('../../../helper/page_helper');
const posterCmptHelper = require('../../public/poster/poster_cmpt_helper.js');
const FavBiz = require('../../../comm/biz/fav_biz.js');
const FootBiz = require('../../../comm/biz/foot_biz.js');

Component({
	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		mode: {
			type: String,
			value: 'mode1'
		},
		oid: {
			type: String,
			value: ''
		},
		cate: { //分类中文名
			type: String,
			value: ''
		},
		type: { //分类  有值时业务存储到type对应的表里，无值时存储到fav表
			type: String,
			value: ''
		},
		title: {
			type: String,
			value: ''
		},
		cover: {
			type: String,
			value: ''
		},
		desc: {
			type: String,
			value: '查看详情'
		},
		qr: {
			type: String,
			value: ''
		},
        user: {
            type: String,
            value: ''
        },
        avatar: {
            type: String,
            value: ''
        },
		bg: {
			type: String,
			value: ''
		},
		color: {
			type: String,
			value: ''
		},
		tag: {
			type: String, //小角标
			value: ''
		},
		doFav: {
			type: Boolean,
			value: true
		},
		doFoot: {
			type: Boolean,
			value: true
		},
		doShare: {
			type: Boolean,
			value: true
		},
		doHome: {
			type: Boolean,
			value: true
		},
		homeUrl: {
			type: String,
			value: ''
		},
		doPoster: {
			type: Boolean,
			value: true
		},
		doFoot: {
			type: Boolean,
			value: true
		},
		doTop: {
			type: Boolean,
			value: true
		},
		doSlot: {
			type: Boolean,
			value: false
		},
		topBtnBottom: {
			type: Number,
			value: 190
		},
		topBtnShow: {
			type: Boolean,
			value: false
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		isFav: -1,
		showPoster: false,
		posterConfig: null,
	},

	lifetimes: {
		created: function () {

		},
		attached: function () {

		},
		ready: async function () {
			if (!this.data.oid || !this.data.title) return;

			if (this.data.doFav) {
				if (this.data.type)
					FavBiz.isFav(this, this.data.oid, this.data.type);
				else
					FavBiz.isFav(this, this.data.oid, this.data.cate);
			}

			if (this.data.doFoot) {
				FootBiz.addFoot(this.data.cate, this.data.title);
			}

			if (this.data.doShare) {

				let posterConfig = await posterCmptHelper.config1({
					cover: this.data.cover,
					title: this.data.title,
					desc: this.data.desc,
					qr: this.data.qr,
                    bg: this.data.bg,
                    user: this.data.user,
                    avatar: this.data.avatar
				})
				this.setData({
					posterConfig
				});

			}
		},
		move: function () {

		},
		detached: function () {

		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		bindShareTap: function () {
			this.setData({
				showPoster: true
			});
		},
		bindFavTap: async function () {
			if (this.data.isFav == -1) return;
			
			if (this.data.type)
				await FavBiz.updateFav(this, this.data.oid, this.data.isFav, this.data.type, this.data.title);
			else
			await FavBiz.updateFav(this, this.data.oid, this.data.isFav, this.data.cate, this.data.title);
		},
		url: function (e) {
			pageHelper.url(e, this);
		},
		bindHomeTap: function (e) {
			let url = this.data.homeUrl;
			if (!url)
				url = pageHelper.fmtURLByPID('/pages/default/index/default_index');

			wx.reLaunch({ url });
		}, 
		top: function (e) {
			// 回页首事件
			pageHelper.top();
		} 
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\detail\detail_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {
		"cmpt-poster": "/cmpts/public/poster/poster_cmpt"
	}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\detail\detail_cmpt.wxml
--------------------------------------------------
﻿<view wx:if="{{mode!='btn'}}" style="height:200rpx"></view>

<view wx:if="{{doHome&&mode!='right'&&mode!='left'}}" bindtap="bindHomeTap" class="cmpt-fixed-home-btn"><text class="icon-home"></text><text style="font-size:22rpx;">首页</text></view>

<!--回页首 begin-->
<block wx:if="{{doTop}}">
	<import src="../../../tpls/public/top_tpl.wxml" />
	<template is="topTpl" data="{{topBtnShow, bottom:topBtnBottom}}" />
</block>
<!--回页首 end-->

<!--mode1 BEGIN-->
<view wx:if="{{mode=='mode1'}}" class="cmpt-biz-detail-mode1 safe-bottom">
	<view wx:if="{{tag}}" class="has-tag">{{tag}}</view>
	<view class="fav btn-inner" bindtap="bindFavTap" wx:if="{{doFav}}">
		<block wx:if="{{isFav>0}}">
			<text class="icon-favorfill margin-right-xxs text-project" style="color:{{color||bg}}!important"></text><text class="text-project" style="color:{{color||bg}}!important">已收藏</text>
		</block>
		<block wx:else>
			<text class="icon-favor margin-right-xxs"></text>加入收藏
		</block>
	</view>
	<view class="btn-inner" bindtap="bindShareTap" wx:if="{{doShare&&doPoster}}">
		<view class="share"><text class="icon-forward margin-right-xxs"></text>分享</view>
	</view>
	<view class="btn-inner" wx:if="{{doShare&&!doPoster}}">
		<button class="share clearbtn" open-type="share" style="margin-top:-10rpx"><text class="icon-forward margin-right-xxs"></text>分享</button>
	</view>

	<slot />

</view>
<!--mode1 end-->

<!--mode2 BEGIN-->
<view wx:if="{{mode=='mode2'}}" class="cmpt-biz-detail-mode2 safe-bottom">
	<view wx:if="{{tag}}" class="has-tag">{{tag}}</view>
	<view class="inner">
		<button class="share clearbtn" bindtap="bindShareTap" wx:if="{{doShare&&doPoster}}">
			<text class="icon-forward"></text>
			<text class="text-s">分享</text>
		</button>
		<button class="share clearbtn" open-type="share" wx:if="{{doShare&&!doPoster}}">
			<text class="icon-forward"></text>
			<text class="text-s">分享</text>
		</button>
		<block wx:if="{{doFav}}">
			<view bindtap="bindFavTap" class="fav text-project" wx:if="{{isFav>0}}">
				<text class="icon-favorfill"></text>
				<text class="text-s">已收藏</text>
			</view>
			<view bindtap="bindFavTap" class="fav" wx:else>
				<text class="icon-favor"></text>
				<text class="text-s">收藏</text>
			</view>
		</block>
		<view class="slot-inner">
			<slot />
		</view>
	</view>
</view>
<!--mode2 end-->

<!--mode right BEGIN-->
<view wx:if="{{mode=='right'}}" class="cmpt-biz-detail-mode-right safe-bottom"> 
	<view class="inner">
		<block wx:if="{{doHome}}">
			<view bindtap="bindHomeTap" class="fixed-btn">
				<text class="icon-home"></text> 
			</view> 
		</block>
		<button class="fixed-btn clearbtn" bindtap="bindShareTap" wx:if="{{doShare&&doPoster}}">
			<text class="icon-forward"></text> 
		</button>
		<button class="fixed-btn clearbtn" open-type="share" wx:if="{{doShare&&!doPoster}}">
			<text class="icon-forward"></text> 
		</button>
		<block wx:if="{{doFav}}">
			<view bindtap="bindFavTap" class="fixed-btn" wx:if="{{isFav>0}}">
				<text class="icon-favorfill"></text> 
			</view>
			<view bindtap="bindFavTap" class="fixed-btn" wx:else>
				<text class="icon-favor"></text> 
			</view>
		</block> 
		<view class="slot-inner">
			<slot />
		</view>
	</view>
</view>
<!--mode right end-->


<!--mode left BEGIN-->
<view wx:if="{{mode=='left'}}" class="cmpt-biz-detail-mode-left safe-bottom"> 
	<view class="inner">
		<block wx:if="{{doHome}}">
			<view bindtap="bindHomeTap" class="fixed-btn">
				<text class="icon-home"></text> 
			</view> 
		</block>
		<button class="fixed-btn clearbtn" bindtap="bindShareTap" wx:if="{{doShare&&doPoster}}">
			<text class="icon-forward"></text> 
		</button>
		<button class="fixed-btn clearbtn" open-type="share" wx:if="{{doShare&&!doPoster}}">
			<text class="icon-forward"></text> 
		</button>
		<block wx:if="{{doFav}}">
			<view bindtap="bindFavTap" class="fixed-btn" wx:if="{{isFav>0}}">
				<text class="icon-favorfill"></text> 
			</view>
			<view bindtap="bindFavTap" class="fixed-btn" wx:else>
				<text class="icon-favor"></text> 
			</view>
		</block> 
		<view class="slot-inner">
			<slot />
		</view>
	</view>
</view>
<!--mode left end-->

<!--btn BEGIN-->
<view wx:if="{{mode=='btn'}}" class="cmpt-biz-detail-mode-btn">
	<block wx:if="{{doFav}}" >
		<view bindtap="bindFavTap" wx:if="{{isFav>0}}" ><text class="icon-favorfill margin-right-xxs"></text>已收藏</view>
		<view bindtap="bindFavTap" wx:else>加入收藏</view>
	</block>
	<block wx:if="{{doShare}}">
		<view wx:if="{{doPoster}}" bindtap="bindShareTap">分享</view>
		<button open-type="share" wx:else class="clearbtn">分享</button>
	</block>
	
</view>
<!--btn End-->

<cmpt-poster model:show="{{showPoster}}" doPoster="{{doPoster}}" wx:if="{{ posterConfig}}" config="{{posterConfig}}" />
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\detail\detail_cmpt.wxss
--------------------------------------------------
.cmpt-fixed-home-btn {
	position: fixed;
	bottom: 180rpx;
	left: 10rpx;
	font-size: 45rpx;
	height: 80rpx;
	width: 80rpx;
	background-color: rgba(0, 0, 0, 0.2);
	border-radius: 50%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	color: #fff;
	z-index: 99999;

}

/*MODE1*/
.cmpt-biz-detail-mode1 {
	box-shadow: 0 -6rpx 8rpx rgba(114, 130, 138, 0.2);
	width: 100%;
	position: fixed;
	bottom: 0;
	background-color: #f2f2f2;
	z-index: 9999999;
	display: flex;
	align-items: stretch;
	justify-content: center;
	font-size: 32rpx;
	color: #333; 
}

.cmpt-biz-detail-mode1 .has-tag {
	position: absolute;
	top: 0rpx;
	right: 0rpx;
	z-index: 9999;
	font-size: 22rpx; 
	padding: 0rpx 4rpx;
	border-radius: 5rpx; 
	color: #fff; 
	background-color: rgba(0, 0, 0, 0.2);
}

.cmpt-biz-detail-mode1 .btn-inner {
	padding: 30rpx 0rpx;
	flex: 1 1 0;
	text-align: center;
	display: flex;
	align-items: center;
	justify-content: center;
}

.cmpt-biz-detail-mode1 .btn-inner {
	border-right: 1rpx solid #ddd;
}

.cmpt-biz-detail-mode1 .btn-inner:last-child {
	border-right: unset;
}

.cmpt-biz-detail-mode1 .btn-inner .fav {
	background: inherit;
}

.cmpt-biz-detail-mode1 .btn-inner .share {
	background: inherit;
}

/*MODE2*/
.cmpt-biz-detail-mode2 {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: space-between;
	position: fixed;
	bottom: 0;
	background-color: #fff;
	box-shadow: 0 -6rpx 8rpx rgba(114, 130, 138, 0.1);
	z-index: 999;
}

.cmpt-biz-detail-mode2 .has-tag {
	position: absolute;
	top: 5rpx;
	right: 10rpx;
	z-index: 9999;
	font-size: 24rpx;
	background-color: #f8f8f8;
	padding: 5rpx 10rpx;
	border-radius: 10rpx;
	color: #666;
	border: 1rpx solid #eee;
}

.cmpt-biz-detail-mode2 .inner {
	width: 100%;
	padding: 20rpx 20rpx;
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.cmpt-biz-detail-mode2 .inner .slot-inner {
	flex: 1;
	padding: 0 20rpx;
}

.cmpt-biz-detail-mode2 .share,
.cmpt-biz-detail-mode2 .fav {
	font-size: 35rpx;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	padding: 0 20rpx;
	width: 120rpx;
}

.cmpt-biz-detail-mode2 .share .text-s,
.cmpt-biz-detail-mode2 .fav .text-s {
	margin-top: 0rpx;
	font-size: 24rpx;
}


/*MODE RIGHT*/
.cmpt-biz-detail-mode-right { 
	display: flex;
	align-items: center;
	justify-content: flex-start;
	flex-direction: column;
	position: fixed;
	bottom: 90rpx;
	right:15rpx;  
	z-index: 99999; 
}
 
.cmpt-biz-detail-mode-right .fixed-btn { 
	font-size: 35rpx;
	height: 60rpx;
	width: 60rpx;
	background-color: rgba(0, 0, 0, 0.2);
	border-radius: 50%;
	display: flex; 
	justify-content: center;
	align-items: center;
	color: #fff;
	margin-bottom: 15rpx;
}

.cmpt-biz-detail-mode-right .fixed-btn .text-t{ 
	font-size: 22rpx;  
}


/*MODE LEFT*/
.cmpt-biz-detail-mode-left {
	display: flex;
	align-items: center;
	justify-content: flex-start;
	flex-direction: column;
	position: fixed;
	bottom: 90rpx;
	left: 15rpx;
	z-index: 99999;
}

.cmpt-biz-detail-mode-left .fixed-btn {
	font-size: 35rpx;
	height: 60rpx;
	width: 60rpx;
	background-color: rgba(0, 0, 0, 0.2);
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #fff;
	margin-bottom: 15rpx;
}

.cmpt-biz-detail-mode-left .fixed-btn .text-t {
	font-size: 22rpx;
}

/** BTN **/
.cmpt-biz-detail-mode-btn {
	width: 100%;
	font-size: 26rpx;
	color: #fff;
	display: flex;
	margin-top: 20rpx;
	justify-content: flex-start;
}

.cmpt-biz-detail-mode-btn>view,.cmpt-biz-detail-mode-btn>button{
	font-size: 24rpx;
	color: #fff;
	margin-right: 20rpx;
	padding: 6rpx 25rpx;
	border-radius: 30rpx;
	border: 2rpx solid #999999;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\foot\foot_cmpt.js
--------------------------------------------------
const pageHelper = require('../../../helper/page_helper');
const timeHelper = require('../../../helper/time_helper');
const setting = require('../../../setting/setting.js');

Component({
	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		color: {
			type: String,
			value: ''
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {

	},

	lifetimes: {
		created: function () {
			// 组件实例化，但节点树还未导入，因此这时不能用setData
		},
		attached: function () {
			// 在组件实例进入页面节点树时执行 
			// 节点树完成，可以用setData渲染节点，但无法操作节点 
		},
		ready: async function () {
			// 组件布局完成，这时可以获取节点信息，也可以操作节点 
			// 当前用户，用于评论删除
			this._loadDetail();

			this.setData({ time: timeHelper.time('Y.M') });
		},
		move: function () {
			// 组件实例被移动到树的另一个位置
		},
		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		_loadDetail: async function () {
			this.setData({
				company: setting.COMPANY,
				ver: setting.VER
			});
		},
		url: function (e) {
			pageHelper.url(e, this);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\foot\foot_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\foot\foot_cmpt.wxml
--------------------------------------------------
<view class="site-footer" bindtap="url" data-type="mini" data-app="wx1a3ad7903d85f33a" data-url="/pages/home/index/home_index">
	<view class="info {{color}}"> © {{company}} </view>
	<view class="info margin-top-xs {{color}}">build {{time}}</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\biz\foot\foot_cmpt.wxss
--------------------------------------------------
@import "../../../style/public/project.wxss";

.site-footer {
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	font-size: 24rpx;
	color: #aaa;
	margin-top: 20rpx;
	margin-bottom: 20rpx;
}  
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_lib.js
--------------------------------------------------
/**
 * Notes: 日历组件通用方法
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY cclinux@qq.com
 * Date: 2021-01-01 07:48:00 
 */
const lunarLib = require('../../../lib/tools/lunar_lib.js');
const timeHelper = require('../../../helper/time_helper.js');
const dataHelper = require('../../../helper/data_helper.js');
const pageHelper = require('../../../helper/page_helper.js');

// 是否节日
function isHoliday(day) {
	if (!day) return false;

	let arr = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '初', '廿'];
	for (let k = 0; k < arr.length; k++) {
		if (day.includes(arr[k]))
			return false;
	}
	return true;
}

// 某天是某月的第几周
function weekIndexInMonth(year = null, month = null, today = null) {
	let time = new Date();

	if (year == null) { // 没有设定，则取当前
		year = time.getFullYear();
		month = time.getMonth();
		today = time.getDate();
	} else {
		year = Number(year);
		month = Number(month) - 1;
		today = Number(today);
	}

	time = new Date(year, month, 1); //取第一天

	let space = time.getDay() - 1; //获取当前星期X(0-6,0代表星期天)  
	if (space == -1) space = 6; //调整为周1-周7格式 

	return Math.ceil((today + space) / 7); // 本月第几周

}

// 日期格式化，一位补2位
function fmtDate(str) {
	str = str + '';
	if (str.length == 1)
		return '0' + str;
	else
		return str;
}

// 获取当前时间，若定义了要操作的天, 则取得年份和月份，用以构造日历
function getNowTime(that) {
	const time = new Date();
	let year = time.getFullYear();
	let month = time.getMonth() + 1;
	let week = time.getDay();

	let today = time.getDate(); // 今天
	let fullToday = year + '-' + fmtDate(month) + '-' + fmtDate(today); // 今天完整格式

	// 若定义了要操作的天, 则取得年份和月份，用以构造日历
	if (that.data.mode == 'one' && that.data.oneDoDay) {
		year = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.oneDoDay), 'Y'));
		month = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.oneDoDay), 'M'));
	} else if (that.data.mode == 'multi' && that.data.multiDoDay && that.data.multiDoDay.length > 0 && that.data.multiDoDay[0]) {
		year = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.multiDoDay[0]), 'Y'));
		month = Number(timeHelper.timestamp2Time(timeHelper.time2Timestamp(that.data.multiDoDay[0]), 'M'));
	}

	let oneDoDay = that.data.oneDoDay || fullToday; // 正在操作的天完整格式
	// let multiDoDay = that.data.multiDoDay || [oneDoDay];  // 多选默认选中一天
	let multiDoDay = that.data.multiDoDay;

	that.setData({
		year,
		month,

		fullToday,

		oneDoDay,
		multiDoDay,
		week
	});
}
//获得某月天数 
function getMonthCnt(year, month) {
	let baseMonthsDay = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; //各月天数
	if (month == 2 && year % 4 == 0 && (year % 100 != 0 || year % 400 == 0))
		return 29;
	else
		return baseMonthsDay[month - 1];
}

//获得上月天数  
function getLastMonthCnt(year, month) {
	if (month == 1) {
		month = 12;
		--year;
	} else
		--month;
	return getMonthCnt(year, month);
}

//从上月补几天
function getLastMonthArr(that, year, month) {

	let time = new Date(year, month - 1, 1);
	let space = time.getDay() - 1; //获取当前星期X(0-6,0代表星期天)  
	if (space == -1) space = 6; //调整为周1-周7格式 

	// 获取上个月天数
	let lastMonthCnt = getLastMonthCnt(year, month);
	if (month == 1) {
		month = 12;
		--year;
	} else
		--month;

	let dayArr = [];
	for (let i = space; i >= 1; i--) {
		let lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, lastMonthCnt - i + 1) : '';
		let holiday = isHoliday(lunar);
		let full = year + '-' + fmtDate(month) + '-' + fmtDate(lastMonthCnt - i + 1);
		dayArr.push({
			lunar,
			holiday,
			show: lastMonthCnt - i + 1,
			curMonth: false,
			weekNo: 1, //必然第一周
			val: year + '-' + month + '-' + (lastMonthCnt - i + 1),
			full
		});
	}
	return dayArr;

}

/**
 * //从下月补几天
 * @param {*} year 
 * @param {*} month 
 * @param {*} hasDayLen  已有多少天
 */
function getNextMonthArr(that, year, month, hasDayLen) {

	if (that.mode == 'multi') {
		if (month == 12) {
			month = 1;
			++year;
		} else
			month++;

		// 多选统一补成6行
		let dayArr = [];
		for (let i = 1; i <= (6 * 7 - hasDayLen); i++) {
			let weekNo = Math.ceil((hasDayLen + i) / 7); // 计算当前是第几周 

			let lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, i) : '';
			let holiday = isHoliday(lunar);
			let full = year + '-' + fmtDate(month) + '-' + fmtDate(i);
			dayArr.push({
				lunar,
				holiday,
				has: false, //是否有数据
				show: i,
				curMonth: false,
				weekNo,
				val: year + '-' + month + '-' + i,
				full
			});
		}
	} else {
		// 单选只把最后一行补齐
		let endDay = getMonthCnt(year, month); //最后一天

		let time = new Date(year, month - 1, endDay);
		let space = time.getDay(); //获取当前星期X(0-6,0代表星期天)  
		space = 7 - space;
		if (space == 7) space = 0;

		if (space <= 0) return [];

		if (month == 12) {
			month = 1;
			++year;
		} else
			month++;

		let dayArr = [];
		for (let i = 1; i <= space; i++) {
			let lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, i) : '';
			let holiday = isHoliday(lunar);
			let full = year + '-' + fmtDate(month) + '-' + fmtDate(i);
			dayArr.push({
				lunar,
				holiday,
				show: i,
				curMonth: false,
				weekNo: that.data.weekNo,
				val: year + '-' + month + '-' + i,
				full
			});
		}
		return dayArr;
	}


	return dayArr;

}


function createDay(that) {
	// 创建日历
	let month = that.data.month;
	let year = that.data.year;

	let dayArr = [];
	let len = getMonthCnt(year, month);
	for (let i = 1; i <= len; i++) {
		let lunar = that.data.isLunar ? lunarLib.sloarToLunar(year, month, i) : '';
		let holiday = isHoliday(lunar);
		let full = year + '-' + fmtDate(month) + '-' + fmtDate(i) //实际日期(补位);
		dayArr.push({
			lunar,
			holiday,
			has: false, //是否有数据
			show: i, // 显示
			curMonth: true, //是否当前月
			weekNo: weekIndexInMonth(year, month, i), //第几周
			val: year + '-' + month + '-' + i, //实际日期(简化)
			full
		});
	}


	// 前后补空 
	let lastArr = getLastMonthArr(that, year, month);
	let nextArr = getNextMonthArr(that, year, month, dayArr.length + lastArr.length);

	let data = lastArr.concat(dayArr).concat(nextArr);

	/*
	// 数据循环处理
	let hasDays = that.data.hasDays;
	if (hasDays.length > 0) {
		for (let j in hasDays) {
			for (let k = 0; k < data.length; k++) {
				if (data[k].full == hasDays[j]) {
					data[k].has = true; //当日有数据
				}
			}
		}
	}*/

	// 当前操作日为周几？ 仅针对单选模式
	let weekNo = 0;
	if (that.data.mode == 'one') {
		if (!that.data.oneDoDay) {
			weekNo = weekIndexInMonth();
		} else {
			let arr = that.data.oneDoDay.split('-');
			weekNo = weekIndexInMonth(arr[0], arr[1], arr[2]);
		}
	}

	that.setData({
		weekNo,
		dayArr: data
	});
}

/** ListTouch计算滚动 */
function listTouchEnd(that) {
	if (that.data.touchDirection == 'left') {
		that.setData({
			animation: 'slide-left'
		});

		setTimeout(function () {
			that.setData({
				animation: ''
			})
		}, 200);
		that.bindNextTap();
	} else if (that.data.touchDirection == 'right') {
		that.setData({
			animation: 'slide-right'
		});

		setTimeout(function () {
			that.setData({
				animation: ''
			})
		}, 200);
		that.bindLastTap();
	}

	that.setData({
		touchDirection: null
	});
}

// 回本月
function bindToNowTap(that) {
	const time = new Date();
	let year = time.getFullYear();
	let month = time.getMonth() + 1;

	that.setData({
		month,
		year,
		fold: false
	});

	that.setData({
		animation: 'fade'
	});

	setTimeout(function () {
		that.setData({
			animation: ''
		})
	}, 300);
	createDay(that);

	if (that.data.mode == 'one') {
		//月份切换引起父组件变动 
		that.triggerEvent('monthChange', {
			yearMonth: that.data.year + '-' + dataHelper.padLeft(that.data.month, 2, '0')
		});
	}
}

//多选天点击
function bindDayMultiTap(e, that) {

	// 显示
	let oneDoDay = e.currentTarget.dataset.fullday;
	let multiDoDay = dataHelper.deepClone(that.data.multiDoDay);

	if (that.data.multiOnlyOne) {
		// 只能选一个
		multiDoDay = [oneDoDay];
	} else {
		multiDoDay = dataHelper.arrAddDel(multiDoDay, oneDoDay);
	}
	if (multiDoDay.length < that.data.multiDoDay.length) {
		// 有取消
		that.triggerEvent('cancel', {
			day: oneDoDay
		});
	}

	that.setData({
		multiDoDay
	});

	// 传递给父组件
	that.triggerEvent('click', {
		days: multiDoDay
	});
}

//单个天点击
function bindDayOneTap(e, that) {
	// 显示
	let oneDoDay = e.currentTarget.dataset.fullday;

	// 当前周
	let weekNo = 0;
	let arr = oneDoDay.split('-');
	weekNo = weekIndexInMonth(arr[0], arr[1], arr[2]);

	that.setData({
		oneDoDay,
		weekNo
	});

	// 传递给父组件
	that.triggerEvent('click', {
		day: oneDoDay
	});
}

//  下月
function bindNextTap(that) {
	let month = that.data.month;
	if (month == 12) {
		that.setData({
			year: that.data.year + 1,
			month: 1,
			fold: false //翻页不折叠
		})
	} else {
		that.setData({
			month: month + 1,
			fold: false
		})
	}
	createDay(that);

	if (that.data.mode == 'one') {
		//月份切换引起父组件变动 
		that.triggerEvent('monthChange', {
			yearMonth: that.data.year + '-' + dataHelper.padLeft(that.data.month, 2, '0')
		});
	}
}

// 上个月
function bindLastTap(that) {
	let month = that.data.month;
	if (month == 1) {
		that.setData({
			year: that.data.year - 1,
			month: 12,
			fold: false
		})
	} else {
		that.setData({
			month: month - 1,
			fold: false
		})
	}
	createDay(that);

	if (that.data.mode == 'one') {
		//月份切换引起父组件变动 
		that.triggerEvent('monthChange', {
			yearMonth: that.data.year + '-' + dataHelper.padLeft(that.data.month, 2, '0')
		});
	}
}

// 日历折叠
function bindFoldTap(that) {
	if (that.data.fold)
		that.setData({
			fold: false
		});
	else {
		//that._init(); //折叠回本月
		that.setData({
			fold: true
		});
	}
}

module.exports = {
	isHoliday,
	weekIndexInMonth,
	fmtDate,
	getNowTime,
	getMonthCnt,
	getLastMonthCnt,
	getLastMonthArr,
	getNextMonthArr,
	createDay,
	listTouchEnd,
	bindToNowTap,
	bindDayMultiTap,
	bindDayOneTap,
	bindNextTap,
	bindLastTap,
	bindFoldTap
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_comm\calendar_comm_cmpt.js
--------------------------------------------------
const timeHelper = require('../../../../helper/time_helper.js');
const pageHelper = require('../../../../helper/page_helper.js');
const calendarLib = require('../calendar_lib.js');

/*#### 父组件日历颜色定义*/
/* 整体颜色 */
//--calendarPageColor: #F0F4FF;
/* 加重颜色*/
//--calendarMainColor: #388AFF;
/* 加重的亮颜色 用于选中日期的数据小圆点 */
//--calendarLightColor: #A2C7FF;


Component({
	options: {
		addGlobalClass: true
	},
	properties: {
		isLunar: { //是否开启农历
			type: Boolean,
			value: true
		},
		mode: { // 模式 one/multi
			type: String,
			value: 'one'
		},

		year: { // 正在操作的年
			type: Number,
			value: 0
		},

		month: { // 正在操作的月
			type: Number,
			value: 0
		},
		fold: { //日历折叠
			type: Boolean,
			value: false
		},
		selectTimeout: { //过期时间选择(mode=multi)
			type: Boolean,
			value: true
		},
		selectTimeoutHint: { //过期时间选择提示(mode=multi)
			type: String,
			value: '不能选择过去的日期'
		},
		hasDays: { // 有数据的日期
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {
				if (newVal.length != oldVal.length) {
					// TODO 引起加载的时候二次调用 
					//this._init();
				}
			}
		},
		oneDoDay: { // 正在操作的天  string
			type: String,
			value: null
		},
		multiDoDay: { // 多选模式>正在操作的天 arrary[]
			type: Array,
			value: [],
		},
		multiOnlyOne: { //多选模式>只能选一个
			type: Boolean,
			value: false
		}
	},

	data: {
		weekNo: 0, // 正在操作的那天位于第几周 
		fullToday: 0, //今天 
	},

	lifetimes: {
		attached() {
			this._init();
		}
	},

	methods: {
		_init: function () {
			calendarLib.getNowTime(this);
			calendarLib.createDay(this);
		},


		bindFoldTap: function (e) { // 日历折叠
			calendarLib.bindFoldTap(this);
		},


		bindNextTap(e) { // 下月
			calendarLib.bindNextTap(this);
		},

		bindLastTap(e) { // 上月
			calendarLib.bindLastTap(this);
		},

		bindDayOneTap(e) { // 单个天点击
			let day = e.currentTarget.dataset.fullday;
			let now = timeHelper.time('Y-M-D');
			if (day < now)
				return pageHelper.showNoneToast('已过期', 1000);

			calendarLib.bindDayOneTap(e, this);
		},

		bindDayMultiTap(e) { // 多选天点击
			// 过期时间判断
			if (!this.data.selectTimeout) {
				let day = e.currentTarget.dataset.fullday;
				let now = timeHelper.time('Y-M-D');
				if (day < now)
					return pageHelper.showNoneToast(this.data.selectTimeoutHint);
			}


			calendarLib.bindDayMultiTap(e, this);
		},

		bindToNowTap: function (e) { // 回本月
			calendarLib.bindToNowTap(this);
		},

		// ListTouch触摸开始
		listTouchStart(e) {
			pageHelper.listTouchStart(e, this);
		},

		// ListTouch计算方向
		listTouchMove(e) {
			pageHelper.listTouchMove(e, this);
		},

		/** ListTouch计算滚动 */
		listTouchEnd: function (e) {
			calendarLib.listTouchEnd(this);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_comm\calendar_comm_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_comm\calendar_comm_cmpt.wxml
--------------------------------------------------
<wxs src="../../../../tpls/wxs/tools.wxs" module="tools" />
<wxs module="utils">
	// 比较操作日期所在月是否当前显示的月
	function compareYearMonth(oneDoDay, year, month) {
		var arr = oneDoDay.split('-');
		return arr[0] == year && arr[1] == month;
	}

	module.exports = {
		compareYearMonth: compareYearMonth,
	};
</wxs>
<view class="cal-container">
	<view class="cal-main">
		<view class="text-center cal-nav">
			<view class="to-now" bindtap="bindToNowTap">本月</view>
			<view class="select-item">
				<view class="arrow" bindtap="bindLastTap"><text class="icon-back" /></view>
				<view class="text-lg">{{year}}年{{month}}月</view>
				<view class="arrow" bindtap="bindNextTap"><text class=" icon-right" /></view>
			</view>
			<block wx:if="{{mode=='one'}}">
				<view wx:if="{{!fold}}" class="fold" bindtap="bindFoldTap"><text class="icon-fold"></text></view>
				<view wx:if="{{fold}}" class="fold" bindtap="bindFoldTap"><text class="icon-unfold"></text>
				</view>
			</block>
		</view>

		<view class="cal-title">
			<view class="cal-title-view">一</view>
			<view class="cal-title-view">二</view>
			<view class="cal-title-view">三</view>
			<view class="cal-title-view">四</view>
			<view class="cal-title-view">五</view>
			<view class="cal-title-view text-orange">六</view>
			<view class="cal-title-view text-red">日</view>
		</view>
		<view class="cal-center {{!fold?'cur':''}} ">
			<!--单击begin-->
			<view wx:for="{{dayArr}}" wx:if="{{mode=='one' && (weekNo>0&&item.weekNo==weekNo&&utils.compareYearMonth(oneDoDay,year,month) || item.weekNo==1&&!utils.compareYearMonth(oneDoDay,year,month) || !fold)}}" wx:key="key" data-fullday="{{item.full}}" class="cube {{isLunar?'lunar':''}} " bindtap="bindDayOneTap">
				<view class="num-grid  {{fullToday==item.full? 'now-day-cur' : ''}}  {{oneDoDay==item.full? 'calendar-bg text-white shadow ' : ''}} ">
					<view class="num  {{!item.curMonth? 'text-no-month' : ''}}">
						<text class="dd" wx:if="{{tools.includes(hasDays,item.full)}}" class="data-has">{{item.show}}</text>
						<text class="dd" wx:else>{{item.show}}</text>
						<text wx:if="{{isLunar}}" class="lunar {{oneDoDay==item.full? 'text-white' : ''}} {{item.holiday?'text-red':''}}">{{item.lunar}}</text>
					</view>
				</view>

			</view>
			<!--单击END-->

			<!--多选begin-->
			<view wx:for="{{dayArr}}" wx:if="{{mode=='multi'}}" wx:key="key" data-fullday="{{item.full}}" class="cube {{isLunar?'lunar':''}}" bindtap="bindDayMultiTap">
				<view class="num-grid  {{fullToday==item.full? 'now-day-cur' : ''}}  {{tools.includes(multiDoDay,item.full)? 'calendar-bg text-white data-checked' : ''}} ">
					<view class="num  {{!item.curMonth? 'text-no-month' : ''}} ">
						<text class="dd" wx:if="{{tools.includes(hasDays,item.full)}}" class="data-has">{{item.show}}</text>
						<text class="dd" wx:else>{{item.show}}</text>
						<text wx:if="{{isLunar}}" class="lunar {{tools.includes(multiDoDay,item.full)? 'text-white' : ''}} {{item.holiday?'text-red':''}}">{{item.lunar}}</text>
					</view>
				</view>
			</view>
			<!--多选END-->

		</view>

	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_comm\calendar_comm_cmpt.wxss
--------------------------------------------------
@import "./din.wxss";

page {
	/*#### 父组件日历颜色定义*/
	/* 整体颜色 */
	--calendarPageColor: #fff;
	/* 加重颜色*/
	--calendarMainColor: #1F6ED4;
	/* 加重的亮颜色 用于选中日期的数据小圆点 */
	--calendarLightColor: #A2C7FF;
}

.calendar-text {
	color: var(--calendarMainColor) !important
}

.calendar-bg {
	background-color: var(--calendarMainColor) !important
}

.cal-container {
	width: 100%;
	padding-bottom: 10rpx;
	background-color: var(--calendarPageColor)
}

.cal-container .cal-nav {
	position: relative;
	width: 100%;
	min-height: 80rpx;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	padding: 0 20rpx;
	color: #666; 
	font-weight: bold;
	background-color: #f8f8f8;
}

.cal-container .cal-nav .select-item {
	width: 500rpx;
	display: flex;
	flex-direction: row;
	justify-content: space-between;
	align-items: center;
}

.cal-container .cal-nav .arrow {
	width: 150rpx;
	font-size: 40rpx;
}

.cal-container .cal-nav .fold {
	position: absolute;
	right: 0rpx;
	width: 100rpx;
	font-size: 40rpx;
	font-weight: bold;
}

.cal-container .cal-nav .to-now {
	position: absolute;
	left: 5rpx;
	width: 100rpx;
	font-size: 28rpx; 
	display: flex;
	align-items: center;
	justify-content: center;
}

.cal-main {
	width: 100%;
	padding: 0rpx 0rpx;
}

.cal-title {
	display: flex;
	width: 100%;
	border-bottom: 2rpx dashed #ccc;
	background-color: #f8f8f8;
}

.cal-title .cal-title-view {
	width: 14.28%;
	height: 70rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #333;
	font-size: 32rpx;
	font-weight: bold;
}

.cal-center {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap; 
	overflow: hidden;
	justify-content: center;
	align-items: center;
}
 
.cal-center .cube {
	width: 14.28%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.cal-center .cube.lunar {
	margin-bottom: 0rpx;
}

.cal-center .num-grid {
	min-width: 70rpx;
	height: 70rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #333;
	margin-bottom: 2rpx;
	border-radius: 10rpx;
}

.cal-center .cube.lunar .num-grid {
	width: 70rpx;
	height: 90rpx;
}

.cal-center .num-grid.now-day-cur {
	background-color: #fadbd9;
	color: orangered;
	font-weight: bold;
}

.cal-center .num-grid.now-day-cur.calendar-bg {
	color: #fbbd08 !important;
}


.cal-center .num {
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	font-size: 32rpx;
	font-family: 'din';
}

.cal-center .num .lunar {
	font-size: 20rpx;
	font-weight: normal;
	color: #aaa;
}

.cal-center .text-no-month {
	color: #333;
	opacity: .5;
}

.cal-center .calendar-bg .text-no-month {
	color: #ccc;
	opacity: 1;
}


/* 当日有数据 */
.data-has {
	position: relative;
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.data-has::before {
	position: absolute;
	content: '';
	width: 12rpx;
	height: 12rpx;
	border-radius: 50%;
	background-color: var(--calendarMainColor);
	right: -16rpx;
	top: 14rpx;
}

.calendar-bg .data-has::before {
	background-color: var(--calendarLightColor);
}


/* 选中某日 */
.cube .data-checked {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
}

.cube .data-checked::before {
	position: absolute;
	content: '';
	width: 17rpx;
	height: 17rpx;
	transform: rotate(45deg);
	border-right: 3rpx solid #fff;
	border-bottom: 3rpx solid #fff;
	bottom: 13rpx;
}

.cube.lunar .data-checked::before {
	bottom: 38rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_comm\din.wxss
--------------------------------------------------
@font-face {
    font-family: 'din';
    src: url('data:font/ttf;charset=utf-8;base64,AAEAAAAPAIAAAwBwRkZUTYgLMMEAAlaAAAAAHEdERUY15TphAAHagAAAAI5HUE9TXpiR2QAB9UgAAGE4R1NVQgGZl0kAAdsQAAAaNk9TLzJhprB7AAABeAAAAGBjbWFwlg4SlgAAEUAAAAVOZ2FzcP//AAMAAdp4AAAACGdseWZKMGmsAAAeVAABkBhoZWFkGyNVqwAAAPwAAAA2aGhlYRFbC3oAAAE0AAAAJGhtdHiGGBg+AAAB2AAAD2hsb2NhAkJmIgAAFpAAAAfEbWF4cAQqAFsAAAFYAAAAIG5hbWUcsXOaAAGubAAAB3Fwb3N0m0IygAABteAAACSWAAEAAAAEAAB/+YqcXw889QALCAAAAAAA1FMptQAAAADeE+AD/Zz9rgv+CUgAAAAIAAIAAAAAAAAAAQAAB779/gAADDv9nP1tC/4AAQAAAAAAAAAAAAAAAAAAA9MAAQAAA+EAWAAHAAAAAAACAAAAAQABAAAAQAAAAAAAAAAEBN0B9AAFAAAFMwTNAAAAmgUzBM0AAALNAGYCkQAAAAAGAAAAAAAAACAAAAcAAAABAAAAAAAAAABVTEEgAMAADfsCB779/gAACaQCuCAAAZMAAAAAAhcCvAAAACAABgSyAFIAAAAAAqoAAAAAAAACZgAAAmYAAAHGAHEDEAB7BdIAMQUGAC8H5wBMBVoAcwHAAHsCmwCWAsoAzwLZADMEAgBIAcQARgL1AHkBzABaArL/zQTvAFYE7wDTBO8ASgTvACUE7wBEBO8APwTvAF4E7wBcBO8ATgTvAEwBzABaAcgARgQCAEgEAgBIBAIARgObAAgHqQA/Bfn//gWsALAFkQA/Bi8AsAVJALAEqQCwBfkAPwZRALACcgCwBBL/+gXOALAEUwCwB14AsAZRALAGeAA/BWYAsAaHAD8FyACwBQYALwS0ABAGGACTBZsABAhiAAQFoQAbBTH//gVYAEgCzACwBCgAyQOyARcEYAA/BJEAAALMAGoEuABMBXIAsASDAEIFdgBCBLwAQgLXAEgFIgBCBWAAsAJTAJwCXv9QBNcAsAJqALAIUwCmBVMApgUGAEIFcgCwBXYAQgM5AKYD2wApA1EANwU/AIMES//+Bz3//gSLABcEWv/yBFMAVgKwAEICNwC2AzEA5QQCAIMCZgAAAcYAcwTMAEIEaABIBakAQgUzAAACNwC2BBYAKQMOAEgF6wA/AxgAOwPAACUEhwBIAvUAeQXrAD8CzABaAtQApgQCAEgDFAAzAt0AFALMAHUFagCwBQD//AHCAFoCzACYAh4AHwNFADcD1ACDBqwAHwbbAB8HKwAUA5sAPQX5//4F+f/+Bfn//gX5//4F+f/+Bfn//giF//4FkQA/BUkAsAVJALAFSQCwBUkAsAJy/+UCcgCmAnL/7AJy//wGXgAABlEAsAZ4AD8GeAA/BngAPwZ4AD8GeAA/BAIAiwZ4AD8GGACTBhgAkwYYAJMGGACTBTH//gVyALAFPwCWBLgATAS4AEwEuABMBLgATAS4AEwEuABMB8gATASDAEIEvABCBLwAQgS8AEIEvABCAlP/1wJTAJgCU//dAlP/7gTAAEQFUwCmBQYAQgUGAEIFBgBCBQYAQgUGAEIEAgBIBQYAQgU/AIMFPwCDBT8AgwU/AIMEWv/yBXIAsARa//IF+f/+BLgATAX5//4EuABMBfn//gTAAEwFkQA/BIMAQgWRAD8EgwBCBZEAPwSDAEIFkQA/BIMAQgYvALAGJABCBl4AAAV4AEIFSQCwBLwAQgVJALAEvABCBUkAsAS8AEIFWgCwBLwAQgVJALAEvABCBfkAPwUiAEIF+QA/BSIAQgX5AD8FIgBCBfkAPwUiAEIGUQCwBWD/4wbXAD0FYAAGAnL/5wJT/9kCcgArAlMAHwJyAAwCU//+AnIAnAIvAHkCcgCqAlMApgaFALAEsgCcBBL/+gJD/0YFzgCwBNcAsATKAKYEUwCoAmoApARTALACagCcBFMAsAMYALAEUwCwAv0AsARa//QCsP/2BlEAsAVTAKYGUQCwBVMApgZRALAFUwCmBjsALwZRALAFUwCmBngAPwUGAEIGeAA/BQYAQgZ4AD8FBgBCCM4APwhHAEIFyACwAzkApgXIALADOQCLBcgAsAM5AIEFBgAvA9sAKQUGAC8D2wApBQYALwPbACkFBgAvA9sAKQS0ABADUQA3BLQAEANaADcEtAAQA1EANwYYAJMFPwCDBhgAkwU/AIMGGACTBT8AgwYYAJMFPwCDBhgAkwU/AIMGGgCWBTMAgwhiAAQHPf/+BTH//gRa//IFMf/+BVgASARTAFYFWABIBFMAVgVYAEgEUwBWBkMAOwMO/xAGeAA/BQYAQgYYAJMFPwCDC4cAsAqDALAJygBCCGYAsAayALAEyACwCmQAsAiwALAHsgCmBfkAPwUiAEIGeAA/BQYAQgX5//4EuABMCIX//gfIAEwGeAA/BQYAQgX5//4EuABMBfn//gS4AEwFSQCwBLwAQgVJALAEvABCAnL/fwJT/3ECcgAMAlP//gZ4AD8FBgBCBngAPwUGAEIFyACwAzkAMQXIALADOQCmBhgAkwU/AIMGGACTBT8AgwUGAC8D2wApBLQAEANRADcGeAA/BQYAQgZ4AD8FBgBCBngAPwUGAEIFMf/+BFr/8gJD/0YEvAAtAAD/FAF8AC8CzAFmAswAcwLMABkCzAACAQ4AKQLMAFoCzAB1AswAagEOACkCzAA5AswA1wLMAHUCzACwAswAFALM//IAAP7LAAD/fQAA/rIAAP6uAAD+8gAA/tMAAP9xAAD+wQAA/xkAAP8OAAD+iwAA/pwAAP5GAAD+0wAA/30AAAAAAAD/cQAA/sEAAP9kAAD/BAAA/0YAAP7TAAD+8gAA/ZwF+f/+BwAAEAVqALAFzv/lBZEAPwSDAEIGLwCwBXYAQgYvALAFdgBCBUkAsAS8AEIFSQCwBLwAQgVJALAEvABCBfkAPwUiAEIGUQCwBWAAsAZRALAFYACwAnL/+gJT/+wEUwCwAmoAqARTALACagApB14AsAhTAKYGUQCwBVMApgZRALAFUwCmBlEAsAVTAKYGeAA/BQYAQgZ4AD8FBgBCBngAPwUGAEIGeAA/BQYAQgXIALADOQCYBcgAsAM5ABkFBgAvA9sAKQUGAC8D2wApBQYALwPbACkFBgAvA9sAKQUGAC8D2wApBLQAEANRADcEtAAQA1EANwYYAJMFPwCDBhgAkwU/AIMIYgAEBz3//ghiAAQHPf/+CGIABAc9//4FMf/+BFr/8gVYAEgEUwBWA1EAGQV8AJYF+f/+BLgATAX5//4EuABMBfn//gS4AEwF+f/+BLgATAX5//4EuABMBfn//gS4AEwF+f/+BLgATAX5//4EuABMBfn//gS4AEwF+f/+BLgATAX5//4EuABMBfn//gS4AEwFSQCwBLwAQgVJALAEvABCBUkAsAS8AEIFSQCwBLwAQgVJALAEvABCBUkAsAS8AEIFSQCwBLwAQgVJALAEvABCAnIAVAJTAEYCcgCqAlMAnAZ4AD8FBgBCBngAPwUGAEIGeAA/BQYAQgZ4AD8FBgBCBngAPwUGAEIGeAA/BQYAQgZ4AD8FBgBCBngAPwUGAEIGeAA/BQYAQgZ4AD8FBgBCBngAPwUGAEIGeAA/BQYAQgYYAJMFPwCDBhgAkwU/AIMGGACTBT8AgwYYAJMFPwCDBhgAkwU/AIMGGACTBT8AgwYYAJMFPwCDBTH//gRa//IFMf/+BFr/8gUx//4EWv/yBTH//gRa//IE7wAAAcwAAAGZAAAAzAAAAAAAAAL1AHkE7wAAAz8AAAVuAAAFbgAAAcQARgHEAEYBxABGAwoARgMKAEYDCgBGBF4AIQReACECWABaBQYAWgt+AEwBtgBSAxIAUgI3ACUCTQCDALj9ywOXAEwDMQA1AwoAKwM7AEwDBgA9A0UARAM7ADsDlwBMAh4AHwMUADMC3QAUAzEANQMKACsDOwBMAwYAPQNFAEQDOwA7BZEAPwS0AB8EaABIBiAAKQw7ALAH+wACBXgAQgZPAEgFbgAhBgIAKQXMAD8FkQA/BLoAPwWNAD0GAAA7BXIAIwPAACsJpwCwByD/9AcAABAGeACPBswAHwdLABQHbgArBy0APQTtAEYD8wAABYUAAAX7ALAE5QA/BAIASAKy/80CWABaBY0AEAbzAEIC1//pBAIAgwQCAEgEAgBIBAIARgQ5AEIFKwBIBVgASAYeAJMGHgCTBh4AkwYeAJMGHgCTBh4AkwYeAJMGHgCTBh4AkwYeAJMGHgCTBh4AkwYeAJMGHgCTBh4AkwYeAJMGHgCTBh4AkwYeAJMGHgCTBh4AkwYtAJMGHgCTBh4AkwYeAJMLhwCwCoMAsASyAE4EsgBOBLIATgSyAE4EsgBOBLIATgSyAE4EsgBOBLIATgSyAE4EsgBOBLIATgSyAE4EsgBOBLIATgSyAE4EsgBOBLIATgSyAE4EsgBOBLIATgS4AFQEsgBOBE8AkwX7AD8F+wA/BfsAPwX7AD8F+wA/BfsAPwX7AD8D6wBkB/0AZAPrAGQFPwACB/0AZAPrAGQD6wBkA+sAOwPrAGQD6wBkA+sAZAPrAGQD6wBkA+sAZAPrAGQD6wBkA+sAZAPrAGQEEv/6BBL/+ghmALAJhQCwCYUAsAYkALAKNwCwBiQAsAYkALAGJACwBiQAsAYkALAGJgCwCIMAsAYkALAGJACwBngAPwYeADMFSQAzBUkAMwVJADMFSQAzBUkAMwVJADMFSQAzBiQAkQYkAJEGJACRBiQAkQYkAJEGJACRBiQAkQYkAJEGJACRBiQAkQYkAJEGJACRBiQAkQYkAJEGJACRBiQAkQYkAJEGJACRBiQAkQYkAJEGJACRBiQAkQYkAJEJZgCTCWYAkwlmAJMJZgCTCWYAkwXrAJMF6wCTBesAkwXrAJMF6wCTBesAkwXrAJMF6wCTBesAkwXrAJMFWABIBVgASAVYAEgFWABIBVgASAVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIFaABCBWgAQgVoAEIHuABMB7gATAnKAEIErABCBKwAQgSsAEIErABCBKwAQgSsAEIErABCBKwAQgSsAEIErABCBKwAQgSsAEIErABCBKwAQgSsAEIErABCBKwAQgSsAEIErABCBKwAQgSsAEIEzgBCBKwAQgSsADMCkQCTBKcAlgJTAJwCiwCTAosAhQMOAJMCiwCTAt8AkwKLAJME6QCTAosAOwLG//YIIgBCAwoAiwMKAIsDEgCLAwoAiwMKAIsDCv/RAwoAiwMKAIsHyACBB8gAgQfIAIEHyACBB8gAgQU9AIMFPQCDBT0AgwU9AIMFPQCDBT0AgwU9AIMFPQCDBT0AgwRTAFYEUwBWBFMAVgRTAFYEUwBWCAwASAeLAJMKYABICdQAkwg5AEgHsACTB4kASAdDAJME+QCTBXYASAWNAGADJgAXBLoAPQRaAAQE3QA7BKcALQT1AF4EnQBIBQoAVAUAAFAFjQBgAyYAFwRiAD0EWgAEBN0AOwSnAC8E9QBeBJ0ASgUKAFQE9QBQBO8ASATvAOkE7wBgBO8AJQTvAEQE7wA/BO8AXgTvAFwE7wBOBO8ATAOXAEwCHgAfAxQAMwLdABQDMQA1AwoAKwM7AEwDBgA9A0UARAM7ADsDlwBMAh4AHwMUADMC3QAUAzEANQMKACsDOwBMAwYAPQNFAEQDOwA7ATcAFAAAAAD/ff8n/sH+4/9xAAD+4/6W/uP+uv7B/sH+wf62AAAAAwAAAAMAAAAcAAEAAAAAA0QAAwABAAAAHAAEAygAAADGAIAABgBGAAAADQB+AX4BjwGSAaEBsAHMAecB6wIbAi0CMwI3AlkCvAK/AswC3QME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NREhERQWMz4BNwRGARL+qv7uqP66YH1N8HGm00bXher+2QETs46RwA4FmvvO/v7+wX1kxU1jvZWuanUBASzxAkD924qwAcGbAAIAk/8nBVgHZgADACMAAAEHIxMBIREQACEiJCc3HgEzMjY9AQ4BByIANREhERQWMz4BNwRC/uLZAQsBEv6q/u6o/rpgfU3wcabTRteF6v7ZAROzjpHADgb+0wE7/jT7zv7+/sF9ZMVNY72Vrmp1AQEs8QJA/duKsAHBmwACAJP/JwVYB1wABgAmAAABByMTMxMjFyEREAAhIiQnNx4BMzI2PQEOAQciADURIREUFjM+ATcC9n3R2ena0dMBEv6q/u6o/rpgfU3wcabTRteF6v7ZAROzjpHADgbnsgEn/tmb+87+/v7BfWTFTWO9la5qdQEBLPECQP3birABwZsAAAADAJP/JwVYB1oACwAXADcAAAEiJjU0NjMyFhUUBiEiJjU0NjMyFhUUBhchERAAISIkJzceATMyNj0BDgEHIgA1ESERFBYzPgE3Aj06S0o7OkxNATw6TUw7OE1NXAES/qr+7qj+umB9TfBxptNG14Xq/tkBE7OOkcAOBkZOOz1OTj06T047PU5OPTpPrPvO/v7+wX1kxU1jvZWuanUBASzxAkD924qwAcGbAAAAAgCT/ycFWAdkAAgAKAAAACImNTQ2MhYUFyEREAAhIiQnNx4BMzI2PQEOAQciADURIREUFjM+ATcDNX5RUX5QwQES/qr+7qj+umB9TfBxptNG14Xq/tkBE7OOkcAOBj1TQUBTUoL2+87+/v7BfWTFTWO9la5qdQEBLPECQP3birABwZsAAgCT/a4FWAWaAB8AKQAAASEREAAhIiQnNx4BMzI2PQEOAQciADURIREUFjM+ATcBMhYUBiImJzQ2BEYBEv6q/u6o/rpgfU3wcabTRteF6v7ZAROzjpHADv7APlJSfE8CUAWa+87+/v7BfWTFTWO9la5qdQEBLPECQP3birABwZv7OVN+UlFAP1MAAAACAJP/JwVYB2gAAwAjAAABIyclASEREAAhIiQnNx4BMzI2PQEOAQciADURIREUFjM+ATcDgeH+AQYBngES/qr+7qj+umB9TfBxptNG14Xq/tkBE7OOkcAOBi3TaP4y+87+/v7BfWTFTWO9la5qdQEBLPECQP3birABwZsAAgCT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ASMiBgceAQO2KjIGdw13WV5xPj92Ozks/tJ5xtHd0ceRAQv+9Xr06v7gARrm+33+y4CpDAypgIitAgKrBqwvKSlPWWpTPmM2Jy9MKyIs/t+qARf+6Zn7uK66ATj7+AEyAQO9/TuihU6ForuTlLoAAAAEAEL/9ATFBy8AEwAaACkANgAAASIGFSMQMzIeATMyNTMQIyIuAgczEyMnByMFIREhNQYjIgA1NAA3NhcBMjY3NS4BIyIGBx4BAkgiJJy5L1hHGUibuChJLTUc3dHHeXnGAkkBC/71evTq/uABGub7ff7LgKkMDKmAiK0CAqsGhS8rAQQ0NFz+/h8mH43+6aqqmfu4rroBOPv4ATIBA739O6KFToWiu5OUugAABABC//QExQYhAAMABwAWACMAAAEjJzcBIyc3EyERITUGIyIANTQANzYXATI2NzUuASMiBgceAQJ9y7zdAgzLvN2FAQv+9Xr06v7gARrm+33+y4CpDAypgIitAgKrBNnqXv646l7+J/u4rroBOPv4ATIBA739O6KFToWiu5OUugAEAEL/9ATFBggACwAXACYAMwAAASImNTQ2MzIWFRQGISImNTQ2MzIWFRQGFyERITUGIyIANTQANzYXATI2NzUuASMiBgceAQH4OktKOzlMTAE8Ok5NOzhNTRUBC/71evTq/uABGub7ff7LgKkMDKmAiK0CAqsE9E47PU5OPTtOTjs9Tk49Ok+s+7iuugE4+/gBMgEDvf07ooVOhaK7k5S6AAAAAAMAQv5xBMUEVQAOABsAJQAAASERITUGIyIANTQANzYXATI2NzUuASMiBgceARMyFhQGIiYnNDYDugEL/vV69Or+4AEa5vt9/suAqQwMqYCIrQICq68+UVF8TwJQBEj7uK66ATj7+AEyAQO9/TuihU6ForuTlLr+wFJ+UlFAP1IAAwBC//QExQYXAAMAEgAfAAABIyclASERITUGIyIANTQANzYXATI2NzUuASMiBgceAQM74f4BBgFYAQv+9Xr06v7gARrm+33+y4CpDAypgIitAgKrBNvTaf4x+7iuugE4+/gBMgEDvf07ooVOhaK7k5S6AAADAEL/9ATFBj8AEwAiAC8AAAEiBgcnPgEzMhYVFAYHJz4BNTQmEyERITUGIyIANTQANzYXATI2NzUuASMiBgceAQKsKzQFfQ17W2F2QD97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AAL+ugTXAT0HLwAUACAAAAEQIyIuAiMiBhUjEDMyHgIzMjUBHgEyNjczDgEiJicBPbYoSi01FSIknrslSC42Fkb+5QNDZkMDpASf9J8EByP+/iAmIDAsAQQgJiBa/ss2RUU2fZqafQAAAv7BBOECkwbTAAMACgAAARcHIyUzEyMnByMButnzt/6o3tDGeXnGBtNixUz+6aqqAAAAAAL+wQThAe4G0wADAAoAAAETIycHMxMjJwcjARvTt/Wx3tDGeXnGBtP+2cV5/umqqgAAAAAC/sEE4QHZByUAEwAaAAATPgEzMhYVFAYHJz4BNTQmIyIGBwUzEyMnByMtDXdZXnE+P3c7OiwoKjIG/u3e0MZ5ecYGfU9ZalM+YzYnL0wrIiwvKVz+6aqqAAAAAAL+tgThAT8HLwATABoAAAEQIyIuAiMiBhUjEDMyHgEzMjUBMxMjJwcjATm4KEktNRYiJJy5L1hHGUj+897Qxnl5xgcj/v4fJh8vKwEENDRc/tX+6aqqAAAAAB4BbgABAAAAAAAAAFIApgABAAAAAAABABEBHQABAAAAAAACAAcBPwABAAAAAAADABwBgQABAAAAAAAEABEBwgABAAAAAAAFADwCTgABAAAAAAAGABECrwABAAAAAAAIABEC5QABAAAAAAAJABEDGwABAAAAAAALABkDYQABAAAAAAAMABkDrwABAAAAAAANAJAE6wABAAAAAAAOABoFsgABAAAAAAAQAAoF4wABAAAAAAARAAYF/AADAAEECQAAAKQAAAADAAEECQABACIA+QADAAEECQACAA4BLwADAAEECQADADgBRwADAAEECQAEACIBngADAAEECQAFAHgB1AADAAEECQAGACICiwADAAEECQAIACICwQADAAEECQAJACIC9wADAAEECQALADIDLQADAAEECQAMADIDewADAAEECQANASADyQADAAEECQAOADQFfAADAAEECQAQABQFzQADAAEECQARAAwF7gBDAG8AcAB5AHIAaQBnAGgAdAAgADIAMAAxADEAIAAtACAAMgAwADEANgAgAFQAaABlACAATQBvAG4AdABzAGUAcgByAGEAdAAgAFAAcgBvAGoAZQBjAHQAIABBAHUAdABoAG8AcgBzACAAKABqAHUAbABpAGUAdABhAC4AdQBsAGEAbgBvAHYAcwBrAHkAQABn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AH0AfAC4AKEAfwB+AIAAgQDsAO4AugEKAQsBDAENAQ4BDwD9AP4BEAERARIBEwD/AQABFAEVARYBAQEXARgBGQEaARsBHAEdAR4BHwEgASEBIgD4APkBIwEkASUBJgEnASgBKQEqASsBLAEtAS4BLwEwATEBMgD6ANcBMwE0ATUBNgE3ATgBOQE6ATsBPAE9AT4BPwFAAUEA4gDjAUIBQwFEAUUBRgFHAUgBSQFKAUsBTAFNAU4BTwFQALAAsQFRAVIBUwFUAVUBVgFXAVgBWQFaAPsA/ADkAOUBWwFcAV0BXgFfAWABYQFiAWMBZAFlAWYBZwFoAWkBagFrAWwBbQFuAW8BcAC7AXEBcgFzAXQA5gDnAXUApgF2AXcBeAF5AXoBewF8AX0BfgF/AYABgQGCAYMBhAGFAYYBhwGIAYkBigGLAYwBjQGOAY8BkAGRAZIBkwGUAZUBlgGXAZgBmQGaAZsBnAGdAZ4BnwGgAaEBogGjAaQBpQGmAacBqAGpAaoBqwGsAa0BrgGvAbABsQGyAbMBtAG1AbYA2ADhAbcBuAG5AboBuwDbANwA3QDgANkA3wG8Ab0BvgG/AcABwQHCAcMBxAHFAcYBxwHIAckBygHLAcwBzQHOAc8B0AHRAdIB0wHUAdUB1gCbAdcB2AHZAdoB2wHcAd0B3gHfAeAB4QHiAeMB5AHlAeYB5wHoAekB6gHrAewB7QHuAe8B8AHxAfIB8wH0AfUB9gH3AfgB+QH6AfsB/AH9Af4B/wIAAgECAgIDAgQCBQIGAgcCCAIJAgoCCwIMAg0CDgIPAhACEQISAhMCFAIVAhYCFwIYAhkCGgIbAhwCHQIeAh8CIAIhAiICIwIkAiUCJgInAigCKQIqAisCLAItAi4CLwIwAjECMgIzAjQCNQI2AjcCOAI5AjoCOwI8Aj0CPgI/AkACQQJCAkMCRAJFAkYCRwJIAkkCSgJLAkwCTQJOAk8CUAJRAlICUwJUAlUCVgJXAlgCWQJaAlsCXAJdAl4CXwJgAmECYgJjAmQCZQJmAmcCaAJpAmoCawJsAm0CbgJvAnACcQJyAnMCdAJ1AnYCdwJ4AnkCegJ7AnwCfQJ+An8CgAKBALIAswKCALYAtwDEALQAtQDFAIIAwgCHAKsAxgKDAoQAvgC/ALwChQKGAocCiAKJAooCiwKMAo0CjgKPApACkQKSApMClAKVApYA9wKXApgCmQKaApsCnAKdAp4CnwKgAqECogKjAqQCpQKmAIwCpwKoAqkCqgKrAqwAmAKtAq4AmgCZAO8CrwKwAKUAkgCcAKcAjwCUAJUAuQDAAMECsQKyArMCtAK1ArYCtwK4ArkCugK7ArwCvQK+Ar8CwALBAsICwwLEAsUCxgLHAsgCyQLKAssCzALNAs4CzwLQAtEC0gLTAtQC1QLWAtcC2ALZAtoC2wLcAt0C3gLfAuAC4QLiAuMC5ALlAuYC5wLoAukC6gLrAuwC7QLuAu8C8ALxAvIC8wL0AvUC9gL3AvgC+QL6AvsC/AL9Av4C/wMAAwEDAgMDAwQDBQMGAwcDCAMJAwoDCwMMAw0DDgMPAxADEQMSAxMDFAMVAxYDFwMYAxkDGgMbAxwDHQMeAx8DIAMhAyIDIwMkAyUDJgMnAygDKQMqAysDLAMtAy4DLwMwAzEDMgMzAzQDNQM2AzcDOAM5AzoDOwM8Az0DPgM/A0ADQQNCA0MDRANFA0YDRwNIA0kDSgNLA0wDTQNOA08DUANRA1IDUwNUA1UDVgNXA1gDWQNaA1sDXANdA14DXwNgA2EDYgNjA2QDZQNmA2cDaANpA2oDawNsA20DbgNvA3ADcQNyA3MDdAN1A3YDdwN4A3kDegN7A3wDfQN+A38DgAOBA4IDgwOEA4UDhgOHA4gDiQOKA4sDjAONA44DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQOiA6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgPPA9AD0QPSA9MD1APVA9YD1wPYA9kD2gPbA9wD3QPeA98D4APhA+ID4wPkA+UD5gPnA+gETlVMTAJDUgd1bmkwMEEwB3VuaTAwQUQHdW5pMDBCMgd1bmkwMEIzB3VuaTAwQjUHdW5pMDBCOQdBbWFjcm9uB2FtYWNyb24GQWJyZXZlBmFicmV2ZQdBb2dvbmVrB2FvZ29uZWsLQ2NpcmN1bWZsZXgLY2NpcmN1bWZsZXgKQ2RvdGFjY2VudApjZG90YWNjZW50BkRjYXJvbgZkY2Fyb24GRGNyb2F0B0VtYWNyb24HZW1hY3JvbgZFYnJldmUGZWJyZXZlCkVkb3RhY2NlbnQKZWRvdGFjY2VudAdFb2dvbmVrB2VvZ29uZWsGRWNhcm9uBmVjYXJvbgtHY2lyY3VtZmxleAtnY2lyY3VtZmxleApHZG90YWNjZW50Cmdkb3RhY2NlbnQMR2NvbW1hYWNjZW50DGdjb21tYWFjY2VudAtIY2lyY3VtZmxleAtoY2lyY3VtZmxleARIYmFyBGhiYXIGSXRpbGRlBml0aWxkZQdJbWFjcm9uB2ltYWNyb24GSWJyZXZlBmlicmV2ZQdJb2dvbmVrB2lvZ29uZWsCSUoCaWoLSmNpcmN1bWZsZXgLamNpcmN1bWZsZXgMS2NvbW1hYWNjZW50DGtjb21tYWFjY2VudAxrZ3JlZW5sYW5kaWMGTGFjdXRlBmxhY3V0ZQxMY29tbWFhY2NlbnQMbGNvbW1hYWNjZW50BkxjYXJvbgZsY2Fyb24ETGRvdARsZG90Bk5hY3V0ZQZuYWN1dGUMTmNvbW1hYWNjZW50DG5jb21tYWFjY2VudAZOY2Fyb24GbmNhcm9uC25hcG9zdHJvcGhlA0VuZwNlbmcHT21hY3JvbgdvbWFjcm9uBk9icmV2ZQZvYnJldmUNT2h1bmdhcnVtbGF1dA1vaHVuZ2FydW1sYXV0BlJhY3V0ZQZyYWN1dGUMUmNvbW1hYWNjZW50DHJjb21tYWFjY2VudAZSY2Fyb24GcmNhcm9uBlNhY3V0ZQZzYWN1dGULU2NpcmN1bWZsZXgLc2NpcmN1bWZsZXgHdW5pMDE2Mgd1bmkwMTYzBlRjYXJvbgZ0Y2Fyb24EVGJhcgR0YmFyBlV0aWxkZQZ1dGlsZGUHVW1hY3Jvbgd1bWFjcm9uBlVicmV2ZQZ1YnJldmUFVXJpbmcFdXJpbmcNVWh1bmdhcnVtbGF1dA11aHVuZ2FydW1sYXV0B1VvZ29uZWsHdW9nb25lawtXY2lyY3VtZmxleAt3Y2lyY3VtZmxleAtZY2lyY3VtZmxleAt5Y2lyY3VtZmxleAZaYWN1dGUGemFjdXRlClpkb3RhY2NlbnQKemRvdGFjY2VudAd1bmkwMThGBU9ob3JuBW9ob3JuBVVob3JuBXVob3JuB3VuaTAxQzQHdW5pMDFDNQd1bmkwMUM2B3VuaTAxQzcHdW5pMDFDOAd1bmkwMUM5B3VuaTAxQ0EHdW5pMDFDQgd1bmkwMUNDBkdjYXJvbgZnY2Fyb24HdW5pMDFFQQd1bmkwMUVCCkFyaW5nYWN1dGUKYXJpbmdhY3V0ZQdBRWFjdXRlB2FlYWN1dGULT3NsYXNoYWN1dGULb3NsYXNoYWN1dGUHdW5pMDIwMAd1bmkwMjAxB3VuaTAyMDIHdW5pMDIwMwd1bmkwMjA0B3VuaTAyMDUHdW5pMDIwNgd1bmkwMjA3B3VuaTAyMDgHdW5pMDIwOQd1bmkwMjBBB3VuaTAyMEIHdW5pMDIwQwd1bmkwMjBEB3VuaTAyMEUHdW5pMDIwRgd1bmkwMjEwB3VuaTAyMTEHdW5pMDIxMgd1bmkwMjEzB3VuaTAyMTQHdW5pMDIxNQd1bmkwMjE2B3VuaTAyMTcMU2NvbW1hYWNjZW50DHNjb21tYWFjY2VudAd1bmkwMjFBB3VuaTAyMUIHdW5pMDIyQQd1bmkwMjJCB3VuaTAyMkMHdW5pMDIyRAd1bmkwMjMwB3VuaTAyMzEHdW5pMDIzMgd1bmkwMjMzB3VuaTAyMzcHdW5pMDI1OQd1bmkwMkJCB3VuaTAyQkMHdW5pMDJCRQd1bmkwMkJGB3VuaTAyQzgHdW5pMDJDOQd1bmkwMkNBB3VuaTAyQ0IHdW5pMDJDQwlncmF2ZWNvbWIJYWN1dGVjb21iB3VuaTAzMDIJdGlsZGVjb21iB3VuaTAzMDQHdW5pMDMwNgd1bmkwMzA3B3VuaTAzMDgNaG9va2Fib3ZlY29tYgd1bmkwMzBBB3VuaTAzMEIHdW5pMDMwQwd1bmkwMzBGB3VuaTAzMTEHdW5pMDMxMgd1bmkwMzFCDGRvdGJlbG93Y29tYgd1bmkwMzI0B3VuaTAzMjYHdW5pMDMyNwd1bmkwMzI4B3VuaTAzMkUHdW5pMDMzMQd1bmkwMzM1B3VuaTAzOTQHdW5pMDNBOQd1bmkwM0JDB3VuaTFFMDgHdW5pMUUwOQd1bmkxRTBDB3VuaTFFMEQHdW5pMUUwRQd1bmkxRTBGB3VuaTFFMTQHdW5pMUUxNQd1bmkxRTE2B3VuaTFFMTcHdW5pMUUxQwd1bmkxRTFEB3VuaTFFMjAHdW5pMUUyMQd1bmkxRTI0B3VuaTFFMjUHdW5pMUUyQQd1bmkxRTJCB3VuaTFFMkUHdW5pMUUyRgd1bmkxRTM2B3VuaTFFMzcHdW5pMUUzQQd1bmkxRTNCB3VuaTFFNDIHdW5pMUU0Mwd1bmkxRTQ0B3VuaTFFNDUHdW5pMUU0Ngd1bmkxRTQ3B3VuaTFFNDgHdW5pMUU0OQd1bmkxRTRDB3VuaTFFNEQHdW5pMUU0RQd1bmkxRTRGB3VuaTFFNTAHdW5pMUU1MQd1bmkxRTUyB3VuaTFFNTMHdW5pMUU1QQd1bmkxRTVCB3VuaTFFNUUHdW5pMUU1Rgd1bmkxRTYwB3VuaTFFNjEHdW5pMUU2Mgd1bmkxRTYzB3VuaTFFNjQHdW5pMUU2NQd1bmkxRTY2B3VuaTFFNjcHdW5pMUU2OAd1bmkxRTY5B3VuaTFFNkMHdW5pMUU2RAd1bmkxRTZFB3VuaTFFNkYHdW5pMUU3OAd1bmkxRTc5B3VuaTFFN0EHdW5pMUU3QgZXZ3JhdmUGd2dyYXZlBldhY3V0ZQZ3YWN1dGUJV2RpZXJlc2lzCXdkaWVyZXNpcwd1bmkxRThFB3VuaTFFOEYHdW5pMUU5Mgd1bmkxRTkzB3VuaTFFOTcHdW5pMUU5RQd1bmkxRUEwB3VuaTFFQTEHdW5pMUVBMgd1bmkxRUEzB3VuaTFFQTQHdW5pMUVBNQd1bmkxRUE2B3VuaTFFQTcHdW5pMUVBOAd1bmkxRUE5B3VuaTFFQUEHdW5pMUVBQgd1bmkxRUFDB3VuaTFFQUQHdW5pMUVBRQd1bmkxRUFGB3VuaTFFQjAHdW5pMUVCMQd1bmkxRUIyB3VuaTFFQjMHdW5pMUVCNAd1bmkxRUI1B3VuaTFFQjYHdW5pMUVCNwd1bmkxRUI4B3VuaTFFQjkHdW5pMUVCQQd1bmkxRUJCB3VuaTFFQkMHdW5pMUVCRAd1bmkxRUJFB3VuaTFFQkYHdW5pMUVDMAd1bmkxRUMxB3VuaTFFQzIHdW5pMUVDMwd1bmkxRUM0B3VuaTFFQzUHdW5pMUVDNgd1bmkxRUM3B3VuaTFFQzgHdW5pMUVDOQd1bmkxRUNBB3VuaTFFQ0IHdW5pMUVDQwd1bmkxRUNEB3VuaTFFQ0UHdW5pMUVDRgd1bmkxRUQwB3VuaTFFRDEHdW5pMUVEMgd1bmkxRUQzB3VuaTFFRDQHdW5pMUVENQd1bmkxRUQ2B3VuaTFFRDcHdW5pMUVEOAd1bmkxRUQ5B3VuaTFFREEHdW5pMUVEQgd1bmkxRURDB3VuaTFFREQHdW5pMUVERQd1bmkxRURGB3VuaTFFRTAHdW5pMUVFMQd1bmkxRUUyB3VuaTFFRTMHdW5pMUVFNAd1bmkxRUU1B3VuaTFFRTYHdW5pMUVFNwd1bmkxRUU4B3VuaTFFRTkHdW5pMUVFQQd1bmkxRUVCB3VuaTFFRUMHdW5pMUVFRAd1bmkxRUVFB3VuaTFFRUYHdW5pMUVGMAd1bmkxRUYxBllncmF2ZQZ5Z3JhdmUHdW5pMUVGNAd1bmkxRUY1B3VuaTFFRjYHdW5pMUVGNwd1bmkxRUY4B3VuaTFFRjkHdW5pMjAwNwd1bmkyMDA4B3VuaTIwMDkHdW5pMjAwQQd1bmkyMDBCB3VuaTIwMTAKZmlndXJlZGFzaAd1bmkyMDE1Bm1pbnV0ZQZzZWNvbmQHdW5pMjA3MAd1bmkyMDc0B3VuaTIwNzUHdW5pMjA3Ngd1bmkyMDc3B3VuaTIwNzgHdW5pMjA3OQd1bmkyMDgwB3VuaTIwODEHdW5pMjA4Mgd1bmkyMDgzB3VuaTIwODQHdW5pMjA4NQd1bmkyMDg2B3VuaTIwODcHdW5pMjA4OAd1bmkyMDg5DWNvbG9ubW9uZXRhcnkEbGlyYQd1bmkyMEE2BnBlc2V0YQd1bmkyMEE5BGRvbmcERXVybwd1bmkyMEFEB3VuaTIwQjEHdW5pMjBCMgd1bmkyMEI1B3VuaTIwQjkHdW5pMjBCQQd1bmkyMEJDB3VuaTIwQkQHdW5pMjExMwd1bmkyMTE2B3VuaTIxMjYJZXN0aW1hdGVkCW9uZWVpZ2h0aAx0aHJlZWVpZ2h0aHMLZml2ZWVpZ2h0aHMMc2V2ZW5laWdodGhzCGVtcHR5c2V0B3VuaTIyMDYHdW5pMjIxNQd1bmkyMjE5BkEuc3MwMQtBYWN1dGUuc3MwMQtBYnJldmUuc3MwMQx1bmkxRUFFLnNzMDEMdW5pMUVCNi5zczAxDHVuaTFFQjAuc3MwMQx1bmkxRUIyLnNzMDEMdW5pMUVCNC5zczAxEEFjaXJjdW1mbGV4LnNzMDEMdW5pMUVBNC5zczAxDHVuaTFFQUMuc3MwMQx1bmkxRUE2LnNzMDEMdW5pMUVBOC5zczAxDHVuaTFFQUEuc3MwMQx1bmkwMjAwLnNzMDEOQWRpZXJlc2lzLnNzMDEMdW5pMUVBMC5zczAxC0FncmF2ZS5zczAxDHVuaTFFQTIuc3MwMQx1bmkwMjAyLnNzMDEMQW1hY3Jvbi5zczAxDEFvZ29uZWsuc3MwMQpBcmluZy5zczAxD0FyaW5nYWN1dGUuc3MwMQtBdGlsZGUuc3MwMQx1bmkwMUM0LnNzMDEMdW5pMDFDNS5zczAxBkUuc3MwMQtFYWN1dGUuc3MwMQtFYnJldmUuc3MwMQtFY2Fyb24uc3MwMQx1bmkxRTFDLnNzMDEQRWNpcmN1bWZsZXguc3MwMQx1bmkxRUJFLnNzMDEMdW5pMUVDNi5zczAxDHVuaTFFQzAuc3MwMQx1bmkxRUMyLnNzMDEMdW5pMUVDNC5zczAxDHVuaTAyMDQuc3MwMQ5FZGllcmVzaXMuc3MwMQ9FZG90YWNjZW50LnNzMDEMdW5pMUVCOC5zczAxC0VncmF2ZS5zczAxDHVuaTFFQkEuc3MwMQx1bmkwMjA2LnNzMDEMRW1hY3Jvbi5zczAxDHVuaTFFMTYuc3MwMQx1bmkxRTE0LnNzMDEMRW9nb25lay5zczAxDHVuaTFFQkMuc3MwMQZGLnNzMDEGRy5zczAxC0dicmV2ZS5zczAxC0djYXJvbi5zczAxEEdjaXJjdW1mbGV4LnNzMDERR2NvbW1hYWNjZW50LnNzMDEPR2RvdGFjY2VudC5zczAxDHVuaTFFMjAuc3MwMQZJLnNzMDEHSUouc3MwMQtJYWN1dGUuc3MwMRBJYWN1dGVfSi5sb2NsTkxEFUlhY3V0ZV9KLmxvY2xOTEQuc3MwMQtJYnJldmUuc3MwMRBJY2lyY3VtZmxleC5zczAxDHVuaTAyMDguc3MwMQ5JZGllcmVzaXMuc3MwMQx1bmkxRTJFLnNzMDEPSWRvdGFjY2VudC5zczAxDHVuaTFFQ0Euc3MwMQtJZ3JhdmUuc3MwMQx1bmkxRUM4LnNzMDEMdW5pMDIwQS5zczAxDEltYWNyb24uc3MwMQxJb2dvbmVrLnNzMDELSXRpbGRlLnNzMDEGSi5zczAxEEpjaXJjdW1mbGV4LnNzMDEMdW5pMDFDNy5zczAxBk0uc3MwMQx1bmkxRTQyLnNzMDEGTi5zczAxDHVuaTAxQ0Euc3MwMQtOYWN1dGUuc3MwMQtOY2Fyb24uc3MwMRFOY29tbWFhY2NlbnQuc3MwMQx1bmkxRTQ0LnNzMDEMdW5pMUU0Ni5zczAxCEVuZy5zczAxDHVuaTAxQ0Iuc3MwMQx1bmkxRTQ4LnNzMDELTnRpbGRlLnNzMDEGUS5zczAxDHVuaTAxOEYuc3MwMQZULnNzMDEJVGJhci5zczAxC1RjYXJvbi5zczAxDHVuaTAxNjIuc3MwMQx1bmkwMjFBLnNzMDEMdW5pMUU2Qy5zczAxDHVuaTFFNkUuc3MwMQZVLnNzMDELVWFjdXRlLnNzMDELVWJyZXZlLnNzMDEQVWNpcmN1bWZsZXguc3MwMQx1bmkwMjE0LnNzMDEOVWRpZXJlc2lzLnNzMDEMdW5pMUVFNC5zczAxC1VncmF2ZS5zczAxDHVuaTFFRTYuc3MwMQpVaG9ybi5zczAxDHVuaTFFRTguc3MwMQx1bmkxRUYwLnNzMDEMdW5pMUVFQS5zczAxDHVuaTFFRUMuc3MwMQx1bmkxRUVFLnNzMDESVWh1bmdhcnVtbGF1dC5zczAxDHVuaTAyMTYuc3MwMQxVbWFjcm9uLnNzMDEMdW5pMUU3QS5zczAxDFVvZ29uZWsuc3MwMQpVcmluZy5zczAxC1V0aWxkZS5zczAxDHVuaTFFNzguc3MwMQZXLnNzMDELV2FjdXRlLnNzMDEQV2NpcmN1bWZsZXguc3MwMQ5XZGllcmVzaXMuc3MwMQtXZ3JhdmUuc3MwMQZZLnNzMDELWWFjdXRlLnNzMDEQWWNpcmN1bWZsZXguc3MwMQ5ZZGllcmVzaXMuc3MwMQx1bmkxRThFLnNzMDEMdW5pMUVGNC5zczAxC1lncmF2ZS5zczAxDHVuaTFFRjYuc3MwMQx1bmkwMjMyLnNzMDEMdW5pMUVGOC5zczAxBlouc3MwMQtaYWN1dGUuc3MwMQtaY2Fyb24uc3MwMQ9aZG90YWNjZW50LnNzMDEMdW5pMUU5Mi5zczAxBmEuc3MwMQthYWN1dGUuc3MwMQthYnJldmUuc3MwMQx1bmkxRUFGLnNzMDEMdW5pMUVCNy5zczAxDHVuaTFFQjEuc3MwMQx1bmkxRUIzLnNzMDEMdW5pMUVCNS5zczAxEGFjaXJjdW1mbGV4LnNzMDEMdW5pMUVBNS5zczAxDHVuaTFFQUQuc3MwMQx1bmkxRUE3LnNzMDEMdW5pMUVBOS5zczAxDHVuaTFFQUIuc3MwMQx1bmkwMjAxLnNzMDEOYWRpZXJlc2lzLnNzMDEMdW5pMUVBMS5zczAxC2FncmF2ZS5zczAxDHVuaTFFQTMuc3MwMQx1bmkwMjAzLnNzMDEMYW1hY3Jvbi5zczAxDGFvZ29uZWsuc3MwMQphcmluZy5zczAxD2FyaW5nYWN1dGUuc3MwMQthdGlsZGUuc3MwMQdhZS5zczAxDGFlYWN1dGUuc3MwMQx1bmkwMUM2LnNzMDEGZS5zczAxC2VhY3V0ZS5zczAxC2VicmV2ZS5zczAxC2VjYXJvbi5zczAxDHVuaTFFMUQuc3MwMRBlY2lyY3VtZmxleC5zczAxDHVuaTFFQkYuc3MwMQx1bmkxRUM3LnNzMDEMdW5pMUVDMS5zczAxDHVuaTFFQzMuc3MwMQx1bmkxRUM1LnNzMDEMdW5pMDIwNS5zczAxDmVkaWVyZXNpcy5zczAxD2Vkb3RhY2NlbnQuc3MwMQx1bmkxRUI5LnNzMDELZWdyYXZlLnNzMDEMdW5pMUVCQi5zczAxDHVuaTAyMDcuc3MwMQxlbWFjcm9uLnNzMDEMdW5pMUUxNy5zczAxDHVuaTFFMTUuc3MwMQxlb2dvbmVrLnNzMDEMdW5pMUVCRC5zczAxDHVuaTAyNTkuc3MwMQZmLnNzMDEQaWFjdXRlX2oubG9jbE5MRAlpLmxvY2xUUksGbC5zczAxC2xhY3V0ZS5zczAxC2xjYXJvbi5zczAxEWxjb21tYWFjY2VudC5zczAxCWxkb3Quc3MwMQx1bmkxRTM3LnNzMDEMdW5pMDFDOS5zczAxDHVuaTFFM0Iuc3MwMQtsc2xhc2guc3MwMQdvZS5zczAxBnQuc3MwMQl0YmFyLnNzMDELdGNhcm9uLnNzMDEMdW5pMDE2My5zczAxDHVuaTAyMUIuc3MwMQx1bmkxRTk3LnNzMDEMdW5pMUU2RC5zczAxDHVuaTFFNkYuc3MwMQZ3LnNzMDELd2FjdXRlLnNzMDEQd2NpcmN1bWZsZXguc3MwMQ53ZGllcmVzaXMuc3MwMQt3Z3JhdmUuc3MwMQZ5LnNzMDELeWFjdXRlLnNzMDEQeWNpcmN1bWZsZXguc3MwMQ55ZGllcmVzaXMuc3MwMQx1bmkxRUY1LnNzMDELeWdyYXZlLnNzMDEMdW5pMUVGNy5zczAxDHVuaTAyMzMuc3MwMQx1bmkxRUY5LnNzMDEGei5zczAxC3phY3V0ZS5zczAxC3pjYXJvbi5zczAxD3pkb3RhY2NlbnQuc3MwMQx1bmkxRTkzLnNzMDEFZl9mX2kKZl9mX2kuc3MwMQZmX2ZfaWoLZl9mX2lqLnNzMDEFZl9mX2wKZl9mX2wuc3MwMQRmX2lqCWZfaWouc3MwMQdmaS5zczAxB2ZsLnNzMDEHemVyby5sZgZvbmUubGYGdHdvLmxmCHRocmVlLmxmB2ZvdXIubGYHZml2ZS5sZgZzaXgubGYIc2V2ZW4ubGYIZWlnaHQubGYHbmluZS5sZgh6ZXJvLm9zZgdvbmUub3NmB3R3by5vc2YJdGhyZWUub3NmCGZvdXIub3NmCGZpdmUub3NmB3NpeC5vc2YJc2V2ZW4ub3NmCWVpZ2h0Lm9zZghuaW5lLm9zZgl6ZXJvLnRvc2YIb25lLnRvc2YIdHdvLnRvc2YKdGhyZWUudG9zZglmb3VyLnRvc2YJZml2ZS50b3NmCHNpeC50b3NmCnNldmVuLnRvc2YKZWlnaHQudG9zZgluaW5lLnRvc2YJemVyby5kbm9tCG9uZS5kbm9tCHR3by5kbm9tCnRocmVlLmRub20JZm91ci5kbm9tCWZpdmUuZG5vbQhzaXguZG5vbQpzZXZlbi5kbm9tCmVpZ2h0LmRub20JbmluZS5kbm9tCXplcm8ubnVtcghvbmUubnVtcgh0d28ubnVtcgp0aHJlZS5udW1yCWZvdXIubnVtcglmaXZlLm51bXIIc2l4Lm51bXIKc2V2ZW4ubnVtcgplaWdodC5udW1yCW5pbmUubnVtchZwZXJpb2RjZW50ZXJlZC5sb2NsQ0FUDWNhcm9uY29tYi5hbHQLdW5pMDMyNi5hbHQSaG9va2Fib3ZlY29tYi5jYXNlEHVuaTAzMDIubG9jbFZJRVQQdW5pMDMwNi5sb2NsVklFVBVkb3RiZWxvd2NvbWIubG9jbFZJRVQTY2Fyb25jb21iLmFsdC5zaG9ydAt1bmkwMzA2MDMwMQt1bmkwMzA2MDMwMAt1bmkwMzA2MDMwOQt1bmkwMzA2MDMwMwt1bmkwMzAyMDMwMQt1bmkwMzAyMDMwMAt1bmkwMzAyMDMwOQt1bmkwMzAyMDMwMwAAAAAAAf//AAIAAQAAAAwAAABkAHgAAgAOAAEBkgABAZMBqgADAasCpgABAqcCqAACAqkDlAABA5UDlQACA5YDlgABA5cDlwACA5gDmAABA5kDmQACA5oDmgABA5sDmwACA5wD0QABA9ID4AADAA4AAQAGAAEABAABAsEAAQABA54AAgADAZMBoQABA9MD1gABA9kD4AABAAAAAQAAAAoCIgN0AAJERkxUAA5sYXRuADoABAAAAAD//wARAAAAAQADAAQABQAGAAcAEQASABMAFAAVABYAFwAYABkAGgA6AAlBWkUgAGRDQVQgAI5DUlQgALhLQVogAOJNT0wgAQxOTEQgATZST00gAWBUQVQgAYpUUksgAbQAAP//ABIAAAABAAIAAwAEAAUABgAHABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAIABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAJABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAKABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwALABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAMABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwANABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAOABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAPABEAEgATABQAFQAWABcAGAAZABoAAP//ABIAAAABAAMABAAFAAYABwAQABEAEgATABQAFQAWABcAGAAZABoAG2FhbHQApGNhc2UArGNjbXAAsmRsaWcAvGRub20AwmZyYWMAyGxpZ2EA0mxudW0A2GxvY2wA3mxvY2wA5GxvY2wA6mxvY2wA8GxvY2wA9mxvY2wA/GxvY2wBAmxvY2wBCGxvY2wBDm51bXIBFG9udW0BGm9yZG4BIHBudW0BKHNhbHQBLnNpbmYBNHNzMDEBOnN1YnMBQHN1cHMBRnRudW0BTAAAAAIAAAABAAAAAQAbAAAAAwACAAMABAAAAAEAHAAAAAEAEQAAAAMAEgATABQAAAABAB0AAAABABcAAAABAA0AAAABAAYAAAABAAwAAAABAAkAAAABAAgAAAABAAUAAAABAAcAAAABAAoAAAABAAsAAAABABAAAAABABoAAAACABUAFgAAAAEAGAAAAAEAHgAAAAEAIAAAAAEAHwAAAAEADgAAAAEADwAAAAEAGQAiAEYATgBWAGQAbgB2AH4AiACQAJgAoACoALAAuADAAMgA0ADYAOAA6ADwAPoBBAEMARQBHAEkASwBNAE8AUQBTAFUAVwAAQAAAAEBHgADAAAAAQUUAAYAAAAEBvIHFgdMB2oABgAAAAIKbgqMAAQAAAABCqAABAAAAAEK7gAGAAAAAgsMCzIAAQAAAAELTgABAAAAAQtgAAEAAAABC3IAAQAAAAELdgABAAAAAQt6AAEAAAABC34AAQAAAAELggABAAAAAQuGAAEAAAABC44AAQAAAAELqgABAAAAAQuyAAEAAAABC7oAAQAAAAELvgAGAAAAAgvGC+gABgAAAAIMBAwoAAQAAAABDEIAAQAAAAEMVAABAAAAAQxcAAEAAAABDJIAAQAAAAEMwgABAAAAAQz4AAQAAAABDUoABAAAAAENZAABAAAAAQ2QAAEAAAABEU4AAQAAAAEVDAABAAAAARUUAAICAAD9AmwCxALbAtwC4wL1AvgC+gB+AwUDBwMOAyUDKgM0A1UDbQGAA3AAfgN6A4IDhwOQA9ECugKqArECwQK4Ar8C0wLFAskC0ALvAuUC6QLrAwQDFQMPAxEDEwMrA0oDOgNBA1EDSANPA1IDZANWA1oDYQOIA4oCvQNNAqsDOwK+A04C1gNnAsYDVwLRA2IC2QNqAscDWALfAt0C4QLgAvQC8gLoAvMC7QLkAvYDcQNzA3IDdAN4AvwC/gL9AwEDeQF0AXUDCQN8AwgDewMjAx8DEAMiAx0DIQMnA4QDLAOJAy0DNQORAzcDkwM2A5IDBgMXAsICwwNUAvcDdgL7AwIC3gLAA1ADUwK3A0cCvANMAs8DYALVA2YC6gLxAxIDHgMLA34DMgOOA2wD1ALYA2kC1wNoAsgDWQLiAuwDdQN3AvkC/wMAAwMDDAOAAw0DgQMkAyADKQOGAyYDgwMoA4UDLgM4A5QDfwK5A0kCuwNLArIDQgK0A0QCtQNFArYDRgKzA0MCrAM8Aq4DPgKvAz8CsANAAq0DPQLSA2MC1ANlAtoDawLKA1sCzANdAs0DXgLOA18CywNcAvAC7gMUAxYDGAMaAxsDHAMZAzADjAMvA4sDMQONAzMDjwOdA54C5wOWA5gDmgOcA70DvgO/A8ADwQPCA8MDxAPFA8YAAQD9ABQAKgArACwALgAvADIAMwA0ADYAOQA6ADwAPgA/AEoASwBPAFEAVABZAFwAXgBfAHsAhACFAIYAhwCIAIkAjACNAI4AjwCQAJEAkgCTAJUAnQCeAJ8AoAChAKQApQCmAKcAqACpAKoArACtAK4ArwDBAMMAxADFAMYAxwDIAMkA1gDXANgA2QDaANsA3ADdAN4A3wDgAOIA5ADmAOwA7gDwAPIA9AD2APgA/gEAAQIBBAEGAQcBCQELAQ4BFwEiASMBKAEpASoBKwEsAS4BMAEyATQBNgE4ATkBOgE7ATwBPQE+AT8BQAFBAUIBQwFHAUkBSgFLAUwBTgFPAVABUgFWAVcBWQFcAV0BXgFfAWABYQFiAWMBZAFmAXABcgF2AXcBfgF/AYEBmwG1AbYBtwG4AbkBugG7AcEBxAHGAccByQHLAc0B5QHmAecB6AHpAesB7QHuAe8B8AHxAfIB8wH1AfYB9wH5AfoB+wH8Af0B/gH/AgACAQICAgMCBAIFAgYCBwIIAgkCCgILAgwCDQIOAg8CEAIRAhICEwIUAhUCFgIXAhgCGQIaAhsCHAIdAh4CHwIgAiECIwI9Aj8CQQJDAkUCRwJJAksCTAJNAk4CTwJQAlECUgKnAqgC5gOVA5cDmQObA8cDyAPJA8oDywPMA80DzgPPA9AAAQG+AC0AYABuAHwAigCYAKYAtADCANAA3gDsAPIA+AD+AQQBCgEQARYBHAEiASgBLgE0AToBQAFGAUwBUgFYAV4BZAFqAXABdgF8AYIBiAGOAZQBmgGgAaYBrAGyAbgABgJ0Am0DxwO9A58DswAGAnUAfQPIA74DoAO0AAYCdgB2A8kDvwOhA7UABgJ3AHcDygPAA6IDtgAGAngCbgPLA8EDowO3AAYCeQJvA8wDwgOkA7gABgJ6AnADzQPDA6UDuQAGAnsCcQPOA8QDpgO6AAYCfAJyA88DxQOnA7sABgJ9AnMD0APGA6gDvAACAG4CqQACAG4DOQACAPUDbwACAXYDCgACAXcDfQACABUDqQACABYDqgACABcDqwACABgDrAACABkDrQACABoDrgACABsDrwACABwDsAACAB0DsQAC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AAoAAgAuABQAFQAWABcAGAAZABoAGwAcAB0AHgOzA7QDtQO2A7cDuAO5A7oDuwO8AAIAAQOfA7IAAAACAC4AFAOzA7QDtQO2A7cDuAO5A7oDuwO8A6kDqgOrA6wDrQOuA68DsAOxA7IAAgACABUAHgAAA58DqAAKAAIARAAfA58DoAOhA6IDowOkA6UDpgOnA6gD1AOfA6ADoQOiA6MDpAOlA6YDpwOoA58DoAOhA6IDowOkA6UDpgOnA6gAAgADABUAHgAAAZsBmwAKA6kDvAALAAEAHAABAAgAAgAGAA4DlwADAEsA9wObAAIA9wABAAEASwABAC4AAQAIAAQACgASABoAIAOZAAMASwBRA5UAAwBLAE4CqAACAFECpwACAE4AAQABAEsAAgHkAO8CqQLEAtsC3ALjAvUC+AL6AwUDBwMOAyUDKgM0AzkDVQNtA3ADegOCA4cDkAK6AqoCsQLBArgCvwLTAsUCyQLQAu8C5QLpAusDBAMVAw8DEQMTAysDSgM6A0EDUQNIA08DUgNkA1YDWgNhA4gDigK9A00CqwM7Ar4DTgLWA2cCxgNXAtEDYgLZA2oCxwNYAt8C3QLhAuAC9ALyAugC8wLtAuQC9gNxA3MDcgN0A3gC/AL+Av0DAQN5AwoDfQMJA3wDCAN7AyMDHwMQAyIDHQMhAycDhAMsA4kDLQM1A5EDNwOTAzYDkgMGAxcCwgLDA1QC9wN2AvsDAgLeAsADUANTArcDRwK8A0wCzwNgAtUDZgLqAvEDEgMeAwsDfgMyA44DbALYA2kC1wNoAsgDWQLiAuwDdQN3AvkC/wMAAwMDDAOAAw0DgQMkAyADKQOGAyYDgwMoA4UDLgM4A5QDfwK5A0kCuwNLArIDQgK0A0QCtQNFArYDRgKzA0MCrAM8Aq4DPgKvAz8CsANAAq0DPQLSA2MC1ANlAtoDawLKA1sCzANdAs0DXgLOA18CywNcAvAC7gMUAxYDGAMaAxsDHAMZAzADjAMvA4sDMQONAzMDjwOdA54C5wOWA5gDmgOcAAEA7wAmACoAKwAsAC4ALwAyADMANgA5ADoAPAA+AD8ARgBKAEsAUQBZAFwAXgBfAIQAhQCGAIcAiACJAIwAjQCOAI8AkACRAJIAkwCVAJ0AngCfAKAAoQCkAKUApgCnAKgAqQCqAKwArQCuAK8AwQDDAMQAxQDGAMcAyADJANYA1wDYANkA2gDbANwA3QDeAN8A4ADiAOQA5gDsAO4A8ADyAPQA9gD4AP4BAAECAQQBBgEHAQkBCwEOARcBJgEnASgBKQEqASsBLAEuATABMgE0ATYBOAE5AToBOwE8AT0BPgE/AUABQQFCAUMBRwFJAUoBSwFMAU4BTwFQAVIBVgFXAVkBXAFdAV4BXwFgAWEBYgFjAWQBZgFwAXIBdgF3AX4BfwGBAbUBtgG3AbgBuQG6AbsBwQHEAcYBxwHJAcsBzQHlAeYB5wHoAekB6wHtAe4B7wHwAfEB8gHzAfUB9gH3AfkB+gH7AfwB/QH+Af8CAAIBAgICAwIEAgUCBgIHAggCCQIKAgsCDAINAg4CDwIQAhECEgITAhQCFQIWAhcCGAIZAhoCGwIcAh0CHgIfAiACIQIjAj0CPwJBAkMCRQJHAkkCSwJMAk0CTgJPAlACUQJSAqcCqALmA5UDlwOZA5sAAgHkAO8CqQLEAtsC3ALjAvUC+AL6AwUDBwMOAyUDKgM0AzkDVQNtA3ADegOCA4cDkAK6AqoCsQLBArgCvwLTAsUCyQLQAu8C5QLpAusDBAMVAw8DEQMTAysDSgM6A0EDUQNIA08DUgNkA1YDWgNhA4gDigK9A00CqwM7Ar4DTgLWA2cCxgNXAtEDYgLZA2oCxwNYAt8C3QLhAuAC9ALyAugC8wLtAuQC9gNxA3MDcgN0A3gC/AL+Av0DAQN5AwoDfQMJA3wDCAN7AyMDHwMQAyIDHQMhAycDhAMsA4kDLQM1A5EDNwOTAzYDkgMGAxcCwgLDA1QC9wN2AvsDAgLeAsADUANTArcDRwK8A0wCzwNgAtUDZgLqAvEDEgMeAwsDfgMyA44DbALYA2kC1wNoAsgDWQLiAuwDdQN3AvkC/wMAAwMDDAOAAw0DgQMkAyADKQOGAyYDgwMoA4UDLgM4A5QDfwK5A0kCuwNLArIDQgK0A0QCtQNFArYDRgKzA0MCrAM8Aq4DPgKvAz8CsANAAq0DPQLSA2MC1ANlAtoDawLKA1sCzANdAs0DXgLOA18CywNcAvAC7gMUAxYDGAMaAxsDHAMZAzADjAMvA4sDMQONAzMDjwOdA54C5wOWA5gDmgOcAAEA7wAmACoAKwAsAC4ALwAyADMANgA5ADoAPAA+AD8ARgBKAEsAUQBZAFwAXgBfAIQAhQCG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AAIALwAvAAEA+AD4AAEAAQABApAAAQDiAM4AAwDyAAwACAAyADgAPgBEAEoAUABWAFwAYgBoAG4AdAB6AIAAhgCMAJIAmACeAKQAqgCwALYAvAABAo8AAAABApoFmgABAAAAAAABAlIAAAABAm0ESAABAAAAAAABAtUAAAABArwESAABBCUESAABAwwAAAABAwAFmgABAAAAAAABAtsAAAABAAAAAAABBVwF8AABAxsAAAABAx8FmgABAAAAAAABAwwAAAABAwAFmgABAAAAAAABAysAAAABAzsFmgABAAAAAAABAAgACQBmAHkCfgKEAogCiQKPAAIAAgGTAakAAAPSA+AAFwAmAAEAmgABAKAAAQCmAAEArAABALIAAQC4AAEAvgABAMQAAQDKAAEA0AABANYAAQDcAAEA4gABAOgAAQDuAAIA9AAAAPoAAAEAAAABBgAAAQwAAAESAAABGAAAAR4AAgEkAAEBKgABATAAAQE2AAEBPAAAAUIAAgFIAAEBTgABAVQAAQFaAAEBYAABAWYAAQFsAAEBcgABAXgAAQApBEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAf/+BEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAABZoAAQAABEgAAf/+BEgAAQAABEgAAQAABEgAAQAAAAAAAQAABZoAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAsACYAAwA8AAwAAQAIAA4AFAABAtUAAAABArwESAABBCUESAABAAEBrQACAAIBkwGpAAAD0gPgABcAJgABAJoAAQCgAAEApgABAKwAAQCyAAEAuAABAL4AAQDEAAEAygABANAAAQDWAAEA3AABAOIAAQDoAAEA7gACAPQAAAD6AAABAAAAAQYAAAEMAAABEgAAARgAAAEeAAIBJAABASoAAQEwAAEBNgABATwAAAFCAAIBSAABAU4AAQFUAAEBWgABAWAAAQFmAAEBbAABAXIAAQF4AAEAKQRIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAH//gRIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAAAAAAEAAAAAAAEAAAAAAAEAAAAAAAEAAAAAAAEAAAAAAAEAAAAAAAEAAAWaAAEAAARIAAH//gRIAAEAAARIAAEAAARIAAEAAAAAAAEAAAWaAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAE/rj7eAAM/vgAMAp4Ptg+8D8IPyA/OD9QP2g/gD+YP7A/yD/gP/hAEEAoQEBAWEBwQIhAoEC4QNBA6EEAQRhBMEFIQWBBeEGQQahBwEHYQfBCCEIgQjhCUEJoQoBCmEKwQshC4EL4QxBDKENAQ1hDcEOIQ6BDuEPQQ+hEAEQYRDBESERgRHhEkESoRMBE2ETwRQhFIEU4RVBFaEWARZhFsEXIReBF+EYQRihGQEZYRnBGiEagRrhG0EboRwBHGEcwR0hHYEd4R5BHqEfAR9hH8EgISCBIOEhQSGhIgEiYSLBIyEjgSPhJEEkoSUBJWElwSYhJoEm4SdBJ6EoAShhKMEpISmBKeEqQSqhKwErYSvBLCEsgSzhLUEtoS4BLmEuwS8hL4Ev4TBBMKExATFhMcEyITKBMuEzQTOhNAE0YTTBNSE1gTXhNkE2oTcBN2E3wTghOIE44TlBOaE6ATphOsE7ITuBO+E8QTyhPQE9YT3BPiE+gT7hP0E/oUABQGFAwUEhQYFB4UJBQqFDAUNhQ8FEIUSBROFFQUWhRgFGYUbBRyFHgUfhSEFIoUkBSWFJwUohSoFK4UtBS6FMAUxhTMFNIU2BTeFOQU6hTwFPYU/BUCFQgVDhUUFRoVIBUmFSwVMhU4FT4VRBVKFVAVVhVcFWIVaBVuFXQVehWAFYYVjBWSFZgVnhWkFaoVsBW2FbwVwhXIFc4V1BXaFeAV5hXsFfIV+BX+FgQWChYQFhYWHBYiFigWLhY0FjoWQBZGFkwWUhZYFl4WZBZqFnAWdhZ8FoIWiBaOFpQWmhagFqYWrBayFrgWvhbEFsoW0BbWFtwW4hboFu4W9Bb6FwAXBhcMFxIXGBceFyQXKhcwFzYXPBdCF0gXThdUF1oXYBdmF2wXchd4F34XhBeKF5AXlhecF6IXqBeuF7QXuhfAF8YXzBfSF9gX3hfkF+oX8Bf2F/wYAhgIGA4YFBgaGCAYJhgsGDIYOBg+GEQYShhQGFYYXBhiGGgYbhh0GHoYgBiGGIwYkhiYGJ4YpBiqGLAYthi8GMIYyBjOGNQY2hjgGOYY7BjyGPgY/hkEGQoZEBkWGRwZIhkoGS4ZNBk6GUAZRhlMGVIZWBleGWQZahlwGXYZfBmCGYgZjhmUGZoZoBmmGawZshm4Gb4ZxBnKGdAZ1hncGeIZ6BnuGfQZ+hoAGgYaDBoSGhgaHhokGioaMBo2GjwaQhpIGk4aVBpaGmAaZhpsGnIaeBp+GoQaihqQGpYanBqiGqgarhq0GroawBrGGswa0hrYGt4a5BrqGvAa9hr8GwIbCBsOGxQbGhsgGyYbLBsyGzgbPhtEG0obUBtWG1wbYhtoG24bdBt6G4AbhhuMG5IbmBueG6QbqhuwG7YbvBvCG8gbzhvUG9ob4BvmG+wb8hv4G/4cBBwKHBAcFhwcHCIcKBwuHDQcOhxAHEYcTBxSHFgcXhxkHGoccBx2HHwcghyIHI4clByaHKAcphysHLIcuBy+HMQcyhzQHNYc3BziHOgc7hz0HPodAB0GHQwdEh0YHR4dJB0qHTAdNh08HUIdSB1OHVQdWh1gHWYdbB1yHXgdfh2EHYodkB2WHZwdoh2oHa4dtB26HcAdxh3MHdId2B3eHeQd6h3wHfYd/B4CHggeDh4UHhoeIB4mHiweMh44Hj4eRB5KHlAeVh5cHmIeaB5uHnQeeh6AHoYejB6SHpgenh6kHqoesB62Hrwewh7IHs4e1B7aHuAe5h7sHvIe+B7+HwQfCh8QHxYfHB8iHygfLh80HzofQB9GH0wfUh9YH14fZB9qH3Afdh98H4IfiB+OH5Qfmh+gH6YfrB+yH7gfvh/EH8of0B/WH9wf4h/oH+4f9B/6IAAgBiAMIBIgGCAeICQgKiAwIDYgPCBCIEggTiBUIFogYCBmIGwgciB4IH4ghCCKIJAgliCcIKIgqCCuILQguiDAIMYgzCDSINgg3iDkIOog8CD2IPwhAiEIIQ4hFCEaISAhJiEsITIhOCE+IUQhSiFQIVYhXCFiIWghbiF0IXohgCGGIYwhkiGYIZ4hpCGqIbAhtiG8IcIhyCHOIdQh2iHgIeYh7CHyIfgh/iIEIgoiECIWIhwiIiIoIi4iNCI6IkAiRiJMIlIiWCJeImQiaiJwInYifCKCIogijiKUIpoioCKmIqwisiK4Ir4ixCLKItAi1iLcIuIi6CLuIvQi+iMAIwYjDCMSIxgjHiMkIyojMCM2IzwjQiNII04jVCNaI2AjZiNsI3IjeCN+I4QjiiOQI5YjnCOiI6gjriO0I7ojwCPGI8wj0iPYI94j5CPqI/Aj9iP8JAIkCCQOJBQkGiQgJCYkLCQyJDgkPiREJEokUCRWJFwkYiRoJG4kdCR6JIAkhiSMJJIkmCSeJKQkqiSwJLYkvCTCJMgkziTUJNok4CTmJOwk8iT4JP4lBCUKJRAlFiUcJSIlKCUuJTQlOiVAJUYlTCVSJVglXiVkJWolcCV2JXwlgiWIJY4llCWaJaAlpiWsJbIluCW+JcQlyiXQJdYl3CXiJegl7iX0JfomACYGJgwmEiYYJh4mJCYqJjAmNiY8JkImSCZOJlQmWiZgJmYmbCZyJngmfiaEJoomkCaWJpwmoiaoJq4mtCa6JsAmxibMJtIm2CbeJuQm6ibwJvYm/CcCJwgnDicUJxonICcmJywnMic4Jz4nRCdKJ1AnVidcJ2InaCduJ3QneieAJ4YnjCeSJ5gnniekJ6onsCe2J7wnwifIJ84n1CfaJ+An5ifsJ/In+Cf+KAQoCigQKBYoHCgiKCgoLig0KDooQChGKEwoUihYKF4oZChqKHAodih8KIIoiCiOKJQomiigKKYorCiyKLgovijEKMoo0CjWKNwo4ijoKO4o9Cj6KQApBikMKRIpGCkeKSQpKikwKTYpPClCKUgpTilUKVopYClmKWwpcil4KX4phCmKKZAplimcKaIpqCmuKbQpuinAKcYpzCnSKdgp3inkKeop8Cn2KfwqAioIKg4qFCoaKiAqJiosKjIqOCo+KkQqSipQKlYqXCpiKmgqbip0KnoqgCqGKowqkiqYKp4qpCqqKrAqtiq8KsIqyCrOKtQq2irgKuYq7CryKvgq/isEKworECsWKxwrIisoKy4rNCs6K0ArRitMK1IrWCteK2QraitwK3YrfCuCK4grjiuUK5oroCumK6wrsiu4K74rxCvKK9Ar1ivcK+Ir6CvuK/Qr+iwALAYsDCwSLBgsHiwkLCosMCw2LDwsQixILE4sVCxaLGAsZixsLHIseCx+LIQsiiyQLJYsnCyiLKgsriy0LLoswCzGLMws0izYLN4s5CzqLPAs9iz8LQItCC0OLRQtGi0gLSYtLC0yLTgtPi1ELUotUC1WLVwtYi1oLW4tdC16LYAthi2MLZItmC2eLaQtqi2wLbYtvC3CLcgtzi3ULdot4C3mLewt8i34Lf4uBC4KLhAuFi4cLiIuKC4uLjQuOi5ALkYuTC5SLlguXi5kLmoucC52Lnwugi6ILo4ulC6aLqAupi6sLrIuuC6+LsQuyi7QLtYu3C7iLugu7i70LvovAC8GLwwvEi8YLx4vJC8qLzAvNi88L0IvSC9OL1QvWi9gL2YvbC9yL3gvfi+EL4ovkC+WL5wvoi+oL64vtC+6L8Avxi/ML9Iv2C/eL+Qv6i/wL/Yv/DACMAgwDjAUMBowIDAmMCwwMjA4MD4wRDBKMFAwVjBcMGIwaDBuMHQwejCAMIYwjDCSMJgwnjCkMKowsDC2MLwwwjDIMM4w1DDaMOAw5jDsMPIw+DD+MQQxCjEQMRYxHDEiMSgxLjE0MToxQDFGMUwxUjFYMV4xZDFqMXAxdjF8MYIxiDGOMZQxmjGgMaYxrDGyMbgxvjHEMcox0DHWMdwx4jHoMe4x9DH6MgAyBjIMMhIyGDIeMiQyKjIwMjYyPDJCMkgyTjJUMloyYDJmMmwycjJ4Mn4yhDKKMpAyljKcMqIyqDKuMrQyujLAMsYyzDLSMtgy3jLkMuoy8DL2MvwzAjMIMw4zFDMaMyAzJjMsMzIzODM+M0QzSjNQM1YzXDNiM2gzbjN0M3ozgDOGM4wzkjOYM54zpDOqM7AztjO8M8IzyDPOM9Qz2jPgM+Yz7DPyM/gz/jQENAo0EDQWNBw0IjQoNC40NDQ6NEA0RjRMNFI0WDReNGQ0ajRwNHY0fDSCNIg0jjSUNJo0oDSmNKw0sjS4NL40xDTKNNA01jTcNOI06DTuNPQ0+jUANQY1DDUSNRg1HjUkNSo1MDU2NTw1QjVINU41VDVaNWA1ZjVsNXI1eDV+NYQ1ijWQNZY1nDWiNag1rjW0Nbo1wDXGNcw10jXYNd415DXqNfA19jX8NgI2CDYONhQ2GjYgNiY2LDYyNjg2PjZENko2UDZWNlw2YjZoNm42dDZ6NoA2hjaMNpI2mDaeNqQ2qjawNrY2vDbCNsg2zjbUNto24DbmNuw28jb4Nv43BDcKNxA3FjccNyI3KDcuNzQ3OjdAN0Y3TDdSN1g3XjdkN2o3cDd2N3w3gjeI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BZoAAQSgBbgAAQMQAAAAAQMOBZoAAQSgBbgAAQMQAAAAAQMOBZoAAQSgBbgAAQKeAAAAAQKYBZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQAAAAAAAQPlBEgAAQAAAAAAAQJSAAAAAQJtBEgAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQK0AAAAAQLJBEgAAQAAAAAAAQKFAAAAAQKDBEYAAQMbBEgAAQKFAAAAAQKDBEYAAQMbBEgAAQKFAAAAAQKDBEYAAQMbBEgAAQKFAAAAAQKDBEYAAQMbBEgAAQKFAAAAAQKDBEYAAQMbBEgAAQAAAAAAAQKDBEYAAQAAAAAAAQKoAAAAAQKPBEgAAQP4BEgAAQKoAAAAAQKPBEgAAQP4BEgAAQKoAAAAAQKPBEgAAQP4BEgAAQKoAAAAAQKPBEgAAQP4BEgAAQN/AAAAAQIxBEgAAQAAAAAAAQE3AAAAAQE3BfAAAQIvBEgAAQN/AAAAAQIxBEgAAQAAAAAAAQL0AAAAAQL+BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQL0AAAAAQL+BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQMMAAAAAQMABZoAAQAAAAAAAQJSAAAAAQJtBEgAAQAAAAAAAQMMAAAAAQMABZoAAQAAAAAAAQJSAAAAAQJtBEgAAQAAAAAAAQMMAAAAAQMABZoAAQAAAAAAAQJSAAAAAQJtBEgAAQAAAAAAAQMMAAAAAQMABZoAAQAAAAAAAQJSAAAAAQJtBEgAAQAAAAAAAQMZAAAAAQLnBZoAAQAAAAAAAQLbAAAAAQAAAAAAAQVcBfAAAQNIAAAAAQMXBZoAAQAAAAAAAQLbAAAAAQAAAAAAAQVcBfAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQMbAAAAAQMfBZoAAQAAAAAAAQAAAAAAAQKRBEgAAQAAAAAAAQMbAAAAAQMfBZoAAQAAAAAAAQAAAAAAAQKRBEgAAQAAAAAAAQMbAAAAAQMfBZoAAQAAAAAAAQAAAAAAAQKRBEgAAQAAAAAAAQMbAAAAAQMfBZoAAQAAAAAAAQAAAAAAAQKRBEgAAQAAAAAAAQMnAAAAAQM1BZoAAQAAAAAAAQLFAAAAAQExBfAAAQInBEwAAQNqAAAAAQN5BZoAAQAAAAAAAQLFAAAAAQExBfAAAQInBEwAAQE5AAAAAQE5BZoAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQE5AAAAAQE5BwYAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQE5AAAAAQE5BZoAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQE5AAAAAQE5BZoAAQAAAAAAAQAAAAAAAQErBEgAAQAAAAAAAQE5AAAAAQRqBZoAAQAAAAAAAQErAAAAAQErBEgAAQAAAAAAAQAAAAAAAQH4BZoAAQAAAAAAAQAAAAAAAQEhBEgAAQAAAAAAAQLXAAAAAQLXBZoAAQAAAAAAAQKWAAAAAQE3BfAAAQIvBEgAAQJgAAAAAQErBEgAAQAAAAAAAQJvAAAAAQE7BZoAAQNCBZoAAQE3AAAAAQE3BfAAAQJQBfAAAQJvAAAAAQE7BZoAAQNCBZoAAQE3AAAAAQE3BfAAAQJQBfAAAQJvAAAAAQE7BZoAAQNCBZoAAQE3AAAAAQE3BfAAAQJQBfAAAQJvAAAAAQE7BZoAAQNCBZoAAQE3AAAAAQE3BfAAAQJQBfAAAQJ1AAAAAQFCBZoAAQNIBZoAAQFeAAAAAQFeBfAAAQJ3BfAAAQMrAAAAAQM7BZoAAQAAAAAAAQK0AAAAAQLJBEgAAQAAAAAAAQMrAAAAAQM7BZoAAQAAAAAAAQK0AAAAAQLJBEgAAQAAAAAAAQMrAAAAAQM7BZoAAQAAAAAAAQK0AAAAAQLJ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BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQL0AAAAAQL+BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQL0AAAAAQL+BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQL0AAAAAQL+BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQL0AAAAAQL+BZoAAQAAAAAAAQJIAAAAAQJYBEgAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLLB1oAAQAAAAAAAQJoAAAAAQJgBgYAAQAAAAAAAQLJAAAAAQLPBzUAAQAAAAAAAQJoAAAAAQJkBeEAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQLJAAAAAQLPBZoAAQAAAAAAAQJoAAAAAQJkBEYAAQAAAAAAAQE5AAAAAQE1B1oAAQAAAAAAAQAAAAAAAQEnBggAAQAAAAAAAQE5AAAAAQE5BZoAAQAAAAAAAQErAAAAAQErBEgAAQAAAAAAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQM/AAAAAQMtB1oAAQPFBbgAAQKFAAAAAQJ/BgYAAQMbBEgAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQM/AAAAAQMxByEAAQPFBbgAAQKFAAAAAQKDBc0AAQMbBEgAAQM/AAAAAQMxByEAAQPFBbgAAQKFAAAAAQKDBc0AAQMbBEgAAQM/AAAAAQMtB1oAAQPFBbgAAQKFAAAAAQJ/BgYAAQMbBEgAAQM/AAAAAQMxBzUAAQPFBbgAAQKFAAAAAQKDBeEAAQMbBEgAAQM/AAAAAQMxBZoAAQPFBbgAAQKFAAAAAQKDBEYAAQMbBEgAAQMQAAAAAQMOBZoAAQSgBbgAAQKoAAAAAQKPBEgAAQP4BEgAAQMQAAAAAQMKB1oAAQSgBbgAAQKoAAAAAQKLBggAAQP4BEgAAQMQAAAAAQMOByEAAQSgBbgAAQKoAAAAAQKYBc8AAQP4BEgAAQMQAAAAAQMOByEAAQSgBbgAAQKoAAAAAQKYBc8AAQP4BEgAAQMQAAAAAQMKB1oAAQSgBbgAAQKoAAAAAQKTBggAAQP4BEgAAQMQAAAAAQMOBzUAAQSgBbgAAQKoAAAAAQKYBeMAAQP4BEgAAQMQAAAAAQMOBZoAAQSgBbgAAQKoAAAAAQKYBEgAAQP4BEgAAQKeAAAAAQKYBZoAAQAAAAAAAQN/AAAAAQIxBEgAAQAAAAAAAQKeAAAAAQKYBZoAAQAAAAAAAQN/AAAAAQIxBEgAAQAAAAAAAQKeAAAAAQKTB1oAAQAAAAAAAQN/AAAAAQItBggAAQAAAAAAAQKeAAAAAQKYBzUAAQAAAAAAAQN/AAAAAQIxBeMAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQByEAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMMB1oAAQAAAAAAAQMQAAAAAQMQByEAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQMQAAAAAQMQCQIAAQAAAAAAAQMQAAAAAQMQBZoAAQAAAAAAAQjbAAAAAQjjBZoAAQAAAAAAAQhgAAAAAQhqBEgAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgByEAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgByEAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKcB1oAAQAAAAAAAQKRAAAAAQKgByEAAQAAAAAAAQKRAAAAAQKgBZoAAQAAAAAAAQKRAAAAAQKgCI0AAQAAAAAAAQKRAAAAAQKgCI0AAQAAAAAAAQKRAAAAAQKgBzUAAQAAAAAAAQMKAAAAAQMKBZoAAQAAAAAAAQMKAAAAAQMKBZoAAQAAAAAAAQMKAAAAAQMKBx8AAQAAAAAAAQMKAAAAAQMKBZoAAQAAAAAAAQMKAAAAAQMKBZoAAQAAAAAAAQMKAAAAAQMKBZoAAQAAAAAAAQMKAAAAAQMKBwYAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQX+BZoAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQE5AAAAAQCFBwoAAQAAAAAAAQH2AAAAAQX+ByEAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2ByEAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2CLwAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQHyB1oAAQAAAAAAAQH2AAAAAQH2ByEAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQH2AAAAAQH2BZoAAQAAAAAAAQAAAAAAAQISBZoAAQAAAAAAAQAAAAAAAQISByEAAQAAAAAAAQJvAAAAAQZmBZoAAQNCBZoAAQTPAAAAAQE5BZoAAQAAAAAAAQTPAAAAAQE5BZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMfAAAAAQg3BZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMfAAAAAQNtBx0AAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMSAAAAAQMZBZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQMfAAAAAQNtBZoAAQAAAAAAAQM/AAAAAQMxBZoAAQPFBbgAAQKgAAAAAQKmBZoAAQAAAAAAAQKgAAAAAQKmBZoAAQAAAAAAAQKgAAAAAQKmBZoAAQAAAAAAAQKgAAAAAQKmBZoAAQAAAAAAAQKgAAAAAQKmBZoAAQAAAAAAAQKgAAAAAQKmBZoAAQAAAAAAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTByEAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLPB1oAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTByEAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTByEAAQRvBbgAAQLsAAAAAQLPB1oAAQRvBbgAAQLsAAAAAQLTBzUAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTByEAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTCKIAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTBZoAAQRvBbgAAQLsAAAAAQLTCLwAAQRvBbgAAQAAAAAAAQS0BZoAAQAAAAAAAQAAAAAAAQS0BZoAAQAAAAAAAQAAAAAAAQS0BZoAAQAAAAAAAQAAAAAAAQS0BZoAAQAAAAAAAQAAAAAAAQS0BZoAAQAAAAAAAQMG/z0AAQL2BZoAAQAAAAAAAQMG/z0AAQL2BZoAAQAAAAAAAQMG/z0AAQL2BZoAAQAAAAAAAQMG/z0AAQL2BZoAAQAAAAAAAQMG/z0AAQL2Bx0AAQAAAAAAAQMG/z0AAQL2BZoAAQAAAAAAAQMG/z0AAQL2BZoAAQAAAAAAAQMG/z0AAQLyB1oAAQAAAAAAAQMG/z0AAQL2BwYAAQAAAAAAAQMG/z0AAQL2BzUAAQAAAAAAAQKsAAAAAQK0BZoAAQAAAAAAAQKsAAAAAQK0BZoAAQAAAAAAAQKsAAAAAQK0BZoAAQAAAAAAAQKsAAAAAQK0BZoAAQAAAAAAAQKsAAAAAQK0BZoAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBc8AAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKsBggAAQAAAAAAAQKqAAAAAQKwBc8AAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQKqAAAAAQKwB7AAAQAAAAAAAQKqAAAAAQKwBEgAAQAAAAAAAQAAAAAAAQPRBEgAAQAAAAAAAQAAAAAAAQPRBc8AAQAAAAAAAQeoAAAAAQeyBEgAAQVcBfAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBc8AAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBc8AAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJoBggAAQAAAAAAAQJvAAAAAQJtBc8AAQAAAAAAAQJvAAAAAQJtBEgAAQAAAAAAAQJvAAAAAQJtBzsAAQAAAAAAAQJvAAAAAQJtBzsAAQAAAAAAAQJvAAAAAQJtBeMAAQAAAAAAAQI/AAAAAQI9BEgAAQAAAAAAAQAAAAAAAQNtBc8AAQAAAAAAAQAAAAAAAQErBcsAAQAAAAAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQFKAAAAAQEZBfAAAQIxBfAAAQGFAAAAAQFUBfAAAQJtBfAAAQdzAAAAAQdzBEgAAQAAAAAAAQHLAAAAAQEQBUgAAQIQBfAAAQGeAAAAAQAAAAAAAQAAAAAAAQHLAAAAAQEQBUgAAQIQBfAAAQHLAAAAAQEQBUgAAQIQBfAAAQHLAAAAAQEQBUgAAQIQBfAAAQHLAAAAAQEQBuMAAQIQBfAAAQHLAAAAAQEQBUgAAQIQBfAAAQHLAAAAAQEQBUgAAQIQBfAAAQAAAAAAAQPlBEgAAQAAAAAAAQAAAAAAAQPlBEgAAQAAAAAAAQAAAAAAAQPlBEgAAQAAAAAAAQAAAAAAAQPlBEgAAQAAAAAAAQAAAAAAAQPlBEgAAQAAAAAAAQVMAAAAAQKYBEgAAQAAAAAAAQVMAAAAAQKYBEgAAQAAAAAAAQVMAAAAAQKYBEgAAQAAAAAAAQVMAAAAAQKYBEgAAQAAAAAAAQVMAAAAAQKYBEgAAQAAAAAAAQVMAAAAAQKYBEgAAQAAAAAAAQVMAAAAAQKTBggAAQAAAAAAAQVMAAAAAQKYBbQAAQAAAAAAAQVMAAAAAQKYBeMAAQAAAAAAAQIxAAAAAQI7BEgAAQAAAAAAAQIxAAAAAQI7BEgAAQAAAAAAAQIxAAAAAQI7BEgAAQAAAAAAAQIxAAAAAQI7BEgAAQAAAAAAAQIxAAAAAQI7BEgAAQAAAAAAAgAiACYAJgAAACgAKgABACwANAAEADYAOgANADwAPAASAD4APwATAEYARgAVAEgASgAWAEwATgAZAFAAVAAcAFcAWgAhAFwAXAAlAF4AXwAmAIQAmgAoAJwAoQA/AKQAswBFALUAugBVALwAxwBbAMoA2wBnAN4A8QB5APQBKQCNASsBNQDDATgBQgDOAUUBgQDZAa8B9wEWAfkCUgFfAqkCvQG5Ar8C2AHOAtoC2gHoAtwDBQHpAwcDBwITAwkDaQIUA2sDbAJ1A24DlAJ3AAIAAgGTAakAAAPSA+AAFwAmAAEAmgABAKAAAQCmAAEArAABALIAAQC4AAEAvgABAMQAAQDKAAEA0AABANYAAQDcAAEA4gABAOgAAQDuAAIA9AAAAPoAAAEAAAABBgAAAQwAAAESAAABGAAAAR4AAgEkAAEBKgABATAAAQE2AAEBPAAAAUIAAgFIAAEBTgABAVQAAQFaAAEBYAABAWYAAQFsAAEBcgABAXgAAQApBEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAf/+BEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAAAAAAAQAABZoAAQAABEgAAf/+BEgAAQAABEgAAQAABEgAAQAAAAAAAQAABZoAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQAABEgAAQCIAH4AAQCeAAwADgAeACQAKgAwADYAPABCAEgATgBUAFoAYABmAGwAAQApBc8AAQAABc8AAQAABc8AAQAABeMAAQAABbQAAQAABc8AAQAABcsAAQAABeMAAf/6BggAAQAABikAAQAABc8AAQAABc0AAQAABc8AAQAABc8AAgABAZMBoAAAAAIAAwGTAaEAAAPTA9YADwPZA+AAEwAbAAAAbgAAAHQAAAB6AAAAgAAAAIYAAACMAAAAkgAAAJgAAACeAAAApAAAAKoAAACwAAAAtgAAALwAAADCAAAAyAAAAM4AAADUAAAA2gAAAOAAAADmAAAA7AAAAPIAAAD4AAAA/gAAAQQAAAEKAAEAKQRIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAH//gRIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAH//gRIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAEAAARIAAAAAQAAAADVpCcIAAAAANRTKbUAAAAA3hPgAw==') format('truetype');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
}


--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_meet\calendar_meet_cmpt.js
--------------------------------------------------
const timeHelper = require('../../../../helper/time_helper.js');
const pageHelper = require('../../../../helper/page_helper.js');
const calendarLib = require('../calendar_lib.js');

/*#### 父组件日历颜色定义*/
/* 整体颜色 */
//--calendarPageColor: #F0F4FF;
/* 加重颜色*/
//--calendarMainColor: #388AFF;
/* 加重的亮颜色 用于选中日期的数据小圆点 */
//--calendarLightColor: #A2C7FF;


Component({
	options: {
		addGlobalClass: true
	},
	properties: {
		isLunar: { //是否开启农历
			type: Boolean,
			value: false
		},
		mode: { // 模式 one/multi
			type: String,
			value: 'one'
		},

		year: { // 正在操作的年
			type: Number,
			value: 0
		},

		month: { // 正在操作的月
			type: Number,
			value: 0
		},
		fold: { //日历折叠
			type: Boolean,
			value: false
		},
		selectTimeout: { //过期时间选择(mode=multi)
			type: Boolean,
			value: true
		},
		hasDays: { // 过期有数据的日期
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {
				if (newVal.length != oldVal.length) {
					// TODO 引起加载的时候二次调用 
					//this._init();
				}
			}
		},
		hasJoinDays: { // 未超期有预约的日期
			type: Array,
			value: [],
		},
		oneDoDay: { // 正在操作的天  string
			type: String,
			value: null
		},
		multiDoDay: { // 多选模式>正在操作的天 arrary[]
			type: Array,
			value: null,
		},
		multiOnlyOne: { //多选模式>只能选一个
			type: Boolean,
			value: false
		}
	},

	data: {
		weekNo: 0, // 正在操作的那天位于第几周 
		fullToday: 0, //今天  
		glow: '', //闪烁效果
	},

	lifetimes: {
		attached() {
			this._init();
		}
	},

	methods: {
		_init: function () {
			calendarLib.getNowTime(this);
			calendarLib.createDay(this);
		},


		bindFoldTap: function (e) { // 日历折叠
			calendarLib.bindFoldTap(this);
		},


		bindNextTap(e) { // 下月
			calendarLib.bindNextTap(this);


			this.setData({
				glow: 'glow'
			});
			setTimeout(() => {
				this.setData({
					glow: ''
				});
			}, 800);

		},

		bindLastTap(e) { // 上月
			calendarLib.bindLastTap(this);

			this.setData({
				glow: 'glow'
			});
			setTimeout(() => {
				this.setData({
					glow: ''
				});
			}, 300);

		},

		bindDayOneTap(e) { // 单个天点击
			calendarLib.bindDayOneTap(e, this);
		},

		bindDayMultiTap(e) { // 多选天点击
			let day = e.currentTarget.dataset.fullday;

			// 过期时间判断
			if (!this.data.selectTimeout) {
				let now = timeHelper.time('Y-M-D');
				if (day < now)
					return pageHelper.showNoneToast('不能编辑过往的日期');
			}

			// 是否有预约判断
			if (this.data.hasJoinDays.includes(day)) {
				return pageHelper.showModal('该日期已有用户预约/预约待审核，不可直接取消；如果确要取消，请先删除有预约的时段');
			}


			calendarLib.bindDayMultiTap(e, this);
		},

		bindToNowTap: function (e) { // 回本月
			calendarLib.bindToNowTap(this);
		},

		// ListTouch触摸开始
		listTouchStart(e) {
			pageHelper.listTouchStart(e, this);
		},

		// ListTouch计算方向
		listTouchMove(e) {
			pageHelper.listTouchMove(e, this);
		},

		/** ListTouch计算滚动 */
		listTouchEnd: function (e) {
			calendarLib.listTouchEnd(this);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_meet\calendar_meet_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_meet\calendar_meet_cmpt.wxml
--------------------------------------------------
<wxs src="../../../../tpls/wxs/tools.wxs" module="tools" />
<wxs module="utils">
	// 比较操作日期所在月是否当前显示的月
	function compareYearMonth(oneDoDay, year, month) {
		var arr = oneDoDay.split('-');
		return arr[0] == year && arr[1] == month;
	} 

	module.exports = {
		compareYearMonth: compareYearMonth,
	};
</wxs>
<view class="cal-container">
	<view bindtap="bindLastTap" class="left"><text class="icon-back"></text></view>
	<view class="cal-main">
		<view class="text-center cal-nav">
			<view class="to-now" bindtap="bindToNowTap">本月</view>
			<view class="select-item">
				<!--<view class="arrow text-grey" bindtap="bindLastTap"><text class="icon-backwardfill" /></view>-->
				<view class="text-lg">{{year}}年{{month}}月</view>
				<!--<view class="arrow text-grey" bindtap="bindNextTap"><text class=" icon-play_forward_fill" /></view>-->
			</view>
			<block wx:if="{{mode=='one'}}">
				<view wx:if="{{!fold}}" class="fold text-grey" bindtap="bindFoldTap"><text
						class="icon-fold calendar-text"></text></view>
				<view wx:if="{{fold}}" class="fold" bindtap="bindFoldTap"><text class="icon-unfold calendar-text"></text>
				</view>
			</block>
		</view>

		<view class="cal-title">
			<view>一</view>
			<view>二</view>
			<view>三</view>
			<view>四</view>
			<view>五</view>
			<view class="text-orange text-bold">六</view>
			<view class="text-red text-bold">日</view>
		</view>
		<view class="cal-center {{!fold?'cur':''}}">
			 

			<!--多选begin-->
			<view wx:for="{{dayArr}}" wx:if="{{mode=='multi'}}" wx:key="key" data-fullday="{{item.full}}" class="cube {{glow}} {{isLunar?'lunar':''}} {{item.full<fullToday?'timeout':''}} {{tools.includes(multiDoDay,item.full)? 'calendar-bg text-white data-checked' : ''}} {{tools.includes(hasDays,item.full)?'data-has':''}} {{tools.includes(hasJoinDays,item.full)?'join-has':''}}"
				bindtap="bindDayMultiTap">
				<view
					class="num-grid {{fullToday==item.full? 'now-day-cur' : ''}} ">
				<view
					class="num {{!item.curMonth? 'text-no-month' : ''}} "> 
					<text class="dd">{{item.show}}</text>
					<text wx:if="{{isLunar}}" class="lunar {{tools.includes(multiDoDay,item.full)? 'text-white' : ''}} {{item.holiday?'text-red':''}}" >{{item.lunar}}</text>
				</view>
				</view>
			</view>
			<!--多选END-->

		</view>

	</view>
	<view bindtap="bindNextTap" class="left"><text class="icon-right"></text></view>
</view> 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\calendar_meet\calendar_meet_cmpt.wxss
--------------------------------------------------
page {

	/*#### 父组件日历颜色定义*/
	/* 整体颜色 */
	--calendarPageColor: #F0F4FF;
	/* 加重颜色*/
	--calendarMainColor: #1F6ED4;
	/* 加重的亮颜色 用于选中日期的数据小圆点 */
	--calendarLightColor: #A2C7FF;
}

.calendar-text {
	color: var(--calendarMainColor) !important
}

.calendar-bg {
	background-color: var(--calendarMainColor) !important
}

.cal-container {
	width: 100%;
	padding-top: 10rpx;
	padding-bottom: 20rpx;
	background-color: #fff;
	display: flex;
	align-items: center;
}

.cal-container .left,
.cal-container .right {
	width: 70rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	font-size: 80rpx;
	height: 400rpx;
	color: #888;
}

.cal-container .cal-nav {
	position: relative;
	width: 100%;
	min-height: 60rpx;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	color: #000;
	border-bottom-left-radius: 15rpx;
	border-bottom-right-radius: 15rpx;
	font-size: 32rpx;
	font-weight: bold;
}

.cal-container .cal-nav .select-item {
	width: 500rpx;
	display: flex;
	flex-direction: row;
	justify-content: space-around;
	align-items: center;
}

.cal-container .cal-nav .arrow {
	width: 150rpx;
	font-size: 40rpx;
}

.cal-container .cal-nav .fold {
	position: absolute;
	right: 0rpx;
	width: 100rpx;
	font-size: 40rpx;
	font-weight: bold;
}

.cal-container .cal-nav .to-now {
	position: absolute;
	left: 5rpx;
	width: 100rpx;
	font-size: 30rpx;
	color: var(--calendarMainColor);
	display: flex;
	align-items: center;
	justify-content: center;
}

.cal-main {
	flex: 1;
	padding: 10rpx 0rpx 20rpx;
	background-color: #fcfcfc;
}

.cal-title {
	display: flex;
	justify-content: center;
}

.cal-title view {
	width: 80rpx;
	height: 80rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #666;
}

.cal-center {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	overflow: hidden;
	justify-content: center;
	align-items: center;
}

.cal-center.cur {
	border-bottom-right-radius: 0rpx;
	border-bottom-left-radius: 0rpx;
}

.cal-center .cube {
	width: 80rpx;
	height: 80rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #333;
	border: 1rpx solid #ccc;
}

.cal-center .cube.glow {
	animation: glow 300ms linear 1 alternate;
}

@keyframes glow {
	0% {
		background-color: #ececec;
	}

	100% {
		background-color: inherit;
	}
}

.cal-center .cube.lunar {
	margin-bottom: 8rpx;
}

.cal-center .num-grid {
	width: 100%;
	height: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.cal-center .cube.lunar .num-grid {
	width: 85rpx;
	height: 85rpx;
}

.cal-center .num-grid.now-day-cur {
	background-color: orange;
	height: 60rpx;
	width: 60rpx;
	border-radius: 50%;
	color: #fff;
}

.cal-center .num-grid.now-day-cur .text-no-month {
	color: #fff;
}


.cal-center .num {
	width: 100%;
	height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	font-size: 30rpx;
}

.cal-center .num .lunar {
	font-size: 20rpx;
	font-weight: normal;
	color: #aaa;
}

.cal-center .text-no-month {
	color: #aaa;
}

.cal-center .timeout {
	background-color: #f2f2f2;
}

.cal-center .timeout .num-grid {
	color: #aaa;
}

/* 当日有数据 */
.data-has {
	position: relative;
	font-family: "icon";
	font-size: inherit;
	font-style: normal;
}

.data-has::before {
	position: absolute;
	content: '\e699';
	right: 1rpx;
	bottom: 0rpx;
	color: #999;
	font-size: 22rpx;
}

.cube.data-checked.data-has::before {
	color: #fff;
}

/* 当日有预约 */
.join-has {
	position: relative;
	font-family: "icon";
	font-size: inherit;
	font-style: normal;
}

.join-has::before {
	position: absolute;
	content: '\e6c0';
	right: 1rpx;
	bottom: 0rpx;
	color: #999;
	font-size: 24rpx;
}

.cube.data-checked.join-has::before {
	color: #fff;
}



/* 选中某日 */
.cube.data-checked {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	color: #fff !important;
}

.cube.data-checked .text-no-month {
	color: #fff !important;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\date_select\date_select_cmpt.js
--------------------------------------------------
const dataHelper = require('../../../../helper/data_helper.js');
const pageHelper = require('../../../../helper/page_helper.js');
const timeHelper = require('../../../../helper/time_helper.js');

Component({
	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		start: { // 开始日期
			type: String,
			value: '',
		},
		end: { // 结束日期
			type: String,
			observer: function (newVal, oldVal) {
				this.init();
			}
		},
		selected: { // 当前选中日期
			type: String,
			observer: function (newVal, oldVal) {
				if (newVal != oldVal) {
					let month = timeHelper.timestamp2Time(timeHelper.time2Timestamp(newVal), 'Y年M月');
					this.setData({ month });
				}
			}
		},
		toView: {  //跳转到的view
			type: String,
			val: '',
		},
		isFresh: {
			type: Boolean,
			val: false
		}
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		range: [],
		month: '',
	},

	/**
	   * 生命周期方法
	   */
	lifetimes: {
		attached: function () { },

		ready: function () {
			if (!this.data.selected)
				this.setData({ selected: timeHelper.time('Y-M-D') });
			else
				this.setData({ toView: 'day-' + this.data.selected });
			this.init();
		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		init: function () {
			let start = this.data.start;
			let end = this.data.end;
			if (!start) start = timeHelper.time('Y-M-D');
			if (!end) end = timeHelper.time('Y-M-D', 86400 * 15);

			let range = [];
			let startTime = timeHelper.time2Timestamp(start);
			let endTime = timeHelper.time2Timestamp(end);

			for (let k = startTime; k <= endTime;) {
				let day = timeHelper.timestamp2Time(k, 'Y-M-D');
				let month = timeHelper.timestamp2Time(k, 'Y年M月');

				let node = {
					day,
					show: this._fmtShow(day),
					week: this._fmtWeek(day),
					month
				}
				range.push(node)
				k += 86400 * 1000
			}

			this.setData({ range });
		},

		_fmtShow: function (day) {
			return day.split('-')[2];
		},
		_fmtWeek: function (day) {
			if (day == timeHelper.time('Y-M-D')) return '今天';
			day = timeHelper.week(day);
			day = day.replace('周', '');
			return day;
		},
		bindTap: function (e) {
			let selected = pageHelper.dataset(e, 'day');
			let month = pageHelper.dataset(e, 'month');
			this.setData({ selected, month });
			this.triggerEvent('select', selected);
		}, 
		bindReloadTap:function(e) {
			this.triggerEvent('select', this.data.selected);
		}
	},


})

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\date_select\date_select_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\date_select\date_select_cmpt.wxml
--------------------------------------------------
<view class="date-cmpt">
	<view class="month">
		<view class="left">{{month||'2022年'}}</view>
		<view wx:if="{{isFresh}}" class="right" bindtap="bindReloadTap"><text class="icon-refresh"></text>刷新</view>
	</view>
	<scroll-view scroll-x class="date-select" scroll-into-view="{{toView}}" enable-flex="{{true}}" >
		<view id="day-{{item.day}}" class="item {{item.day == selected ? 'cur' : ''}}" wx:for="{{range}}" wx:key="key" bindtap='bindTap' data-day="{{item.day}}" data-month="{{item.month}}">
			<view class="week">{{item.week}}</view>
			<view class="date">{{item.show}}</view> 
		</view>
	</scroll-view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\date_select\date_select_cmpt.wxss
--------------------------------------------------
@import "../calendar_comm/din.wxss";

.date-cmpt {
	width: 100%;
}

.date-cmpt .month {
	width: 100%;
	padding: 10rpx 15rpx;
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.date-cmpt .month .left{ 
	font-size: 32rpx;
	color: #000;
	font-weight: bold;
	font-family: 'din';
}

.date-cmpt .month .right{ 
	font-size: 28rpx;
	color: #777;  
	padding: 0 10rpx 0rpx 60rpx; 
}



.date-select {
	white-space: nowrap;
}

.date-select .item {
	margin: 10rpx 10rpx 10rpx 0rpx;
	text-align: center;
	font-size: 24rpx;
	line-height: 55rpx;
	height: 110rpx;
	width: 85rpx;
	border: 2rpx solid #ddd;
	border-radius: 17rpx;
	display: inline-block;
}

.date-select .item:first-child {
	margin-left: 5rpx;
}

.date-select .item .date {
	font-size: 32rpx;
	color: #000;
	font-family: 'din';
}

.date-select .item .week {
	font-size: 24rpx;
	color: #666;
}

.date-select .item.cur {
	background-color: #f37445;
}

.date-select .item.cur .week,
.date-select .item.cur .date {
	color: #fff;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\time_select\time_select_cmpt.js
--------------------------------------------------
const dataHelper = require('../../../../helper/data_helper.js');
const pageHelper = require('../../../../helper/page_helper.js');
const timeHelper = require('../../../../helper/time_helper.js');
Component({
	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		day: {
			type: String,
			value: '',  // 当前日期
		},
		startTimeStep: {
			type: Number,
			value: 0,  // 开始时间，把每天划分为48个时间段
		},
		endTimeStep: {
			type: String,
			value: 47,  // 结束时间，把每天划分为48个时间段
		},
		used: { // 已选择
			type: Array,
			value: [], // {title,start,end,url=支持true或者跳转地址}
		},
		usedPos: { // 已约的标题位置 first / mid
			type: String,
			value: 'first'
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		times: [],  //时间段 48个

		selectedStart: '',
		selectedEnd: '',
		selectedEndPoint: '',
	},

	/**
	   * 生命周期方法
	   */
	lifetimes: {
		attached: function () { },

		ready: function () {
			this.init();
		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		init: function () {
			let now = timeHelper.time('Y-M-D h:m');

			let times = this.data.times;

			let day = this.data.day;
			if (!day) day = timeHelper.time('Y-M-D');
			this.setData({
				day
			});


			// 初始化
			if (times == 0) {
				for (let k = this.data.startTimeStep; k <= this.data.endTimeStep; k++) {
					let start = '';
					let end = '';
					let title = '';

					let clock = Math.trunc(k / 2);
					if (k % 2 == 0) {
						start = dataHelper.padLeft(clock, 2, '0') + ':00';
						end = dataHelper.padLeft(clock, 2, '0') + ':30';
						title = start;
					}
					else {
						start = dataHelper.padLeft(clock, 2, '0') + ':30';
						end = dataHelper.padLeft(clock + 1, 2, '0') + ':00';
						title = '';
					}
					if (end == '24:00') end = '23:59';

					let node = {
						idx: k,
						title,
						start,
						end,
						used: false,
						selected: false,
						expire: (day + ' ' + start < now), //过期时间 
					}
					times.push(node);
				}
			}

			// 已约时间段
			for (let k = 0; k < this.data.used.length; k++) {
				let usedNode = this.data.used[k];

				// 计算有占有几个时间段
				let usedlen = 0;
				for (let j = 0; j < times.length; j++) {
					let node = times[j];
					if (node.start >= usedNode.start && node.start <= usedNode.end) {
						usedlen++;
					}
				}
				if (usedlen <= 1) usedlen = 2;
				usedlen = Math.round(usedlen / 2);

				if (this.data.usedPos == 'first') usedlen = 1;

				let curLen = 0;
				for (let j = 0; j < times.length; j++) {
					let node = times[j];
					if (node.start == usedNode.start) {
						node.used = usedNode.url || 'no';
						node.usedFirst = true;

						curLen++;
						if (curLen == usedlen) node.usedText = usedNode.title;
					}
					else if (node.start >= usedNode.start && node.start <= usedNode.end) {
						node.used = usedNode.url || 'no';
						node.usedFirst = false;

						curLen++;
						if (curLen == usedlen) node.usedText = usedNode.title;
					}
				}
			}

			this.setData({ times });
		},

		bindSelectTap: function (e) {
			//  选择
			let idx = pageHelper.dataset(e, 'idx');
			let timeNode = this.data.times[idx];


			let selected = timeNode.start;

			// 已选择
			let used = timeNode.used;
			if (used) {
				if (used === true)
					return;
				else {
					return wx.navigateTo({
						url: used, // 跳到详细
					});
				}
			}

			// 过期
			let expire = timeNode.expire;
			if (expire) return;


			let selectedStart = this.data.selectedStart;
			let selectedEnd = this.data.selectedEnd;


			let times = this.data.times;

			// 区间内直接干掉
			if (selected >= selectedStart && selected <= selectedEnd) {
				selectedStart = '';
				selectedEnd = '';
				for (let k = 0; k < times.length; k++) {
					times[k].selected = false;
				}
				this.setData({ times, selectedStart, selectedEnd });
				return;
			}


			if (!selectedStart && !selectedEnd) {
				selectedStart = selected;
				selectedEnd = selected;
			}

			if (selected < selectedStart) selectedStart = selected;
			if (selected > selectedEnd) selectedEnd = selected;


			// 如果包含了已选的，则只保留最后或者最后选择那一个时段
			for (let k = 0; k < times.length; k++) {
				if (times[k].start >= selectedStart && times[k].start <= selectedEnd && times[k].used) {

					if (selected >= selectedEnd) {
						selectedStart = selectedEnd;
					}
					else if (selected <= selectedStart) {
						selectedEnd = selectedStart;
					}

					break;
				}
			}


			// 选中 
			for (let k = 0; k < times.length; k++) {
				if (times[k].start >= selectedStart && times[k].start <= selectedEnd) {
					times[k].selected = true;
				}
				else {
					times[k].selected = false;
				}
			}

			// 取得结束时间点
			let selectedEndPoint = '';
			for (let k = 0; k < times.length; k++) {
				if (times[k].start == selectedEnd) {
					selectedEndPoint = times[k].end;
				}
			}

			this.setData({ times, selectedStart, selectedEnd, selectedEndPoint });

		},

		bindSumbitTap: function (e) {
			let start = this.data.selectedStart;
			let end = this.data.selectedEnd;
			let endPoint = this.data.selectedEndPoint;
			if (!start || !end || !endPoint) return;

			this.triggerEvent('select', { start, end, endPoint });
		}
	}
})

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\time_select\time_select_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\time_select\time_select_cmpt.wxml
--------------------------------------------------
<view class="time-table">
	<view class="table-inner">
		<view class="list">
			<view bindtap="bindSelectTap" class="item" wx:for="{{times}}" wx:key="key" data-idx="{{index}}">
				<view class="left {{item.title?'top':''}}">{{item.title}}</view>
				<view class="right {{item.selected?'selected':''}}  {{item.start==selectedStart?'selected-first':''}} {{item.expire?'expire':''}} {{item.used?'used':''}}  {{item.usedFirst?'used-first':''}} text-cut">{{item.usedText}}</view>
			</view>
		</view>
	</view>
</view>
<view style="height: 150rpx;"></view>
<view bindtap="bindSumbitTap" wx:if="{{selectedStart&&selectedEnd&&selectedEndPoint}}" class="time-submit safe-bottom ">
	<view class="inner bg-project">确认预约 ({{selectedStart}}~{{selectedEndPoint}})</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\calendar\time_select\time_select_cmpt.wxss
--------------------------------------------------
@import "../calendar_comm/din.wxss";

.time-table {
	width: 100%;
	padding: 0 5rpx;
}

.time-table .table-inner {
	width: 100%;
	font-size: 28rpx;
}


.time-table .list {
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;
}

.time-table .list .item {
	color: #000;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	height: 42rpx;
	padding: 0
}

.time-table .list .item .left {
	background-color: #f5fafe;
	height: inherit;
	width: 140rpx;
	text-align: center;
	padding-top: 4rpx;
	border-right: 1rpx solid #ddd;
	border-left: 1rpx solid #ddd;
	font-size: 30rpx;
	font-weight: normal !important;
	font-family: 'din';
}

.time-table .list .item:last-child .left {
	border-bottom: 1rpx solid #ddd;
}

.time-table .list .item .left.top {
	border-top: 1rpx solid #ddd !important;
	border-bottom: 0 !important;
}


.time-table .list .item .right {
	flex: 1;
	height: inherit;
	border-right: 1rpx solid #ddd;
	border-top: 1rpx solid #ddd;
	background-color: #fff;
	color: #444;
	padding: 0 10rpx;
	width: 100%;
	text-align: center;
}

.time-table .list .item:last-child .right {
	border-bottom: 1rpx solid #ddd !important;
}

.time-table .list .item:first-child .right {
	border-top: 1rpx solid #ddd !important;
}

.time-table .list .item .right.selected {
	border-top: 1rpx solid #dfffd8;
	background-color: #dfffd8;
}

.time-table .list .item .right.selected-first {
	border-top: 1rpx solid #ddd !important;
}

.time-table .list .item .right.expire {
	background-color: #f5f5f5;
	color: #999;
}

.time-table .list .item .right.used,
.time-table .list .item .right.used-first {
	border-top: 0rpx solid #E0EBFE;
	background-color: #E0EBFE;
	color: #f37445;
	font-size: 28rpx;
	border-left: 6rpx solid #1A65FF;
	text-align: left;
}

.time-table .list .item .right.used-first {
	border-top: 1rpx solid #ddd !important;
}

.time-submit {
	width: 100%;
	position: fixed;
	bottom: 15rpx;
	padding: 20rpx 30rpx;
	z-index: 999999;
}

.time-submit .inner {
	width: 100%;
	background-color: #999;
	font-size: 36rpx;
	border-radius: 15rpx;
	padding: 15rpx 0;
	text-align: center;
	color: #fff;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\car_number\car_number_cmpt.js
--------------------------------------------------

Component({

	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		defaultNum: {
			type: String,
			default: ''
		},
		pop: {
			type: Boolean,
			value: false
		},
		must: { //是否必填
			type: Boolean,
			value: true
		}
	},
	/**
	 * 组件的初始数据
	 */
	data: {
		carNumArr: [],

		curInput: '',
		keyboard: false,
		keyboardType: 1,
		newEnergy: false,

		confirm: false, // 是否确认

		// 省份输入
		provinces: [
			['京', '沪', '粤', '津', '冀', '晋', '辽', '吉', '黑'],
			['苏', '浙', '皖', '闽', '赣', '鲁', '豫', '鄂', '湘'],
			['桂', '琼', '渝', '川', '贵', '云', '藏'],
			['陕', '甘', '青', '宁', '新', '蒙'],
		],
		// 地区输入
		areas: [
			["A", "B", "C", "D", "E", "F", "G", "H", "J", "K"],
			["L", "M", "N", "P", "Q", "R", "S", "T", "U", "V"],
			["W", "X", "Y", "Z"]
		],
		// 车牌输入
		numbers: [
			["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
			["A", "B", "C", "D", "E", "F", "G", "H", "J", "K"],
			["L", "M", "N", "P", "Q", "R", "S", "T", "U", "V"],
			["W", "X", "Y", "Z"]
		],
		// 最后一位输入
		last: [
			["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"],
			["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L"],
			["M", "N", "P", "Q", "R", "S", "T", "U", "V", "W", "X"],
			["Y", "Z", "港", "澳", "学", "挂", "警"]
		]
	},

	lifetimes: {
		attached: function () { },

		ready: function () {
			if (this.data.defaultNum) {
				// 存在默认车牌号
				let length = this.data.defaultNum.length;
				if (length === 8) {
					// 新能源车牌号
					this.setData({
						newEnergy: true
					});
				}
				let carNumArr = this.data.defaultNum.split('');
				this.setData({
					carNumArr,
				}, () => {
					this.setData({
						confirm: this._numberValidate()
					});
				});


			}
		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		/**
		 * 关闭键盘
		 */
		bindCloseKeyboardTap() {
			this.setData({
				keyboard: false
			});
		},

		/**
		 * 显示省份键盘
		 */
		bindShowProvinceTap() {
			this.setData({
				keyboard: true,
				curInput: 0,
				keyboardType: 1
			});
		},

		bindShowPopTap: function (e) {
			this.setData({ pop: true });
		},

		/**
		 * 确定选择省份
		 */
		bindChooseProvinceTap(e) {
			const { val } = e.currentTarget.dataset;
			this.setData({
				'carNumArr[0]': val,
				curInput: 1,
				keyboardType: 2
			});
			this._change();
		},

		/**
		 * 删除选定省份
		 */
		bindDelProvinceTap() {
			this.setData({
				'carNumArr[0]': ''
			});
			this._change();
		},

		/**
		 * 显示地区键盘
		 */
		bindShowAreaTap() {
			this.setData({
				keyboard: true,
				curInput: 1,
				keyboardType: 2
			});
		},

		/**
		 * 选定地区
		 */
		bindChooseAreaTap(e) {
			const { val } = e.currentTarget.dataset
			this.setData({
				'carNumArr[1]': val,
				curInput: 2,
				keyboardType: 3
			});
			this._change();
		},

		/**
		 * 删除选定区域
		 */
		bindDelAreaTap() {
			this.setData({
				'carNumArr[1]': '',
				curInput: 0,
				keyboardType: 1
			})
			this._change();
		},

		/**
		 * 显示普通键盘
		 */
		bindShowNumberTap(e) {
			const { index } = e.currentTarget.dataset;
			const keyboardType = index === 6 && !this.data.newEnergy ? 4 : 3;
			this.setData({
				keyboard: true,
				curInput: index,
				keyboardType: keyboardType
			});
		},

		/**
		 * 选定车牌
		 */
		bindChooseNumberTap(e) {
			const { val } = e.currentTarget.dataset;
			const name = 'carNumArr[' + this.data.curInput + ']';
			this.setData({
				[name]: val,
				curInput: this.data.curInput + 1,
				keyboardType: 3
			})
			// 跳到最后一位时，键盘不一样
			if (this.data.curInput === 6 && !this.data.newEnergy) {
				this.setData({
					keyboardType: 4
				});
			} else if (this.data.curInput === 7 && this.data.newEnergy) {
				this.setData({
					keyboardType: 4
				});
			}
			this._change();
		},

		/**
		 * 删除车牌
		 */
		bindDelNumberTap() {
			const name = 'carNumArr[' + this.data.curInput + ']';
			this.setData({
				[name]: '',
				curInput: this.data.curInput - 1,
				keyboardType: 3
			});
			// 如果删除到地区时，切换键盘类型
			if (this.data.curInput === 1) {
				this.setData({
					keyboardType: 2
				});
			}
			this._change();
		},

		/**
		 * 显示最后一位键盘
		 */
		bindShowLastBoardTap() {
			if (this.data.newEnergy) {
				// 新能源
				this.setData({
					keyboard: true,
					curInput: 7,
					keyboardType: 4
				});
			} else {
				this.setData({
					keyboard: true,
					curInput: 6,
					keyboardType: 4
				});
			}
		},

		/**
		 * 选定最后一位
		 */
		bindChooseLastTap(e) {
			const { val } = e.currentTarget.dataset;
			if (this.data.newEnergy) {
				// 新能源
				this.setData({
					'carNumArr[7]': val,
					curInput: this.data.curInput + 1,
					keyboard: false
				});
			} else {
				this.setData({
					'carNumArr[6]': val,
					curInput: this.data.curInput + 1,
					keyboard: false
				});
			}
			this._change();
		},

		/**
		 * 删除最后一位
		 */
		bindDelLastTap() {
			if (this.data.newEnergy) {
				this.setData({
					'carNumArr[7]': '',
					curInput: this.data.curInput - 1,
					keyboardType: 3,
					newEnergy: false
				});
			} else {
				this.setData({
					'carNumArr[6]': '',
					curInput: this.data.curInput - 1,
					keyboardType: 3
				});
			}

			this._change();
		},

		/**
		 * 切换输入新能源车牌号
		 */
		bindNewEnergyTap() {
			this.setData({
				newEnergy: true
			});
			this.bindShowLastBoardTap();
		},

		_change: function () {
			this.setData({
				confirm: this._numberValidate()
			});
		},

		bindConfirmTap: function (e) {
			if (!this._numberValidate()) return;
			this.setData({
				pop: false
			});

			// 每次都触发 change 事件，通知父组件
			this.triggerEvent('change', { value: this.data.carNumArr.join('') });
		},

		bindClearTap: function (e) {
			this.setData({
				carNumArr: []
			}, () => {
				this.setData({
					confirm: this._numberValidate()
				});
			});
		},

		_numberValidate: function () {
			// 是否合法
			let carNumArr = this.data.carNumArr;
			let carNumStr = carNumArr.join('');

			if (carNumStr.length == 0 && !this.data.must) return true;

			if (carNumStr.length < 7 || carNumStr.length > 8) return false;

			if (carNumArr.length != carNumStr.length && carNumArr[carNumArr.length - 1])
				return false;
			else
				return true;
		}
	}
})


--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\car_number\car_number_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\car_number\car_number_cmpt.wxml
--------------------------------------------------
<wxs module="utils">
	function join(arr) {
		return arr.join('');
	}

	module.exports = {
		join: join,
	};
</wxs>
<view wx:if="{{!pop}}" bind:tap="bindShowPopTap" class="car-text">{{utils.join(carNumArr).length>0?utils.join(carNumArr):'请填写'}}<text class="icon-right"></text></view>

<root-portal wx:elif="{{pop}}" enable="{{true}}">
	<view class="root-portal">
		<!-- 车牌号输入框 -->
		<view class="car-number custom-input-class">
			<view class="item {{curInput===0?'active':''}}" bind:tap="bindShowProvinceTap">{{carNumArr[0]}}</view>
			<view class="item {{curInput===1?'active':''}}" bind:tap="bindShowAreaTap">{{carNumArr[1]}}</view>
			<view class="car-split">·</view>
			<view class="item {{curInput===2?'active':''}}" bind:tap="bindShowNumberTap" data-index="{{2}}">{{carNumArr[2]}}</view>
			<view class="item {{curInput===3?'active':''}}" bind:tap="bindShowNumberTap" data-index="{{3}}">{{carNumArr[3]}}</view>
			<view class="item {{curInput===4?'active':''}}" bind:tap="bindShowNumberTap" data-index="{{4}}">{{carNumArr[4]}}</view>
			<view class="item {{curInput===5?'active':''}}" bind:tap="bindShowNumberTap" data-index="{{5}}">{{carNumArr[5]}}</view>
			<view class="item {{curInput===6?'active':''}}" bind:tap="bindShowNumberTap" data-index="{{6}}">{{carNumArr[6]}}</view>
			<view wx:if="{{!newEnergy}}" class="item new-energy" bind:tap="bindNewEnergyTap">
				<text class="icon-add"></text>
			</view>
			<view wx:else class="item {{curInput===7?'active':''}}" bind:tap="bindShowLastBoardTap">{{carNumArr[7]}}</view>
		</view>

		<view wx:if="{{confirm}}" bind:tap="bindConfirmTap" class="confirm-car-number"><text>确定</text></view>
		<view wx:else class="confirm-car-number"><text class="distabled">确定</text></view>

		<view bind:tap="bindClearTap" class="confirm-car-number clear"><text>清空</text></view>

		<!-- 虚拟键盘 -->
		<view class="keyboard" hidden="{{!keyboard}}">
			<view class="keyboard-close">
				<view class="keyboard-close-btn" bindtap='bindCloseKeyboardTap'>关闭</view>
			</view>
			<!-- 省份简写键盘 -->
			<view class="keyboard-item" wx:if="{{keyboardType===1}}">
				<view class="keyboard-line" wx:for="{{provinces}}" wx:key="index">
					<view class="keyboard-btn" wx:for="{{item}}" wx:key="index" data-val="{{itemlist}}" wx:for-item="itemlist" bindtap='bindChooseProvinceTap'>
						{{itemlist}}
					</view>
				</view>
				<view class="keyboard-del" bindtap="bindDelProvinceTap">
					<text>清除</text>
				</view>
			</view>
			<!-- 地区简写键盘 -->
			<view class="keyboard-item" wx:if="{{keyboardType===2}}">
				<view class="keyboard-line" wx:for="{{areas}}" wx:key="index">
					<view class="keyboard-btn" wx:for="{{item}}" wx:key="index" data-val="{{itemlist}}" wx:for-item="itemlist" bindtap='bindChooseAreaTap'>
						{{itemlist}}
					</view>
				</view>
				<view class="keyboard-del" bindtap='bindDelAreaTap'>
					<text>清除</text>
				</view>
			</view>
			<!-- 普通类型键盘 -->
			<view class="keyboard-item" wx:if="{{keyboardType===3}}">
				<view class="keyboard-line" wx:for="{{numbers}}" wx:key="index">
					<view class="keyboard-btn" wx:for="{{item}}" wx:key="index" data-val="{{itemlist}}" wx:for-item="itemlist" bindtap='bindChooseNumberTap'>
						{{itemlist}}
					</view>
				</view>
				<view class="keyboard-del" bindtap='bindDelNumberTap'>
					<text>清除</text>
				</view>
			</view>
			<!-- 最后一位键盘 -->
			<view class="keyboard-item" wx:if="{{keyboardType===4}}">
				<view class="keyboard-line" wx:for="{{last}}" wx:key="index">
					<view class="keyboard-btn" wx:for="{{item}}" wx:key="index" data-val="{{itemlist}}" wx:for-item="itemlist" bindtap='bindChooseLastTap'>
						{{itemlist}}
					</view>
				</view>
				<view class="keyboard-del" bindtap='bindDelLastTap'>
					<text>清除</text>
				</view>
			</view>
		</view>
	</view>
</root-portal>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\car_number\car_number_cmpt.wxss
--------------------------------------------------
root-portal {
	display: flex;
	width: 100%;
	height: 100%;
}

.root-portal {
	position: fixed;
	bottom: 0;
	top: 0;
	z-index: 9999999;
	width: 100vw;
	/* height: 200px; */
	background: #fff;
	opacity: 1;
	transform: scale3d(1, 1, 1);
	transition: all .2s ease-in;
	pointer-events: auto;
}

.car-number {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 20rpx 0;
}

.car-text { 
	flex: 1;
	text-align: right;
	height: 60rpx;
	line-height: 60rpx;
}

.car-split {
	font-weight: bold;
	font-size: 40rpx;
	color: #666;
}

.car-number .item {
	border: 2rpx solid #999;
	border-radius: 10%;
	padding: 10rpx 0;
	margin: 10rpx 6rpx;
	width: 70rpx;
	height: 70rpx;
	font-size: 28rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.car-number .item.new-energy {
	border: 2rpx dashed #8dc63f;
}

.car-number .item.new-energy>text {
	color: #8dc63f;
	font-weight: bold;
}


.car-number .item.active {
	border: 4rpx solid #4b71fc;
	color: #4b71fc;
}

.confirm-car-number {
	width: 100%;
	display: flex;
	justify-content: center;
}

.confirm-car-number>text {
	background-color: #4b71fc;
	color: #fff;
	width: 80%;
	text-align: center;
	font-size: 30rpx;
	padding: 16rpx 0;
	border-radius: 6rpx;
	margin-top: 50rpx;
}

.confirm-car-number>text.distabled {
	background-color: #f2f2f2;
	color: #999;
}

.confirm-car-number.clear>text {
	background-color: #cce6ff;
	color: #347DFF;
}

.keyboard {
	position: fixed;
	bottom: 0;
	/* height: 45vh; */
	background-color: #d1d5d9;
	width: 100%;
	left: 0;
	z-index: 9999;
	/*苹果手机安全区域*/
	padding-bottom: calc(constant(safe-area-inset-bottom) + 120rpx);
	padding-bottom: calc(env(safe-area-inset-bottom) + 120rpx);
}

/* 关闭虚拟键盘 */
.keyboard-close {
	height: 80rpx;
	line-height: 80rpx;
	background-color: #f7f7f7;
	overflow: hidden;
}

.keyboard-close-btn {
	float: right;
	line-height: 66rpx;
	font-size: 30rpx;
	padding-right: 30rpx;
}

.keyboard-item {
	padding: 20rpx 0rpx;
	position: relative;
}

.keyboard-line {
	display: flex;
	justify-content: center;
	padding: 6rpx 2rpx;
}

/* 虚拟键盘-单个按钮 */
.keyboard-btn {
	font-size: 34rpx;
	line-height: 40rpx;
	color: #333333;
	background: #fff;
	display: inline-block;
	padding: 16rpx;
	text-align: center;
	box-shadow: 0 2rpx 0 0 #999999;
	border-radius: 10rpx;
	margin: 6rpx;
}

/* 虚拟键盘-删除按钮 */
.keyboard-del {
	font-size: 34rpx;
	line-height: 40rpx;
	color: #333333;
	background: #A7B0BC;
	display: inline-block;
	padding: 16rpx 12rpx;
	box-shadow: 0 2rpx 0 0 #999999;
	border-radius: 10rpx;
	position: absolute;
	bottom: 30rpx;
	right: 18rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\checkbox\checkbox_cmpt.js
--------------------------------------------------
﻿const helper = require('../../../helper/helper.js');

Component({
	externalClasses: ['outside-picker-multi-class'],

	options: {
		addGlobalClass: true
	},
	
	/**
	 * 组件的属性列表
	 */
	properties: {
		sourceData: { //源数组 
			type: Array,
			value: [],
		},
		// 默认选中项的值数组  
		itemMulti: {
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {
				if (Array.isArray(newVal) && Array.isArray(oldVal) && JSON.stringify(newVal) != JSON.stringify(oldVal)) {
					console.log('checkbox observer');
					this._fixDefaultVal();
				}
			}
		},
		show: { // 排列模式 column/row
			type: String,
			value: 'column',
		},
		mode: { //数据模式 simple=[1,2,3,], multi=[{label,val},{label,val},...]
			type: String,
			value: 'simple',
		},
		multiModeLabelMark: {
			type: String,
			value: 'label',
		},
		multiModeValMark: {
			type: String,
			value: 'val',
		},
		disabled: { // 是否禁用
			type: Boolean,
			value: false,
		}
		},

	/**
	 * 组件的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期方法
	 */
	lifetimes: {
		attached: function () { },

		ready: function () {
			this._fixDefaultVal();
		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		bindChange: function (e) {
			this.triggerEvent('select', e.detail.value);
		},

		_fixDefaultVal() { //传入数据不匹配的时候，修正父页面传入的的数组默认值
			if (!Array.isArray(this.data.itemMulti)) {
				this.triggerEvent('select', []);
			}

			if (this.data.itemMulti.length == 0) return;

			let ret = [];
			let sourceData = this.data.sourceData;
			let itemMulti = this.data.itemMulti;

			if (sourceData.length > 0 && helper.isDefined(sourceData[0][this.data.multiModeLabelMark]))
				this.setData({ mode: 'multi' })
 
			if (this.data.mode == 'simple') {
			for (let k = 0; k < sourceData.length; k++) {
				for (let j in itemMulti) {
					if (sourceData[k] == itemMulti[j])
						ret.push(itemMulti[j]);
				}
			}
			}
			else if (this.data.mode == 'multi') {
				for (let k = 0; k < sourceData.length; k++) { 

					for (let j in itemMulti) {
						if (sourceData[k][this.data.multiModeValMark] == itemMulti[j])
							ret.push(itemMulti[j]);
					}
				} 
			}

			this.triggerEvent('select', ret);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\checkbox\checkbox_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\checkbox\checkbox_cmpt.wxml
--------------------------------------------------
<wxs src="../../../tpls/wxs/tools.wxs" module="tools" /> 
<checkbox-group bindchange="bindChange" class="checkbox-group {{show=='row'?'row':''}}">
	<view class="item" wx:for="{{sourceData}}" wx:key="key"> 
		<label wx:if="{{mode=='simple'}}" class="item-label">
			<checkbox class="item-checkbox" disabled="{{disabled}}" value="{{item}}" checked="{{tools.includes(itemMulti,item)}}" />
			<text wx:if="{{tools.includes(itemMulti,item)}}" style="font-weight:bold">{{item}}</text>
			<text wx:else>{{item}}</text>
		</label>
		<label wx:elif="{{mode=='multi'}}" class="item-label">
			<checkbox class="item-checkbox" disabled="{{disabled}}" value="{{item[multiModeValMark]}}" checked="{{tools.includes(itemMulti,item[multiModeValMark])}}" />
			<text wx:if="{{tools.includes(itemMulti,item[multiModeValMark])}}" style="font-weight:bold">{{item[multiModeLabelMark]}}</text>
			<text wx:else>{{item[multiModeLabelMark]}}</text>
		</label>
	</view>
</checkbox-group>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\checkbox\checkbox_cmpt.wxss
--------------------------------------------------
.checkbox-group {
	width: 100%;
	display: flex;
	justify-content: center;
	flex-direction: column;
	align-items: center;
	padding: 0rpx 20rpx;
}

.checkbox-group .item {
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: center;
	line-height: 2.1;
	min-height: 70rpx;
	border-bottom: 1rpx solid #eee;
	font-size: 28rpx;
}

.checkbox-group .item .item-label{
	width: 100%; 
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: center;
}
 

.checkbox-group .item:last-child {
	border-bottom: 0;
}

.checkbox-group .item:nth-child(odd) {
	background-color: #fcfcfc;
}


.checkbox-group .item .item-checkbox {
	margin-right: 20rpx;
	padding-left: 10rpx; 
} 



/*按行排列*/ 
.checkbox-group.row{ 
	flex-direction: row!important; 
	flex-wrap: wrap!important;
	justify-content: flex-start;
}

.checkbox-group.row .item{ 
	width:unset!important;
	margin-right: 25rpx;
}

.checkbox-group.row .item .item-checkbox {
     margin-right: 5rpx;  
      padding-left: 0rpx;  
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\custom_nav\custom_nav_cmpt.js
--------------------------------------------------

const app = getApp();
Component({
	/**
	 * 组件的一些选项
	 */
	options: {
		addGlobalClass: true,
		multipleSlots: true
	},
	/**
	 * 组件的对外属性
	 */
	properties: {
		textColor: {
			type: String,
			value: 'text-white'
		},
		url: {
			type: String,
			value: '/projects/home/index/home_index'
		}
	},
	/**
	 * 组件的初始数据
	 */
	data: {
		method: 'back',
		statusBarHeight: app.globalData.statusBarHeight,
		customBarHeight: app.globalData.customBarHeight,
	},

	lifetimes: {
		attached() {
			let parentPages = getCurrentPages().length;
			if (parentPages == 1)
				this.setData({
					method: 'home'
				}); 
		}
	},


	/**
	 * 组件的方法列表
	 */
	methods: {
		bindTap() {
			if (this.data.method == 'back') {
				wx.navigateBack();
			} else
				wx.reLaunch({
					url: this.data.url,
				});
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\custom_nav\custom_nav_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
  }
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\custom_nav\custom_nav_cmpt.wxml
--------------------------------------------------
﻿<view class="custom" style="height:{{customBarHeight}}px">
	<view bindtap="bindTap" class="bar {{textColor}}" style="height:{{customBarHeight}}px;padding-top:{{statusBarHeight}}px;">
		<view class="action">
			<text wx:if="{{method=='back'}}" class="icc icon-back"></text>
			<text wx:else class="icc icon-homefill"></text>
		</view>

		<view class="content {{textColor}}" style="top:{{statusBarHeight}}px;">
			<slot name="content"></slot>
		</view>

		<slot name="right"></slot>

	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\custom_nav\custom_nav_cmpt.wxss
--------------------------------------------------
  .bar {
	display: flex;
	position: relative;
	align-items: center;
	min-height: 100rpx;
	justify-content: space-between;
}

.custom {
	display: block;
	position: fixed;
	width:100%;
	z-index: 99999;
}

.custom .title{
	color:#fff;
}

.custom .bar {
	width:100%;
	min-height: 0px;
	padding-right: 220rpx;
	box-shadow: 0rpx 0rpx 0rpx;
	z-index: 9999;
}

  .custom .bar .action>.icc {
  	background-color: rgba(0, 0, 0, .3);
  	border-radius: 50% !important;
  	color: #fff;
  	width: 60rpx;
  	height: 60rpx;
  	display: flex;
  	justify-content: center;
  	align-items: center;
  	font-size: 36rpx;
  }

.custom .bar .content {
	width: 100%;
}


.custom .bar .content image {
	height: 60rpx;
	width: 240rpx;
}  
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\editor\editor_cmpt.js
--------------------------------------------------
const pageHelper = require('../../../helper/page_helper.js');
const dataHelper = require('../../../helper/data_helper.js');
const cloudHelper = require('../../../helper/cloud_helper.js');
const contentCheckHelper = require('../../../helper/content_check_helper.js');
const projectSetting = require('../../../setting/setting.js');

Component({
	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		nodeList: { // [{type:'text/img',val:'txt/cloudId'}]
			type: Array,
			value: [{
				type: 'text',
				val: ''
			}]
		},
		viewMode: { // 整体：编辑还是预览
			type: Boolean,
			value: false,
		},
		isView: { // 编辑时：编辑还是预览
			type: Boolean,
			value: false,
		},
		upDirectDir: { //不为空：则在非测试模式下直接上传
			type: String,
			value: '', //editor/
		}
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		cur: -1,
	},

	lifetimes: {
		attached: function () { },

		ready: function () {

		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		url: function (e) {
			pageHelper.url(e, this);
		},
		setGlow(cur) {
			this.setData({
				cur
			});
			setTimeout(() => {
				this.setData({
					cur: -1
				});
			}, 1000);
		},
		bindAddTextTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let node = {
				type: 'text',
				val: ''
			}
			let nodeList = this.data.nodeList;
			nodeList.splice(idx + 1, 0, node);
			this.setData({
				nodeList
			});

			this.setGlow(idx + 1);
		},
		bindAddImageTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let that = this;
			wx.chooseMedia({
				count: 8,
				mediaType: ['image'],
				sizeType: ['compressed'],
				sourceType: ['album', 'camera'],
				success: async res => {
					let nodeList = that.data.nodeList;
					for (let k = 0; k < res.tempFiles.length; k++) {
						let path = res.tempFiles[k].tempFilePath;
						let size = res.tempFiles[k].size;

						if (!contentCheckHelper.imgTypeCheck(path)) {
							wx.hideLoading();
							return pageHelper.showNoneToast('只能上传png、jpg、jpeg格式', 3000);
						}

						let maxSize = 20; //TODO setting
						let imageMaxSize = 1024 * 1000 * maxSize;
						console.log('IMGX SIZE=' + size + 'Byte,' + size / 1024 + 'K');
						if (!contentCheckHelper.imgSizeCheck(size, imageMaxSize)) {
							wx.hideLoading();
							return pageHelper.showModal('图片大小不能超过 ' + maxSize + '兆');
						}

						if (!projectSetting.IS_DEMO && this.data.upDirectDir) {
							wx.showLoading({ title: '上传中' });
							path = await cloudHelper.transTempPicOne(path, this.data.upDirectDir, '', false);
							wx.hideLoading();
						}

						let node = {
							type: 'img',
							val: path
						};

						nodeList.splice(idx + 1, 0, node);
					}

					that.setData({
						nodeList
					});
					//that.setGlow(idx + 1);
				}
			})
		},

		bidnDeleteNodeTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let nodeList = this.data.nodeList;
			if (this.data.nodeList.length == 1) return pageHelper.showNoneToast('至少需要一个内容框');
			nodeList.splice(idx, 1);
			this.setData({
				nodeList
			});
		},
		bindUpTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let nodeList = this.data.nodeList;
			nodeList = dataHelper.arraySwap(nodeList, idx, idx - 1);
			this.setData({
				nodeList
			});
			pageHelper.anchor('editor-node-' + (idx - 1), this);
			this.setGlow(idx - 1);
		},
		bindTopTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let nodeList = this.data.nodeList;
			nodeList = dataHelper.arrayTop(nodeList, idx);
			this.setData({
				nodeList
			});
			pageHelper.anchor('editor-node-0', this);
			this.setGlow(0);
		},
		bindBottomTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let nodeList = this.data.nodeList;
			nodeList = dataHelper.arrayBottom(nodeList, idx);
			this.setData({
				nodeList
			});
			pageHelper.anchor('editor-node-' + (nodeList.length - 1), this);
			this.setGlow(nodeList.length - 1);
		},
		bindDownTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let nodeList = this.data.nodeList;
			nodeList = dataHelper.arraySwap(nodeList, idx, idx + 1);
			this.setData({
				nodeList
			});
			pageHelper.anchor('editor-node-' + (idx + 1), this);
			this.setGlow(idx + 1);
		},

		bindTextareaInput: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let nodeList = this.data.nodeList;
			let node = nodeList[idx];
			if (node.type == 'text') {
				node.val = e.detail.value;
				nodeList[idx] = node;
				/*
				this.setData({
					nodeList
				});*/
			}
		},
		getNodeList: function (e) {
			let nodeList = this.data.nodeList;

			// 校验是否填写了内容
			let imgCnt = 0;
			let textCnt = 0;
			for (let k = 0; k < nodeList.length; k++) {
				if (nodeList[k].type == 'img' && nodeList[k].val.trim() != '') imgCnt++;
				if (nodeList[k].type == 'text' && nodeList[k].val.trim() != '') textCnt++;
			}
			if ((imgCnt + textCnt) == 0) {
				return [];
			}

			return this.data.nodeList;
		},
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\editor\editor_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\editor\editor_cmpt.wxml
--------------------------------------------------
<view class="editor-tab" wx:if="{{viewMode}}">
	<button catchtap="url" data-type="bool" data-url="isView" class="btn round {{!isView?'bg-blue':'bg-grey light'}}  margin-right-xs">编辑</button>
	<button catchtap="url" data-type="bool" data-url="isView" class="btn {{isView?'bg-blue':'bg-grey light'}} round">预览</button>
</view>

<view enableBackToTop scrollY class="editor-wrapper" style="min-height: 400px;{{viewMode?'margin-top:50rpx':''}}">
	<block wx:for="{{nodeList}}" wx:for-item="node" wx:key="index">
		<view class="editor-node-wrapper {{cur==index?'cur':''}} {{isView?'is-view':''}}">
			<textarea disabled="{{isView}}" id="editor-node-{{index}}" wx:if="{{node.type==='text'}}" auto-height="true" cursor-spacing="60" bindinput="bindTextareaInput" class="editor-textarea" data-idx="{{index}}" maxlength="-1" value="{{node.val}}"></textarea>
			<image bindtap="url" data-type="image" data-url="{{node.val}}"  id="editor-node-{{index}}" wx:if="{{node.type==='img'}}" mode="widthFix" class="loading editor-image" src="{{node.val}}" lazy-load="true"></image>

			<view class="editor-delete" wx:if="{{!isView}}">
				<!--<view bindtap="bindTopTap" class="iconfont icon-top" data-idx="{{index}}" wx:if="{{index>1}}"></view>-->
				<view bindtap="bindUpTap" class="iconfont icon-refresharrow up" data-idx="{{index}}" wx:if="{{index>0}}"></view>
				<view bindtap="bindDownTap" class="iconfont icon-refresharrow" data-idx="{{index}}" wx:if="{{index<nodeList.length-1}}"></view>
				<!--<view bindtap="bindBottomTap" class="iconfont icon-down" data-idx="{{index}}" wx:if="{{index<(nodeList.length-2)}}"></view>-->
				<view bindtap="bidnDeleteNodeTap" class="iconfont icon-delete" data-idx="{{index}}"></view>
			</view>
		</view>
		<view class="editor-add-wrapper" wx:if="{{!isView}}">
			<view bindtap="bindAddTextTap" data-idx="{{index}}" class="editor-add-wrapper-view"><text class="icon-roundadd margin-right-xs"></text>添加文本</view>
			<view bindtap="bindAddImageTap" data-idx="{{index}}" class="editor-add-wrapper-view"><text class="icon-pic margin-right-xs"></text>添加图片</view>
		</view>
	</block>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\editor\editor_cmpt.wxss
--------------------------------------------------
.editor-tab {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	position: fixed;
	top: 0;
	z-index: 999;
	line-height: 3;
	height: 70rpx;
	margin-top: 40rpx;
}


.editor-tab .item.cur::after {
	width: 100%;
	position: absolute;
	bottom: 10rpx;
	left: 0rpx;
	height: 6rpx;
	content: '';
	background-color: #ff5858;
}

.iconfont {
	font-size: 32rpx;
	font-style: normal;
}

.editor-wrapper {
	padding: 30rpx;
	box-sizing: border-box;
}

.editor-add-wrapper {
	display: flex;
	flex-direction: row;
	align-items: center;
	margin: 0 auto;
	font-size: 30rpx;
	width: 100%;
	justify-content: center;
}

.editor-add-wrapper .editor-add-wrapper-view {
	width: 250rpx;
	line-height: 2;
	text-align: center;
}

.editor-add-wrapper .iconfont {
	padding: 20rpx;
	color: #666;
	font-size: 48rpx;
	box-sizing: border-box;
}

.editor-node-wrapper {
	position: relative;
	width: 100%;
	margin-top: 10rpx;
	margin-bottom: 10rpx;
	border: 1rpx dashed #999;
	background: #fff;
}

.editor-node-wrapper.is-view {
	border: 1rpx solid #fff;
	border-radius: 10rpx;
}

.editor-node-wrapper.cur {
	animation: glow 800ms ease-out infinite alternate;
}

@keyframes glow {
	0% {
		box-shadow: 0 0 5px rgba(252, 94, 94, .2), inset 0 0 5px rgba(252, 94, 94, .1), 0 0px 0 #d70c19;
	}

	100% {
		border-color: #d70c19;
		box-shadow: 0 0 20px rgba(252, 94, 94, .6), inset 0 0 10px rgba(252, 94, 94, .4), 0 0px 0 #d70c19;
	}
}

.editor-delete {
	position: absolute;
	z-index: 999;
	display: flex;
	text-align: center;
	align-items: center;
	justify-content: center;
	top: -30rpx;
	right: 0rpx;
	color: #999;
	background: hsla(0, 0%, 100%, .95);
	border-radius: 40rpx;
	padding: 15rpx;
	box-shadow: 0 0 5px rgba(0, 0, 0, .1);
}

.editor-delete .iconfont {
	padding: 0 20rpx;
}

.editor-wrapper .editor-node-wrapper .editor-textarea {
	margin: 0;
	display: block;
	width: 100%;
	line-height: 1.5;
	padding: 35rpx 20rpx 20rpx;
	min-height: 240rpx;
	font-size: 32rpx;
}

.editor-images {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	width: 656rpx;
	border: 2rpx solid #e4e7ed;
	background: #fff;
	padding: 20rpx;
	min-height: 2.5em;
}

.editor-images .item-image {
	display: flex;
	align-items: center;
	justify-content: center;
	margin: 5rpx;
	width: 150rpx;
	height: 150rpx;
	box-sizing: border-box;
}

.editor-images .editor-images-add {
	border: 4rpx dashed #c0c4cc;
	color: #c0c4cc;
}

.editor-image {
	display: block;
	width: 100%;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set_helper.js
--------------------------------------------------
/**
 * 配置格式
 * mark
 * title:
 * type:
 * desc: 
 * min:
 * max:
 * must:
 * checkBoxLimit:2
 * onlySet:{mode:'all',cnt:-1}
 * selectOptions:['',''] 
 * def
 */
const dataHelper = require('../../../helper/data_helper.js');
const pageHelper = require('../../../helper/page_helper.js');
const helper = require('../../../helper/helper.js');
const validate = require('../../../helper/validate.js');

function initFieldOne(field) {
	return initFields([field])[0];
}

function initFields(defaultFields = null) {
	let fields = dataHelper.deepClone(defaultFields);
	if (fields && Array.isArray(fields)) {
		for (let k = 0; k < fields.length; k++) {
			let curForm = fields[k];
			// 补充编号
			if (!curForm['mark']) curForm['mark'] = mark();
 
			// 常规属性
			if (!helper.isDefined(curForm['type'])) curForm['type'] = 'text';
			if (!helper.isDefined(curForm['title'])) curForm['title'] = '姓名';
			if (!helper.isDefined(curForm['desc'])) curForm['desc'] = '';
			if (!helper.isDefined(curForm['must'])) curForm['must'] = false;
			if (!helper.isDefined(curForm['def'])) curForm['def'] = null; //默认值
			if (!helper.isDefined(curForm['edit'])) curForm['edit'] = true; //是否可编辑删除
 
			// 扩展属性
			if (!helper.isDefined(curForm['ext'])) curForm['ext'] = {};

			// 默认长度
			let max = 50;
			let min = 0;
			switch (fields[k].type) {
				case 'textarea':
					max = 500;
					break;
				case 'carnumber':
					min = 7;
					max = 8;
					break;
				case 'image':
					max = 8;
					break;
				case 'digit':
				case 'int':
					max = 10;
					break;
			}

			// 长度
			if (!helper.isDefined(curForm['max'])) curForm['max'] = max;
			if (!helper.isDefined(curForm['min'])) curForm['min'] = min;

			// 固定长度
			if (helper.isDefined(curForm['len'])) {
				curForm['max'] = curForm['len'];
				curForm['min'] = curForm['len'];
				delete curForm['len'];
			}

			// 图片张数不超过8
			if (fields[k].type == 'image') {
				if (curForm['max'] > 8) curForm['max'] = 8;
				if (curForm['min'] > 8) curForm['min'] = 8;
			}

			if (fields[k].type == 'mobile') {
				curForm['max'] = 11;
				curForm['min'] = 11;
			}

			// 唯一性
			if (!helper.isDefined(curForm['onlySet'])) curForm['onlySet'] = {
				mode: 'all',
				cnt: -1
			};

			// 可选项
			if (!helper.isDefined(curForm['selectOptions'])) {
				if (fields[k].type == 'select' || fields[k].type == 'checkbox' || fields[k].type == 'radio')
					curForm['selectOptions'] = ['是', '否'];
				else
					curForm['selectOptions'] = ['', ''];
			} 
			 
			
			if (!helper.isDefined(curForm['checkBoxLimit'])) curForm['checkBoxLimit'] = 2;
		}
	}

	return fields || [
		{
			mark: mark(),
			type: 'text',
			title: '姓名',
			desc: '您的姓名',
			must: true,
			min: 0,
			max: 30,
			onlySet: {
				mode: 'all',
				cnt: -1
			},
			selectOptions: ['', ''], 
			checkBoxLimit: 2,
			def: null,
			edit:false
		},
	];
}


// 函数参数必须是字符串，因为二代身份证号码是十八位，而在javascript中，十八位的数值会超出计算范围，造成不精确的结果，导致最后两位和计算的值不一致，从而该函数出现错误。
// 详情查看javascript的数值范围
function checkIDCard(idcode) {
	if (idcode.length != 18) return false;

	// 加权因子
	var weight_factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];
	// 校验码
	var check_code = ['1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2'];

	var code = idcode + "";
	var last = idcode[17]; //最后一位

	var seventeen = code.substring(0, 17);

	// ISO 7064:1983.MOD 11-2
	// 判断最后一位校验码是否正确
	var arr = seventeen.split("");
	var len = arr.length;
	var num = 0;
	for (var i = 0; i < len; i++) {
		num = num + arr[i] * weight_factor[i];
	}

	// 获取余数
	var resisue = num % 11;
	var last_no = check_code[resisue];

	// 格式的正则
	// 正则思路
	/*
	第一位不可能是0
	第二位到第六位可以是0-9
	第七位到第十位是年份，所以七八位为19或者20
	十一位和十二位是月份，这两位是01-12之间的数值
	十三位和十四位是日期，是从01-31之间的数值
	十五，十六，十七都是数字0-9
	十八位可能是数字0-9，也可能是X
	*/
	var idcard_patter = /^[1-9][0-9]{5}([1][9][0-9]{2}|[2][0][0|1][0-9])([0][1-9]|[1][0|1|2])([0][1-9]|[1|2][0-9]|[3][0|1])[0-9]{3}([0-9]|[X])$/;

	// 判断格式是否正确
	var format = idcard_patter.test(idcode);

	// 返回验证结果，校验码和格式同时正确才算是合法的身份证号码
	return last === last_no && format ? true : false;
}

// 必填提示
function getMustHint(type) {
	if (type == 'image') return '请上传';

	let arr = ['select', 'date', 'month', 'hourminute', 'time', 'checkbox', 'radio','switch', 'area'];
	if (arr.includes(type))
		return '请选择';
	else
		return '请填写';
}

// form 数据校验
function checkForm(fields, forms, that) {
	for (let k = 0; k < fields.length; k++) {
		delete fields[k].focus;
	}

	for (let k = 0; k < fields.length; k++) {
		let type = fields[k].type;
		let title = '「' + fields[k].title + '」';
		let val = forms[k].val;

		// 必填
		let hintOprt = getMustHint(type); //提示动作

		if (fields[k].must && type != 'switch' && (!helper.isDefined(val) || val.length == 0)) {
			fields[k].focus = hintOprt + title;
			pageHelper.anchor('form' + forms[k].mark, that);
			return pageHelper.showModal(hintOprt + '' + title);
		}

		// 填写后，字符串最大长度 
		if (val.length > 0 && (type == 'text' || type == 'textarea' || type == 'carnumber' || type == 'int' || type == 'digit')) {
			if (fields[k].max == fields[k].min) {
				let len = fields[k].max;
				if (val.length != len) {
					fields[k].focus = title + ' 字数必须为' + len + '位';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 字数必须为' + len + '位');
				}
			}
			else {
				if (val.length > fields[k].max) {
					fields[k].focus = title + ' 字数不能多于' + fields[k].max + '位';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 字数不能多于' + fields[k].max + '位');
				}

				if (val.length < fields[k].min) {
					fields[k].focus = title + ' 字数不能少于' + fields[k].min + '位';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 字数不能少于' + fields[k].min + '位');
				}
			}
		}

		// 传图后，字符串最大长度 
		if (val.length > 0 && (type == 'image')) {
			if (fields[k].max == fields[k].min) {
				let len = fields[k].max;
				if (val.length != len) {
					fields[k].focus = title + ' 张数必须为' + len + '张';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 张数必须为' + len + '张');
				}
			}
			else {
				if (val.length > fields[k].max) {
					fields[k].focus = title + ' 张数不能多于' + fields[k].max + '张';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 张数不能多于' + fields[k].max + '张');
				}

				if (val.length < fields[k].min) {
					fields[k].focus = title + ' 张数不能少于' + fields[k].min + '张';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 张数不能少于' + fields[k].min + '张');
				}
			}
		}


		switch (type) {
			case 'rows': {
				// 多条目的数据校验
				let ret = that.selectComponent('#rows' + k).checkForms();
				if (ret !== true) return;
				break;
			}
			case 'tag': { // 标签格式化
				forms[k].val = dataHelper.fmtTag(val);
				break;
			}
			case 'mobile': {
				if (val.length > 0 && val.length != 11) {
					fields[k].focus = '请填写正确的 ' + title;
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal('请填写正确的 ' + title);
				}
				break;
			}
			case 'switch': {
				// TODO 是否要做判断
				break;
			}
			case 'idcard': {
				if (val.length > 0 && !checkIDCard(val)) {
					fields[k].focus = '请填写正确的 ' + title;
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal('请填写正确的 ' + title);
				}
				break;
			}
			case 'checkbox': {
				if (val.length > 0 && val.length < fields[k].checkBoxLimit) {
					fields[k].focus = title + ' 至少选中' + fields[k].checkBoxLimit + '项';
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal(title + ' 至少选中' + fields[k].checkBoxLimit + '项');
				}
				break;
			}
			case 'date': {
				if (validate.checkDate(val)) {
					fields[k].focus = '请填写正确的 ' + title;
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal('请填写正确的 ' + title);
				}
				break;
			}
			case 'year': {
				if (validate.checkYear(val)) {
					fields[k].focus = '请填写正确的 ' + title;
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal('请填写正确的 ' + title);
				}
				break;
			}
			case 'month': {
				if (validate.checkYearMonth(val)) {
					fields[k].focus = '请填写正确的 ' + title;
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal('请填写正确的 ' + title);
				}
				break;
			}
			case 'hourminute': {
				if (validate.checkHourMinute(val)) {
					fields[k].focus = '请填写正确的 ' + title;
					pageHelper.anchor('form' + forms[k].mark, that);
					return pageHelper.showModal('请填写正确的 ' + title);
				}
				break;
			}
			case 'int': {
				if (validate.checkInt(val)) {
					fields[k].focus = title + '必须为数字';
					return pageHelper.showModal(title + '必须为数字');
				}
				break;
			}
			case 'digit': {
				if (validate.checkDigit(val)) {
					fields[k].focus = title + '必须为数字或小数';
					return pageHelper.showModal(title + '必须为数字或小数');
				}
				break;
			}
		}

	}
	return true;
}

function mark() {
	return dataHelper.genRandomAlpha(10).toUpperCase();
};

function getTypeOptions() {
	//return dataHelper.getSelectOptions('text=单行文本,select=单项选择,checkbox=多项选择,switch=开关选择,carnumber=车牌,textarea=多行文本,idcard=身份证号码,mobile=手机号码,date=日期 (年 月 日),month=月份,year=年份,hourminute=时间点,area=省市区,int=整数数字,digit=带小数点的数字');

	return dataHelper.getSelectOptions('text=单行文本,select=单项选择,checkbox=多项选择,switch=开关选择,carnumber=车牌,textarea=多行文本,idcard=身份证号码,date=日期 (年 月 日),month=月份,year=年份,hourminute=时间点,area=省市区,int=整数数字,digit=带小数点的数字');
}

// 重复性规则
function getOnlySetOptions() {
	let mode = dataHelper.getSelectOptions('all=本项目全程重复次数,clock=按每一时段限制重复次数,day=按每天限制重复次数');

	let list = [];
	for (let k = 0; k < mode.length; k++) {
		let node = {};
		node.label = mode[k].label;
		node.val = mode[k].val;

		let children = [];
		if (k == 0) {
			children.push({
				label: '不限制重复次数',
				val: -1
			});
		}
		for (let j = 1; j <= 30; j++) {
			let childNode = {};
			if (j == 1)
				childNode.label = '仅可填写' + j + '次';
			else
				childNode.label = '可重复' + j + '次';
			childNode.val = j
			children.push(childNode);
		}

		node.children = children;

		list.push(node);
	}

	return list;
}

// 重复性规则的表述
function getOnlySetDesc(rule) {
	let ret = '';
	switch (rule.mode) {
		case 'all':
			ret = rule.cnt > 0 ? '本项目全程可重复' + rule.cnt + '次' : '本项目全程不限制重复次数';
			break;
		case 'day':
			ret = '每天可重复' + rule.cnt + '次';
			break;
		case 'clock':
			ret = '每一时段可重复' + rule.cnt + '次';
			break;
	}
	if (rule.cnt == 1) ret = ret.replace(/可重复/g, '仅可填写');
	return ret;
}

module.exports = {
	checkForm,
	mark,

	initFieldOne,
	initFields,

	getTypeOptions,

	getOnlySetOptions,
	getOnlySetDesc
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\form_set_cmpt.js
--------------------------------------------------
const pageHelper = require('../../../../helper/page_helper.js');
const dataHelper = require('../../../../helper/data_helper.js');

Component({
	options: {
		addGlobalClass: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		fields: {
			type: Array,
			value: [],
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		cur: -1,
	},

	/**
	 * 生命周期方法
	 */
	lifetimes: {
		attached: function () {

		},

		ready: function () {


		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		setGlow(cur) {
			this.setData({
				cur
			});
			setTimeout(() => {
				this.setData({
					cur: -1
				});
			}, 800);
		},

		url: function (e) {
			pageHelper.url(e, this);
		},

		set: function (fields) {
			this.setData({
				fields
			});
			this.triggerEvent('formset', fields);
		},

		get: function () {
			return this.data.fields;
		},

		bindEditTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let edit = pageHelper.dataset(e, 'edit'); 
			if (!edit) {
				return pageHelper.showNoneToast('该字段不可编辑和删除');
			}
			wx.navigateTo({
				url: '/cmpts/public/form/form_set/field/form_set_field?idx=' + idx,
			});
		},
		bindUpTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let fields = this.data.fields;
			dataHelper.arraySwap(fields, idx, idx - 1);
			this.setData({
				fields
			});
			this.setGlow(idx - 1);
			this.triggerEvent('formset', fields);
		},

		bindDownTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let fields = this.data.fields;
			dataHelper.arraySwap(fields, idx, idx + 1);
			this.setData({
				fields
			});
			this.setGlow(idx + 1);
			this.triggerEvent('formset', fields);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\form_set_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\form_set_cmpt.wxml
--------------------------------------------------
<view class="form-group arrow {{cur==index?'cur':''}}" hoverClass="form-group-active" wx:for="{{fields}}" wx:key="key" style="padding-left:10rpx">
	<view class="field-oprt">
		<view bindtap="bindUpTap" wx:if="{{index>0}}" data-idx="{{index}}"><text class="icon-refresharrow up"></text></view>
		<view bindtap="bindDownTap" wx:if="{{index<fields.length-1}}" data-idx="{{index}}"><text class="icon-refresharrow"></text></view>  
	</view>
							
	<view class="title text-cut" bindtap="bindEditTap"  data-edit="{{item.edit}}" data-idx="{{index}}"> 
		{{item.title}}
	</view>
	<view class="picker-set text-cut" bindtap="bindEditTap" data-edit="{{item.edit}}" data-idx="{{index}}">
	 
		<text wx:if="{{item.type=='text'}}">单行文本，</text>
		<text wx:elif="{{item.type=='date'}}">日期，</text>
		<text wx:elif="{{item.type=='hourminute'}}">时间点，</text>
		<text wx:elif="{{item.type=='select'}}">单项选择，</text>
		<text wx:elif="{{item.type=='checkbox'}}">多项选择，</text>
		<text wx:elif="{{item.type=='switch'}}">开关选择，</text>  
		<text wx:elif="{{item.type=='area'}}">省市区，</text> 
		<text wx:elif="{{item.type=='textarea'}}">多行文本，</text> 
		<text wx:elif="{{item.type=='year'}}">年份，</text> 
		<text wx:elif="{{item.type=='month'}}">月份，</text> 
		<text wx:elif="{{item.type=='int'}}">整数数字，</text> 
		<text wx:elif="{{item.type=='digit'}}">小数数字，</text> 
		<text wx:elif="{{item.type=='idcard'}}">身份证，</text> 
		<text wx:elif="{{item.type=='mobile'}}">手机，</text> 
		
		<text wx:if="{{item.must}}">必填</text>
		<text wx:else>选填</text>
	</view>
</view>

<view class="form-group" bindtap="url" data-url="/cmpts/public/form/form_set/field/form_set_field">
	<view class="title text-cut text-blue text-bold">
		<text class="icon-roundadd margin-right-xs"></text>添加新字段
	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\form_set_cmpt.wxss
--------------------------------------------------
.picker-set {
	line-height: 100rpx;
	font-size: 24rpx;
	width: 100%;
	text-align: right;
	color: #999;
	width: 210rpx;
}
 
.form-group .picker-set {
	padding-right: 40rpx;
	overflow: hidden;
	position: relative;
}

.form-group.cur {
	animation: glow 800ms linear 1 alternate;
} 
 
@keyframes glow { 
	0% {
		background-color: #ececec;
	} 
	100% {
		background-color: #fff;
	}
}

.form-group-active{
	background-color: #ececec;
}

.form-group .title {
	font-weight: normal;
	color: #333;
	flex: 1;
	padding-right: 10rpx;
}

.form-group .field-oprt {
	color: #777;
	background: hsla(0, 0%, 100%, .95);
	border-radius: 5rpx; 
	box-shadow: 0 0 5px rgba(0, 0, 0, .1); 
	display: flex;
	text-align: center;
	align-items: center;
	justify-content: center;
	margin-right: 15rpx; 
}

.form-group .field-oprt>view{
	width:70rpx;
	height:55rpx;
	display: flex;
	text-align: center;
	align-items: center;
	justify-content: center;
	font-size:36rpx;
} 

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\field\form_set_field.js
--------------------------------------------------
const pageHelper = require('../../../../../helper/page_helper.js');
const dataHelper = require('../../../../../helper/data_helper.js');
const helper = require('../../../../../helper/helper.js');
const formSetHelper = require('../../form_set_helper.js');

let _parentFormSet = null;

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		index: -1, // 父页面索引 -1则为新加

		typeOptions: formSetHelper.getTypeOptions(),
		onlySetOptions: formSetHelper.getOnlySetOptions(),
		maxOptions: dataHelper.getSelectOptions('0=0个字,1=1个字,2=2个字,3=3个字,4=4个字,5=5个字,6=6个字,7=7个字,8=8个字,9=9个字,10=10个字,11=11个字,12=12个字,13=13个字,14=14个字,15=15个字,15=15个字,16=16个字,17=17个字,18=18个字,19=19个字,20=20个字,25=25个字,30=30个字,40=40个字,50=50个字,100=100个字,200=200个字,500=500个字,1000=1000个字,2000=2000个字'),
		minOptions: dataHelper.getSelectOptions('0=0个字,1=1个字,2=2个字,3=3个字,4=4个字,5=5个字,6=6个字,7=7个字,8=8个字,9=9个字,10=10个字,11=11个字,12=12个字,13=13个字,14=14个字,15=15个字,15=15个字,16=16个字,17=17个字,18=18个字,19=19个字,20=20个字,25=25个字,30=30个字,40=40个字,50=50个字,100=100个字,200=200个字,500=500个字'),

		checkBoxLimitOptions: dataHelper.getSelectOptions('0=0项,1=1项,2=2项,3=3项,4=4项,5=5项,6=6项,7=7项,8=8项,9=9项,10=10项,11=11项,12=12项,13=13项,14=14项,15=15项,16=16项,17=17项,18=18项,19=19项,20=20项'),

		onlySetDesc: '',

		// 基本属性
		formMark: '',
		formType: 'text',
		formTitle: '',
		formDesc: '',
		formMust: true,
		formMax: 50,
		formMin: 0,
		formOnlySet: {
			mode: 'all',
			cnt: -1
		},

		// type=select
		formSelectOptions: ['', ''],


		// type=checkbox
		formCheckBoxLimit: 2,

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		this.setData({
			formMark: formSetHelper.mark(),
			onlySetDesc: formSetHelper.getOnlySetDesc(this.data.formOnlySet)
		});

		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;
		_parentFormSet = parent.selectComponent("#form-set");

		if (options && helper.isDefined(options.idx)) {
			let index = options.idx;

			let fields = _parentFormSet.get();
			let node = fields[index];

			if (!node.mark) node.mark = formSetHelper.mark();

			this.setData({
				index,
				formMark: node.mark,
				formType: node.type,
				formTitle: node.title,
				formDesc: node.desc,
				formMust: node.must,
				formMax: node.max,
				formMin: node.min,
				formOnlySet: node.onlySet,
				formSelectOptions: node.selectOptions,
				formCheckBoxLimit: node.checkBoxLimit,

				onlySetDesc: formSetHelper.getOnlySetDesc(node.onlySet)
			});

			wx.setNavigationBarTitle({
				title: '字段编辑',
			});

		}
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	// 重复次数
	bindOnlySetCmpt: function (e) {
		let formOnlySet = {};
		formOnlySet.mode = e.detail[0];
		formOnlySet.cnt = e.detail[1];
		this.setData({
			formOnlySet,
			onlySetDesc: formSetHelper.getOnlySetDesc(formOnlySet)
		});
	},

	bindDelTap: function (e) {
		if (this.data.index == -1) return;

		let callback = () => {
			let fields = _parentFormSet.get();
			fields.splice(this.data.index, 1);
			_parentFormSet.set(fields);
			wx.navigateBack();
		}

		pageHelper.showConfirm('确定要删除当前字段吗？', callback);
	},

	bindSubmitTap: function (e) {
		if (this.data.formTitle.length < 1) return pageHelper.showModal('字段名称必填哦');
		if (this.data.formTitle.length > 60) return pageHelper.showModal('字段名称必不能超过60个字');

		if (this.data.formDesc.length > 30) return pageHelper.showModal('填写说明不能超过30个字');

		if (this.data.formType.length < 1) return pageHelper.showModal('字段填写类型必须选择哦');
		let formType = this.data.formType;

		if (formType == 'select' || formType == 'checkbox') {
			// 下拉框
			let formSelectOptions = this.data.formSelectOptions;

			for (let k = 0; k < formSelectOptions.length; k++) {
				if (formSelectOptions[k].length < 1) {
					return pageHelper.showModal('选项' + (Number(k) + 1) + '还没填哦');
				}

				if (formSelectOptions[k].length > 30) {
					return pageHelper.showModal('选项' + (Number(k) + 1) + '不能超过30个字，精简一点!');
				}
			}

			this.data.formMax = 50;
			this.data.formMin = 0;

			if (formType == 'select') this.data.formCheckBoxLimit = 2;

		} else if (formType == 'mobile') {
			//非本类型的排除
			this.data.formSelectOptions = ['', ''];
			this.data.formCheckBoxLimit = 2;
			this.data.formMax = 11;
			this.data.formMin = 11;
		} else {
			//非本类型的排除
			this.data.formSelectOptions = ['', ''];
			this.data.formCheckBoxLimit = 2;

			if (formType != 'text' && formType != 'textarea' && formType != 'int' && formType != 'digit') {
				this.data.formMax = 50;
				this.data.formMin = 0;
			}
		}

		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;

		let fields = _parentFormSet.get();


		let node = {
			mark: this.data.formMark,
			title: this.data.formTitle,
			desc: this.data.formDesc,
			type: this.data.formType,
			must: this.data.formMust,
			max: Number(this.data.formMax),
			min: Number(this.data.formMin),
			onlySet: this.data.formOnlySet,
			selectOptions: this.data.formSelectOptions,
			checkBoxLimit: Number(this.data.formCheckBoxLimit),
		};


		node = formSetHelper.initFieldOne(node);
		if (this.data.index == -1) {
			fields.push(node); //新的
		} else {
			fields[this.data.index] = node; //修改的
		}

		_parentFormSet.set(fields);
		wx.navigateBack();
	},

	switchModel: function (e) {
		pageHelper.switchModel(this, e, 'bool');
	},

	bindSelectOptionsBlur: function (e) {
		// 多选项目的输入
		let idx = pageHelper.dataset(e, 'idx');
		let val = e.detail.value.trim();
		let formSelectOptions = this.data.formSelectOptions;
		formSelectOptions[idx] = val;
		/*
		this.setData({
			formSelectOptions
		});*/
	},

	bindDelSelectOptionsTap: function (e) {
		let formSelectOptions = this.data.formSelectOptions;
		if (formSelectOptions.length <= 2) return pageHelper.showModal('至少2个选项');


		let callback = () => {
			let idx = pageHelper.dataset(e, 'idx');
			formSelectOptions.splice(idx, 1);
			this.setData({
				formSelectOptions
			});
		}

		pageHelper.showConfirm('确定删除该项吗？', callback);
	},

	bindAddSelectOptionsTap: function (e) {
		let formSelectOptions = this.data.formSelectOptions;
		if (formSelectOptions.length >= 20) return pageHelper.showModal('最多可以添加20个选项');

		formSelectOptions.push('');
		this.setData({
			formSelectOptions
		});
	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\field\form_set_field.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt"
	},
	"navigationBarBackgroundColor": "#ffffff",
	"navigationBarTextStyle": "black",
	"enablePullDownRefresh": true,
	"backgroundTextStyle": "dark",
	"navigationBarTitleText": "后台-字段添加"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\field\form_set_field.wxml
--------------------------------------------------
<view class="main">
	<form>
		<view class="form-box shadow">
			<view class="form-group">
				<view class="title must">字段名称</view>
				<input placeholder="请输入字段名称 (必填，60字以内)" maxlength="60" placeholder-class="phc" model:value="{{formTitle}}"></input>
			</view>

		</view>

		<view class="form-box shadow">
			<view class="form-group">
				<view class="title must">是否必填<text class="title-info">(为空时不能提交)</text></view>
				<switch wx:if="{{formMust}}" bindchange="switchModel" data-item="formMust" class="green sm" checked="true">
				</switch>
				<switch wx:elif="{{!formMust}}" bindchange="switchModel" data-item="formMust" class="green sm"></switch>
			</view>

			<view class="form-group">
				<view class="title must">字段填写类型</view>
				<cmpt-picker style="flex:1" model:item="{{formType}}" sourceData="{{typeOptions}}" />
			</view>

			<block wx:if="{{formType=='text'||formType=='textarea'||formType=='int'||formType=='digit'}}">
				<view class="form-group">
					<view class="title must">最小需填字数</view>
					<cmpt-picker style="flex:1" model:item="{{formMin}}" sourceData="{{minOptions}}" />
				</view>
				<view class="form-group">
					<view class="title must">最大可填字数</view>
					<cmpt-picker style="flex:1" model:item="{{formMax}}" sourceData="{{maxOptions}}" />
				</view>
			</block>


			<!-- select begin -->
			<block wx:if="{{formType=='select'||formType=='checkbox'}}">
				<view class="form-group">
					<view class="title must" wx:if="{{formType=='select'}}">单项选择-选项配置</view>
					<view class="title must" wx:if="{{formType=='checkbox'}}">多项选择-选项配置</view>
				</view>

				<view class="form-group" wx:for="{{formSelectOptions}}" wx:key="key">
					<input bindinput='bindSelectOptionsBlur' data-idx="{{index}}" placeholder="请输入选项{{index+1}} （30字以内)" maxlength="30" placeholder-class="phc" value="{{item}}"></input><text bindtap="bindDelSelectOptionsTap" data-idx="{{index}}" class="icon-roundclose margin-left-xs text-red select-close"></text>
				</view>
				<view class="form-group" bindtap="bindAddSelectOptionsTap">
					<view class="title text-blue" style="font-weight:normal;font-size:30rpx;"> <text class="icon-roundadd margin-right-s  select-close" style="font-size:35rpx;"></text>添加新选项
					</view>

				</view>
			</block>

			<view wx:if="{{formType=='checkbox'}}" class="form-group">
				<view class="title must">多项选择-最少选中项数</view>
				<cmpt-picker style="flex:1" model:item="{{formCheckBoxLimit}}" sourceData="{{checkBoxLimitOptions}}" />
			</view>
			<!-- select END -->


		</view>

		<view class="form-box shadow">
			<view class="form-group">
				<view class="title">填写说明 <text class="text-grey text-normal">(选填)</text></view>
			</view>
			<view class="form-group">
				<input placeholder="提示用户该字段如何填写 (选填，30字以内)" maxlength="30" placeholder-class="phc" model:value="{{formDesc}}"></input>
			</view>
			<view wx:if="{{formDescFocus}}" class="hint-desc error">{{formDescFocus}}</view>

		</view>

		<view class="padding-bottom flex  {{index==-1?'flex-direction':'oprt'}}">
			<button wx:if="{{index>-1}}" bindtap="bindDelTap" class="btn bg-red margin-top-s text-bold large">删除</button>
			<button bindtap="bindSubmitTap" class="btn bg-blue text-white margin-top-s text-bold large">保存</button>
		</view>


	</form>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_set\field\form_set_field.wxss
--------------------------------------------------
.main {
	margin-bottom: 150rpx;
}

.oprt {
	display: flex;
	width: 100%;
	justify-content: space-around;
}

.oprt button {
	width: 45%;
}

.select-close {
	width: 60rpx;
	font-size: 40rpx !important;
	font-weight: bold;
	text-align: right;
}

.title-desc {
	padding-left: 24rpx;
	color: #aaa;
	padding-bottom: 30rpx;
	border-bottom: 1rpx solid #eee;
}

.title-info {
	margin-left: 4rpx;
	color: #aaa;
	font-weight: normal;
	font-size: 24rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\form_show_cmpt.js
--------------------------------------------------
﻿const pageHelper = require('../../../../helper/page_helper.js');
const helper = require('../../../../helper/helper.js');
const cloudHelper = require('../../../../helper/cloud_helper.js');
const cacheHelper = require('../../../../helper/cache_helper.js');
const dataHelper = require('../../../../helper/data_helper.js');
const formSetHelper = require('../form_set_helper.js');
const rowsSetHelper = require('../../rows/rows_set_helper.js');
const validate = require('../../../../helper/validate.js');
const setting = require('../../../../setting/setting.js');

const CACHE_FORM_SHOW_KEY = 'FORM_SHOW_CMPT';
const CACHE_FORM_SHOW_TIME = 86400 * 365;

Component({
	options: {
		addGlobalClass: true,
		multipleSlots: true // 在组件定义时的选项中启用多slot支持
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		mark: { // 组件标识，用于区分缓存
			type: String,
			value: '',
		},
		source: { // 来源 admin /user
			type: String,
			value: 'user',
		},
		fields: { // 表单字段属性{mark,val,type,must,selectOptions,desc,title}
			type: Array,
			value: [],
		},
		forms: { // 表单值
			type: Array,
			value: [], // {mark,title,val,type}
		},
		doShow: { //仅仅显示
			type: Boolean,
			value: false,
		},
		isConfirm: { //是否显示核对信息modal
			type: Boolean,
			value: true,
		},
		isCacheMatch: { //是否开启缓存匹配
			type: Boolean,
			value: true,
		},
		isDefMatch: { //是否开启缺省值匹配
			type: Boolean,
			value: true,
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		cacheName: '',
		isLoad: false,
		showCheckModal: false,
		mobileCheck: setting.MOBILE_CHECK
	},

	/**
	 * 生命周期方法
	 */
	lifetimes: {
		attached: function () {
		},

		ready: function () {
			if (this.data.isCacheMatch) {
				let cacheName = CACHE_FORM_SHOW_KEY + '_' + this.data.mark;
				this.setData({
					cacheName
				});
			}

			this._init();

		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		reload: function () {
			// 重新加载，如果没有设置扩展字段，则全部form属性清空
			this._init();
		},
		_init: function () {
			let fields = formSetHelper.initFields(this.data.fields);
			let newForms = [];


			for (let k = 0; k < fields.length; k++) {
				let node = {};
				node.mark = fields[k].mark;
				node.title = fields[k].title;
				node.type = fields[k].type;

				// 判断是否有表单值（依次从表单值，缓存，默认值）
				let val = this._getOneValForm(fields[k].mark, fields[k].title, fields[k].type);
				if (val === null) val = '';

				// 数据类型修正
				val = this._fixType(fields[k].type, val);
				node.val = val;
				fields[k].val = val;

				// rows类型
				if (node.type == 'rows') {
					//如果不足最低，则补足 
					if (!helper.isDefined(fields[k].ext.minCnt)) fields[k].ext.minCnt = 2; 
					if (val.length < fields[k].ext.minCnt) {
						let step = fields[k].ext.minCnt - val.length;
						for (let n = 1; n <= step; n++)
							val.push(dataHelper.deepClone(rowsSetHelper.BASE_ROW));
					}
					node.val = val;
					fields[k].val = val;

					// 增加一个条目数量（不用数据去渲染，仅渲染条目数量）
					fields[k].rowsCnt = val.length;
				}


				newForms.push(node);
			}


			this.setData({
				forms: newForms,
				fields,
				isLoad: true
			});
			//this.triggerEvent('forms', newForms);
		},

		// 根据mark和type获取上次值或者缓存值或者缺省值
		_getOneValForm: function (mark, title, type) {
		 
			if (type == 'line') return title;
			if (type == 'slot') return '';

			let ret = null;

			// **** 对传入的默认值匹配
			let forms = this.data.forms;

			if (!forms || !Array.isArray(forms)) forms = [];
			for (let k = 0; k < forms.length; k++) {
				if (forms[k].mark == mark && forms[k].type == type) { // 优先匹配mark
					ret = forms[k].val;
					break;
				}

				if (forms[k].title == title && forms[k].type == type) { // 再则匹配名称
					ret = forms[k].val;
					break;
				}

				if (type == 'mobile' && forms[k].type == 'mobile') {
					ret = forms[k].val;
					break;
				}

				if (type == 'idcard' && forms[k].type == 'idcard') {
					ret = forms[k].val;
					break;
				}
			}
			if (ret === undefined) ret = null;

			// **** 对缓存匹配 图片和富文本和多条目不读取缓存 
			if (ret === null && this.data.isCacheMatch
				&& (type != 'image' && type != 'content' && type != 'rows')) {
				let caches = cacheHelper.get(this.data.cacheName);
				if (caches && Array.isArray(caches)) {
					for (let k = 0; k < caches.length; k++) {
						if (caches[k].mark == mark && caches[k].type == type) { // 优先匹配mark
							ret = caches[k].val;
							break;
						}

						if (caches[k].title == title && caches[k].type == type) { // 再则匹配名称
							ret = caches[k].val;
							break;
						}

						if (type == 'mobile' && caches[k].type == 'mobile') {
							ret = caches[k].val;
							break;
						}

						if (type == 'idcard' && caches[k].type == 'idcard') {
							ret = caches[k].val;
							break;
						}
					}
				}
			}
			if (ret === undefined) ret = null;

			// 缺省值匹配
			if (ret === null && this.data.isDefMatch) {
				let fields = this.data.fields;
				for (let k = 0; k < fields.length; k++) {
					if (fields[k].mark == mark
						&& helper.isDefined(fields[k].def)
						&& fields[k].def != null // 默认值为空
					) {
						ret = fields[k].def;
						break;
					}
				}
			}

			return ret;
		},

		// 原始form没有对应值, 给予默认值; 或者类型不对，修正
		_fixType: function (type, val) {

			if (type == 'line' || type=='slot') return val;

			if (type != 'switch' && type != 'checkbox' && type != 'area' && type != 'content' && type != 'image' && type != 'rows') {
				// switch(bool),checkbox(array), area(array), content(array) 不处理，其他做类型处理

				if (typeof val === 'object' && !Array.isArray(val)) {
					// 对象要被处理为空串，数组做trim不处理(typeof数组也是object)
					val = '';
				}
				else if (val === undefined) {
					// 当form里没有值的情况
					val = '';
				}
				else
					val = String(val).trim(); // 前后去空格
			}

			// 原始form 有对应值，但是类型不正确
			switch (type) {
				case 'image': {
					// 不支持字符串缺省值 
					if (!Array.isArray(val)) return [];
					break;
				}
				case 'content': {
					// 支持字符串缺省值
					if (typeof val === 'string') {
						if (val)
							return [{ type: 'text', val: val.trim() }];
						else
							return [];
					}

					if (!Array.isArray(val)) return [];
					break;
				}
				case 'rows': { // 多条目默认一条
					if (!Array.isArray(val)) return [dataHelper.deepClone(rowsSetHelper.BASE_ROW)];
					break;
				}
				case 'area': {
					if (!Array.isArray(val) || val.length == 0) return ''; //TODO?
					break;
				}
				case 'switch': {
					if (typeof (val) != 'boolean') return true;
					break;
				}
				case 'checkbox': {
					if (!Array.isArray(val)) return [String(val).trim()]; //尝试转为数组来匹配
					break;
				}
				case 'year': {
					if (!val || validate.checkYear(val)) return '';
					break;
				}
				case 'month': {
					if (!val || validate.checkYearMonth(val)) return '';
					break;
				}
				case 'date': {
					if (!val || validate.checkDate(val)) return '';
					break;
				}
				case 'hourminute': {
					if (!val || validate.checkHourMinute(val)) return '';
					break;
				}
				case 'int': { // 整数(字符形式) 
					if (!val || validate.checkInt(val)) return '';
					break;
				}
				case 'digit': { // 小数(字符形式) 
					if (!val || validate.checkDigit(val)) return '';
					break;
				}
				default: {

				}
			}

			return val;
		},

		_setForm: function (idx, val, isSetData = true) {
			let forms = this.data.forms;
			let fields = this.data.fields;
			fields[idx].val = val;
			forms[idx].val = val;

			// TODO是否需要，影响性能 
			let typeArr = ['rows', 'text', 'textarea', 'carnumber', 'digit', 'idcard', 'int', 'tag'];

			// 去掉focus
			for (let k = 0; k < fields.length; k++) {
				if (helper.isDefined(fields[k].focus)) {
					delete fields[k].focus;
				}
			}

			// 提高性能
			let formsName = 'forms[' + idx + '].val';
			let fieldsName = 'fields[' + idx + '].val';

			// 是否渲染到页面
			if (isSetData) {
			this.setData({
				[formsName]: val,
				[fieldsName]: val,
			});
			}
			else {
				// rows的输入不渲染，但增加一个条目数量
				if (this.data.forms[idx].type == 'rows') {
					this.setData({
						['fields[' + idx + '].rowsCnt']: val.length,
					});
				}
				else {
					// 不需要在界面上set数据 eg.rows的输入不渲染
					this.data[formsName] = val;
					this.data[fieldsName] = val;
				}
			}


			//this.triggerEvent('forms', forms);
		},


		bindImgUploadCmpt: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail;
			this._setForm(idx, val);
		},

		bindLineBlur: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value.trim();
			this._setForm(idx, val);
		},

		bindMultiBlur: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value;
			this._setForm(idx, val);
		},

		bindDayChange: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value.trim();
			this._setForm(idx, val);
		},

		bindAreaChange: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value;
			this._setForm(idx, val);
		},

		bindSelectCmpt: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.trim();
			this._setForm(idx, val);
		},

		bindCheckBoxCmpt: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail;
			this._setForm(idx, val);
		},

		bindRadioCmpt: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail;
			this._setForm(idx, val);
		},

		bindRowsCmpt: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail;
			this._setForm(idx, val, false); //rows为独立控件，不需要在界面上set数据
		},

		switchModel: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value;
			this._setForm(idx, val);
		},

		bindGetPhoneNumber: async function (e) {
			if (e.detail.errMsg == "getPhoneNumber:ok") {

				let cloudID = e.detail.cloudID;
				let params = {
					cloudID
				};
				let opt = {
					title: '手机验证中'
				};
				await cloudHelper.callCloudSumbit('passport/phone', params, opt).then(res => {
					let phone = res.data;
					if (!phone || phone.length < 11)
						wx.showToast({
							title: '手机号码获取失败，请重新绑定手机号码',
							icon: 'none',
							duration: 2000
						});
					else {
						let idx = pageHelper.dataset(e, 'idx');
						this._setForm(idx, phone);
					}
				});
			} else
				wx.showToast({
					title: '手机号码获取失败，请重新绑定手机号码',
					icon: 'none'
				});
		},

		checkForms: function () {
			// 写缓存
			if (this.data.isCacheMatch) {
				cacheHelper.set(this.data.cacheName, this.data.forms, CACHE_FORM_SHOW_TIME);
			}

			let ret = formSetHelper.checkForm(this.data.fields, this.data.forms, this);

			this.setData({
				fields: this.data.fields
			});

			if (!ret) return;

			if (this.data.isConfirm) { //是否显示确认信息
				this.setData({
					showCheckModal: true
				});
			} else {
				cacheHelper.remove(this.data.cacheName);
				this.triggerEvent('submit', this.data.forms);
			}

		},

		bindSubmitCmpt: function () {
			this.setData({
				showCheckModal: false
			});
			cacheHelper.remove(this.data.cacheName);
			this.triggerEvent('submit', this.data.forms);
		},

		url: function (e) {
			pageHelper.url(e, this);
		},

		getForms: function (isCheckForm = false) {
			if (isCheckForm) {
				// 是否数据校验
				let ret = formSetHelper.checkForm(this.data.fields, this.data.forms, this);

				this.setData({
					fields: this.data.fields
				});

				if (!ret) return false;
			}

			// 写缓存
			if (this.data.isCacheMatch) {
				cacheHelper.set(this.data.cacheName, this.data.forms, CACHE_FORM_SHOW_TIME);
			}

			return this.data.forms;
		},

		getOneFormVal(formName) {
			// 取某个表单值
			let forms = this.data.forms;
			for (let k = 0; k < forms.length; k++) {
				if (formName == forms[k].mark) {
					return forms[k].val;
				}
			}

			return null;
		},

		setOneFormVal(formName, val) {
			// 设定某个表单值
			let forms = this.data.forms;
			let fields = this.data.fields;
			for (let k = 0; k < forms.length; k++) {
				if (formName == forms[k].mark) {
					forms[k].val = val;
					fields[k].val = val;
					break;
				}
			}
			this.setData({
				fields,
				forms
			});
		}
	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\form_show_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {
		"cmpt-car-number": "/cmpts/public/car_number/car_number_cmpt",
		"cmpt-checkbox": "/cmpts/public/checkbox/checkbox_cmpt",
		"cmpt-radio": "/cmpts/public/radio/radio_cmpt",
		"cmpt-rows": "/cmpts/public/rows/rows_cmpt",
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt"
	}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\form_show_cmpt.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-darkgreen load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-darkgreen load-project"></view>

<wxs module="wxs">
	function calContent(content) {
		var imgCnt = 0;
		var textCnt = 0;
		for (var k = 0; k < content.length; k++) {
			if (content[k].type == 'img') imgCnt++;
			if (content[k].type == 'text') textCnt++;
		}
		if (imgCnt || textCnt) {
			return textCnt + '段文字，' + imgCnt + '张图片';
		}
		else
			return '未填写';
	}

	module.exports = {
		calContent: calContent,
	};
</wxs>
<block wx:if="{{isLoad}}" wx:for="{{fields}}" wx:key="key">
	<block wx:if="{{doShow}}">
		<block wx:if="{{item.type=='slot'}}">
			<slot name="{{item.mark}}" />  
		</block>
		<view wx:else class="form-group padding-s form-group-show">
			<view class="title">{{item.title}}:</view>
			<view wx:if="{{item.type=='image'}}" class="form-group-show-text">
				<image mode="aspectFill" bindtap="url" data-type="image" data-url="{{itm}}" wx:for="{{item.val}}" lazy-load="{{true}}" wx:key="key1" wx:for-item="itm" src="{{itm}}" class="loading form-group-show-img" show-menu-by-longpress="{{true}}" />
			</view>
			<view wx:elif="{{item.type=='switch'}}" class="form-group-show-text">{{item.val===true?'是':'否'}}</view>
			<view wx:elif="{{item.type=='content'}}" class="form-group-show-text">[图文]</view>
			<view wx:elif="{{item.type=='rows'}}" class="form-group-show-text">[多条目]</view>
			<view wx:else class="form-group-show-text">{{item.val}}</view>
		</view>
	</block>

	<block wx:else>
		<view wx:if="{{item.type=='line'}}" class="form-group-line"><text>{{item.title}}</text></view>
		<block wx:elif="{{item.type=='slot'}}">
			<slot name="{{item.mark}}" />  
		</block>

		<block wx:elif="{{item.type=='text'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<input placeholder="{{item.desc||'请填写'+item.title}}" placeholder-class="phc" maxlength="{{item.max}}" bindinput="bindLineBlur" data-idx="{{index}}" value="{{item.val}}" focus="{{item.focus}}"></input>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='carnumber'}}"> 
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<cmpt-car-number defaultNum="{{item.val}}" data-idx="{{index}}" bind:change="bindLineBlur" /> 
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='int'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<input type="number" placeholder="{{item.desc||'请填写'+item.title}}" placeholder-class="phc" maxlength="{{item.max}}" bindinput="bindLineBlur" data-idx="{{index}}" value="{{item.val}}" focus="{{item.focus}}"></input>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='digit'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<input type="digit" placeholder="{{item.desc||'请填写'+item.title}}" placeholder-class="phc" maxlength="{{item.max}}" bindinput="bindLineBlur" data-idx="{{index}}" value="{{item.val}}" focus="{{item.focus}}"></input>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='select'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<cmpt-picker style="flex:1" sourceData="{{item.selectOptions}}" data-idx="{{index}}" bind:select="bindSelectCmpt" item="{{item.val}}" />
			</view>
			<view class="hint-desc" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='checkbox'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="action text-bold text-l"><text class="text-red" wx:if="{{item.must}}">*</text>{{item.title}}
				</view>
				<view class="action">至少选择{{item.checkBoxLimit}}项</view>
			</view>
			<view class="form-group align-start" style="flex:1;padding-left:0;padding-right:20rpx;">
				<cmpt-checkbox show="{{item.ext.show=='row'?'row':''}}" sourceData="{{item.selectOptions}}" data-idx="{{index}}" bind:select="bindCheckBoxCmpt" itemMulti="{{item.val}}" multiModeLabelMark="{{item.ext.multiModeLabelMark||'label'}}" multiModeValMark="{{item.ext.multiModeValMark||'val'}}" style="flex:1" />
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='radio'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="action text-bold text-l"><text class="text-red" wx:if="{{item.must}}">*</text>{{item.title}}
				</view>
				<view class="action"></view>
			</view>
			<view class="form-group align-start" style="flex:1;padding-left:0;padding-right:20rpx;">
				<cmpt-radio show="{{item.ext.show=='row'?'row':''}}" sourceData="{{item.selectOptions}}" data-idx="{{index}}" bind:select="bindRadioCmpt" itemSelected="{{item.val}}" style="flex:1" />
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='date'}}">
			<view class="form-group arrow" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<picker class="picker-base" data-idx="{{index}}" mode="date" bindchange="bindDayChange" value="{{item.val}}">
					<view class="picker-select">
						{{item.val || '年,月,日'}}
					</view>
				</picker>
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
		</block>

		<block wx:elif="{{item.type=='year'}}">
			<view class="form-group arrow" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<picker class="picker-base" data-idx="{{index}}" mode="date" fields="year" bindchange="bindDayChange" value="{{item.val}}">
					<view class="picker-select">
						{{item.val || '请选择'}}
					</view>
				</picker>
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
		</block>

		<block wx:elif="{{item.type=='month'}}">
			<view class="form-group arrow" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<picker class="picker-base" data-idx="{{index}}" mode="date" fields="month" bindchange="bindDayChange" value="{{item.val}}">
					<view class="picker-select">
						{{item.val || '请选择'}}
					</view>
				</picker>
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
		</block>

		<block wx:elif="{{item.type=='hourminute'}}">
			<view class="form-group arrow" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<picker class="picker-base" data-idx="{{index}}" mode="time" bindchange="bindDayChange" value="{{item.val}}">
					<view class="picker-select">
						{{item.val || '请选择'}}
					</view>
				</picker>
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
		</block>

		<block wx:elif="{{item.type=='area'}}">
			<view class="form-group arrow" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<picker wx:if="{{item.ext.city}}" level="city" class="picker-base" data-idx="{{index}}" mode="region" bindchange="bindAreaChange" value="{{item.val}}">
					<view wx:if="{{item.val}}" class="picker-select">
						{{item.val[1]}}
					</view>
					<view wx:else class="picker-select">
						省,区,市
					</view>
				</picker>
				<picker wx:else class="picker-base" data-idx="{{index}}" mode="region" bindchange="bindAreaChange" value="{{item.val}}">
					<view wx:if="{{item.val && item.val.length==3}}" class="picker-select">
						{{item.val}}
					</view>
					<view wx:else class="picker-select">
						省,区,市
					</view>
				</picker>
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
		</block>

		<block wx:elif="{{item.type=='switch'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}</view>
				<switch wx:if="{{item.val}}" bindchange="switchModel" data-idx="{{index}}" class="green sm" checked="true">
				</switch>
				<switch wx:elif="{{!item.val}}" bindchange="switchModel" data-idx="{{index}}" class="green sm">
				</switch>
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
		</block>


		<block wx:elif="{{item.type=='rows'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="action text-bold text-l"><text class="text-red" wx:if="{{item.must}}">*</text>{{item.title}}
				</view>
				<view wx:if="{{item.ext.maxCnt}}" class="action">{{item.rowsCnt}}/{{item.ext.maxCnt}}</view>
			</view>
			<view wx:if="{{item.ext.memo}}" class="form-group memo {{item.ext.memoColor}}">{{item.ext.memo}}</view>
			<view class="form-group" style="padding:1rpx 10rpx">
				<cmpt-rows id="rows{{index}}" mark="rows{{index}}" parentMark="{{mark}}" style="width:100%" ext="{{item.ext}}" list="{{item.val}}" data-idx="{{index}}" bind:change="bindRowsCmpt" />
			</view>
			<view class="hint-desc info" wx:if="{{item.desc}}">{{item.desc}}</view> 
		</block>

		<block wx:elif="{{item.type=='textarea'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="action text-bold text-l"><text class="text-red" wx:if="{{item.must}}">*</text>{{item.title}}
				</view>
				<view class="action">{{item.val.length}}/{{item.max}}</view>
			</view>

			<view class="form-group align-start">
				<textarea bindinput="bindMultiBlur" data-idx="{{index}}" value="{{item.val}}" placeholder-class="phc" placeholder="{{item.desc||'请填写'+item.title}}" style="min-height:{{item.max<300?'100':''}}{{item.max>=300&&item.max<1000?(item.max/100)*40:''}}{{item.max>=1000?'400':''}}rpx" auto-height="true" maxlength="{{item.max}}" focus="{{item.focus}}" cursor-spacing="80"></textarea>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:if="{{item.type=='tag'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="action text-bold text-l"><text class="text-red" wx:if="{{item.must}}">*</text>{{item.title}}
				</view>
				<view class="action"></view>
			</view>

			<view class="form-group align-start">
				<textarea bindinput="bindLineBlur" data-idx="{{index}}" value="{{item.val}}" placeholder-class="phc" placeholder="{{item.desc||'请填写'+item.title}}" style="min-height:100rpx" auto-height="true" maxlength="{{item.max}}" cursor-spacing="80"></textarea>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
			<view wx:else class="hint-desc"><text class="icon-tag"></text>多个标签请用逗号分隔</view>
		</block>

		<block wx:elif="{{item.type=='idcard'}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<input type="idcard" placeholder="{{item.desc||'请填写'+item.title}}" placeholder-class="phc" maxlength="18" bindinput="bindLineBlur" data-idx="{{index}}" value="{{item.val}}"></input>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='content'}}">
			<view id="form{{item.mark}}" class="form-group arrow" bindtap="url" data-url="/cmpts/public/form/form_show/content/form_show_content?source={{source}}&cmptId={{mark}}&cmptFormName={{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:<text class="text-grey text-normal margin-left-xs">{{item.must?'(必填)':''}}</text></view>
				<view wx:if="{{item.val.length==0}}" class="form-text text-orange">「{{item.title}}」未填写</view>
				<view wx:else class="form-text">{{wxs.calContent(item.val)}}</view>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='image'}}">
			<cmpt-img-upload id="form{{item.mark}}" data-idx="{{index}}" must="{{item.must}}" imgMax="{{item.max}}" title="{{item.title}}上传 {{item.must?'(必填)':''}}" isCheck="{{false}}" imgUploadSize="{{10}}" imgList="{{item.val}}" bind:upload="bindImgUploadCmpt" />
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='mobile' && mobileCheck}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<text class="phone-text">{{item.val||'未填写'}}</text>
				<button open-type="getPhoneNumber" bindgetphonenumber="bindGetPhoneNumber" class="btn   phone-button" data-idx="{{index}}">{{item.val?'一键修改手机号':'一键填写手机号'}}</button>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

		<block wx:elif="{{item.type=='mobile' && !mobileCheck}}">
			<view class="form-group" id="form{{item.mark}}">
				<view class="title {{item.must?'must':''}}">{{item.title}}:</view>
				<input placeholder="{{item.desc||'请填写'+item.title}}" placeholder-class="phc" maxlength="11" bindinput="bindLineBlur" data-idx="{{index}}" value="{{item.val}}"></input>
			</view>
			<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
			<view wx:if="{{item.ext.hint}}" class="hint-desc info">{{item.ext.hint}}</view>
		</block>

	</block>
</block>

<cmpt-modal model:show="{{showCheckModal}}" type="longdialog" title="请核对填写的信息" bind:click="bindSubmitCmpt" class="modal-check-info" slot-class="slot-class" cancelText="返回修改" confirmText="确认提交">

	<view class="item" wx:for="{{forms}}" wx:key="key">
		<view class="title">{{item.title}}：</view>
		<view class="content" wx:if="{{item.val===true|| item.val===false}}">{{item.val?'是':'否'}}</view>
		<view class="content" wx:else>{{item.val}}</view>
	</view>
</cmpt-modal>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\form_show_cmpt.wxss
--------------------------------------------------
.form-group .picker-base {
	flex: 1;
	text-align: right;
	height: 60rpx;
	line-height: 60rpx;
}

.form-group .picker-select {
	padding-right: 40rpx;
	overflow: hidden;
	position: relative;
}

.form-group .phone-text {
	font-size: 30rpx;
	color: #555;
	flex: 1;
	text-align: left;
}

.form-group .title {
	height: unset !important;
	min-height: 60rpx;
}

.form-group.memo {
	min-height: unset; 
	padding:15rpx 30rpx;
	font-size: 24rpx;
	color:#777;
}

.form-group-line {
	width: 100%;
	padding: 1rpx 30rpx;
	display: flex;
	align-items: center;
	min-height: 100rpx;
	justify-content: center;
	position: relative;
	color: #888;
	font-size: 28rpx;
	margin-top: 10rpx;
}

/* 展示型 */
.form-group-show {
	display: flex;
	align-items: flex-start;
}

.form-group-show .form-group-show-text {
	flex: 1;
	padding: 0rpx 0rpx;
	text-align: left;
	display: flex;
	flex-wrap: wrap;
	min-height: 60rpx;
	align-items: center;
}

.form-group-show .form-group-show-img {
	width: 100rpx;
	height: 100rpx;
	margin-right: 10rpx;
	margin-bottom: 10rpx;
	border-radius: 5rpx;
}




/* 核对信息窗口 */
.modal-check-info {
	width: 100%;
}

.slot-class {
	padding: 0 20rpx 30rpx;
}

.modal-check-info .item {
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	line-height: 1.8;
	font-size: 30rpx;
	border-bottom: 1rpx dotted #ddd;
	color: #000;
	padding: 10rpx 10rpx;
}

.modal-check-info .item:nth-child(odd) {
	background-color: #f8f8f8;
}

.modal-check-info .item:last-child {
	border-bottom: 0rpx;
}

.modal-check-info .item .title {
	font-weight: bold;
	max-width: 150rpx;
	margin-right: 20rpx;
	text-align: left;
}

.modal-check-info .item .content {
	flex: 1;
	color: #333;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	text-align: left;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\content\form_show_content.js
--------------------------------------------------
const pageHelper = require('../../../../../helper/page_helper.js');
const helper = require('../../../../../helper/helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		formContent: [{
			type: 'text',
			val: '',
		}],

		cmptId: '', // 父页面editor或者rows控件id
		cmptFormName: '', // 父页面show-content对应表单的名字或者索引

		cmptParentId: '', //父页面包含rows控件的控件id

		upDirectDir: '',//直接上传的目录
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {

		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;

		if (!options) return;

		if (!helper.isDefined(options.cmptId) || !helper.isDefined(options.cmptFormName)) return;
		let cmptId = '#' + options.cmptId;
		let cmptFormName = options.cmptFormName;

		// 父父页面控件id
		let cmptParentId = '';
		if (options.cmptParentId) cmptParentId = '#' + options.cmptParentId;
 
		let formContent = [];
		if (!cmptParentId)
			formContent = parent.selectComponent(cmptId).getOneFormVal(cmptFormName);
		else
			formContent = parent.selectComponent(cmptParentId).selectComponent(cmptId).getOneFormVal(cmptFormName);

		if (formContent.length == 0) {
			formContent = [{ type: 'text', val: '' }];
		}

		this.setData({
			cmptId,
			cmptFormName,
			cmptParentId,

			formContent
		});

		// 直接上传 与IS_DEMO结合使用
		if (options.upDirectDir) {
			this.setData({
				upDirectDir: options.upDirectDir
			});
		} 

		let curPage = pageHelper.getPrevPage(1);
		if (!curPage) return;
		if (curPage.options && curPage.options.source == 'admin') {
			wx.setNavigationBarColor({ //管理端顶部
				backgroundColor: '#2499f2',
				frontColor: '#ffffff',
			});
		}

	},




	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {

	},

	model: function (e) {
		pageHelper.model(this, e);
	},


	url: function (e) {
		pageHelper.url(e, this);
	},

	bindSaveTap: function (e) {
		// 获取富文本，如果没填写则为[]
		let formContent = this.selectComponent("#contentEditor").getNodeList();

		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;

		if (!this.data.cmptParentId)
		parent.selectComponent(this.data.cmptId).setOneFormVal(this.data.cmptFormName, formContent);
		else
			parent.selectComponent(this.data.cmptParentId).selectComponent(this.data.cmptId).setOneFormVal(this.data.cmptFormName, formContent);

		wx.navigateBack();
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\content\form_show_content.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-editor": "/cmpts/public/editor/editor_cmpt"
	}, 
	"navigationBarTitleText": "详细内容"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\content\form_show_content.wxml
--------------------------------------------------
<view class="main-admin">
	<view class="form-box shadow">
		<view class="form-group" style="width: 100%;">
			<cmpt-editor nodeList="{{formContent}}" upDirectDir="{{upDirectDir}}" viewMode="{{true}}" style="width: 100%;" id="contentEditor"></cmpt-editor>
		</view>
	</view>
</view>

<view class="btn-bottom-admin">
	<view bindtap="url" data-type="back" class="return">不保存,返回</view>
	<view bindtap="bindSaveTap" class="save">保存</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\form\form_show\content\form_show_content.wxss
--------------------------------------------------
@import '../../../../../style/public/admin.wxss';

.main-admin {
	width: 100%;
	box-sizing: border-box;
	padding: 30rpx 20rpx;
	padding-bottom: 200rpx;
}

.form-group {
	padding: 1rpx 1rpx;
	overflow: hidden;
}

.oprt {
	display: flex;
	width: 100%;
	justify-content: space-around;
}

.oprt button {
	width: 45%;
}

.bottom-oprt {
	position: fixed;
	bottom: 0;
	height: 130rpx;
	background-color: #f8f8f8;
	display: flex;
	justify-content: space-around;
	align-items: center;
	border-top: 1rpx solid #ccc;
	z-index: 99999;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\img\img_upload_cmpt.js
--------------------------------------------------
﻿const pageHelper = require('../../../helper/page_helper.js');
const contentCheckHelper = require('../../../helper/content_check_helper.js');
const setting = require('../../../setting/setting.js');

Component({
	options: {
		addGlobalClass: true
	},
	
	/**
	 * 组件的属性列表
	 */
	properties: {
		imgList: {
			type: Array,
			value: []

		},
		imgMax: {
			type: Number,
			value: 4,
		},
		title: {
			type: String,
			value: '图片上传',
		},
		must: { //是否必填
			type: Boolean,
			value: true,
		},
		isCheck: { //是否做图片内容校验
			type: Boolean,
			value: true,
		},
		isShowNo: { //是否显示序号
			type: Boolean,
			value: false,
		},
		imgUploadSize: { //图片最大大小
			type: Number,
			value: setting.IMG_UPLOAD_SIZE,
		},
		isShowSize: { //是否提示图片尺寸
			type: Boolean,
			value: true,
		}
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		//imgList:[]
	},


	/**
	 * 生命周期方法
	 */
	lifetimes: {
		attached: function () {

		},

		ready: function () {

		},
		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		/**
		 * 选择上传图片 
		 */
		bindChooseImgTap: function (e) {
			wx.chooseMedia({
				count: this.data.imgMax - this.data.imgList.length, //默认9
				mediaType: ['image'],
				sizeType: ['compressed'], //可以指定是原图还是压缩图，默认二者都有
				sourceType: ['album', 'camera'], //从相册选择
				success: async (res) => {
					 

					for (let k = 0; k < res.tempFiles.length; k++) {
						let size = res.tempFiles[k].size;
						let path = res.tempFiles[k].tempFilePath;
						if (!contentCheckHelper.imgTypeCheck(path)) {
							wx.hideLoading();
							return pageHelper.showNoneToast('只能上传png、jpg、jpeg格式', 3000);
						}

						let imageMaxSize = 1024 * 1000 * this.data.imgUploadSize;
						if (!contentCheckHelper.imgSizeCheck(size, imageMaxSize)) {
							wx.hideLoading();
							return pageHelper.showNoneToast('单张图片大小不能超过 ' + this.data.imgUploadSize + 'M', 3000);
						}


						//  读取文件流，云校验 
						//let imgData = wx.getFileSystemManager().readFileSync(path, 'base64');

						//console.log('imgData size=' + imgData.length);

						if (this.data.isCheck) {
							let check = await contentCheckHelper.imgCheck(path);
							if (!check) {
								wx.hideLoading();
								return pageHelper.showNoneToast('存在不合适的图片, 已屏蔽', 3000);
							}
						}


						this.setData({
							imgList: this.data.imgList.concat(path)
						});
						this.triggerEvent('upload', this.data.imgList);

					}

				}
			});
		},

		bindPreviewImgTap: function (e) {
			wx.previewImage({
				urls: this.data.imgList,
				current: e.currentTarget.dataset.url
			});
		},

		/**
		 * 	删除图片 
		 */
		catchDelImgTap: function (e) {
			let that = this;
			let callback = function () {
				that.data.imgList.splice(e.currentTarget.dataset.index, 1);
				that.setData({
					imgList: that.data.imgList
				});
				that.triggerEvent('upload', that.data.imgList);
			}
			pageHelper.showConfirm('确定要删除该图片吗？', callback);
		},

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\img\img_upload_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\img\img_upload_cmpt.wxml
--------------------------------------------------
<view class="form-group">
	<view class="title"><text wx:if="{{must}}" class="text-red">*</text>{{title}} <text wx:if="{{isShowSize}}" class="text-gray text-normal">(每张不超过{{imgUploadSize}}M)</text>
	</view>
	<view class="action" wx:if="{{isShowSize&&imgMax>1}}">
		{{imgList.length}}/{{imgMax}}
	</view>
</view>
<view class="form-group padding">
		<view class="upload-img">
		<view class="bg-img" wx:for="{{imgList}}" wx:key="index" bindtap="bindPreviewImgTap" data-url="{{imgList[index]}}">
			<image src='{{imgList[index]}}' mode='aspectFill'></image>
			<view class="tag bg-red" catchtap="catchDelImgTap" data-index="{{index}}">
				<text class="icon-close"></text>
			</view>

			<view wx:if="{{isShowNo}}" class="bg-olive img-no">
				<text>#{{index}}</text>
			</view>
		</view>
		<view class="solid" bindtap="bindChooseImgTap" wx:if="{{imgList.length < imgMax}}">
			<text class="icon-cameraadd"></text>
		</view>
	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\img\img_upload_cmpt.wxss
--------------------------------------------------
@import "../../../style/base/comm.wxss"; 
@import "../../../style/public/project.wxss";  

.form-group .upload-img .img-no {
    position: absolute;
    right: 0;
    bottom: 0;
    border-top-left-radius: 6rpx;
    padding: 6rpx 12rpx;
    height: 35rpx;
    opacity: .9;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\list\comm_list_cmpt.js
--------------------------------------------------
const cloudHelper = require('../../../helper/cloud_helper.js');
const helper = require('../../../helper/helper.js');
const PublicBiz = require('../../../comm/biz/public_biz.js');
const pageHelper = require('../../../helper/page_helper.js');

Component({
	options: {
		addGlobalClass: true,
		pureDataPattern: /^_dataList/, // 指定所有 _ 开头的数据字段为纯数据字段
		multipleSlots: true // 在组件定义时的选项中启用多slot支持
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		doMonth: {
			type: Boolean,
			value: false
		},
		doDate: {
			type: Boolean,
			value: false
		},
		listHeight: { // 列表区高度
			type: String,
			value: ''
		},

		route: { // 业务路由
			type: String,
			value: ''
		},

		source: { // 来源 admin/user
			type: String,
			value: 'user'
		},

		_params: { // 路由的附加参数
			type: Object,
			value: null,
			observer: function (newVal, oldVal) { //TODO????
				if (!oldVal || !newVal) return; //页面data里赋值会引起触发，除非在组件标签里直接赋值,或者提前赋值

				// 清空当前选择
				if (newVal) {
					this.setData({
						pulldownMaskShow: false //返回去遮罩
					});
					this._fmtSearchData();
				}

				this.data._dataList = null;
				this.triggerEvent('list', { //TODO 考虑改为双向数据绑定model 
					dataList: this.data._dataList
				});
				this._getList(1);
			}
		},
		isTotalMenu: {
			type: Boolean, //是否整个搜索+菜单显示
			value: true
		},
		showSearch: {
			type: Boolean, //是否整个搜索框
			value: true
		},
		_items: { // 下拉菜单基础数据
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {
				if (newVal) this._fmtSearchData();
			}
		},
		_menus: { // 非下拉菜单基础数据 
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {
				if (newVal) this._fmtSearchData(); //置为纯数据字段则不触发
			}
		},
		_dataList: {
			type: Object,
			value: null
		},
		type: {
			type: String, //业务类型 info,user,well
			value: ''
		},
		placeholder: {
			type: String,
			value: '搜索关键字'
		},
		sortMenusDefaultIndex: {
			type: Number,
			value: -1 //横菜单默认选中的
		},
		search: {
			type: String, //搜索框关键字
			value: '',
			observer: function (newVal, oldVal) {
				// 清空当前选择
				if (newVal) {
					this.setData({
						pulldownMaskShow: false //返回去遮罩
					});
					this._fmtSearchData();
				}

				this.data._dataList = null;
				this.triggerEvent('list', { //TODO 考虑改为双向数据绑定model 
					dataList: this.data._dataList
				});
				this._getList(1);
			}
		},
		whereEx: {
			type: Object, // 附加查询条件
			value: null,
		},
		returnUrl: {
			type: String, // 搜索完返回页面
			value: '',
		},
		topBottom: {
			type: String, // 回顶部按钮的位置
			value: '50'
		},
		isCache: { // 非缓存状态下或者list缓存过期下onshow加载, 缓存下onload加载
			type: Boolean, //是否cache
			value: true
		},
		pulldownType: {
			type: Array, // 下拉菜单展示模式 list/modal 每个菜单一个
			value: ['list', 'list', 'list', 'list', 'list', 'list']
		},

		startDate: {
			type: String,
			value: ''
		},
		endDate: {
			type: String,
			value: ''
		},

	},

	/**
	 * 组件的初始数据
	 */
	data: {
		refresherTriggered: false, //下拉刷新是否完成

		sortItems: [], //下拉
		sortMenus: [], //一级菜单非下拉

		sortType: '', //回传的类型
		sortVal: '', //	回传的值

		sortItemIndex: -1,
		sortIndex: -1,

		topNum: 0, //回顶部
		topShow: false,

		pulldownMaskShow: false, //下拉菜单遮罩

	},

	lifetimes: {
		created: function () {
			// 组件实例化，但节点树还未导入，因此这时不能用setData
		},
		attached: function () {
			// 在组件实例进入页面节点树时执行 
			// 节点树完成，可以用setData渲染节点，但无法操作节点 
		},
		ready: async function () {

			// 组件布局完成，这时可以获取节点信息，也可以操作节点
			this._fmtSearchData();

			if (this.data.isCache) //缓存状态下加载
				await this._getList(1);

			//取得预置参数_params的选中状态 
			let params = this.data._params;
			if (params && params.sortType && helper.isDefined(params.sortVal)) { 
				let sortMenus = this.data._menus;
				for (let k = 0; k < sortMenus.length; k++) {
					if (params.sortType == sortMenus[k].type && params.sortVal == sortMenus[k].value) {
						this.setData({
							//sortType: sortMenus[k].type,
							//sortVal: sortMenus[k].value,
							sortMenusDefaultIndex: k
						});
						break;
					} 
				}
			}

		},
		move: function () {
			// 组件实例被移动到树的另一个位置
		},
		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	pageLifetimes: {
		async show() {
			// 页面被展示   
			if (!this.data.isCache || !PublicBiz.isCacheList(this.data.type)) {
				// 非缓存状态下或者 list缓存过期下加载
				await this._getList(1);
			}

		},
		hide() {
			// 页面被隐藏
		},
		resize(size) {
			// 页面尺寸变化
		}
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		reload: async function () {
			await this._getList(1);
		},
		// 数据列表
		_getList: async function (page) {
			let params = {
				page: page,
				...this.data._params
			};
			if (this.data.whereEx) params.whereEx = this.data.whereEx;

			// 搜索关键字
			if (this.data.search)
				params.search = this.data.search;

			// 日期or月份模式 
			if ((this.data.doDate || this.data.doMonth) && this.data.startDate && this.data.endDate) {
				params.search = this.data.startDate + '#' + this.data.endDate; 
			}

			// 搜索菜单
			if (this.data.sortType && helper.isDefined(this.data.sortVal)) {
				params.sortType = this.data.sortType;
				params.sortVal = this.data.sortVal;
			}

			//if (page == 1 && !this.data._dataList) { TODO???
			if (page == 1) {
				this.triggerEvent('list', {
					dataList: null //第一页面且没有数据提示加载中
				});
			}


			let opt = {};
			//if (this.data._dataList && this.data._dataList.list && this.data._dataList.list.length > 0)
			opt.title = 'bar';
			await cloudHelper.dataList(this, '_dataList', this.data.route, params, opt);

			this.triggerEvent('list', { //TODO 考虑改为双向数据绑定model
				sortType: this.data.sortType,
				dataList: this.data._dataList
			});

			if (this.data.isCache)
				PublicBiz.setCacheList(this.data.type);
			if (page == 1) this.bindTopTap();


		},

		bindReachBottom: function () {
			// 上拉触底 
			this._getList(this.data._dataList.page + 1);
		},

		bindPullDownRefresh: async function () {
			// 下拉刷新
			this.setData({
				refresherTriggered: true
			});
			await this._getList(1);
			this.setData({
				refresherTriggered: false
			});

		},

		/**
		 * 顶部位置
		 * @param {*} e 
		 */
		bindScrollTop: function (e) {
			if (e.detail.scrollTop > 100) {
				this.setData({
					topShow: true
				});
			} else {
				this.setData({
					topShow: false
				});
			}
		},

		/**
		 * 一键回到顶部
		 */
		bindTopTap: function () {
			this.setData({
				topNum: 0
			});
		},

		// 初始化搜索
		_fmtSearchData: function () {
			let data = {};
			let sortItems = [];
			let items = this.data._items;
			for (let k = 0; k < items.length; k++) {
				let item = {
					show: false,
					items: items[k]
				};
				sortItems.push(item);
			}
			data.sortItems = sortItems;
			data.sortMenus = this.data._menus;

			data.sortItemIndex = -1;
			data.sortIndex = -1;

			data.sortType = '';
			data.sortVal = '';
			this.setData(data);

		},

		/**
		 * 清除搜索条件
		 */
		bindSearchClearTap: function () {
			// 请求父页面清空搜索
			if (this.data.search) {
				this.triggerEvent('list', {
					search: ''
				});
			}
		},


		// 分类&排序一级菜单选择  
		bindSortTap: function (e) {
			let sortIndex = e.currentTarget.dataset.index;
			let sortItems = this.data.sortItems;

			// 横菜单默认选中取消 TODO
			/*
			this.setData({
				sortMenusDefaultIndex: -1
			});*/

			// 换了下拉菜单
			let sortItemIndex = (sortIndex != this.data.sortIndex) ? -1 : this.data.sortItemIndex;

			if (sortIndex < 5) {
				let pulldownMaskShow = this.data.pulldownMaskShow;

				// 有下拉
				for (let i = 0; i < sortItems.length; i++) {
					if (i != sortIndex)
						sortItems[i].show = false;
					else {
						sortItems[i].show = !sortItems[i].show;
						pulldownMaskShow = sortItems[i].show;
					}

				}
				this.setData({
					pulldownMaskShow, //遮罩

					sortItems,
					sortIndex,
					sortItemIndex
				});
			} else {
				//无下拉
				for (let i = 0; i < sortItems.length; i++) {
					sortItems[i].show = false;
				}
				this.setData({
					pulldownMaskShow: false,
					sortItems,
					sortIndex,
					sortItemIndex
				});

				this._getSortKey();
			}
		},

		/**
		 * 下拉菜单选择
		 */
		bindSortItemTap: function (e) {
			let sortItemIndex = e.target.dataset.idx;
			if (!sortItemIndex) sortItemIndex = 0; // #46
			let sortItems = this.data.sortItems;
			for (let i = 0; i < sortItems.length; i++) {
				sortItems[i].show = false;
			}
			this.setData({
				pulldownMaskShow: false,
				sortItemIndex,
				sortItems
			});
			this._getSortKey();

		},

		// 获得排序关键字
		_getSortKey: function () {
			let sortVal = '';
			let sortType = '';

			let oldSortVal = this.data.sortVal;
			let oldSortType = this.data.sortType;

			if (this.data.sortIndex < 5) {
				sortVal = this.data.sortItems[this.data.sortIndex].items[this.data.sortItemIndex].value;
				sortType = this.data.sortItems[this.data.sortIndex].items[this.data.sortItemIndex].type;
			} else {
				sortVal = this.data.sortMenus[this.data.sortIndex - 5].value;
				sortType = this.data.sortMenus[this.data.sortIndex - 5].type;
			}
			this.setData({
				sortVal,
				sortType
			});

			if (sortVal != oldSortVal || sortType != oldSortType) {
				// 点击分类 

				if (this.data.startDate || this.data.endDate) {
					this.setData({
						startDate: '',
						endDate: ''
					});
				}
				if (this.data.search) {
					//清空搜索
					this.triggerEvent('list', {
						search: ''
					});
				} else
					this._getList(1);

			}

		},

		// 搜索跳转
		bindSearchTap: function (e) {
			wx.navigateTo({
				url: pageHelper.fmtURLByPID('/pages/search/search?source=' + this.data.source + '&type=' + this.data.type + '&returnUrl=' + this.data.returnUrl)
			});
		},

		getSortIndex: function () { //获得横向菜单
			return this.data.sortIndex;
		},
		setSortIndex: function (sortIndex) { //设置横向菜单
			this.setData({
				sortIndex
			});
		},

		bindDateStartChange(e) {
			this.setData({
				startDate: e.detail.value,
			});
		},
		bindDateEndChange(e) {
			this.setData({
				endDate: e.detail.value,
			});
		},
		bindDateSearchTap: function (e) {
			if (this.data.doDate) {
			if (!this.data.startDate.includes('-')) return pageHelper.showNoneToast('请选择开始日期');
			if (!this.data.endDate.includes('-')) return pageHelper.showNoneToast('请选择结束日期');
			}
			else if (this.data.doMonth) {
				if (!this.data.startDate.includes('-')) return pageHelper.showNoneToast('请选择开始月份');
				if (!this.data.endDate.includes('-')) return pageHelper.showNoneToast('请选择结束月份');
			}


			let search = this.data.startDate + '#' + this.data.endDate;
			this.setData({
				search
			})
			this._getList(1);
		},
		bindDateClearTap: function (e) {
			this.setData({
				startDate: '',
				endDate: '',
			});
			if (this.data.search) {
				this.setData({
					search: ''
				});
			}

		},
		setParams: function (params) {
			// 通过外部一次性注入查询条件，不始终带着，如果是在组件传_params，则一直带着
			this.data.sortType = params.sortType;
			this.data.sortVal = params.sortVal;
			this.reload();
		}

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\list\comm_list_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\list\comm_list_cmpt.wxml
--------------------------------------------------
<view class="top_bar bar search fixed flex-direction" wx:if="{{isTotalMenu}}" style="{{!showSearch?'min-height:80rpx':''}}">
	<!-- search form BEGIN -->
	<view wx:if="{{showSearch}}" class="bar search bg-white " style="width:100%">
		<view class="search-date" wx:if="{{doDate}}">
			<!--<view class="date-title">日期:</view>-->
			<!-- 时间段 -->
			<view class="date-group">
				<picker mode="date" model:value="{{startDate}}" class="search-date-picker">
					<view class="picker">
						<text class="{{!startDate?'text-line1':'text-line2'}}">{{startDate||'开始日期'}}</text>
					</view>
				</picker>
				<text class="text-line1">~</text>
				<picker mode="date" model:value="{{endDate}}">
					<view class="picker">
						<text class="{{!endDate ?'text-line1':'text-line2'}}">{{endDate||'结束日期'}}</text>
					</view>
				</picker>
			</view>
			<view bindtap="bindDateSearchTap" class="date-btn btn mid bg-gray margin-left-xs" style="width:130rpx">搜索</view>
			<view bindtap="bindDateClearTap" class="date-btn btn mid bg-grey light margin-left-xs" style="width:130rpx">清空</view>
		</view>
		<view class="search-date" wx:elif="{{doMonth}}">
			<!--<view class="date-title">日期:</view>-->
			<!-- 时间段 -->
			<view class="date-group">
				<picker mode="date" fields="month" model:value="{{startDate}}" class="search-date-picker">
					<view class="picker">
						<text class="{{!startDate?'text-line1':'text-line2'}}">{{startDate||'开始月份'}}</text>
					</view>
				</picker>
				<text class="text-line1">~</text>
				<picker mode="date" fields="month" model:value="{{endDate}}">
					<view class="picker">
						<text class="{{!endDate ?'text-line1':'text-line2'}}">{{endDate||'结束月份'}}</text>
					</view>
				</picker>
			</view>
			<view bindtap="bindDateSearchTap" class="date-btn btn mid bg-gray margin-left-xs" style="width:130rpx">搜索</view>
			<view bindtap="bindDateClearTap" class="date-btn btn mid bg-grey light margin-left-xs" style="width:130rpx">清空</view>
		</view>
		<slot name="searchStart" />
		<view class="search-form round" wx:if="{{!doDate && !doMonth}}">
			<text class="icon-search text-l text-grey"></text>
			<input type="text" maxlength="30" value="{{search}}" placeholder="{{placeholder}}" disabled='true' bindtap="bindSearchTap"></input>
			<view wx:if="{{search}}" class="text-xl" bindtap="bindSearchClearTap">
				<text class="icon-roundclose text-right  text-gray"></text>
			</view>
		</view>
		<slot name="searchEnd" />
	</view>
	<!-- search form END-->

	<!-- sort begin-->
	<view class='tabs bg-white' style="width:100%;padding:0 20rpx;" wx:if="{{sortItems.length || sortMenus.length}}">
		<!-- pulldown menu begin-->
		<view wx:for="{{sortItems}}" wx:key="key" bindtap='bindSortTap' class="tab {{sortIndex == index ? 'text-orange cur  ' : ''}} " data-index="{{index}}">
			<text class="pulldown-text">{{ index==sortIndex && item.items[sortItemIndex] ? item.items[sortItemIndex].label: item.items[0].label}}</text>
			<text class="icon-{{item.show?'fold':'unfold'}} large text-black"></text>
		</view>
		<!-- pulldown menu end-->

		<!-- sort menu begin-->
		<scroll-view scroll-left="0" scroll-x="true"  style="white-space: nowrap;width:100%;overflow:scroll">
			<view  bindtap="bindSortTap"  wx:for="{{sortMenus}}" wx:key="key" class="list-scroll-view tab tab-menu {{sortIndex == index+5 ||(sortMenusDefaultIndex == index && !search && sortIndex == -1) ? 'text-orange cur ' : ''}}  " data-index="{{index+5}}">{{item.label}}</view>
			<!--<text class="icon-filter" style="position: fixed;right: 10rpx;padding-left:10rpx;background-color: #fff;"></text>-->
		</scroll-view>
		<!-- sort menu end-->

		<slot name="menuEnd" />

		<!-- pulldown detail [LIST] begin-->  
		<block wx:if="{{pulldownType[index]=='list'}}" wx:for="{{sortItems}}" wx:for-index="index" wx:key="key"> 
			<view class='sort' catchtouchmove="move" bindtap='bindSortItemTap' wx:if="{{item.show}}">
				<scroll-view class="pulldown-scroll-view"  scroll-y="{{true}}" scroll-into-view="pulldown-{{sortIndex}}-{{sortItemIndex-9}}">
					<view id="pulldown-{{index}}-{{idx}}" class="sort-item  {{idx == sortItemIndex && index == sortIndex ? 'text-orange cur' : ''}}  " wx:for="{{item.items}}" wx:key="key" wx:for-item="its" data-idx="{{idx}}" wx:key="key" wx:for-index="idx"><text wx:if="{{idx==0}}">全部</text>{{its.label}}</view>
				</scroll-view>
			</view> 
		</block>  
		<!-- pulldown detail [LIST] end-->

	</view>
	<!-- sort end -->

</view>

<!-- content begin -->
<view wx:if="{{!isTotalMenu}}" class="box-list" style="height:{{listHeight?listHeight:'(100vh)'}};margin-top:0rpx;">
	<scroll-view    refresher-enabled="true" refresher-triggered="{{refresherTriggered}}" scroll-y="true" class="box-list-scroll" bindrefresherrefresh='bindPullDownRefresh' bindscrolltolower='bindReachBottom' scroll-top='{{topNum}}' bindscroll="bindScrollTop">
		<slot  />  
	</scroll-view>
</view>

<!--带搜索框-->
<view wx:if="{{isTotalMenu&&showSearch}}" class="box-list" style="height:calc(100vh - {{(!sortItems.length && !sortMenus.length)? '110' : '190'}}rpx);margin-top:{{(!sortItems.length && !sortMenus.length)? '110' : '190'}}rpx">
	<scroll-view refresher-enabled="true" refresher-triggered="{{refresherTriggered}}" scroll-y="true" class="box-list-scroll" bindrefresherrefresh='bindPullDownRefresh' bindscrolltolower='bindReachBottom' scroll-top='{{topNum}}' bindscroll="bindScrollTop">
		<slot />
	</scroll-view>
</view>
<!--不带搜索框-->
<view wx:if="{{isTotalMenu&&!showSearch}}" class="box-list" style="height:calc(100vh - {{(!sortItems.length && !sortMenus.length)? '50' : '80'}}rpx);margin-top:{{(!sortItems.length && !sortMenus.length)? '50' : '80'}}rpx">
	<scroll-view  refresher-enabled="true" refresher-triggered="{{refresherTriggered}}" scroll-y="true" class="box-list-scroll" bindrefresherrefresh='bindPullDownRefresh' bindscrolltolower='bindReachBottom' scroll-top='{{topNum}}' bindscroll="bindScrollTop">
		<slot  />    
	</scroll-view>
</view>
<!-- content END -->
  
<!-- top begin -->
<button wx:if="{{topShow}}"  class="btn-fixed bg-gray text-gray btn-top" bindtap="bindTopTap" style="bottom:{{topBottom}}rpx;margin-bottom: constant(safe-area-inset-bottom);margin-bottom: env(safe-area-inset-bottom);"><text class="icon-top"></text></button>
<!-- top END. -->

<!-- pulldown detail [modal] begin-->  
<block wx:if="{{pulldownType[index]=='modal'}}" wx:for="{{sortItems}}" wx:for-index="index" wx:key="key">
<view class="modal bottom-modal show"   wx:if="{{item.show}}" >
  <view class="dialog" >
    <view class="bar bg-white">
      <view class="action text-blue" bindtap="bindSortTap" data-index="{{index}}" >取消</view>
				<view class="action text-green" style="font-size:30rpx;" bindtap="bindSortTap" data-index="{{index}}">确定</view>
    </view>
    <view class="grid col-3 padding-sm" style="margin-bottom:120rpx;">
      <view wx:for="{{item.items}}" wx:key="key" wx:for-item="its"  wx:key="key" wx:for-index="idx" class="padding-xs">
        <button  bindtap='bindSortItemTap' data-idx="{{idx}}" class="pulldown-btn btn lg block {{idx == sortItemIndex && index == sortIndex?'bg-orange light border-orange':''}}"   data-value="{{item.value}}"> <text wx:if="{{idx==0}}">全部</text>{{its.label}}  
        </button>
      </view>
    </view>
  </view>
</view>
</block>
<!-- pulldown detail [modal] END-->  

<!--### MASK ###-->
<view class="pulldown-mask" hidden="{{!pulldownMaskShow}}"></view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\list\comm_list_cmpt.wxss
--------------------------------------------------
/*sort*/
.tabs {
	display: flex;
	align-items: center;
	justify-content: flex-start;
	font-size: 28rpx;
	color: #aaa;
	height: 80rpx;
	line-height: 80rpx;
}

.tabs .tab {
	flex-grow: 1;
	text-align: center;
	position: relative;
	margin-right: 10rpx;
	font-size: 28rpx;
	color: #000;
}

.tabs .cur {
	font-weight: bold;
}

.tabs .tab-menu.cur:after {
	content: " ";
	position: absolute;
	left: 50%;
	bottom: 0rpx;
	width: 50%;
	height: 6rpx;
	border-radius: 2rpx;
	background-color: orange;
	transform: translateX(-50%)
}

.tabs .icon {
	color: #000;
}


.sort {
	position: absolute;
	top: 178rpx;
	bottom: 0;
	width: 100%;
	background-color: rgba(188, 188, 188, 0.3);
	z-index: 999;
	left: 0
}

.sort .sort-item {
	border-top: 1px solid #eee;
	height: 80rpx;
	line-height: 80rpx;
	padding-left: 50rpx;
	background-color: #fff;
}


/**头部*/
.top_bar {
	width: 100%;
}

.top_bar_scroll {
	position: fixed;
	top: 0rpx;
	left: 0;
	z-index: 99;
	background: #fff;

	z-index: 999;
}

.box-list {
	display: flex;
	flex-direction: column;
	height: 100vh;
	overflow: hidden;
}

.box-list-scroll {
	flex: 1;
	height: 1px;
}


.top-button {
	position: fixed;
	bottom: 50rpx;
	right: 30rpx;
	opacity: .8;
}

.list-scroll-view {
	display: inline-block;
	padding: 0 10rpx;
}

.pulldown-mask {
	width: 100%;
	height: 100%;
	position: fixed;
	background-color: #999;
	top: 0;
	left: 0;
	opacity: 0.5;
}

.pulldown-scroll-view {
	height: 840rpx;
	width: 100%;
}

.pulldown-btn {
	font-size: 28rpx;
	color: #333 !important;
	height: 100rpx;
	width: 200rpx;
	line-height: 1.3;
	padding: 0 15rpx;
}

/* date */
.search-date {
	width:100%;
	display: flex;
	align-items: center;
	padding: 0 20rpx;
}

.search-date .date-title {
	font-size: 28rpx;
	margin-right: 8rpx;
}

.search-date .date-group {
	color: #888;
	border: 1rpx solid #A4A6AE;
	border-radius: 10rpx;
	display: flex;
	align-items: center;
	justify-content: space-between;
	padding: 5rpx 20rpx;
	font-size: 29rpx;
}

.search-date .text-line1 {
	color: #A4A6AE;
	margin: 0 18rpx;
}

.search-date .text-line2 {
	color: rgb(0, 0, 0, 0.8);
}

.search-date .search-date-picker {
	width: 150rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\modal\modal_cmpt.js
--------------------------------------------------
// cmpts/public/modal/modal.js
Component({
	options: {
		addGlobalClass: true,
		multipleSlots: true
	},

	externalClasses: ['slot-class'],

	/**
	 * 组件的属性列表
	 */
	properties: {
		type: { // 类型 comm/bottom/dialog/image
			type: String,
			value: 'comm'
		},
		title: {
			type: String,
			value: '温馨提示'
		},
		subtitle: {
			type: String,
			value: ''
		},
		subtitleAlign: {
			type: String,
			value: 'center'
		},
		show: {
			type: Boolean,
			value: true
		},
		cancelText: {
			type: String,
			value: '取消'
		},
		confirmText: {
			type: String,
			value: '确定'
		},
		showConfirm: {
			type: Boolean,
			value: true
		},
		imgURL: {
			type: String,
			value: ''
		},

		height: {
			type: Number,
			value: 600
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		bindHideModalTap: function (e) {
			this.setData({
				show: ''
			})
		},

		nomove: function () {},

		bindComfirmTap: function (e) {
			this.triggerEvent('click', {});
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\modal\modal_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\modal\modal_cmpt.wxml
--------------------------------------------------
<!-- 普通窗口 begin -->
<view wx:if="{{type=='comm'}}" class="modal {{show?'show':''}}">
	<view class="dialog">
		<view class="bar bg-white justify-end">
			<view class="content">{{title}}</view>
			<view class="action" bindtap="bindHideModalTap">
				<text class="icon-close text-red"></text>
			</view>
		</view>
		<view class="padding-xl">
			<slot />
		</view>
	</view>
</view>
<!-- 普通窗口 end -->

<!--底部窗口 begin-->
<view wx:if="{{type=='bottom'}}" class="modal bottom-modal {{show?'show':''}}">
	<view class="dialog">
		<view class="bar bg-white">
			<view class="action text-gray text-xl" bindtap="bindHideModalTap">取消</view>
			<view class="action text-green text-modal text-xl" bindtap="bindComfirmTap">确定</view>
		</view>
		<view class="padding-xl ">
			<slot />
		</view>
	</view>
</view>
<!--底部窗口 end-->


<!-- 对话窗口 begin -->
<view wx:if="{{type=='dialog'}}" class="modal {{show?'show':''}}" catchtouchmove="nomove">
	<view class="dialog modal-dialog">
		<view class="bar bg-white justify-end" wx:if="{{title}}">
			<view class="content">{{title}}</view> 
		</view>

		<view wx:if="{{subtitle}}" class="subtitle" style="text-align:{{subtitleAlign}}">{{subtitle}}</view> 

		<view class="padding-xl slot-class" style="padding-top:0">
			<slot />
		</view>
		<view class="modal-bar"> 
			<view class="modal-bar-view" bindtap="bindHideModalTap">{{cancelText}}</view>
			<view wx:if="{{showConfirm}}" class="modal-bar-view modal-bar-comfirm" bindtap="bindComfirmTap">{{confirmText}}</view> 
		</view>
	</view>
</view>
<!-- 对话窗口 end -->

<!-- 可能超长的对话窗口 begin -->
<view wx:if="{{type=='longdialog'}}" class="modal {{show?'show':''}}" >
	<view class="dialog modal-dialog">
		<view class="bar bg-white justify-end" wx:if="{{title}}">
			<view class="content">{{title}}</view> 
		</view>

		<view wx:if="{{subtitle}}" class="subtitle" style="text-align:{{subtitleAlign}}">{{subtitle}}</view> 

		<view class="padding-xl slot-class" style="padding-top:0">
			<slot />
		</view>
		<view class="modal-bar"> 
			<view class="modal-bar-view" bindtap="bindHideModalTap">{{cancelText}}</view>
			<view wx:if="{{showConfirm}}" class="modal-bar-view modal-bar-comfirm" bindtap="bindComfirmTap">{{confirmText}}</view> 
		</view>
	</view>
</view>
<!-- 可能超长的对话窗口 end -->


<!-- 图片窗口 begin -->
<view wx:if="{{type=='image'}}" class="modal  {{show?'show':''}}">
	<view class="dialog">
		<view class="bg-img" style="height:{{height}}rpx;">
			<image class="bg-img-image" mode="aspectFill" src="{{imgURL}}"></image>
			<view class="bar justify-end text-white">
				<view class="action" bindtap="bindHideModalTap">
					<text class="icon-close"></text>
				</view>
			</view>
		</view>
		<view class="bar bg-white" wx:if="{{title}}">
			<view class="action margin-0 flex-sub">{{title}}</view>
		</view>
	</view>
</view>
<!-- 图片窗口 end -->
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\modal\modal_cmpt.wxss
--------------------------------------------------
.bg-img {
	width: 100%;
	height: 100%;
	position: relative;
}

.bg-img .bg-img-image {
	top: 0;
	left: 0;
	position: absolute;
	width: 100%;
	height: 100%;
}

.bg-img .action .icon-close {
	font-size: 50rpx !important;
	font-weight: bold;
} 

.modal .dialog {
	padding: 20rpx 0rpx; 
	margin-top:30rpx; 
}

.modal .dialog .bar {
	background-color: #f8f8f8;
}

.modal .dialog .bar .content {
	color: #333;
	font-size: 36rpx; 
}

.modal-bar {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	border-top: 1rpx solid #ccc;
	line-height: 3;
}

.modal-bar .modal-bar-view {
	width: 50%;
	font-size: 36rpx;
	font-weight: bold;
}

.modal-bar .modal-bar-comfirm {
	color: #576B95;
	border-left: 1rpx solid #ccc;
}

.modal .modal-dialog {
	padding: 10rpx 0rpx 0;
}

.modal .modal-dialog .subtitle {
	width:100%;
	text-align: center;
	font-size:30rpx;
	color:#777;
	padding:0 60rpx;
	margin-top:10rpx;
	margin-bottom:20rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker\picker_cmpt.js
--------------------------------------------------
const helper = require('../../../helper/helper.js');
const dataHelper = require('../../../helper/data_helper.js');
const pageHelper = require('../../../helper/page_helper.js');

Component({
	externalClasses: ['outside-picker-class'],

	options: {
		addGlobalClass: true, 
	},

	/**
	 * 一维格式： 可以通过model返回
	 * 对象格式： {label:'对象A',val:'5'}, {label:'对象B',val:'12'}, {label:'对象C',val:'99'}
	 * 简单形式：['形式1','形式2','形式33'] 
	 * 字符串形式
	 */

	/**
	 * N维格式： 只能通过trigger返回
	 * 对象格式： {label:'对象A',val:'5'}, {label:'对象B',val:'12'}, {label:'对象C',val:'99'}
	 * 简单形式：['形式1','形式2','形式33'] 
	 * 
	 */
	properties: {
		mark: {
			type: String,
			value: '',
		},
		isSlot: { //是否开启slot
			type: Boolean,
			value: false,
		},
		sourceData: { //源数组，sourceData有几维，Picker就可以有几阶 简单形式待选项,,,
			type: Array,
			value: [],
		},

		sourceDataStr: { //源数组，sourceData有几维，Picker就可以有几阶 简单形式待选项,,,
			type: String,
			value: '',
		},

		// key
		labelKey: {
			type: String,
			value: ''
		},

		// 阶数
		steps: {
			type: Number,
			value: 1
		},

		noDataHint: { // 无数据的提示语
			type: String,
			value: '请选择',
		},

		// 选中项的下标数组 1维
		index: {
			type: Number,
			value: 0
		},
		// 选中项的下标数组 N维
		indexMulti: {
			type: Array,
			value: []
		},
		// 默认选中项的值数组 1维
		item: {
			type: String,
			value: '',
			observer: function (newVal, oldVal) {
				//	console.log('one observer', this.data.mark);
				if (newVal != oldVal) {
					let options = this.data.options;
					if (!options || options.length == 0) this._init();
					if (options && options.length > 0) this.selected(newVal);
				}
			}
		},
		// 默认选中项的值数组 N维
		itemMulti: {
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {
				//	console.log('multi observer', this.data.mark);
				if (JSON.stringify(newVal) != JSON.stringify(oldVal)) {
					let options = this.data.options;
					if (!options || options.length == 0) this._init();
					if (options && options.length > 0) this.selected(newVal);
				}
			}
		},

		// 是否禁用
		disabled: {
			type: Boolean,
			value: false,
		},

		disabledHint: { //  禁用提示
			type: String,
			value: '',
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		options: null,
		idx: 0,
		multiDesc: '', // 多选的显示文字
	},

	/**
	 * 生命周期方法
	 */
	lifetimes: {
		attached: function () { },

		ready: function () {
			if (!this.data.options || this.data.options.length == 0) this._init();
		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		_init: function () {
			let sourceData = this.data.sourceData;
			let labelKey = this.data.labelKey;
			let idx = this.data.idx;

			// 字符串形式
			if (this.data.steps == 1 &&
				this.data.sourceDataStr &&
				(!sourceData || sourceData.length == 0)
			) {
				sourceData = dataHelper.getSelectOptions(this.data.sourceDataStr);
				this.setData({
					sourceData
				});
			}
			if (!sourceData || sourceData.length == 0) return;

			if (this.data.steps == 1) {
				if (sourceData.length > 0 && helper.isDefined(sourceData[0]['label'])) {
					labelKey = 'label';
				}
				idx = this.data.index;
			} else if (this.data.steps > 1) {
				if (sourceData.length > 0 && helper.isDefined(sourceData[0][0]['label'])) {
					labelKey = 'label';
				}
				idx = this.data.indexMulti;
			}

			this.setData({
				idx,
				labelKey,
				options: sourceData
			});
			this._getMultiDesc();

			if (this.data.steps == 1)
				this.selected(this.data.item);
			else
				this.selected(this.data.itemMulti);
		},

		_getMultiDesc: function () {
			let idx = this.data.idx;
			let options = this.data.options;
			if (idx.length != options.length) return;

			let multiDesc = [];
			if (this.data.labelKey) {
				for (let k = 0; k < options.length; k++) {
					multiDesc[k] = options[k][idx[k]].label;
				}
			} else {
				for (let k = 0; k < options.length; k++) {
					multiDesc[k] = options[k][idx[k]];
				}
			}
			this.setData({
				multiDesc
			});
		},

		bindTap: function (e) { // 点击行为
			if (this.data.disabled && this.data.disabledHint) {
				pageHelper.showModal(this.data.disabledHint, '提示', null, '知道了');
			}
		},



		// 触发改变
		bindChange: function (e) {
			let idx = e.detail.value;
			let val = null;

			if (this.data.steps == 1) {
				val = this.data.labelKey ? this.data.options[idx].val : this.data.options[idx];
				this.setData({
					item: val,
					index: idx
				});
			} else {
				val = [];
				let options = this.data.options;
				if (this.data.labelKey) {
					for (let k = 0; k < options.length; k++) {
						val[k] = options[k][idx[k]].val;
					}
				} else {
					for (let k = 0; k < options.length; k++) {
						val[k] = options[k][idx[k]];
					}
				}
				this._getMultiDesc();
			}

			this.triggerEvent('select', val);
		},

		// 一维数组根据val获取lable
		getLabelOneStep: function (val) {
			for (let k = 0; k < this.data.sourceData.length; k++) {
				if (this.data.sourceData[k].val == val) return this.data.sourceData[k].label;
			}
			return 'unknown';
		},

		// 选中值 
		selected: function (val) {
			let options = this.data.options;
			let labelKey = this.data.labelKey;
			if (this.data.steps == 1) {
				for (let k = 0; k < options.length; k++) {
					if (labelKey && val == options[k].val) {
						this.setData({
							idx: k
						});
						return;
					} else if (!labelKey && val == options[k]) {

						this.setData({
							idx: k
						});
						return;
					}
				}
				this.setData({
					idx: -1
				});

				//传入数据不匹配的时候，修正父页面传入的的默认值
				this.triggerEvent('select', '');

			} else if (this.data.steps > 1) {
				let idx = [];
				for (let k = 0; k < options.length; k++) {
					let levelTwo = options[k];
					for (let j in levelTwo) {
						if (labelKey && val[k] == options[k][j].val) {
							idx.push(j);
						} else if (!labelKey && val[k] == options[k][j]) {
							idx.push(j);
						}
					}
				}

				if (idx.length != options.length) idx = [];
				this.setData({
					idx
				});
				this._getMultiDesc();

				//传入数据不匹配的时候，修正父页面传入的的数组默认值 TODO
			}


		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker\picker_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker\picker_cmpt.wxml
--------------------------------------------------
<picker class="{{disabled?'disabled':''}}" wx:if="{{steps==1}}" mode="selector" value="{{idx==-1?0:idx}}" range="{{options}}" range-key="{{labelKey}}" bindchange="bindChange" disabled="{{disabled}}">
	<view wx:if="{{!isSlot}}" class="picker-cmpt outside-picker-class">
		<block wx:if="{{labelKey}}">{{options[idx].label || noDataHint}}</block>
		<block wx:else>{{options[idx] || noDataHint}}</block>
	</view>
	<slot wx:else />
</picker>

<picker class="{{disabled?'disabled':''}}" wx:if="{{steps>1}}" mode="multiSelector" value="{{idx}}" range="{{options}}" range-key="{{labelKey}}" bindtap="bindTap" bindchange="bindChange" disabled="{{disabled}}">
	<view wx:if="{{!isSlot}}" class="picker-cmpt outside-picker-class">
		{{multiDesc || noDataHint}}
	</view>
	<slot wx:else />
</picker>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker\picker_cmpt.wxss
--------------------------------------------------
.picker-cmpt {
	line-height: 100rpx;
	font-size: 28rpx;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	width: 100%;
	text-align: right;
	padding-right: 40rpx;
}

.disabled {
	background-color: #eee;
	color:#999; 
}

.picker-cmpt::before {
	position: absolute;
	top: 0;
	right: 30rpx;
	bottom: 0;
	display: block;
	margin: auto;
	width: 30rpx;
	height: 30rpx;
	color: var(--grey);
	content: "\e6a3";
	text-align: center;
	font-size: 34rpx;
	font-family: "icon";
	line-height: 30rpx;
	margin-top: auto;
	margin-right: auto;
	margin-bottom: auto;
	margin-left: auto;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_multi\picker_multi_cmpt.js
--------------------------------------------------
/* 参考文档: https://github.com/IceApriler/miniprogram-picker */
/*
[{
	label:'ddd' // 展示数据的字段名称
	val:'v1',
},
{
	label:'cccc',
	val:'v2'
}]
*/
const dataHelper = require('../../../helper/data_helper.js');

function isExist(field) {
	return field !== null && field !== undefined
}

Component({
	externalClasses: ['outside-picker-multi-class'],
	/**
	 * 组件的属性列表
	 */
	properties: {
		// 特定类型 time
		mode: { // minute
			type: String,
			value: ''
		},

		// time特定类型 对应的分钟步长
		timeModeStep: {
			type: Number,
			value: 1
		},

		// 初始化时，是否需要自动返回结果给开发者
		autoSelect: {
			type: Boolean,
			value: false
		},
		// 源数组，sourceData有几维，Picker就可以有几阶
		sourceData: {
			type: Array,
			value: [],
			observer: 'sourceDataChange'
		},
		// 阶数
		steps: {
			type: Number,
			value: 1
		},

		// 选择了第n列后，是否将大于n的列的选择值自动初始化为0
		initColumnSelectedIndex: {
			type: Boolean,
			value: false,
		},
		// 默认选中项的下标数组
		itemIndex: {
			type: Array,
			value: []
		},
		// 默认选中项的值数组
		itemMulti: {
			type: Array,
			value: [],
			observer: function (newVal, oldVal) {  
				if (JSON.stringify(newVal) != JSON.stringify(oldVal)) { 
					this.sourceDataChange(this.data.sourceData);
				}
			}
		},
		// 是否禁用
		disabled: {
			type: Boolean,
			value: false,
		},
		isSlot: { //是否开启slot
			type: Boolean,
			value: true,
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {

		// Picker当前所选择的索引数组 => 比如:[0, 0, 2]，表示第一列选择第0项，第二列选择第0项，第三列选择第2项。
		multiIndex: {
			type: Array,
			value: [],
		},
		// Picker当前所展示的数组 => 比如:[['河北', '山东'], ['石家庄', '保定'], ['桥西区', '裕华区', '长安区']]。
		multiArray: {
			type: Array,
			value: [],
		},
		// 用户点击确定后，所选择的值数组 => 比如:
		// [{name: '河北', id: '3110'}, {name: '石家庄', id: '3110xx'}, {name: '长安区', id: '3110xxx'}]。
		selectedArray: {
			type: Array,
			value: [],
		},

	},
	/**
	 * 生命周期方法
	 */
	lifetimes: {
		created: function () {},
		attached: function () {

			if (this.data.autoSelect) {
				this.processData();
			}
		},

		ready: function () {

		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	pageLifetimes: {
		show: function () {

		},
		hide: function () {
			// 页面被隐藏
		},
		resize: function (size) {
			// 页面尺寸变化
		}
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		/**
		 * 监听源数组更新变化
		 *
		 * @param {Array} newSourceData 源数组，newSourceData有几维，Picker就可以有几阶。
		 */
		sourceDataChange: function (newSourceData) {
			const {
				steps
			} = this.data;
			// 源数组更新，则需要更新multiIndex、multiArray
			const multiIndex = [];
			const multiArray = [];
			newSourceData = this.checkSourceData(newSourceData);

			// console.warn(newSourceData) 
			const itemIndex = this.getDefaultIndex(newSourceData);
			const handle = (source = [], columnIndex = 0) => {
				// 当前遍历Picker的第columnIndex列，
				// 当columnIndex = 0时，source表示sourceData，其它则表示子集subset
				const _multiArrayColumn0 = [];

				source.forEach((item, index) => {
					if (columnIndex === 0) {
						// newSourceData的第0维要单独处理，最后unshift到multiArray中
						_multiArrayColumn0.push(item.label)
					}

					if (isExist(item.label) && index === (itemIndex[columnIndex] || 0)) {
						// 选中的索引和值，默认取每列的第0个
						multiIndex.push(index);

						if (columnIndex < steps - 1) {
							if (isExist(item.children)) {
								// 开始处理下一维的数据
								const _subsetArr = item.children.map(sub => sub.label);
								multiArray.push(_subsetArr);
								handle(item.children, columnIndex + 1);
							}
						}
					}
				})

				if (columnIndex === 0) {
					multiArray.unshift(_multiArrayColumn0);
				}
			}

			handle(newSourceData);

			this.setData({
				multiIndex,
				multiArray
			})

			if (this.data.autoSelect) {
				this.processData();
			} 
 
		},
		/**
		 * 获取默认值index
		 * @param {Array} newSourceData 源数组
		 */
		getDefaultIndex: function (newSourceData) {
			const {
				itemIndex,
				itemMulti,
				steps,
			} = this.data;
			if (itemIndex.length) {
				return itemIndex; // 返回默认选中的下标数据
			} else if (itemMulti.length) {
				if (itemMulti.length !== steps) {
					this.consoleError(new Error('你设置的"itemMulti"字段阶数与"steps"不符，请修改后再试。'));
					return [];
				} else {
					const _defaultIndex = [];
					const handle = (source = [], columnIndex = 0) => {
						// 默认值
						_defaultIndex[columnIndex] = 0;
						source.forEach((item, index) => {
							if (
								(itemMulti[columnIndex]) ===
								(item.val)
							) {
								_defaultIndex[columnIndex] = index;

								if (columnIndex < steps - 1) {
									if (item.children) {
										// 开始处理下一维的数据
										handle(item.children, columnIndex + 1);
									}
								}
							}
						})
					}
					handle(newSourceData);
					return _defaultIndex;
				}
			} else {
				return [];
			}
		},

		/**
		 * 校验源数组是否正确
		 *
		 * @param {Array} sourceData 源数组
		 */
		checkSourceData: function (sourceData) {
			const {
				steps
			} = this.data;
			const handle = (source = [], columnIndex = 0) => {
				// 当前遍历Picker的第columnIndex列，
				// 当columnIndex = 0时，source表示sourceData，其它则表示子集subset
				if (!source.length) {
					const temp = {};
					temp.label = '';
					temp.children = [];
					source.push(temp);
				}
				return source.map((item) => {
					// 有label字段才会去遍历children字段
					if (columnIndex < steps - 1) {
						// 开始处理下一维的数据
						item.children = handle(item.children, columnIndex + 1);
					}
					return item;
				})
			}
			return handle(sourceData);
		},

		/**
		 * 用户点击了确认。
		 *
		 * @param {Object} e 事件对象，具体参考微信小程序api。
		 * @param {Array} e.detail.value 用户选择的下标数组。
		 */
		pickerChange: function (e) {
			// console.log('picker发送选择改变，携带值为', e.detail.value)

			this.setData({
				multiIndex: e.detail.value
			})
			this.processData();
		},

		/**
		 * 处理最终数据，将返回给开发者。
		 *
		 */
		processData: function () {
			const {
				sourceData,
				multiIndex
			} = this.data;
			let selectedArray = [];

			const handle = (source = [], columnIndex = 0) => {
				source.forEach((item, index) => {
					if (index === multiIndex[columnIndex]) {
						let node = dataHelper.deepClone(item);
						delete node.children;
						selectedArray.push(node);
						if (columnIndex < this.data.steps - 1) {
							handle(item.children, columnIndex + 1);
						}
					}
				})
			}
			handle(sourceData);

			this.setData({
				selectedArray
			});

			/*
			const detail = {
				selectedIndex: this.data.multiIndex,
				selectedArray: this.data.selectedArray
			}*/

			let ret = dataHelper.getArrByKey(selectedArray, 'val');

			this.triggerEvent('select', ret);
		},

		/**
		 * 用户滚动了某一列。
		 *
		 * @param {Object} e 事件对象，具体参考微信小程序api。
		 */
		pickerColumnChange: function (e) {
			const {
				multiArray,
				sourceData,
				steps,
				initColumnSelectedIndex
			} = this.data;
			let {
				multiIndex
			} = this.data;
			const {
				column,
				value: changeIndex
			} = e.detail;

			// console.log(`修改了Picker的第${column}列(从0开始计算)，选中了第${changeIndex}个值(从0开始计算)`)

			// multiIndex变化了，所以也要同步更新multiArray
			multiIndex[column] = changeIndex;

			if (initColumnSelectedIndex) {
				// 每次重置之后的index为0，但是有bug，待定。 => 经检查，是编辑器的问题，真机上是没有问题的。
				const _multiIndex = multiIndex.map((item, index) => {
					if (column >= index) {
						return item;
					} else {
						return 0;
					}
				})
				multiIndex = _multiIndex;
			}

			const handle = (source = [], columnIndex = 0) => {
				// 当前遍历第 columnIndex 列
				source.forEach((item, index) => {
					if (index === multiIndex[columnIndex]) {
						if (columnIndex < steps - 1) {
							if (!item.children) {
								item.children = [];
							}
							const multiArrayItem = item.children.map((sub) => sub.label);
							// 从第1列开始，才有可能变化
							multiArray[columnIndex + 1] = multiArrayItem;

							handle(item.children, columnIndex + 1);
						}
					}
				})
			}
			handle(sourceData);

			this.setData({
				multiArray,
				multiIndex,
			})
			this.triggerEvent('columnchange', e);
		},
		/**
		 * 用户点击了取消触发
		 * @param {Object} e 事件对象
		 */
		pickerCancel: function (e) {
			this.triggerEvent('cancel', e);
		},
		/**
		 * 绑定console.error
		 * @param  {...any} arg 打印参数
		 */
		consoleError: function (...arg) {
			console.error(...arg);
		},


	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_multi\picker_multi_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_multi\picker_multi_cmpt.wxml
--------------------------------------------------
<picker class="multi-picker picker-class" mode="multiSelector" bindchange="pickerChange" bindcolumnchange="pickerColumnChange" bindcancel="pickerCancel" disabled="{{disabled}}" value="{{multiIndex}}" range="{{multiArray}}">
	<slot wx:if="{{isSlot}}" />
	<block wx:else>
		<block wx:if="{{multiIndex.length==2}}">
			{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}
		</block>
		<block wx:if="{{multiIndex.length==3}}">
			{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}
		</block>
		<block wx:if="{{multiIndex.length==4}}">
			{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}，{{multiArray[3][multiIndex[3]]}}
		</block>
		<block wx:if="{{multiIndex.length==5}}">
			{{multiArray[0][multiIndex[0]]}}，{{multiArray[1][multiIndex[1]]}}，{{multiArray[2][multiIndex[2]]}}，{{multiArray[3][multiIndex[3]]}}，{{multiArray[4][multiIndex[4]]}}
		</block>
	</block>
</picker>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_multi\picker_multi_cmpt.wxss
--------------------------------------------------
.picker-cmpt {
	line-height: 100rpx;
	font-size: 28rpx;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	width: 100%;
	text-align: right;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_time\datetime_picker.js
--------------------------------------------------
const timeHelper = require('../../../helper/time_helper.js');

function withData(param, unit = '') {
	if (unit) return param;
	return param < 10 ? '0' + param : '' + param;
}

function getLoopArray(start, end, unit = '', step = 1) {
	start = start || 0;
	end = end || 1;
	start = parseInt(start);
	end = parseInt(end);

	let array = [];
	let i = 0;
	for (i = start; i <= end;) {
		array.push(withData(i, unit) + unit);
		i += step;
	}

	if (step > 1 && i != 59) {
		array.push(withData(59, unit) + unit);
	}

	return array;
}

function getMonthDay(year, month, unit = '') {
	let flag = year % 400 == 0 || (year % 4 == 0 && year % 100 != 0),
		array = null;
	month = withData(parseInt(month));
	switch (month) {
		case '01':
		case '03':
		case '05':
		case '07':
		case '08':
		case '10':
		case '12':
			array = getLoopArray(1, 31, unit);
			break;
		case '04':
		case '06':
		case '09':
		case '11':
			array = getLoopArray(1, 30, unit);
			break;
		case '02':
			array = flag ? getLoopArray(1, 29, unit) : getLoopArray(1, 28, unit);
			break;
		default:
			array = '月份格式不正确，请重新输入！'
	}
	return array;
}

function getNewDateArry() {
	// 当前时间的处理
	let newDate = new Date();
	let year = withData(newDate.getFullYear()),
		mont = withData(newDate.getMonth() + 1),
		date = withData(newDate.getDate()),
		hour = withData(newDate.getHours()),
		minu = withData(newDate.getMinutes()),
		seco = withData(newDate.getSeconds());

	return [year, mont, date, hour, minu, seco];
}

function dateTimePicker(startYear, endYear, date, minuStep = 1) {
	// 返回默认显示的数组和联动数组的声明
	let dateTimeIndex = [],
		dateTimeArray = [
			[],
			[],
			[],
			[],
			[],
			[]
		];
	let dateTimeArrayPure = [
		[],
		[],
		[],
		[],
		[],
		[]
	];

	let start = startYear || 1978;
	let end = endYear || 2100;

	if (date && date.length == 4) date += '-01-01 00:00:00';
	if (date && date.length == 7) date += '-01 00:00:00';
	if (date && date.length == 10) date += ' 00:00:00';
	if (date && date.length == 13) date += ':00:00';
	if (date && date.length == 16) date += ':00';

	// 默认开始显示数据
	let defaultDate = date ? [...date.split(' ')[0].split('-'), ...date.split(' ')[1].split(':')] : getNewDateArry();

	// 处理联动列表数据
	/*年月日 时分秒*/
	dateTimeArray[0] = getLoopArray(start, end, '年');
	dateTimeArray[1] = getLoopArray(1, 12, '月');
	dateTimeArray[2] = getMonthDay(defaultDate[0], defaultDate[1], '日');
	dateTimeArray[3] = getLoopArray(0, 23, '点');
	dateTimeArray[4] = getLoopArray(0, 59, '分', minuStep);
	dateTimeArray[5] = getLoopArray(0, 59, '秒');

	dateTimeArrayPure[0] = getLoopArray(start, end);
	dateTimeArrayPure[1] = getLoopArray(1, 12);
	dateTimeArrayPure[2] = getMonthDay(defaultDate[0], defaultDate[1]);
	dateTimeArrayPure[3] = getLoopArray(0, 23);
	dateTimeArrayPure[4] = getLoopArray(0, 59, '', minuStep);
	dateTimeArrayPure[5] = getLoopArray(0, 59);

	dateTimeArrayPure.forEach((current, index) => {
		let idx = current.indexOf(defaultDate[index]);
		if (idx < 0) idx = 0;
		dateTimeIndex.push(idx);
	});

	return {
		dateTimeArray,
		dateTimeIndex
	}
}
module.exports = {
	dateTimePicker,
	getMonthDay
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_time\picker_time_cmpt.js
--------------------------------------------------
const timeHelper = require('../../../helper/time_helper.js');
const dateTimePicker = require('./datetime_picker.js');

Component({
	externalClasses: ['picker-class'],

	/**
	 * 组件的属性列表
	 */
	properties: {
		mark: {
			type: String,
			value: ''
		},

		// 特定类型 time  minute=单纯时间分钟选择
		mode: { // year/month/day/hour/minute/fullminute/second
			type: String,
			value: 'second'
		},

		// time特定类型 对应的分钟步长
		timeModeStep: {
			type: Number,
			value: 5
		},

		startYear: {
			type: Number,
			value: 0
		},
		endYear: {
			type: Number,
			value: 2030
		},
		item: {
			type: String,
			value: '',
			observer: function (newVal, oldVal) {
				if (newVal != oldVal) {
					this._init();
				}
			}
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		multiIndex: [], //  Picker当前所选择的索引数组
		multiArray: [], // Picker当前所展示的数组 
	},

	lifetimes: {
		created: function () { },
		attached: function () { },

		ready: function () {
			// 当前年份
			if (this.data.startYear == 0) this.data.startYear = timeHelper.time('Y');

			// 单纯分钟选择
			if (this.data.mode == 'minute') {
				this.data.startYear = 2021;
				this.data.endYear = 2021;
				if (this.data.item) {
					this.data.item = '2021-01-01 ' + this.data.item;
				}
			}

			this._init();
		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		_fmtTime: function (str) {
			str = str.replace(/[^0-9]/ig, '');
			str = parseInt(str);
			return str < 10 ? '0' + str : '' + str;
		},
		// 根据选择获取时间字符串
		_getTimeStr: function (selIdex) {
			let arr = [];
			let multiArray = this.data.multiArray;
			for (let k = 0; k < selIdex.length; k++) {
				let str = this._fmtTime(multiArray[k][selIdex[k]]);
				arr.push(str);
			}

			let mode = this.data.mode;
			switch (mode) {
				case 'year':
					arr = arr[0];
					break;
				case 'month':
					arr = arr[0] + '-' + arr[1];
					break;
				case 'day':
					arr = arr[0] + '-' + arr[1] + '-' + arr[2];
					break;
				case 'hour':
					arr = arr[0] + '-' + arr[1] + '-' + arr[2] + ' ' + arr[3] + ':00';
					break;
				case 'fullminute':
					arr = arr[0] + '-' + arr[1] + '-' + arr[2] + ' ' + arr[3] + ':' + arr[4];
					break;
				case 'minute':
					arr = arr[0] + ':' + arr[1];
					break;
				case 'second':
					arr = arr[0] + '-' + arr[1] + '-' + arr[2] + ' ' + arr[3] + ':' + arr[4] + ':' + arr[5];
					break;
			}

			return arr;
		},

		_init: function () {
			let multiIndex = [];
			let multiArray = [];

			let mode = this.data.mode;

			let obj = dateTimePicker.dateTimePicker(this.data.startYear, this.data.endYear, this.data.item, this.data.timeModeStep);
			let idx = obj.dateTimeIndex;
			let arr = obj.dateTimeArray;

			switch (mode) {
				case 'year':
					multiIndex = [idx[0]];
					multiArray = [arr[0]];
					break;
				case 'month':
					multiIndex = [idx[0], idx[1]];
					multiArray = [arr[0], arr[1]];
					break;
				case 'day':
					multiIndex = [idx[0], idx[1], idx[2]];
					multiArray = [arr[0], arr[1], arr[2]];
					break;
				case 'hour':
					multiIndex = [idx[0], idx[1], idx[2], idx[3]];
					multiArray = [arr[0], arr[1], arr[2], arr[3]];
					break;
				case 'fullminute':
					idx.pop();
					arr.pop();
					multiIndex = idx;
					multiArray = arr;
					break;
				case 'minute':
					multiIndex = [idx[3], idx[4]];
					multiArray = [arr[3], arr[4]];
					break;
				case 'second':
					multiIndex = idx;
					multiArray = arr;
					break;
			}

			this.setData({
				multiIndex,
				multiArray
			});
		},

		pickerCancel: function (e) {

		},
		// 用户点击了确认
		pickerChange: function (e) {
			let time = this._getTimeStr(e.detail.value);
			this.triggerEvent('select', time);
		},

		// 用户点击了列选择
		pickerColumnChange: function (e) {
			let multiArray = this.data.multiArray;
			let multiIndex = this.data.multiIndex;

			multiIndex[e.detail.column] = e.detail.value;

			let mode = this.data.mode;

			if (mode != 'year' && mode != 'month' && mode != 'minute') {
				let year = (multiArray[0][multiIndex[0]]).replace('年', '');
				let month = (multiArray[1][multiIndex[1]]).replace('月', '');
				multiArray[2] = dateTimePicker.getMonthDay(year, month, '日');
			}


			this.setData({
				multiArray,
				multiIndex
			});
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_time\picker_time_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_time\picker_time_cmpt.wxml
--------------------------------------------------
<picker 
  class="multi-picker picker-class"
  mode="multiSelector"
  bindchange="pickerChange"
  bindcolumnchange="pickerColumnChange"
  bindcancel="pickerCancel"
  disabled="{{disabled}}"
  value="{{multiIndex}}"
  range="{{multiArray}}">
  <slot/>
</picker>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\picker_time\picker_time_cmpt.wxss
--------------------------------------------------
/* cmpts/public/picker_time/picker_time_cmpt.wxss */
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\poster_cmpt.js
--------------------------------------------------
/*
https://github.com/jasondu/wxa-plugin-canvas
### 标准尺寸：
width: 375, // rpx
height: 670,

### 父页面分享按钮取值
onShareAppMessage: function (e) {
	let img = e.target.dataset.img;
	return {
		title: 'xxx',
		imageUrl: img,
		path: 'xxxx',
	}
}
*/
import Poster from '../../../cmpts/public/poster/wxa-plugin-canvas/poster/poster.js'
const pageHelper = require('../../../helper/page_helper.js');
const picHelper = require('../../../helper/pic_helper.js');
const helper = require('../../../helper/helper.js');

Component({
	externalClasses: ['poster-class'],

	options: {
		addGlobalClass: true,
		multipleSlots: true
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		config: { // 图形参数
			type: Object,
			value: null,
		},
		isQr: { // 是否叠加小程序码
			type: Boolean,
			value: false
		},
		isFace: { // 是否叠加头像
			type: Boolean,
			value: false
		},
		doPoster: {  
			type: Boolean,
			value: true
		},
		show: { // 显示
			type: Boolean,
			value: false
		},
		img: { //图片文件
			type: String,
			value: ''
		}
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		isLoad: false,
	},

	lifetimes: {
		attached: function () {

		},
		ready: function () {
			this._init();
		},
		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表 
	 */
	methods: {
		_init: async function () {

		},

		bindPosterTap: function (e) {
			this.setData({
				isCreate:true,
				isLoad: false,
			}, async () => {
				await this.createPoster();
			});
		},
		bindCloseTap: function () {
			this.setData({
				show: false
			});
		},

		/**
		 * 异步生成海报
		 */
		createPoster: async function () {
			// TODO:根据屏幕大小来生成，但是没有负定位

			let posterConfig = {
				width: 480, // rpx
				height: 650,
				pixelRatio: 2, // 2 为原始大小
				backgroundColor: '#345678',
				debug: false,
			}

			let config = this.data.config;
			if (!helper.isDefined(config['width']))
				config.width = posterConfig.width;

			if (!helper.isDefined(config['height']))
				config.height = posterConfig.height;

			if (!helper.isDefined(config['pixelRatio']))
				config.pixelRatio = posterConfig.pixelRatio;

			if (!helper.isDefined(config['backgroundColor']))
				config.backgroundColor = posterConfig.backgroundColor;

			if (!helper.isDefined(config['debug']))
				config.debug = posterConfig.debug;

			//Object.assign(posterConfig, this.data.config); // TODO有问题

			this.setData({
				posterConfig: config
			}, async () => {
				await Poster.create(true, this);
			});

		},

		onPosterFail: function (e) {
			console.log(e)
		},

		bindPosterSuccessListener(e) {
			let img = e.detail;
			this.setData({
				img,
				isLoad: true
			});

		},

		url: function (e) {
			pageHelper.url(e, this);
		},

		bindPosterFailListener(e) {
			console.log(e);
		},

		bindSaveTap: function (e) {
			let that = this;
			let callback = function () {
				wx.saveImageToPhotosAlbum({
					filePath: that.data.img,
					success: function (data) {
						wx.showToast({
							title: '保存成功',
							icon: 'success',
							duration: 1000
						})
					},
				});
			}

			picHelper.getWritePhotosAlbum(callback);
		}


	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\poster_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {
		"poster": "./wxa-plugin-canvas/poster"
	}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\poster_cmpt.wxml
--------------------------------------------------
<poster wx:if="{{posterConfig}}" id="poster" hide-loading="{{true}}" preload="{{false}}" config="{{posterConfig}}" bind:success="bindPosterSuccessListener" bind:fail="bindPosterFailListener"></poster>

<view catchtouchmove="true" style="z-index: 9999999999;" class="main-poster modal bottom-modal {{show?'show':''}}">
	<view class="dialog">
		<view class="poster-img" wx:if="{{isCreate}}">
			<image bindtap="url" data-type="img" data-url="{{img}}" show-menu-by-longpress="{{true}}" wx:if="{{isLoad}}" mode="widthFix" src="{{img}}" class="shadow loading"></image>

			<view wx:else class="load loading text-l"></view>

			<view class="save-hint text-project" wx:if="{{isLoad}}">长按图片保存或者转发</view>

		</view>
		<view class="poster-share">
			<button class="item item-share clearbtn" open-type="share" data-img="{{img}}">
				<view class="pic">
					<image src="images/wechat.png" />
				</view>
				<text>转发给朋友</text>
			</button>

			<view wx:if="{{doPoster}}" class="item" bindtap="bindPosterTap" style="padding-top:12rpx">
				<view class="pic">
					<image class='friend' src="images/friend.png" />
				</view>
				<text>生成海报</text>
			</view>
		</view>

		<view class="line" bindtap="bindCloseTap">
			<view>关闭</view>
		</view>

	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\poster_cmpt.wxss
--------------------------------------------------
.main-poster .poster-share {
	width: 100%;
	display: flex;
	justify-content: space-around;
	align-items: center;
	padding: 30rpx 50rpx 10rpx;
}

.main-poster .poster-share .item {
	flex: 1 0 0;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;
	color: #333;
}

.main-poster .poster-share .item .pic {
	height: 100rpx;
	width: 100rpx;
	background-color: #f2f2f2;
	border-radius: 50%;
	display: flex;
	justify-content: center;
	align-items: center;
}

.main-poster .poster-share .item-share {
	margin-top: 15rpx;
}

.main-poster .poster-share .item-share>text {
	margin-top: 15rpx !important;
}

.main-poster .poster-share .item .pic image {
	height: 50rpx;
	width: 50rpx;
}

.main-poster .poster-share .item .pic .friend {
	height: 60rpx;
	width: 60rpx;
}

.main-poster .poster-share .item>text {
	margin-top: 15rpx;
	font-size: 30rpx;
	text-align: center;
}

.main-poster .poster-img {
	display: flex;
	justify-content: center;
	align-items: center;
	padding-top: 0rpx;
	padding-bottom: 0rpx;
	min-height: 600rpx;
	margin-top: 30rpx;
	flex-direction: column;
}

.main-poster .poster-img .save-hint {
	font-size: 30rpx;
	color: #555;
	margin-top: 10rpx;
}

.load.loading::after {
	content: "海报生成中...";
}

.main-poster .poster-img image {
	width: 375rpx;
	border-radius: 15rpx;
}

.main-poster .line {
	width: 100%;
	margin: 30rpx 0 30rpx;
	border-top: 1rpx solid #ddd;
	padding: 30rpx 0 20rpx;
	font-size: 32rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\poster_cmpt_helper.js
--------------------------------------------------
const cloudHelper = require('../../../helper/cloud_helper.js');

async function config1({
	cover,
	title,
	desc,
	qr,
    bg = '',
    user = '',
    avatar = '' //头像
}) {
	if (cover.startsWith('cloud'))
		cover = await cloudHelper.getTempFileURLOne(cover);

	if (qr.startsWith('cloud'))
		qr = await cloudHelper.getTempFileURLOne(qr);

    if (avatar.startsWith('cloud'))
        avatar = await cloudHelper.getTempFileURLOne(avatar);

	let posterConfig = {
		width: 480, // rpx
		height: 650,
		backgroundColor: '#eeeeee'
	};
	if (bg) posterConfig.backgroundColor = bg;


	let blocks = [];
	blocks = [{
		x: 30,
		y: 30,
		backgroundColor: '#ffffff',
		width: 420,
		height: 590,
		borderRadius: 20
	}];

	let texts = [];
	texts = [{
		x: 50,
		y: 350,
		text: title,
		width: 360,
		lineNum: 2,
		lineHeight: 40,
		fontSize: 26,
		color: '#000000',
		textAlign: 'left',
		zIndex: 9999
	},
	{
		x: 55,
		y: 510,
		text: '长按识别小程序码',
		fontSize: 18,
		color: '#aaaaaa',
		zIndex: 9999
	}, {
		x: 55,
		y: 540,
		text: desc,
		fontSize: 18,
		color: '#aaaaaa',
		zIndex: 9999
	}];

    if (user) {
        texts.push({
            x: 55,
            y: 480,
            text: user,
            fontSize: 18,
            color: bg,
            zIndex: 9999
        });
    }

	let images = [];
	if (cover) {
		images.push({ // 底图
			x: 40,
			y: 40,
			url: cover,
			width: 400,
			height: 260,
			zIndex: 999
		});
	}

	if (qr) {
		images.push({ // 小程序码
			x: 310,
			y: 460,
			url: qr,
			width: 120,
			height: 120
		});
	}

    if (avatar) {
        images.push({ // 头像
            x: 343,
            y: 493,
            url: avatar,
            width: 54,
            height: 54,
            borderRadius: 54
        });
    }

	posterConfig.texts = texts;
	posterConfig.blocks = blocks
	posterConfig.images = images;

	return posterConfig;
}


module.exports = {
	config1
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\index\index.js
--------------------------------------------------
const main = {
	/**
	 * 渲染块
	 * @param {Object} params
	 */
	drawBlock({
		text,
		width = 0,
		height,
		x,
		y,
		paddingLeft = 0,
		paddingRight = 0,
		borderWidth,
		backgroundColor,
		borderColor,
		borderRadius = 0,
		opacity = 1,
	}) {
		// 判断是否块内有文字
		let blockWidth = 0; // 块的宽度
		let textX = 0;
		let textY = 0;
		if (typeof text !== "undefined") {
			// 如果有文字并且块的宽度小于文字宽度，块的宽度为 文字的宽度 + 内边距
			const textWidth = this._getTextWidth(typeof text.text === "string" ? text : text.text);
			blockWidth = textWidth > width ? textWidth : width;
			blockWidth += paddingLeft + paddingLeft;

			const {
				textAlign = "left", text: textCon
			} = text;
			textY = height / 2 + y; // 文字的y轴坐标在块中线
			if (textAlign === "left") {
				// 如果是右对齐，那x轴在块的最左边
				textX = x + paddingLeft;
			} else if (textAlign === "center") {
				textX = blockWidth / 2 + x;
			} else {
				textX = x + blockWidth - paddingRight;
			}
		} else {
			blockWidth = width;
		}

		if (backgroundColor) {
			// 画面
			this.ctx.save();
			this.ctx.globalAlpha = opacity;
			this.ctx.fillStyle = backgroundColor;
			if (borderRadius > 0) {
				// 画圆角矩形
				this._drawRadiusRect(x, y, blockWidth, height, borderRadius);
				this.ctx.fill();
			} else {
				this.ctx.fillRect(this.toPx(x), this.toPx(y), this.toPx(blockWidth), this.toPx(height));
			}
			this.ctx.restore();
		}
		if (borderWidth) {
			// 画线
			this.ctx.save();
			this.ctx.globalAlpha = opacity;
			this.ctx.strokeStyle = borderColor;
			this.ctx.lineWidth = this.toPx(borderWidth);
			if (borderRadius > 0) {
				// 画圆角矩形边框
				this._drawRadiusRect(x, y, blockWidth, height, borderRadius);
				this.ctx.stroke();
			} else {
				this.ctx.strokeRect(this.toPx(x), this.toPx(y), this.toPx(blockWidth), this.toPx(height));
			}
			this.ctx.restore();
		}

		if (text) {
			this.drawText(Object.assign(text, {
				x: textX,
				y: textY
			}));
		}
	},

	/**
	 * 渲染文字
	 * @param {Object} params
	 */
	drawText(params) {
		const {
			x,
			y,
			fontSize,
			color,
			baseLine,
			textAlign,
			text,
			opacity = 1,
			width,
			lineNum,
			lineHeight
		} = params;
		if (Object.prototype.toString.call(text) === "[object Array]") {
			let preText = {
				x,
				y,
				baseLine
			};
			text.forEach((item) => {
				preText.x += this.toPx(item.marginLeft || 0);
				const textWidth = this._drawSingleText(
					Object.assign(item, {
						...preText,
					})
				);
				preText.x += textWidth + this.toPx(item.marginRight || 0); // 下一段字的x轴为上一段字x + 上一段字宽度
			});
		} else {
			this._drawSingleText(params);
		}
	},

	/**
	 * 渲染图片
	 * @param {Object} params
	 */
	drawImage({
		imgPath,
		x,
		y,
		w,
		h,
		sx,
		sy,
		sw,
		sh,
		borderRadius = 0,
		borderWidth = 0,
		borderColor
	}) {
		return new Promise((resolve) => {
			const img = this.node.createImage();
			img.onload = () => {
				this.ctx.save();
				if (borderRadius > 0) {
					this._drawRadiusRect(x, y, w, h, borderRadius);
					this.ctx.strokeStyle = "rgba(255,255,255,0)";
					this.ctx.stroke();
					this.ctx.clip();
					this.ctx.drawImage(
						img,
						this.toPx(sx),
						this.toPx(sy),
						this.toPx(sw),
						this.toPx(sh),
						this.toPx(x),
						this.toPx(y),
						this.toPx(w),
						this.toPx(h)
					);
					if (borderWidth > 0) {
						this.ctx.strokeStyle = borderColor;
						this.ctx.lineWidth = this.toPx(borderWidth);
						this.ctx.stroke();
					}
				} else { 
					this.ctx.drawImage(
						img,
						this.toPx(sx),
						this.toPx(sy),
						this.toPx(sw),
						this.toPx(sh),
						this.toPx(x),
						this.toPx(y),
						this.toPx(w),
						this.toPx(h)
					);
				}
				this.ctx.restore();
				resolve();
			};
			img.src = imgPath;
		});
	},
	/**
	 * 渲染线
	 * @param {Object} param
	 */
	drawLine({
		startX,
		startY,
		endX,
		endY,
		color,
		width
	}) {
		this.ctx.save();
		this.ctx.beginPath();
		this.ctx.strokeStyle = color;
		this.ctx.lineWidth = this.toPx(width);
		this.ctx.moveTo(this.toPx(startX), this.toPx(startY));
		this.ctx.lineTo(this.toPx(endX), this.toPx(endY));
		this.ctx.stroke();
		this.ctx.closePath();
		this.ctx.restore();
	},
	downloadResource({
		images = [],
		pixelRatio
	}) {

		// 本方法比create早执行，所以要预先设定ratio by cc 2021/10/25
		this.pixelRatio = pixelRatio || this.pixelRatio;

		const drawList = [];
		images.forEach((image, index) => drawList.push(this._downloadImageAndInfo(image, index)));
		return Promise.all(drawList);
	},
	initCanvas(w, h, debug) {
		const {
			platform
		} = wx.getSystemInfoSync();

		return new Promise((resolve) => {
			if (platform === "ios") {
				this.setData({
					pxWidth: this.toPx(w),
					pxHeight: this.toPx(h),
					debug,
				});
				// ios系统动态设置canvas宽高后立即绘制canvas会偶现变形的BUG
				setTimeout(() => {
					resolve();
				}, 100);
			} else {
				this.setData({
						pxWidth: this.toPx(w),
						pxHeight: this.toPx(h),
						debug,
					},
					resolve
				);
			}
		});
	},
};
const handle = {
	/**
	 * 画圆角矩形
	 */
	_drawRadiusRect(x, y, w, h, r) {
		const br = r / 2;
		this.ctx.beginPath();
		this.ctx.moveTo(this.toPx(x + br), this.toPx(y)); // 移动到左上角的点
		this.ctx.lineTo(this.toPx(x + w - br), this.toPx(y));
		this.ctx.arc(
			this.toPx(x + w - br),
			this.toPx(y + br),
			this.toPx(br),
			2 * Math.PI * (3 / 4),
			2 * Math.PI * (4 / 4)
		);
		this.ctx.lineTo(this.toPx(x + w), this.toPx(y + h - br));
		this.ctx.arc(this.toPx(x + w - br), this.toPx(y + h - br), this.toPx(br), 0, 2 * Math.PI * (1 / 4));
		this.ctx.lineTo(this.toPx(x + br), this.toPx(y + h));
		this.ctx.arc(
			this.toPx(x + br),
			this.toPx(y + h - br),
			this.toPx(br),
			2 * Math.PI * (1 / 4),
			2 * Math.PI * (2 / 4)
		);
		this.ctx.lineTo(this.toPx(x), this.toPx(y + br));
		this.ctx.arc(this.toPx(x + br), this.toPx(y + br), this.toPx(br), 2 * Math.PI * (2 / 4), 2 * Math.PI * (3 / 4));
	},
	/**
	 * 计算文本长度
	 * @param {Array|Object}} text 数组 或者 对象
	 */
	_getTextWidth(text) {
		let texts = [];
		if (Object.prototype.toString.call(text) === "[object Object]") {
			texts.push(text);
		} else {
			texts = text;
		}
		let width = 0;
		texts.forEach(({
			fontSize,
			text,
			marginLeft = 0,
			marginRight = 0
		}) => {
			this.ctx.fontSize = this.toPx(fontSize);
			width += this.ctx.measureText(text).width + marginLeft + marginRight;
		});

		return this.toRpx(width);
	},
	/**
	 * 渲染一段文字
	 */
	_drawSingleText({
		x,
		y,
		fontSize,
		color,
		baseLine,
		textAlign = "left",
		text,
		opacity = 1,
		textDecoration = "none",
		width,
		lineNum = 1,
		lineHeight = 0,
		fontWeight = "normal",
		fontStyle = "normal",
		fontFamily = "sans-serif",
	}) {
		this.ctx.save();
		this.ctx.beginPath();
		this.ctx.font = fontStyle + " " + fontWeight + " " + this.toPx(fontSize, true) + "px " + fontFamily;
		this.ctx.globalAlpha = opacity;
		this.ctx.fillStyle = color;
		this.ctx.textBaseline = baseLine;
		this.ctx.textAlign = textAlign; 
		let textWidth = this.toRpx(this.ctx.measureText(text).width);
		 
		const textArr = [];
		if (textWidth > width) {
			// 文本宽度 大于 渲染宽度
			let fillText = "";
			let line = 1;
			for (let i = 0; i <= text.length - 1; i++) {
				// 将文字转为数组，一行文字一个元素
				fillText = fillText + text[i];
				if (this.toRpx(this.ctx.measureText(fillText).width) >= width) {
					if (line === lineNum) {
						if (i !== text.length - 1) {
							fillText = fillText.substring(0, fillText.length - 1) + "...";
						}
					}
					if (line <= lineNum) {
						textArr.push(fillText);
					}
					fillText = "";
					line++;
				} else {
					if (line <= lineNum) {
						if (i === text.length - 1) {
							textArr.push(fillText);
						}
					}
				}
			}
			textWidth = width;
		} else {
			textArr.push(text);
		}

		textArr.forEach((item, index) => { 
			this.ctx.fillText(item, this.toPx(x), this.toPx(y + (lineHeight || fontSize) * index));
		});

		this.ctx.restore();

		// textDecoration
		if (textDecoration !== "none") {
			let lineY = y;
			if (textDecoration === "line-through") {
				// 目前只支持贯穿线
				lineY = y;

				// 小程序画布baseLine偏移阈值
				let threshold = 5;

				// 根据baseLine的不同对贯穿线的Y坐标做相应调整
				switch (baseLine) {
					case "top":
						lineY += fontSize / 2 + threshold;
						break;
					case "middle":
						break;
					case "bottom":
						lineY -= fontSize / 2 + threshold;
						break;
					default:
						lineY -= fontSize / 2 - threshold;
						break;
				}
			}
			this.ctx.save();
			this.ctx.moveTo(this.toPx(x), this.toPx(lineY));
			this.ctx.lineTo(this.toPx(x) + this.toPx(textWidth), this.toPx(lineY));
			this.ctx.strokeStyle = color;
			this.ctx.stroke();
			this.ctx.restore();
		}

		return textWidth;
	},
};
const helper = {
	/**
	 * 下载图片并获取图片信息
	 */
	_downloadImageAndInfo(image, index) {
		return new Promise((resolve, reject) => {
			const {
				x,
				y,
				url,
				zIndex
			} = image;
			const imageUrl = url;
			// 下载图片
			this._downImage(imageUrl, index)
				// 获取图片信息
				.then((imgPath) => this._getImageInfo(imgPath, index))
				.then(({
					imgPath,
					imgInfo
				}) => {
					console.log();
					// 根据画布的宽高计算出图片绘制的大小，这里会保证图片绘制不变形
					let sx;
					let sy;
					const borderRadius = image.borderRadius || 0;
					const setWidth = image.width;
					const setHeight = image.height;
					const width = this.toRpx(imgInfo.width);
					const height = this.toRpx(imgInfo.height);

					if (width / height <= setWidth / setHeight) {
						sx = 0;
						sy = (height - (width / setWidth) * setHeight) / 2;
					} else {
						sy = 0;
						sx = (width - (height / setHeight) * setWidth) / 2;
					}
					if (!this.drawArr) this.drawArr = [];
					this.drawArr.push({
						type: "image",
						borderRadius,
						borderWidth: image.borderWidth,
						borderColor: image.borderColor,
						zIndex: typeof zIndex !== "undefined" ? zIndex : index,
						imgPath,
						sx,
						sy,
						sw: width - sx * 2,
						sh: height - sy * 2,
						x,
						y,
						w: setWidth,
						h: setHeight,
					});
					resolve();
				})
				.catch((err) => reject(err));
		});
	},
	/**
	 * 下载图片资源
	 * @param {*} imageUrl
	 */
	_downImage(imageUrl) {
		return new Promise((resolve, reject) => {
			if (imageUrl.startsWith('http') || imageUrl.includes('tmp') || imageUrl.includes('temp') || imageUrl.includes('wxfile')) {
				// 支持本地地址
				resolve(imageUrl); //2021/2/17 by cc
			}

			if (/^http/.test(imageUrl) && !new RegExp(wx.env.USER_DATA_PATH).test(imageUrl)) {
				wx.downloadFile({
					url: this._mapHttpToHttps(imageUrl),
					success: (res) => {
						if (res.statusCode === 200) {
							resolve(res.tempFilePath);
						} else {
							reject(res.errMsg);
						}
					},
					fail(err) {
						reject(err);
					},
				});
			} else {
				// 支持本地地址
				resolve(imageUrl);
			}
		});
	},
	/**
	 * 获取图片信息
	 * @param {*} imgPath
	 * @param {*} index
	 */
	_getImageInfo(imgPath, index) {
		return new Promise((resolve, reject) => {
			wx.getImageInfo({
				src: imgPath,
				success(res) {
					resolve({
						imgPath,
						imgInfo: res,
						index
					});
				},
				fail(err) {
					reject(err);
				},
			});
		});
	},
	toPx(rpx, int) {
		if (int) {
			return parseInt(rpx * this.factor * this.pixelRatio);
		}
		return rpx * this.factor * this.pixelRatio;
	},
	toRpx(px, int) {
		if (int) {
			return parseInt(px / (this.factor * this.pixelRatio));
		}
		return px / (this.factor * this.pixelRatio);
	},
	/**
	 * 将http转为https
	 * @param {String}} rawUrl 图片资源url
	 */
	_mapHttpToHttps(rawUrl) {
		if (rawUrl.indexOf(":") < 0) {
			return rawUrl;
		}
		const urlComponent = rawUrl.split(":");
		if (urlComponent.length === 2) {
			if (urlComponent[0] === "http") {
				urlComponent[0] = "https";
				return `${urlComponent[0]}:${urlComponent[1]}`;
			}
		}
		return rawUrl;
	},
};
Component({
	properties: {},
	created() {
		const sysInfo = wx.getSystemInfoSync();
		const {
			pixelRatio,
			screenWidth
		} = sysInfo;
		this.factor = screenWidth / 750;
		this.pixelRatio = pixelRatio;
	},
	methods: Object.assign({
			/**
			 * 计算画布的高度
			 * @param {*} config
			 */
			getHeight(config) {
				const getTextHeight = (text) => {
					let fontHeight = text.lineHeight || text.fontSize;
					let height = 0;
					if (text.baseLine === "top") {
						height = fontHeight;
					} else if (text.baseLine === "middle") {
						height = fontHeight / 2;
					} else {
						height = 0;
					}
					return height;
				};
				const heightArr = [];
				(config.blocks || []).forEach((item) => {
					heightArr.push(item.y + item.height);
				});
				(config.texts || []).forEach((item) => {
					let height;
					if (Object.prototype.toString.call(item.text) === "[object Array]") {
						item.text.forEach((i) => {
							height = getTextHeight({
								...i,
								baseLine: item.baseLine,
							});
							heightArr.push(item.y + height);
						});
					} else {
						height = getTextHeight(item);
						heightArr.push(item.y + height);
					}
				});
				(config.images || []).forEach((item) => {
					heightArr.push(item.y + item.height);
				});
				(config.lines || []).forEach((item) => {
					heightArr.push(item.startY);
					heightArr.push(item.endY);
				});
				const sortRes = heightArr.sort((a, b) => b - a);
				let canvasHeight = 0;
				if (sortRes.length > 0) {
					canvasHeight = sortRes[0];
				}
				if (config.height < canvasHeight || !config.height) {
					return canvasHeight;
				} else {
					return config.height;
				}
			},
			async create(config) {
				await this.initCtx();

				this.pixelRatio = config.pixelRatio || this.pixelRatio;
				const height = this.getHeight(config);
				this.initCanvas(config.width, height, config.debug)
					.then(async () => {
						this.node.width = this.data.pxWidth * this.pixelRatio;
						this.node.height = this.data.pxHeight * this.pixelRatio;

						this.ctx.scale(this.pixelRatio, this.pixelRatio);

						// 设置画布底色
						if (config.backgroundColor) {
							this.ctx.save();
							this.ctx.fillStyle = config.backgroundColor;
							this.ctx.fillRect(0, 0, this.toPx(config.width), this.toPx(height));
							this.ctx.restore();
						}
						const {
							texts = [], blocks = [], lines = []
						} = config;
						if (!this.drawArr) this.drawArr = [];
						const queue = this.drawArr
							.concat(
								texts.map((item) => {
									item.type = "text";
									item.zIndex = item.zIndex || 0;
									return item;
								})
							)
							.concat(
								blocks.map((item) => {
									item.type = "block";
									item.zIndex = item.zIndex || 0;
									return item;
								})
							)
							.concat(
								lines.map((item) => {
									item.type = "line";
									item.zIndex = item.zIndex || 0;
									return item;
								})
							);
						// 按照顺序排序
						queue.sort((a, b) => a.zIndex - b.zIndex);

						for (let i = 0, len = queue.length; i < len; i++) {
							const item = queue[i];
							if (item.type === "image") {
								await this.drawImage(item);
							} else if (item.type === "text") {
								this.drawText(item);
							} else if (item.type === "block") {
								this.drawBlock(item);
							} else if (item.type === "line") {
								this.drawLine(item);
							}
						}

						wx.canvasToTempFilePath({
								canvas: this.node,
								success: (res) => {
									this.triggerEvent("success", res.tempFilePath);
								},
								fail: (err) => {
									this.triggerEvent("fail", err);
								},
							},
							this
						);
					})
					.catch((err) => {
						wx.showToast({
							icon: "none",
							title: err.errMsg || "生成失败",
						});
						console.error(err);
					});
			},
			initCtx() {
				return new Promise((resolve) => {
					wx.createSelectorQuery()
						.in(this)
						.select("#canvasid")
						.fields({
							node: true,
						})
						.exec((res) => {
							this.node = res[0].node;
							this.ctx = this.node.getContext("2d");
							resolve();
						});
				});
			},
		},
		main,
		handle,
		helper
	),
});
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\index\index.json
--------------------------------------------------
{
    "component": true
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\index\index.wxml
--------------------------------------------------
<!--index.wxml-->
<view class="container">
  <canvas id='canvasid' type="2d" class="canvas {{debug ? 'debug' : 'pro'}}" style='width: {{pxWidth}}px; height: {{pxHeight}}px;'></canvas>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\index\index.wxss
--------------------------------------------------
.canvas {
    width: 750rpx;
    height: 750rpx;
}
.canvas.pro {
    position: absolute;
    bottom: 0;
    left: 0;
    transform: translate3d(-9999rpx, 0, 0);
}
.canvas.debug {
    position: absolute;
    bottom: 0;
    left: 0;
    border: 1rpx solid #ccc;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\poster\index.js
--------------------------------------------------
Component({
	properties: {
		config: {
			type: Object,
			value: {},
		},
		preload: { // 是否预下载图片资源
			type: Boolean,
			value: false,
		},
		hideLoading: { // 是否隐藏loading
			type: Boolean,
			value: false,
		}
	},
	ready() {
		if (this.data.preload) {
			const poster = this.selectComponent('#poster');
			this.downloadStatus = 'doing'; 
			poster.downloadResource(this.data.config).then(() => {
				this.downloadStatus = 'success';
				this.trigger('downloadSuccess');
			}).catch((e) => {
				this.downloadStatus = 'fail';
				this.trigger('downloadFail', e);
			});
		}
	},
	methods: {
		trigger(event, data) {
			if (this.listener && typeof this.listener[event] === 'function') {
				this.listener[event](data);
			}
		},
		once(event, fun) {
			if (typeof this.listener === 'undefined') {
				this.listener = {};
			}
			this.listener[event] = fun;
		},
		downloadResource(reset) {
			return new Promise((resolve, reject) => {
				if (reset) {
					this.downloadStatus = null;
				}
				const poster = this.selectComponent('#poster');
				if (this.downloadStatus && this.downloadStatus !== 'fail') {
					if (this.downloadStatus === 'success') {
						resolve();
					} else {
						this.once('downloadSuccess', () => resolve());
						this.once('downloadFail', (e) => reject(e));
					}
				} else {
					poster.downloadResource(this.data.config)
						.then(() => {
							this.downloadStatus = 'success';
							resolve();
						})
						.catch((e) => reject(e));
				}
			})
		},
		onCreate(reset = false) {
			!this.data.hideLoading && wx.showLoading({
				mask: true,
				title: '生成中'
			});
			return this.downloadResource(typeof reset === 'boolean' && reset).then(() => {
					!this.data.hideLoading && wx.hideLoading();
					const poster = this.selectComponent('#poster');
					poster.create(this.data.config);
				})
				.catch((err) => {
					!this.data.hideLoading && wx.hideLoading();
					wx.showToast({
						icon: 'none',
						title: err.errMsg || '生成失败'
					});
					console.error(err);
					this.triggerEvent('fail', err);
				})
		},
		onCreateSuccess(e) {
			const {
				detail
			} = e;
			this.triggerEvent('success', detail);
		},
		onCreateFail(err) {
			console.error(err);
			this.triggerEvent('fail', err);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\poster\index.json
--------------------------------------------------
{
    "component": true,
    "usingComponents": {
        "we-canvas": "../index/index"
    }
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\poster\index.wxml
--------------------------------------------------
<view bindtap='onCreate'>
    <slot/>
</view>
<we-canvas id="poster" bind:success="onCreateSuccess" bind:fail="onCreateFail"/>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\poster\index.wxss
--------------------------------------------------

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\poster\wxa-plugin-canvas\poster\poster.js
--------------------------------------------------
const defaultOptions = {
    selector: '#poster'
};

function Poster(options = {}, that) {
    options = {
        ...defaultOptions,
        ...options,
    };

    const pages = getCurrentPages();
    let ctx = pages[pages.length - 1];
    if (that) ctx = that
    const poster = ctx.selectComponent(options.selector);
    delete options.selector;

    return poster;
};

Poster.create = (reset = false, that) => {
    const poster  = Poster({}, that);
    if (!poster) {
        console.error('请设置组件的id="poster"!!!');
    } else {
        return Poster({}, that).onCreate(reset);
    }
}

export default Poster;

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\radio\radio_cmpt.js
--------------------------------------------------
const pageHelper = require('../../../helper/page_helper.js');

Component({
	externalClasses: ['outside-picker-multi-class'],

	options: {
		addGlobalClass: true, 
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		sourceData: { //源数组 
			type: Array,
			value: [],
		},
		sourceDataStr: { //源字符串 支持 x,y,z;;; 1=x,2=y,3=z 
			type: String,
			value: '',
		},
		// 默认选中项 
		itemSelected: {
			type: String,
			value: '',
		},
		show: { // 排列模式 column/row
			type: String,
			value: 'column',
		},
		labelExt: { // 附加描述
			type: String,
			value: '',
		},
		disabled: { // 是否禁用
			type: Boolean,
			value: false,
		},
	},

	/**
	 * 生命周期方法
	 */
	lifetimes: {
		attached: function () { },

		ready: function () {
			let sourceDataStr = this.data.sourceDataStr;
			if (sourceDataStr) {
				let options = [];
				let arr = sourceDataStr.split(',');
				for (let k = 0; k < arr.length; k++) {
					let node = {};
					if (arr[k].includes('=')) {
						node.label = arr[k].split('=')[1];
						node.value = arr[k].split('=')[0];
					}
					else {
						node.label = arr[k];
						node.value = arr[k];
					}
					options.push(node);
				}
				this.setData({
					options
				});
			}
			else {
				let sourceData = this.data.sourceData;
				let options = [];
				for (let k = 0; k < sourceData.length; k++) {
					let node = {
						label: sourceData[k],
						value: sourceData[k]
					};
					options.push(node);
				}
				this.setData({
					options 
				});
			}

		},

		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},

	},

	/**
	 * 组件的初始数据
	 */
	data: {
		options: []
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		bindChange: function (e) { 
			this.triggerEvent('select', e.detail.value);
		},

		bindTagChange: function (e) {
			let itemSelected = pageHelper.dataset(e, 'val');
			this.setData({
				itemSelected
			});
			this.triggerEvent('select', itemSelected);
		},
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\radio\radio_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\radio\radio_cmpt.wxml
--------------------------------------------------
<radio-group wx:if="{{show!='tag'}}" bindchange="bindChange" class="radio-group {{show=='row'?'row':''}}">
	<view class="item {{show}}" wx:for="{{options}}" wx:key="key">
		<label class="item-label">
			<radio class="item-radio" disabled="{{disabled}}" value="{{item.value}}" checked="{{itemSelected==item.value}}" />
			<text>{{item.label}}{{labelExt}}</text>

		</label>
	</view>
</radio-group>
<block wx:else>
	<view class="form-radio-tags">
		<view bindtap="bindTagChange" data-val="{{item.value}}" class="item" wx:for="{{options}}" wx:key="key"><text class="tag-txt  {{itemSelected==item.value?'cur':''}}">{{item.label}}{{labelExt}}</text></view> 
	</view> 
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\radio\radio_cmpt.wxss
--------------------------------------------------
.radio-group {
	width: 100%;
	display: flex;
	justify-content: center;
	flex-direction: column;
	align-items: center;
	padding: 0rpx 20rpx;
}

.radio-group .item {
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: center;
	line-height: 2.1;
	min-height: 70rpx;
	border-bottom: 1rpx solid #eee;
	font-size: 28rpx;
}

.radio-group .item.row { 
	border-bottom: unset;      
}    

.radio-group .item .item-label{
	width: 100%; 
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: center;
}
 

.radio-group .item:last-child {
	border-bottom: 0;
}

.radio-group .item:nth-child(odd) {
	background-color: #fcfcfc;
}

.radio-group .item.row:nth-child(odd) {
	background-color: #fff;
}


.radio-group .item .item-radio {
	margin-right: 20rpx;
	padding-left: 10rpx; 
} 

/*按行排列*/ 
.radio-group.row{ 
	flex-direction: row!important; 
	flex-wrap: wrap!important;
	justify-content: flex-start;
}

.radio-group.row .item{ 
	width:unset!important;
	margin-right: 25rpx;
}

.radio-group.row .item.row {
	margin-right: 0rpx;
	margin-left: 25rpx;
}

.radio-group.row .item .item-radio {
     margin-right: 5rpx;  
      padding-left: 0rpx;  
}

/*标签形式*/
.form-radio-tags {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: flex-start;
}

.form-radio-tags .item {  
	padding:15rpx 10rpx;
}
 

.form-radio-tags .item .tag-txt {
	padding: 9rpx 25rpx;
	background-color: #f8f8f8;
	border: 1rpx solid #ccc;
	color: #000;
	border-radius: 7rpx;
	font-size: 28rpx;
}

.form-radio-tags .item .tag-txt.cur {
	border: 1rpx solid var(--btnColor);
	background-color: var(--btnColor);
	color: #fff;

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\rows\rows_cmpt.js
--------------------------------------------------

const pageHelper = require('../../../helper/page_helper.js');
const dataHelper = require('../../../helper/data_helper.js');
const helper = require('../../../helper/helper.js');
const cloudHelper = require('../../../helper/cloud_helper.js');
const rowsSetHelper = require('rows_set_helper.js');

Component({
	options: {
		addGlobalClass: true,
	},
	/**
	 * 组件的属性列表
	 */
	properties: {
		list: {
			type: Array,
			value: []
		},

		ext: { //对于所有参数的集中传入
			type: Object,
			value: {}
		},


		hasPic: { //是否带题图
			type: Boolean,
			value: false
		},
		hasDetail: { //是否带详情
			type: Boolean,
			value: false
		},
		hasVal: { //是否同时填值
			type: Boolean,
			value: false
		},

		checkDetail: { //详情是否校验
			type: Boolean,
			value: false
		},
		checkPic: { //图片是否校验
			type: Boolean,
			value: false
		},

		maxCnt: { //最大数量
			type: Number,
			value: 100
		},
		minCnt: { //最小数量
			type: Number,
			value: 2
		},


		titleName: { //标题
			type: String,
			value: '条目'
		},

		valName: { //内容名
			type: String,
			value: '内容'
		},

		picName: { //题图名
			type: String,
			value: '图片'
		},

		detailName: { //详情名
			type: String,
			value: '详情'
		},

		isDemo: { //是否演示
			type: Boolean,
			value: true
		},
		titleMode: {  
			type: String,
			value: 'input'
		},
		valMode: { //hasVal==true下填值模式 input textarea
			type: String,
			value: 'input'
		},

		mark: { //id标识
			type: String,
			value: 'rows'
		},
		parentMark: { //引用其的父组件id标识 一般为editor
			type: String,
			value: ''
		},
		upDirectDir: { //不为空：则在非测试模式下直接上传
			type: String,
			value: 'rows/', //editor/
		}

	},

	/**
	 * 组件的初始数据
	 */
	data: {

	},

	lifetimes: {
		attached: function () {

		},
		ready: function () {
			this._init();
		},
		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		_init: function () {
			let list = rowsSetHelper.fmtRows(this.data.list);
			this.triggerEvent('change', list);

			this.setData({ list });

			// ext集中参数传入
			let entries = Object.entries(this.data.ext);
			for (let k = 0; k < entries.length; k++) {
				this.setData({ [entries[k][0]]: entries[k][1] });
			}

			// 是否真实上传
			const setting = require('../../../setting/setting.js');
			if (setting.IS_DEMO) {
				this.setData({
					upDirectDir: '',
					isDemo: true,
				})
			}
			else {
				this.setData({ isDemo: false });
			}

			// 如果不为空，则上传
			if (this.data.upDirectDir) {
				let upDirectDir = pageHelper.getPID() + '/' + this.data.upDirectDir;
				this.setData({
					upDirectDir
				});
			}
		},

		bindAddTap: function (e) {
			let list = this.data.list;
			//	if (list.length >= this.data.maxCnt) return pageHelper.showModal('最多可以添加' + this.data.maxCnt + '个' + this.data.titleName);

			let node = dataHelper.deepClone(rowsSetHelper.BASE_ROW);
			node.mark = rowsSetHelper.mark();
			list.push(node);
			this.setData({
				list
			});
			this.triggerEvent('change', list);
		},
		bindDelTap: function (e) {
			let list = this.data.list;
			//	if (list.length <= this.data.minCnt) return pageHelper.showModal('至少填写' + this.data.minCnt + '个' + this.data.titleName);


			let callback = () => {
				let idx = pageHelper.dataset(e, 'idx');
				if (list[idx].edit === false) {
					return pageHelper.showModal('本项不能删除');
				}

				list.splice(idx, 1);
				this.setData({
					list
				});
				this.triggerEvent('change', list);
			}

			pageHelper.showConfirm('确定删除该项吗？', callback);
		},
		bindTitleBlur: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value.trim();

			let list = this.data.list;

			if (list[idx].edit === false) {
				return pageHelper.showModal('本项不能修改');
			}

			list[idx].title = val;

			/*
			this.setData({
				list
			});*/

			this.triggerEvent('change', list);
		},
		bindValBlur: function (e) {
			let idx = pageHelper.dataset(e, 'idx');
			let val = e.detail.value.trim();
			let list = this.data.list;
			list[idx].val = val;

			/*
			this.setData({
				list
			});*/

			this.triggerEvent('change', list);
		},
		bindPicTap: function (e) {
			let idx = pageHelper.dataset(e, 'idx');

			let cb = () => {
				wx.chooseMedia({
					count: 1,
					mediaType: ['image'],
					sourceType: ['album', 'camera'],
					success: async res => {
						let pic = res.tempFiles[0].tempFilePath;
						let list = this.data.list;

						if (!this.data.isDemo) {
							wx.showLoading({ title: '上传中' });
							list[idx].pic = await cloudHelper.transTempPicOne(pic, 'rows/', '', false);
							wx.hideLoading();
						}
						else
							list[idx].pic = pic;

						this.setData({
							list
						});
						this.triggerEvent('change', list);
					}
				});
			}

			if (this.data.list[idx].pic) {
				wx.showActionSheet({
					itemList: ['更换' + this.data.picName, '删除' + this.data.picName],
					success: async res => {
						switch (res.tapIndex) {
							case 0: {
								cb();
								break;
							}
							case 1: {
								let callback = () => {
									let list = this.data.list;
									list[idx].pic = '';
									this.setData({
										list
									});
									this.triggerEvent('change', list);
								}
								pageHelper.showConfirm('确认删除?', callback);
								break;
							}
						}


					},
					fail: function (res) { }
				})
			}
			else
				cb();
		},

		getOneFormVal: function (idx) { //提供给父节点读取 对应的富文本值
			return this.data.list[idx].detail;
		},
		setOneFormVal: function (idx, detail)   //提供给父节点设定 对应的富文本值
		{
			let list = this.data.list;

			this.data.list[idx].detail = detail;
			this.setData({ list });
			this.triggerEvent('change', list);
		},
		checkForms: function (e) {

			//数据校验

			let list = this.data.list;

			for (let k = 0; k < list.length; k++) {
				delete list[k].focus;
				this.setData({ list });
			}

			let name = this.data.titleName;


			if (list.length > this.data.maxCnt) {
				return pageHelper.showModal(name + '最大可以填写' + this.data.maxCnt + '项，请删减之后再提交', '温馨提示')
			}

			if (list.length < this.data.minCnt) {
				return pageHelper.showModal(name + '至少需要填写' + this.data.minCnt + '项，请增加之后再提交', '温馨提示')
			}

			for (let k = 0; k < list.length; k++) {

				let no = k + 1;
				let node = list[k];
				let focus = '';


				//标题 
				if (node.title.length == 0) {
					if (this.data.hasVal)
						focus = name + no + '标题不能为空';
					else
						focus = name + no + '不能为空';
				}

				//填值
				else if (this.data.hasVal && node.val.length == 0) {
					focus = name + no + this.data.valName + '不能为空';
				}


				// 图片 
				else if (this.data.hasPic && this.data.checkPic && node.pic.length == 0) {
					focus = '请上传' + name + no + this.data.picName;
				}

				// 详情
				else if (this.data.hasDetail && this.data.checkDetail && node.detail.length == 0) {
					focus = '请填写' + name + no + this.data.detailName;
				}

				if (focus) {
					node.focus = focus;
					this.setData({ list });
					return pageHelper.showModal(focus, '温馨提示')
				}

			}


			return true;
		},
		url: function (e) {
			pageHelper.url(e, this);
		}
	}
})

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\rows\rows_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\rows\rows_cmpt.wxml
--------------------------------------------------
<block wx:for="{{list}}" wx:key="key">
	<view class="form-group form-rows-item" style="padding-right:0rpx;padding-left:5rpx">

		<view  class="line1 {{titleMode=='textarea'?'line2':''}}">
			<view wx:if="{{hasPic}}" bindtap='bindPicTap' data-idx="{{index}}" class="pic">
				<image wx:if="{{item.pic}}" mode="aspectFill" class="loading" src="{{item.pic}}" />
				<text wx:else class="icon-cameraadd"></text>
			</view>

			<text wx:if="{{hasVal}}" class="text-bold">{{titleName}}{{index+1}}标题：</text>
			<input wx:if="{{titleMode=='input'}}" bindinput='bindTitleBlur' bindblur='bindTitleBlur' data-idx="{{index}}" placeholder="请输入{{titleName}}{{index+1}}{{hasVal?'标题':''}}" disabled="{{!item.edit}}" maxlength="200" focus="{{item.focus}}" placeholder-class="phc" value="{{item.title}}"></input>
			<textarea wx:if="{{titleMode=='textarea'}}" bindinput='bindTitleBlur' bindblur='bindTitleBlur' data-idx="{{index}}" placeholder="请输入{{titleName}}{{index+1}}{{hasVal?'标题':''}}" disabled="{{!item.edit}}" style="min-height:200rpx;padding:20rpx 0" maxlength="500" auto-height="true"  focus="{{item.focus}}" placeholder-class="phc" value="{{item.title}}"></textarea>

			<view wx:if="{{hasDetail}}" bindtap="url" data-url="/cmpts/public/form/form_show/content/form_show_content?from=rows&cmptId={{mark}}&cmptFormName={{index}}&cmptParentId={{parentMark}}&upDirectDir={{upDirectDir}}" class="detail-set text-blue"><text class="icon-edit"></text><text class="{{item.detail.length==0?'text-orange':''}}">{{detailName}}{{item.detail.length==0?'未填':''}}</text></view>
			<view wx:if="{{item.edit}}" bindtap="bindDelTap" data-idx="{{index}}" class="icon-roundclose margin-left-xs text-red select-close"></view> 

		</view>
		<block wx:if="{{hasVal}}">
			<view class="line1 line2" wx:if="{{valMode=='input'}}">
				<text class="tit">{{valName}}：</text><input bindinput='bindValBlur' bindblur='bindValBlur' data-idx="{{index}}" placeholder="请输入{{valName}}{{index+1}} " maxlength="200" focus="{{item.focus}}" placeholder-class="phc" value="{{item.val}}"></input>
			</view>
			<view class="line1 line3" wx:if="{{valMode=='textarea'}}">
				<view class="tit">{{valName}}：</view>
				<textarea bindinput='bindValBlur' bindblur='bindValBlur' data-idx="{{index}}" placeholder="请输入{{valName}}{{index+1}}" style="min-height:120rpx" auto-height="true" focus="{{item.focus}}" placeholder-class="phc" value="{{item.val}}"></textarea>
				<view class="no">{{index+1}}</view>
			</view>
		</block>
	</view>
	<view wx:if="{{item.focus}}" class="hint-desc error">{{item.focus}}</view>
</block>


<view class="form-group form-rows-add" bindtap="bindAddTap">
	<view> <text class="icon-roundaddfill margin-right-xs"></text>添加新{{titleName}}
	</view>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\rows\rows_cmpt.wxss
--------------------------------------------------
.form-rows-item {
	display: flex;
	flex-direction: column;
}

.form-rows-item .line1 {
	width: 100%;
	display: flex;
	align-items: center;
	height: 100rpx;
	padding-left: 0rpx;
}

.form-rows-item .line2 {
	width: 100%;
	display: flex;
	align-items: center; 
	height: unset;
	padding-left: 0rpx;
}
.form-rows-item .line2 textarea{
	margin:0 5rpx 0;
}

.form-rows-item .line1 .pic {
	width: 90rpx;
	height: calc(100% - 10rpx);
	background-color: #f2f2f2;
	margin-right: 10rpx;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 50rpx;
	color: #999;
}

.form-rows-item .line1 image {
	width: 70rpx;
	height: 70rpx;
}

.form-rows-item .line1 input {
	flex: 1;
}

.form-rows-item .line1 .select-close {
	width: 80rpx;
	font-size: 40rpx !important;
	font-weight: bold;
	text-align: center;
	height: inherit;
	display: flex;
	align-items: center;
	justify-content: center;
}

.form-rows-item .line1 .detail-set {
	min-width: 80rpx;
	font-size: 26rpx !important;
	text-align: center;
	height: inherit;
	display: flex;
	align-items: center;
	justify-content: center;
}

.form-rows-item .line2 {
	display: flex;
}

.form-rows-item .line3 {
	display: flex;
	height: unset;
	align-items: flex-start;
	border-top: 1rpx dashed #f2f2f2;
	padding-top: 15rpx;
	position: relative;
}

.form-rows-item .line3 textarea {
	margin: unset;
	line-height: 1.4 !important;
	z-index: 99;
}

.form-rows-item .line3 .no {
	position: absolute;
	right: 15rpx;
	bottom: 5rpx;
	color: #eee;
	font-size: 40rpx;
	font-weight: bold;
}

.form-rows-item .line1 .tit {
	font-weight: bold;
	line-height: 1.4 !important;
}


.form-rows-add {
	display: flex;
	align-items: center;
	color: var(--blue);
	font-weight: normal;
	font-size: 28rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\rows\rows_set_helper.js
--------------------------------------------------

const helper = require('../../../helper/helper.js');
const dataHelper = require('../../../helper/data_helper.js');

const BASE_ROW = { mark: '', title: '', val: '', pic: '', detail: [], edit: true };

function fmtRows(rows) {
	for (let k = 0; k < rows.length; k++) {
		let node = rows[k];

		// 补充编号
		if (!node['mark']) node['mark'] = mark();

		if (!helper.isDefined(node['title'])) node['title'] = '';
		if (!helper.isDefined(node['val'])) node['val'] = '';
		if (!helper.isDefined(node['pic'])) node['pic'] = '';

		if (!helper.isDefined(node['detail'])) node['detail'] = [];
		if (!Array.isArray(node['detail'])) node['detail'] = [];

		if (!helper.isDefined(node['edit'])) node['edit'] = true;
	}
 
	return rows;
}

function mark() {
	return dataHelper.genRandomAlpha(10).toUpperCase();
};

module.exports = {
	BASE_ROW,
	fmtRows,
	mark
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\simple_list\simple_list_cmpt.js
--------------------------------------------------
const cloudHelper = require('../../../helper/cloud_helper.js');
const PublicBiz = require('../../../comm/biz/public_biz.js');

Component({
    options: {
        addGlobalClass: true,
        //pureDataPattern: /^_dataList/, // 指定所有 _ 开头的数据字段为纯数据字段
        multipleSlots: true // 在组件定义时的选项中启用多slot支持
    },

    /**
     * 组件的属性列表
     */
    properties: {
        route: { // 业务路由
            type: String,
            value: ''
        },
        _params: { //路由的附加参数
            type: Object,
            value: {}
        },
        _dataList: {
            type: Object,
            value: null
        },
        type: {
            type: String, //业务类型 info,user,well
            value: ''
        },
        top: {
            type: String, // 顶部空出高度 rpx
            value: '0'
        },
        topBottom: {
            type: String, // 回顶部按钮的位置 rpx
            value: '50'
        },
        isLoad: {
            type: Boolean, //数据加载中
            value: false
        },
        dataNoHint: {
            type: String, //无数据提示
            value: '暂无数据哦~'
        },
        isCache: { // 非缓存状态下或者list缓存过期下onshow加载, 缓存下onload加载
            type: Boolean, //是否cache
            value: true
        },
		show: {
            type: String, //显示模式 分页page或者直接显示show
            value: 'page'
        },
    },

    /**
     * 组件的初始数据
     */
    data: {
        refresherTriggered: false, //下拉刷新是否完成  

        topNum: 0, //回顶部
        topShow: false,
    },

    lifetimes: {
        created: function () {
            // 组件实例化，但节点树还未导入，因此这时不能用setData
        },
        attached: function () {
            // 在组件实例进入页面节点树时执行 
            // 节点树完成，可以用setData渲染节点，但无法操作节点 
        },
        ready: async function () {

            // 组件布局完成，这时可以获取节点信息，也可以操作节点 

            if (this.data.isCache) //缓存状态下加载
                await this._getList(1);
        },
        move: function () {
            // 组件实例被移动到树的另一个位置
        },
        detached: function () {
            // 在组件实例被从页面节点树移除时执行
        },
    },

    pageLifetimes: {
        async show() {
            // 页面被展示   
            if (!this.data.isCache || !PublicBiz.isCacheList(this.data.type)) {
                // 非缓存状态下或者 list缓存过期下加载
                await this._getList(1);
            }

        },
        hide() {
            // 页面被隐藏
        },
        resize(size) {
            // 页面尺寸变化
        }
    },

    /**
     * 组件的方法列表
     */
    methods: {
        reload: async function () {
            await this._getList(1);
        },
        // 数据列表
        _getList: async function (page) {
            this.setData({ isLoad: false });

            let params = {
                page: page,
                ...this.data._params
            };

            if (page == 1 && !this.data._dataList) {
                this.triggerEvent('list', {
                    dataList: null //第一页面且没有数据提示加载中
                });
            }


            let opt = {};
            //if (this.data._dataList && this.data._dataList.list && this.data._dataList.list.length > 0)
            opt.title = 'bar';
            await cloudHelper.dataList(this, '_dataList', this.data.route, params, opt);

            this.setData({ isLoad: true });

            this.triggerEvent('list', { //TODO 考虑改为双向数据绑定model 
                dataList: this.data._dataList
            });

            if (this.data.isCache)
                PublicBiz.setCacheList(this.data.type);
            if (page == 1) this.bindTopTap();

        },

        bindReachBottom: async function () {
            // 上拉触底  
            await this._getList(this.data._dataList.page + 1);

        },

        bindPullDownRefresh: async function () {
            // 下拉刷新
            this.setData({
                refresherTriggered: true
            });
            await this._getList(1);
            this.setData({
                refresherTriggered: false
            });

        },

        /**
         * 顶部位置
         * @param {*} e 
         */
        bindScrollTop: function (e) {
            if (e.detail.scrollTop > 100) {
                this.setData({
                    topShow: true
                });
            } else {
                this.setData({
                    topShow: false
                });
            }
        },

        /**
         * 一键回到顶部
         */
        bindTopTap: function () {
            this.setData({
                topNum: 0
            });
        },

    }
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\simple_list\simple_list_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\simple_list\simple_list_cmpt.wxml
--------------------------------------------------
<block wx:if="{{show=='page'}}">
<scroll-view class="scroll-view" scroll-y refresher-enabled="true" refresher-triggered="{{refresherTriggered}}" scroll-top='{{topNum}}' bindscroll="bindScrollTop"  bindscrolltolower="bindReachBottom" bindrefresherrefresh='bindPullDownRefresh' style="height: calc(100vh - {{top}}rpx);" >
    <slot /> 
    <view wx:if="{{!isLoad || !_dataList || (_dataList && _dataList.page < _dataList.count)}}" class="load text-grey loading"></view>
    <view wx:if="{{isLoad && _dataList && _dataList.page > 1 && _dataList.page == _dataList.count }}" class="load text-grey over"></view>
    <view wx:if="{{isLoad && _dataList && _dataList.total == 0}}" class="load text-grey">{{dataNoHint}}</view>

    <view style="height:200rpx;"></view>
</scroll-view>

<!-- top begin -->
<button wx:if="{{topShow}}" class="btn-fixed bg-gray text-gray btn-top" bindtap="bindTopTap" style="bottom:{{topBottom}}rpx;margin-bottom: constant(safe-area-inset-bottom);margin-bottom: env(safe-area-inset-bottom);"><text class="icon-top"></text></button>
<!-- top END. -->

</block>

<block wx:if="{{show=='show'}}">
	<view class="simple-view">
		<slot />
		<view wx:if="{{!isLoad || !_dataList }}" class="load text-grey loading"></view> 
		<view wx:if="{{isLoad && _dataList && _dataList.total == 0}}" class="load text-grey">{{dataNoHint}}</view>

		<view style="height:200rpx;"></view>
	</view>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\simple_list\simple_list_cmpt.wxss
--------------------------------------------------
﻿.scroll-view {
    height: 100vh;
}                
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\swiper\swiper_cmpt.js
--------------------------------------------------
const pageHelper = require('../../../helper/page_helper.js');
Component({
	options: {
		addGlobalClass: true,
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		images: {
			type: Array,
			value: []
		},
		height: {
			type: Number,
			value: 350
		},
		mode: {
			type: String,
			value: 'aspectFill'
		},
		indicatorActiveColor: {
			type: String,
			value: '#000000'
		},
		interval: {
			type: Number,
			value: 3000
		},
		duration: {
			type: Number,
			value: 500
		},
		previousMargin: {
			type: Number,
			value: 0
		},
		nextMargin: {
			type: Number,
			value: 0
		},
		indicatorDots: {
			type: Boolean,
			value: true
		},
		autoplay: {
			type: Boolean,
			value: true
		},
		circular: {
			type: Boolean,
			value: true
		},
		vertical: {
			type: Boolean,
			value: false
		},
	},

	/**
	 * 组件的初始数据
	 */
	data: {

	},

	/**
	 * 组件的方法列表
	 */
	methods: {
		url: function (e) {
			pageHelper.url(e, this);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\swiper\swiper_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\swiper\swiper_cmpt.wxml
--------------------------------------------------
<swiper wx:if="{{images.length>0}}" class="swiper" style="height:{{height}}rpx" indicator-active-color="{{indicatorActiveColor}}" indicator-dots="{{indicatorDots}}" autoplay="{{autoplay}}" circular="{{circular}}" vertical="{{vertical}}" interval="{{interval}}" duration="{{duration}}" previous-margin="{{previousMargin}}rpx" next-margin="{{nextMargin}}rpx">
	<swiper-item wx:for="{{images}}" wx:key="key">
		<image show-menu-by-longpress bindtap="url" style="height:{{height}}rpx" lazy-load="{{true}}" data-type="image" data-url="{{item}}" data-imgs="{{images}}" src='{{item}}' mode='{{mode}}' class="swiper-item-images loading" />
	</swiper-item>
</swiper>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\swiper\swiper_cmpt.wxss
--------------------------------------------------
.swiper {
	width: 100%; 
}
.swiper-item-images {
	width: 100%; 
} 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\table\table_cmpt.js
--------------------------------------------------
/**
 * 
 */
Component({
	/**
	 * 外部样式类
	 */
	externalClasses: ['header-row-class-name', 'row-class-name', 'cell-class-name'],

	/**
	 * 组件样式隔离
	 */
	options: {
		styleIsolation: "isolated",
		multipleSlots: true // 支持多个slot
	},

	/**
	 * 组件的属性列表
	 */
	properties: {
		data: {
			type: Array,
			value: []
		},
		headers: {
			type: Array,
			value: []
		},
		// table的高度, 溢出可滚动
		height: {
			type: String,
			value: 'auto'
		},
		width: {
			type: Number || String,
			value: '100%'
		},
		// 单元格的宽度
		tdWidth: {
			type: Number,
			value: 35
		},
		// 固定表头 thead达到Header的位置时就应该被fixed了
		offsetTop: {
			type: Number,
			value: 150
		},
		// 是否带有纵向边框
		stripe: {
			type: Boolean,
			value: false
		},
		// 是否带有纵向边框
		border: {
			type: Boolean,
			value: false
		},
		msg: {
			type: String,
			value: '暂无数据~'
		}
	},

	/**
	 * 组件的初始数据
	 */
	data: {
		scrolWidth: '20%'
	},

	lifetimes: {
		attached: function () {

		},
		ready: function () {

		},
		detached: function () {
			// 在组件实例被从页面节点树移除时执行
		},
	},

	/**
	 * 组件的方法列表
	 */
	methods: {

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\table\table_cmpt.json
--------------------------------------------------
{
	"component": true,
	"usingComponents": {}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\table\table_cmpt.wxml
--------------------------------------------------
<view scroll-x="{{true}}" scroll-y="{{true}}" scroll-anchoring="{{true}}" enhanced="{{true}}" bounces="{{false}}" class="table table-border">
	<!-- 表格头 start -->
	<view class="thead thead-border"  >
		<view wx:for="{{ headers }}" wx:key="*this" class="td" style="width:200rpx;">
			{{ item.label }}
		</view>
	</view>
	<!-- 表格头 end -->

	<!-- 表格体 start -->
	<view   class="tbody"  >
		<block wx:if="{{ data.length > 0 }}" wx:for-item="it" wx:for="{{ data }}" wx:key="*this" wx:for-index="idx">
			<view class="tbody-tr tbody-tr-stripe1  tbody-tr-border">
				<view wx:for-item="head" wx:for="{{ headers }}" wx:key="*this" class="td" style="width:200rpx; ">
					{{it[head["prop"]]}}
				</view>
			</view>
		</block>
		<!-- 列表无数据处理 -->
		<block wx:if="{{ data.length === 0 }}">
			<view class="no-data">{{ msg }}</view>
		</block>
	</view>
	<!-- 表格体 end -->
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\cmpts\public\table\table_cmpt.wxss
--------------------------------------------------
.reset {
    background: white;
} 

.other {
    font-size: 20px;
} 

.table {
  position: relative;
  font-size: 28rpx;
  background: #fff;  
  border-right:none;
  border-radius: 8rpx;  
  overflow: hidden;
}
.thead{
  border-bottom: none;
  display: flex;
  justify-content: flex-start;
  border-top-right-radius: 8rpx;
  border-top-left-radius: 8rpx;
  overflow: visible;
  color: #909399;
  border: 1px solid #ebeef5;
  box-sizing: border-box;
}
.thead .td {
  padding: 20rpx 10rpx;
  font-weight: bold;
  display: inline-block;   
  white-space:nowrap; 
  text-align: center;
  border-right: 1rpx solid #fff;
}
.thead .td:last-child {
  border-right: none;
}
.thead-border .td {
  border-right: 1rpx solid #ebeef5;
}
.thead-border .td:last-child {
  border-right: none;
}
/* .tr{
  display: flex;
  white-space:nowrap; 
} */
.tbody {
  box-sizing: border-box;
  font-size: 28rpx;
  color: #666;
  border: 1px solid #ebeef5;
  border-top: none;
  border-bottom-left-radius: 8rpx;
  border-bottom-right-radius: 8rpx;
}
.tbody-tr {
  display: flex;
  border-bottom: 1px solid #ebeef5;
}
.tbody-tr:last-child {
  border-bottom-left-radius: 8rpx;
  border-bottom-right-radius: 8rpx;
}

.tbody-tr-stripe {
  background: #fff;
  border-bottom: none;
}
.tbody-tr-stripe:nth-child(2n) {
  background: #F6F6F6;
}
.tbody-tr .td {
  white-space: wrap;
  padding:20rpx 10rpx;
  text-align: center;
}

.tbody-tr-border .td {
  border-right: 1rpx solid #F6F6F6;
}
.tbody-tr-border .td:last-child {  
  border-right: none;
}
.no-data {
  display: flex;
  padding: 50rpx;
  color: #666;
  justify-content: center;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\constants.js
--------------------------------------------------
/**
 * Notes: 通用常量
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

module.exports = {
	CACHE_TOKEN: 'CACHE_TOKEN', // 登录 
	CACHE_TOKEN_EXPIRE: 86400, //登录有效时间 秒 

	CACHE_ADMIN: 'ADMIN_TOKEN', // 管理员登录   
	ADMIN_TOKEN_EXPIRE: 3600 * 2, //管理员过期时间2小时有效 秒  


	CACHE_WORK: 'WORK_TOKEN', // 服务者登录   
	WORK_TOKEN_EXPIRE: 3600 * 10, //服务者过期时间  秒  

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\behavior\about_bh.js
--------------------------------------------------
const pageHelper = require('../../helper/page_helper.js');
const cloudHelper = require('../../helper/cloud_helper.js'); 

module.exports = Behavior({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false
	},

	methods: { 

		_loadDetail: async function (key, items, options = null) {
			let title = '';
			if (options && options.title) {
				title = decodeURIComponent(options.title);
				wx.setNavigationBarTitle({
					title
				});
			}
			else {
			for (let k = 0; k < items.length; k++) {
				if (items[k].key == key) {
					title = items[k].title;
					wx.setNavigationBarTitle({
						title
					});

					if (key == 'SETUP_CONTENT_ABOUT') {
						this.setData({
							accountInfo: wx.getAccountInfoSync()
						});
					}

					break;
				}
			}
			}

			let opts = {
				title: 'bar'
			}
			let params = {
				key
			}
			let about = await cloudHelper.callCloudData('home/setup_get', params, opts);
			if (!about) {
				about = [{ 'type': 'text', 'val': title }];
			}

			if (about) this.setData({
				about,
				isLoad: true
			});
		},

		/**
		 * 生命周期函数--监听页面初次渲染完成
		 */
		onReady: function () {

		},

		/**
		 * 生命周期函数--监听页面显示
		 */
		onShow: function () {

		},

		/**
		 * 生命周期函数--监听页面隐藏
		 */
		onHide: function () {

		},

		/**
		 * 生命周期函数--监听页面卸载
		 */
		onUnload: function () {

		},

		/**
		 * 页面相关事件处理函数--监听用户下拉动作
		 */
		onPullDownRefresh: function () {
			this._loadDetail();
			wx.stopPullDownRefresh();
		},


		/**
		 * 用户点击右上角分享
		 */
		onShareAppMessage: function () {

		},

		url: function (e) {
			pageHelper.url(e, this);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\behavior\my_fav_bh.js
--------------------------------------------------
const pageHelper = require('../../helper/page_helper.js');
const cloudHelper = require('../../helper/cloud_helper.js');

module.exports = Behavior({
	/**
	 * 页面的初始数据
	 */
	data: {
	},

	methods: {
		/**
		 * 生命周期函数--监听页面加载
		 */
		onLoad: async function (options) {
		},

		myCommListListener: function (e) {
			pageHelper.commListListener(this, e);
		},

		/**
		 * 生命周期函数--监听页面初次渲染完成
		 */
		onReady: function () {

		},

		/**
		 * 生命周期函数--监听页面显示
		 */
		onShow: function () {

		},

		/**
		 * 生命周期函数--监听页面隐藏
		 */
		onHide: function () {

		},

		/**
		 * 生命周期函数--监听页面卸载
		 */
		onUnload: function () {

		},


		/**
		 * 页面上拉触底事件的处理函数
		 */
		onReachBottom: function () {

		},

		url: function (e) {
			pageHelper.url(e, this);
		},

		bindDelTap: async function (e) {

			let oid = e.currentTarget.dataset.oid;
			if (!oid) return;
			let that = this;
			let callback = async function () {
				await cloudHelper.callCloudSumbit('fav/del', {
					oid
				}).then(res => {
					pageHelper.delListNode(oid, that.data.dataList.list, 'FAV_OID');
					that.data.dataList.total--;
					that.setData({
						dataList: that.data.dataList
					});
					pageHelper.showSuccToast('删除成功');
				}).catch(err => {
					console.log(err);
				 });
			}
			pageHelper.showConfirm('您确认删除？', callback);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\behavior\my_foot_bh.js
--------------------------------------------------
const FootBiz = require('../biz/foot_biz.js');
const pageHelper = require('../../helper/page_helper.js');

module.exports = Behavior({
	/**
	 * 页面的初始数据
	 */
	data: {
	},

	methods: {
		/**
		 * 生命周期函数--监听页面加载
		 */
		onLoad: async function (options) {
			this._loadList();
		},

		_loadList: async function (e) {
			let footList = FootBiz.getFootList();
			this.setData({
				footList
			});
		},
		/**
		 * 生命周期函数--监听页面初次渲染完成
		 */
		onReady: function () {

		},

		/**
		 * 生命周期函数--监听页面显示
		 */
		onShow: function () {

		},

		/**
		 * 生命周期函数--监听页面隐藏
		 */
		onHide: function () {

		},

		/**
		 * 生命周期函数--监听页面卸载
		 */
		onUnload: function () {

		},

		/**
		 * 页面相关事件处理函数--监听用户下拉动作
		 */
		onPullDownRefresh: async function () {
			await this._loadList();
			wx.stopPullDownRefresh();
		},

		/**
		 * 页面上拉触底事件的处理函数
		 */
		onReachBottom: function () {

		},

		url: function (e) {
			pageHelper.url(e, this);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\behavior\news_index_bh.js
--------------------------------------------------
﻿const BaseBiz = require('../../comm/biz/base_biz.js');
const pageHelper = require('../../helper/page_helper.js');
module.exports = Behavior({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		_params: null,

		sortMenus: [],
		sortItems: []
	},

	methods: {
		/**
			* 生命周期函数--监听页面加载
			*/
		onLoad: async function (options) {

		},

		/**
		 * 生命周期函数--监听页面初次渲染完成
		 */
		onReady: function () { },

		/**
		 * 生命周期函数--监听页面显示
		 */
		onShow: async function () {

		},

		/**
		 * 生命周期函数--监听页面隐藏
		 */
		onHide: function () {

		},

		/**
		 * 生命周期函数--监听页面卸载
		 */
		onUnload: function () {

		},

		url: async function (e) {
			pageHelper.url(e, this);
		},

		bindCommListCmpt: function (e) {
			pageHelper.commListListener(this, e);
		},

		/**
		 * 用户点击右上角分享
		 */
		onShareAppMessage: function () {

		},

		_setCate(cateList, options, cateId = null) {
			if (cateId) {
				if (options) options.id = cateId;

			} 

			if (options && options.id) {
			this.setData({
					isLoad: true,
				_params: {
						cateId: options.id,
				}
			});
				BaseBiz.setCateTitle(cateList, cateId);
			} else {
				this._getSearchMenu(cateList);
				this.setData({
					isLoad: true
				});
			} 

		},

		_getSearchMenu: function (cateList) {

			let sortItem1 = [{
				label: '全部',
				type: 'cateId',
				value: ''
			}];

			sortItem1 = sortItem1.concat(cateList);
			if (sortItem1.length <= 2) return;


			let sortItems = [];
			let sortMenus = sortItem1;
						this.setData({
				sortItems,
				sortMenus
			})

				}

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\behavior\search_bh.js
--------------------------------------------------
const SearchBiz = require('../../comm/biz/search_biz.js');
const pageHelper = require('../../helper/page_helper.js');

module.exports = Behavior({
	/**
	 * 页面的初始数据
	 */
	data: {
		type: '', // 来自哪个业务标识
		returnUrl: '', //搜索完返回哪个地址
		cacheName: '', //本业务搜索历史缓存
		search: '', //搜索关键字

		hisKeys: []
	},

	methods: {
		/**
 * 生命周期函数--监听页面加载
 */
		onLoad: async function (options) {
			let type = options.type;
			let returnUrl = options.returnUrl;

			let cacheName = 'SERACH_HIS_' + type;

			let hisKeys = SearchBiz.getHistory(cacheName);
			if (hisKeys)
				this.setData({
					hisKeys
				});

			this.setData({
				hisKeys,
				type,
				cacheName,
				returnUrl
			});

			if (options && options.source)
				this.setData({
					source: options.source,
				});

		},

		/**
		 * 生命周期函数--监听页面初次渲染完成
		 */
		onReady: function () {

		},

		/**
		 * 生命周期函数--监听页面显示
		 */
		onShow: function () {

		},

		/**
		 * 生命周期函数--监听页面隐藏
		 */
		onHide: function () {

		},

		/**
		 * 生命周期函数--监听页面卸载
		 */
		onUnload: function () {

		},

		url: function (e) {
			pageHelper.url(e, this);
		},


		/**
		 *  点击确认搜索
		 */
		bindSearchConfirm: function (e) {

			if (!this.data.type) return;

			let search = this.data.search.trim();
			if (!search) return;

			// 历史记录
			let hisKeys = SearchBiz.addHistory(this.data.cacheName, search);
			this.setData({
				search,
				hisKeys
			});

			let prevPage = pageHelper.getPrevPage();
			// 直接调用上一个页面的setData()方法，把数据存到上一个页面中去
			prevPage.setData({
				search,
			})
			wx.navigateBack();

		},

		// 清空搜索记录
		bindDelHisTap: function (e) {
			SearchBiz.clearHistory(this.data.cacheName);
			this.setData({
				hisKeys: []
			});
		},

		//清除关键字
		bindClearKeyTap: function (e) {
			this.setData({
				search: ''
			});
		},

		// 点击历史
		bindKeyTap: function (e) {
			let search = e.currentTarget.dataset.key.trim();
			if (search) {
				this.setData({
					search
				});
				this.bindSearchConfirm(e);
			}
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\admin_biz.js
--------------------------------------------------
/**
 * Notes: 后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const BaseBiz = require('./base_biz.js');
const cacheHelper = require('../../helper/cache_helper.js');
const cloudHelper = require('../../helper/cloud_helper.js');
const pageHelper = require('../../helper/page_helper.js');
const constants = require('../constants.js');
const setting = require('../../setting/setting.js');

class AdminBiz extends BaseBiz {

	// 文章内容
	static setContentDesc(that) {
		let contentDesc = '未填写';
		let content = that.data.formContent;
		let imgCnt = 0;
		let textCnt = 0;
		for (let k = 0; k < content.length; k++) {
			if (content[k].type == 'img') imgCnt++;
			if (content[k].type == 'text') textCnt++;
		}

		if (imgCnt || textCnt) {
			contentDesc = textCnt + '段文字，' + imgCnt + '张图片';
		}
		that.setData({
			contentDesc
		});
	}

	static async adminLogin(that, name, pwd) {
		if (name.length < 5 || name.length > 30) {
			wx.showToast({
				title: '账号输入错误(5-30位)',
				icon: 'none'
			});
			return;
		}

		if (pwd.length < 5 || pwd.length > 30) {
			wx.showToast({
				title: '密码输入错误(5-30位)',
				icon: 'none'
			});
			return;
		}

		let params = {
			name,
			pwd
		};
		let opt = {
			title: '登录中'
		};

		try {
			await cloudHelper.callCloudSumbit('admin/login', params, opt).then(res => {
				if (res && res.data && res.data.name)
					cacheHelper.set(constants.CACHE_ADMIN, res.data, constants.ADMIN_TOKEN_EXPIRE);

				wx.reLaunch({
					url: pageHelper.fmtURLByPID('/pages/admin/index/home/admin_home'),
				});
			});
		} catch (e) {
			console.log(e);
		}

	}


	/**
	 * 清空管理员登录
	 */
	static clearAdminToken() {
		cacheHelper.remove(constants.CACHE_ADMIN);
	}

	/**
	 * 获取管理员信息
	 */
	static getAdminToken() {
		return cacheHelper.get(constants.CACHE_ADMIN);
	}

	/**
	 * 获取管理员电话
	 */
	static getAdminName() {
		let admin = cacheHelper.get(constants.CACHE_ADMIN);
		if (!admin) return '';
		return admin.name;
	}

	/**
	 * 是否超级管理员
	 */
	static isSuperAdmin() {
		let admin = cacheHelper.get(constants.CACHE_ADMIN);
		if (!admin) return false;
		return (admin.type == 1);
	}

	//  登录状态判定
	static isAdmin(that, isSuper = false) {
		wx.setNavigationBarColor({ //顶部
			backgroundColor: '#2499f2',
			frontColor: '#ffffff',
		});

		if (setting.IS_SUB) wx.hideHomeButton();

		let admin = cacheHelper.get(constants.CACHE_ADMIN);
		if (!admin) {
			return wx.showModal({
				title: '',
				content: '登录已过期，请重新登录',
				showCancel: false,
				confirmText: '确定',
				success: res => {
					wx.reLaunch({
						url: pageHelper.fmtURLByPID('/pages/admin/index/login/admin_login'),
					});
					return false;
				}
			});

		}

		if (isSuper && admin.type != 1) {
			return wx.showModal({
				title: '',
				content: '此功能需要超级管理员操作',
				showCancel: false,
				confirmText: '确定',
				success: res => {
					wx.reLaunch({
						url: pageHelper.fmtURLByPID('/pages/admin/index/home/admin_home'),
					});
					return false;
				}
			});
		}

		that.setData({
			isAdmin: true,
			isSuperAdmin: this.isSuperAdmin(),
			admin
		});
		return true;
	}

}

AdminBiz.CHECK_FORM_MGR_ADD = {
	type: 'formType|must|int|default=0|name=类型',
	name: 'formName|must|string|min:5|max:30|name=账号',
	desc: 'formDesc|must|string|max:30|name=姓名',
	phone: 'formPhone|string|len:11|name=手机',
	password: 'formPassword|must|string|min:6|max:30|name=密码',
};

AdminBiz.CHECK_FORM_MGR_EDIT = {
	type: 'formType|must|int|default=0|name=类型',
	name: 'formName|must|string|min:5|max:30|name=账号',
	desc: 'formDesc|must|string|max:30|name=姓名',
	phone: 'formPhone|string|len:11|name=手机',
	password: 'formPassword|string|min:6|max:30|name=新密码',
};

AdminBiz.CHECK_FORM_MGR_PWD = {
	oldPassword: 'formOldPassword|must|string|min:6|max:30|name=旧密码',
	password: 'formPassword|must|string|min:6|max:30|name=新密码',
	password2: 'formPassword2|must|string|min:6|max:30|name=新密码再次填写',
};


module.exports = AdminBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\base_biz.js
--------------------------------------------------
﻿/**
 * Notes: 基础模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const pageHelper = require('../../helper/page_helper.js');

class BaseBiz {

	static getCateName(cateId, cateList) {
		for (let k = 0; k < cateList.length; k++) {
			if (cateList[k].id == cateId) {
				return cateList[k].title;
			}
		}
		return '';
	}

	static getCateList(cateList) {

		let arr = [];
		for (let k = 0; k < cateList.length; k++) {
			arr.push({
				label: cateList[k].title,
				type: 'cateId',
				val: cateList[k].id, //for options form
				value: cateList[k].id, //for list menu
			})
		}

		return arr;
	}

	static setCateTitle(cateList, cateId = null) {

		let curPage = pageHelper.getPrevPage(1);
		if (!curPage) return;

		if (!cateId) {
		if (curPage.options && curPage.options.id) {
			cateId = curPage.options.id;
		}
		}

		for (let k = 0; k < cateList.length; k++) {
			if (cateList[k].id == cateId) {
				wx.setNavigationBarTitle({
					title: cateList[k].title
				});
				curPage.setData({
					listMode: cateList[k].style || ''
				})
				return;
			}
		}

	}
}

module.exports = BaseBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\fav_biz.js
--------------------------------------------------
/**
 * Notes: 预约模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-12-10 07:48:00 
 */

const BaseBiz = require('./base_biz.js');
const cloudHelper = require('../../helper/cloud_helper.js');
const pageHelper = require('../../helper/page_helper.js');

class FavBiz extends BaseBiz {

	static async isFav(that, oid, type = '') {
		if (!oid) return;

		that.setData({
			isFav: -1
		});

		// 异步获取是否收藏
		let params = {
			oid,
			type
		};
		cloudHelper.callCloudSumbit('fav/is_fav', params, { title: 'bar' }).then(result => {
			that.setData({
				isFav: result.data.isFav
			});
		}).catch(error => { })
	}

	static async updateFav(that, oid, isFav, type, title) {
		let path = pageHelper.getCurrentPageUrlWithArgs();
		if (!oid || !path || !title || !type) return;

		let params = {
			oid,
			title,
			type,
			path
		}
		let opts = {
			title: (isFav == 0) ? '收藏中' : '取消中'
		}
		try {
			let result = await cloudHelper.callCloudSumbit('fav/update', params, opts);
			that.setData({
				isFav: result.data.isFav,
			});
		} catch (e) {
			console.log(e);
		}
	}

}

module.exports = FavBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\foot_biz.js
--------------------------------------------------
/**
 * Notes: 足迹模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY www.code942.com
 * Date: 2020-11-14 07:48:00 
 */

const BaseBiz = require('./base_biz.js');
const cacheHelper = require('../../helper/cache_helper.js');
const timeHelper = require('../../helper/time_helper.js');
const pageHelper = require('../../helper/page_helper.js');
const CACHE_FOOT = 'CACHE_FOOT';

class FootBiz extends BaseBiz {

	static getFootList() {
		let foot = cacheHelper.get(CACHE_FOOT);
		if (foot) {
			for (let i = 0; i < foot.length; i++) {
				foot[i].time = timeHelper.timestamp2Time(foot[i].time);
			}
		}

		return foot;
	}

	/**添加足迹缓存
	 * 
	 * @param {*} key 键
	 * @param {*} val 值 
	 * 格式 key:{ 
	 *  type:类型  
	 *  title:标题
	 *  time:加入时间
	 * }
	 * @param {*} size 最大个数
	 * @param {*} expire 过期时间
	 */
	static addFoot(type, title, size = 60, expire = 86400 * 365 * 3) {
		let path = pageHelper.getCurrentPageUrlWithArgs();
		if (!path || !title || !type) return [];

		let foot = cacheHelper.get(CACHE_FOOT, []);

		//查询是否存在 并删除
		for (let k = 0; k < foot.length; k++) {
			if (path == foot[k].path)
				foot.splice(k, 1);
		}

		// 加到头部
		let val = {
			path,
			type,
			title,
			time: timeHelper.time()
		}
		foot.unshift(val);

		// 判断个数， 多的删除
		if (foot.length > size)
			foot.splice(foot.length - 1, 1);

		// 存缓存
		cacheHelper.set(CACHE_FOOT, foot, expire);

		return foot;
	}
}

module.exports = FootBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\passport_biz.js
--------------------------------------------------
/**
 * Notes: 注册登录模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const BaseBiz = require('./base_biz.js');
const cacheHelper = require('../../helper/cache_helper.js');
const cloudHelper = require('../../helper/cloud_helper.js');
const pageHelper = require('../../helper/page_helper.js');
const helper = require('../../helper/helper.js');
const constants = require('../constants.js');

class PassportBiz extends BaseBiz {

	// 静默登录(有登录状态则不登录)  
	static async loginSilence(that) {
		return await PassportBiz.loginCheck(false, 'slience', 'bar', that);
	}

	// 强制静默登录(有不论是否有登录状态)  
	static async loginSilenceMust(that) {
		return await PassportBiz.loginCheck(false, 'must', 'bar', that);
	}

	// 必须登陆 可以取消(窗口形式) 
	static async loginMustCancelWin(that) {
		return await PassportBiz.loginCheck(true, 'cancel', '', that);
	}

	// 必须登陆 只能强制注册或者回上页(窗口形式)  
	static async loginMustBackWin(that) {
		return await PassportBiz.loginCheck(true, 'back', '', that);
	}

	// 获取token  
	static getToken() {
		let token = cacheHelper.get(constants.CACHE_TOKEN);
		return token || null;
	}

	// 设置token
	static setToken(token) {
		if (!token) return;
		cacheHelper.set(constants.CACHE_TOKEN, token, constants.CACHE_TOKEN_EXPIRE);
	}

	//  获取user id 
	static getUserId() {
		let token = cacheHelper.get(constants.CACHE_TOKEN);
		if (!token) return '';
		return token.id || '';
	}

	// 获取user name 
	static getUserName() {
		let token = cacheHelper.get(constants.CACHE_TOKEN);
		if (!token) return '';
		return token.name || '';
	}

	static getStatus() {
		let token = cacheHelper.get(constants.CACHE_TOKEN);
		if (!token) return -1;
		return token.status || -1;
	}

	// 是否登录 
	static isLogin() {
		let id = PassportBiz.getUserId();
		return (id.length > 0) ? true : false;
	}

	static loginStatusHandler(method, status) {
		let content = '';
		if (status == 0) content = '您的注册正在审核中，暂时无法使用此功能！';
		else if (status == 8) content = '您的注册审核未通过，暂时无法使用此功能；请在个人中心修改资料，再次提交审核！';
		else if (status == 9) content = '您的账号已经禁用, 无法使用此功能！';
		if (method == 'cancel') {
			wx.showModal({
				title: '温馨提示',
				content,
				confirmText: '取消',
				showCancel: false
			});
		}
		else if (method == 'back') {
			wx.showModal({
				title: '温馨提示',
				content,
				confirmText: '返回',
				showCancel: false,
				success(result) {
					wx.navigateBack();
				}
			});
		}
		return false;
	}

	// 登录判断及处理
	static async loginCheck(mustLogin = false, method = 'back', title = '', that = null) {
		let token = cacheHelper.get(constants.CACHE_TOKEN);
		if (token && method != 'must') {
			if (that)
				that.setData({
					isLogin: true
				});
			return true;
		} else {
			if (that) that.setData({
				isLogin: false
			});
		}

		let opt = {
			title: title || '登录中',
		};

		let res = await cloudHelper.callCloudSumbit('passport/login', {}, opt).then(result => {
			PassportBiz.clearToken();
			if (result && helper.isDefined(result.data.token) && result.data.token && result.data.token.status == 1) {
				PassportBiz.setToken(result.data.token);

				if (that) that.setData({
					isLogin: true
				});

				return true;
			}
			else if (mustLogin && result && helper.isDefined(result.data.token) && result.data.token && (result.data.token.status == 0 || result.data.token.status == 8 || result.data.token.status == 9)) {
				let status = result.data.token.status;
				return PassportBiz.loginStatusHandler(method, status);
			}
			else if (mustLogin && method == 'cancel') {
				wx.showModal({
					title: '温馨提示',
					content: '此功能仅限注册用户',
					confirmText: '马上注册',
					cancelText: '取消',
					success(result) {
						if (result.confirm) {
							let url = pageHelper.fmtURLByPID('/pages/my/reg/my_reg') + '?retUrl=back';
							wx.navigateTo({ url });

						} else if (result.cancel) {

						}
					}
				});

				return false;
			}
			else if (mustLogin && method == 'back') {
				wx.showModal({
					title: '温馨提示',
					content: '此功能仅限注册用户',
					confirmText: '马上注册',
					cancelText: '返回',
					success(result) {
						if (result.confirm) {
							let retUrl = encodeURIComponent(pageHelper.getCurrentPageUrlWithArgs());
							let url = pageHelper.fmtURLByPID('/pages/my/reg/my_reg') + '?retUrl=' + retUrl;
							wx.redirectTo({ url });
						} else if (result.cancel) {
							let len = getCurrentPages().length;
							if (len == 1) {
								let url = pageHelper.fmtURLByPID('/pages/default/index/default_index');
								wx.reLaunch({ url });
							}
							else
								wx.navigateBack();

						}
					}
				});

				return false;
			}
			else if (mustLogin && method == 'back') {
				wx.showModal({
					title: '温馨提示',
					content: '此功能仅限注册用户',
					confirmText: '马上注册',
					cancelText: '返回',
					success(result) {
						if (result.confirm) {
							let url = pageHelper.fmtURLByPID('/pages/my/reg/my_reg');
							wx.reLaunch({ url });
						} else if (result.cancel) {
							wx.navigateBack();
						}
					}
				});

				return false;
			}

		}).catch(err => {
			console.log(err);
			PassportBiz.clearToken();
			return false;
		});

		return res;
	}

	// 清除登录缓存
	static clearToken() {
		cacheHelper.remove(constants.CACHE_TOKEN);
	}

	// 手机号码
	static async getPhone(e, that) {
		if (e.detail.errMsg == "getPhoneNumber:ok") {

			let cloudID = e.detail.cloudID;
			let params = {
				cloudID
			};
			let opt = {
				title: '手机验证中'
			};
			await cloudHelper.callCloudSumbit('passport/phone', params, opt).then(res => {
				let phone = res.data;
				if (!phone || phone.length < 11)
					wx.showToast({
						title: '手机号码获取失败，请重新填写手机号码',
						icon: 'none',
						duration: 2000
					});
				else {
					that.setData({
						formMobile: phone
					});
				}
			});
		} else
			wx.showToast({
				title: '手机号码获取失败，请重新填写手机号码',
				icon: 'none'
			});
	}
}



/** 表单校验    */
PassportBiz.CHECK_FORM = {
	name: 'formName|must|string|min:1|max:30|name=昵称',
	mobile: 'formMobile|must|len:11|name=手机',
	forms: 'formForms|array'
};


module.exports = PassportBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\public_biz.js
--------------------------------------------------
/**
 * Notes: 通用业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-22 07:48:00 
 */

const BaseBiz = require('./base_biz.js');
const setting = require('../../setting/setting.js');
const cacheHelper = require('../../helper/cache_helper.js');
const dataHelper = require('../../helper/data_helper.js');

class PublicBiz extends BaseBiz {
	/**
	 * 页面初始化   
	 * @param {*} skin   
	 * @param {*} that  
	 */
	static initPageBase(that, { skin, isSetNavColor = true }) {
		if (skin) {
			skin.IS_SUB = setting.IS_SUB;

			if ((setting.IS_SUB)) {

				wx.hideHomeButton();

				// 顶部
				if (isSetNavColor)
					wx.setNavigationBarColor({
						backgroundColor: skin.NAV_BG,
						frontColor: skin.NAV_COLOR,
					});
			}

			that.setData({
				skin
			})
		}

	}

	// 从富文本提取简介
	static getRichEditorDesc(desc, content) {
		if (desc) return dataHelper.fmtText(desc, 100);
		if (!Array.isArray(content)) return desc;

		for (let k = 0; k < content.length; k++) {
			if (content[k].type == 'text') return dataHelper.fmtText(content[k].val, 100);
		}
		return desc;
	}

	static isCacheList(key) {
		key = key.toUpperCase();
		if (setting.CACHE_IS_LIST)
			return cacheHelper.get(key + '_LIST');
		else
			return false;
	}

	static removeCacheList(key) {
		key = key.toUpperCase();
		if (setting.CACHE_IS_LIST)
			cacheHelper.remove(key + '_LIST');
	}

	static setCacheList(key, time = setting.CACHE_LIST_TIME) {
		key = key.toUpperCase();
		if (setting.CACHE_IS_LIST)
			cacheHelper.set(key + '_LIST', 'TRUE', time);
	}

}

module.exports = PublicBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\comm\biz\search_biz.js
--------------------------------------------------
/**
 * Notes: 搜索模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const BaseBiz = require('./base_biz.js');
const cacheHelper = require('../../helper/cache_helper.js');

/**
 * 
 */
class SearchBiz extends BaseBiz {
	
	static clearHistory(key){
		cacheHelper.remove(key);
	}

	static getHistory(key)
	{ 
		return cacheHelper.get(key, []);

	}

	/**添加关键字缓存
	 * 
	 * @param {*} key 
	 * @param {*} val 
	 * @param {*} size 个数
	 * @param {*} expire 过期时间
	 */
	static addHistory(key, val, size = 20, expire = 86400 * 30)  {
		if (!val || val.length == 0) return [];
		
		let his = cacheHelper.get(key, []);
		
		//查询是否存在 并删除
		let pos = his.indexOf(val);	 
		if (pos > -1) his.splice(pos, 1);
 
		// 加到头部
		his.unshift(val);
 
		// 判断个数， 多的删除
		if (his.length > size)
			his.splice(his.length - 1, 1);
			
		// 存缓存
		cacheHelper.set(key, his, expire);

		return his;
	}

}

module.exports = SearchBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\cache_helper.js
--------------------------------------------------
/**
 * Notes: 微信缓存二次封装，有设置时效性的封装
 * Ver : CCMiniCloud Framework 3.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */
const helper = require('./helper.js');

const TIME_SUFFIX = "_deadtime"

/**
 * 设置
 * k 键key
 * v 值value
 * t 秒
 */
function set(k, v, t = 86400 * 30) {
	if (!k) return null;

	wx.setStorageSync(k, v);
	let seconds = parseInt(t);
	if (seconds > 0) {
		let newtime = Date.parse(new Date());
		newtime = newtime / 1000 + seconds;
		wx.setStorageSync(k + TIME_SUFFIX, newtime + "");
	} else {
		wx.removeStorageSync(k + TIME_SUFFIX);
	}
}
 

/**
 * 获取
 * k 键key
 * def 默认值
 */
function get(k, def = null) {
	if (!k) return null;

	let deadtime = wx.getStorageSync(k + TIME_SUFFIX); 
	if (!deadtime) return def;
 
	deadtime = parseInt(deadtime); 
	if (!deadtime) return def;
	
	if (deadtime) {
		if (parseInt(deadtime) < Date.parse(new Date()) / 1000) {
			wx.removeStorageSync(k); 
			wx.removeStorageSync(k + TIME_SUFFIX); 
			return def;
		}
	} 

	let res = wx.getStorageSync(k);
 
	if (helper.isDefined(res)) {
		return res;
	} else {
		return def;
	}
}

/**
 * 删除
 */
function remove(k) {
	if (!k) return null;
	
	wx.removeStorageSync(k);
	wx.removeStorageSync(k + TIME_SUFFIX);
}

/**
 * 清除所有key
 */
function clear() {
	wx.clearStorageSync();
}

module.exports = {
	set,
	get,
	remove,
	clear
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\cloud_helper.js
--------------------------------------------------
/**
 * Notes: 云操作类库
 * Ver : CCMiniCloud Framework 2.3.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const helper = require('./helper.js');
const dataHelper = require('./data_helper.js');
const cacheHelper = require('./cache_helper.js');
const constants = require('../comm/constants.js');
const contentCheckHelper = require('../helper/content_check_helper.js');
const pageHelper = require('../helper/page_helper.js');
const timeHelper = require('../helper/time_helper.js');
const setting = require('../setting/setting.js');

const CODE = {
	SUCC: 200,
	SVR: 500, //服务器错误  
	LOGIC: 1600, //逻辑错误 
	DATA: 1301, // 数据校验错误 
	HEADER: 1302, // header 校验错误  

	ADMIN_ERROR: 2401, //管理员错误
	WORK_ERROR: 2501 //陪练员错误
};

function callCloudSumbitAsync(route, params = {}, options) {
	if (!helper.isDefined(options)) options = {
		hint: false
	}
	if (!helper.isDefined(options.hint)) options.hint = false;
	return callCloud(route, params, options)
}

async function callCloudSumbit(route, params = {}, options = { title: '提交中...' }) {
	if (!helper.isDefined(options)) options = {
		title: '提交中..'
	}
	if (!helper.isDefined(options.title)) options.title = '提交中..';
	return await callCloud(route, params, options);
}

async function callCloudData(route, params = {}, options) {
	if (!helper.isDefined(options)) options = {
		title: '加载中..'
	}

	if (!helper.isDefined(options.title)) options.title = '加载中..';
	let result = await callCloud(route, params, options).catch(err => {
		return null;
	});

	if (result && helper.isDefined(result.data)) {
		result = result.data;
		if (Array.isArray(result)) {
			// 数组处理
		} else if (Object.keys(result).length == 0) {
			result = null; //对象处理
		}

	}
	return result;
}

function callCloud(route, params = {}, options) {

	let title = '加载中';
	let hint = true;

	// 标题
	if (helper.isDefined(options) && helper.isDefined(options.title))
		title = options.title;

	if (helper.isDefined(options) && helper.isDefined(options.hint))
		hint = options.hint;

	if (helper.isDefined(options) && helper.isDefined(options.doFail))
		doFail = options.doFail;

	if (hint) {
		if (title == 'bar')
			wx.showNavigationBarLoading();
		else
			wx.showLoading({
				title: title,
				mask: true
			})
	}

	let token = '';
	// 管理员token
	if (route.indexOf('admin/') > -1) {
		let admin = cacheHelper.get(constants.CACHE_ADMIN);
		if (admin && admin.token) token = admin.token;

	} else if (route.indexOf('work/') > -1) { 
		let work = cacheHelper.get(constants.CACHE_WORK);
		if (work && work.token) token = work.token;
	}
	else {
		//正常用户
		let user = cacheHelper.get(constants.CACHE_TOKEN);
		if (user && user.id) token = user.id;
	}

	return new Promise(function (resolve, reject) {

		let PID = pageHelper.getPID();

		wx.cloud.callFunction({
			name: 'mcloud',
			data: {
				route: route,
				token,
				PID,
				params
			},
			success: function (res) {
				if (res.result.code == CODE.LOGIC || res.result.code == CODE.DATA) {
					console.log(res)
					// 逻辑错误&数据校验错误 
					if (hint) {
						wx.showModal({
							title: '温馨提示',
							content: res.result.msg,
							showCancel: false
						});
					}

					reject(res.result);
					return;
				} else if (res.result.code == CODE.ADMIN_ERROR) {
					// 后台登录错误
					wx.reLaunch({
						url: pageHelper.fmtURLByPID('/pages/admin/index/login/admin_login'),
					});
					//reject(res.result);
					return;

				} else if (res.result.code == CODE.WORK_ERROR) {
					// 服务者登录错误
					wx.reLaunch({
						url: pageHelper.fmtURLByPID('/pages/work/index/login/work_login'),
					});
					//reject(res.result);
					return;
				}
				else if (res.result.code != CODE.SUCC) {
					if (hint) {
						wx.showModal({
							title: '温馨提示',
							content: '系统开小差了，请稍后重试',
							showCancel: false
						});
					}
					reject(res.result);
					return;
				}

				resolve(res.result);
			},
			fail: function (err) {
				if (hint) {
					console.log(err)
					if (err && err.errMsg && err.errMsg.includes('-501000') && err.errMsg.includes('Environment not found')) {
						wx.showModal({
							title: '',
							content: '未找到云环境ID，请按手册检查前端配置文件setting.js的配置项【CLOUD_ID】或咨询作者微信wxid_kyh093u96kxb22',
							showCancel: false
						});

					} else if (err && err.errMsg && err.errMsg.includes('-501000') && err.errMsg.includes('FunctionName')) {
						wx.showModal({
							title: '',
							content: '云函数未创建或者未上传，请参考手册或咨询作者微信wxid_kyh093u96kxb22',
							showCancel: false
						});

					} else if (err && err.errMsg && err.errMsg.includes('-501000') && err.errMsg.includes('performed in the current function state')) {
						wx.showModal({
							title: '',
							content: '云函数正在上传中或者上传有误，请稍候',
							showCancel: false
						});
					} else
						wx.showModal({
							title: '',
							content: '网络故障，请稍后重试',
							showCancel: false
						});
				}
				reject(err.result);
				return;
			},
			complete: function (res) {
				if (hint) {
					if (title == 'bar')
						wx.hideNavigationBarLoading();
					else
						wx.hideLoading();
				}
				// complete
			}
		});
	});
}

async function dataList(that, listName, route, params, options, isReverse = false) {

	console.log('dataList begin');

	if (!helper.isDefined(that.data[listName]) || !that.data[listName]) {
		let data = {};
		data[listName] = {
			page: 1,
			size: 20,
			list: [],
			count: 0,
			total: 0,
			oldTotal: 0
		};
		that.setData(data);
	}

	//改为后台默认控制
	//if (!helper.isDefined(params.size))
	//	params.size = 20;

	if (!helper.isDefined(params.isTotal))
		params.isTotal = true;

	let page = params.page;
	let count = that.data[listName].count;
	if (page > 1 && page > count) {
		wx.showToast({
			duration: 500,
			icon: 'none',
			title: '没有更多数据了',
		});
		return;
	}

	for (let key in params) {
		if (!helper.isDefined(params[key]))
			delete params[key];
	}

	let oldTotal = 0;
	if (that.data[listName] && that.data[listName].total)
		oldTotal = that.data[listName].total;
	params.oldTotal = oldTotal;

	// 云函数调用 
	await callCloud(route, params, options).then(function (res) {
		console.log('cloud begin');

		let dataList = res.data;
		let tList = that.data[listName].list;

		if (dataList.page == 1) {
			tList = res.data.list;
		} else if (dataList.page > that.data[listName].page) {
			if (isReverse)
				tList = res.data.list.concat(tList);
			else
				tList = tList.concat(res.data.list);
		} else
			return;

		dataList.list = tList;
		let listData = {};
		listData[listName] = dataList;

		that.setData(listData);

		console.log('cloud END');
	}).catch(err => {
		console.log(err)
	});

	console.log('dataList END');

}

async function getTempFileURLOne(fileID) {
	if (!fileID) return '';

	let result = await wx.cloud.getTempFileURL({
		fileList: [fileID],
	})
	if (result && result.fileList && result.fileList[0] && result.fileList[0].tempFileURL)
		return result.fileList[0].tempFileURL;
	return '';
}

async function transTempPics(imgList, dir, id, prefix = '') {
	if (setting.IS_DEMO) return imgList; 

	if (prefix && !prefix.endsWith('_')) prefix += '_';
	if (!id) id = timeHelper.time('YMD');

	for (let i = 0; i < imgList.length; i++) {

		let filePath = imgList[i];
		let ext = filePath.match(/\.[^.]+?$/)[0];

		// 是否为临时文件
		if (filePath.includes('tmp') || filePath.includes('temp') || filePath.includes('wxfile')) {

			let rd = prefix + dataHelper.genRandomNum(1000000, 9999999);
			let cloudPath = id ? dir + id + '/' + rd + ext : dir + rd + ext;

			if (pageHelper.getPID())
			cloudPath = pageHelper.getPID() + '/' + cloudPath;


			await wx.cloud.uploadFile({
				cloudPath,
				filePath: filePath, // 文件路径
			}).then(res => {
				imgList[i] = res.fileID;
			}).catch(error => {
				// handle error TODO:剔除图片
				console.error(error);
			})
		}
	}

	return imgList;
}

async function transRichEditorTempPics(content, dir, id, route) {

	let imgList = [];
	for (let k = 0; k < content.length; k++) {
		if (content[k].type == 'img') {
			imgList.push(content[k].val);
		}
	}

	// 图片上传到云空间
	imgList = await transTempPics(imgList, dir, id, 'rich');

	// 更新图片地址
	let imgIdx = 0;
	for (let k = 0; k < content.length; k++) {
		if (content[k].type == 'img') {
			content[k].val = imgList[imgIdx];
			imgIdx++;
		}
	}

	// 更新本记录的图片信息
	let params = {
		id,
		content
	}

	try {
		await callCloudSumbit(route, params);
		return content;
	} catch (e) {
		console.error(e);
	}

	return [];
}

async function transCoverTempPics(imgList, dir, id, route) {
	// 图片上传到云空间
	imgList = await transTempPics(imgList, dir, id, 'cover');

	// 更新本记录的图片信息
	let params = {
		id,
		imgList: imgList
	}

	try {
		let res = await callCloudSumbit(route, params);
		return res.data.urls;
	} catch (err) {
		console.error(err);
	}
}

async function transFormsTempPics(forms, dir, id, route) {
	wx.showLoading({
		title: '提交中...',
		mask: true
	});

	let hasImageForms = [];
	for (let k = 0; k < forms.length; k++) {
		if (forms[k].type == 'image') {
			forms[k].val = await transTempPics(forms[k].val, dir, id, 'image');
			hasImageForms.push(forms[k]);
		}
		else if (forms[k].type == 'content') {
			let contentVal = forms[k].val;
			for (let j in contentVal) {
				if (contentVal[j].type == 'img') {
					let ret = await transTempPics([contentVal[j].val], dir, id, 'content');
					contentVal[j].val = ret[0];
				}
			}
			hasImageForms.push(forms[k]);
		}
	}

	if (hasImageForms.length == 0) return;

	let params = {
		id,
		hasImageForms
	}

	try {
		await callCloudSumbit(route, params);
	} catch (err) {
		console.error(err);
	}
}

async function transTempPicOne(img, dir, id, isCheck = true) {

	if (isCheck) {
		wx.showLoading({
			title: '图片校验中',
			mask: true
		});
		let check = await contentCheckHelper.imgCheck(img);
		if (!check) {
			wx.hideLoading();
			return pageHelper.showModal('不合适的图片, 请重新上传', '温馨提示');
		}
		wx.hideLoading();
	}

	let imgList = [img];
	imgList = await transTempPics(imgList, dir, id);

	if (imgList.length == 0)
		return '';
	else {
		return imgList[0];
	}


}

module.exports = {
	CODE,
	dataList,
	callCloud,
	callCloudSumbit,
	callCloudData,
	callCloudSumbitAsync,
	transTempPics,
	transRichEditorTempPics,
	transCoverTempPics,
	transFormsTempPics,
	getTempFileURLOne,
	transTempPicOne
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\content_check_helper.js
--------------------------------------------------
 /**
 * Notes: UGC内容校验
 * Ver : CCMiniCloud Framework 2.4.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const cloudHelper = require('../helper/cloud_helper.js');
const pageHelper = require('../helper/page_helper.js');
const setting = require('../setting/setting.js');

/**
 * 图片类型校验
 * @param {*} fileName 
 * @param {*} type 
 */
function imgTypeCheck(path, type = ['jpg', 'jpeg', 'png','JPG','JPEG','PNG']) {
	let fmt = path.split(".")[(path.split(".")).length - 1];
	if (type.indexOf(fmt) > -1)
		return true;
	else
		return false;
}

/**
 * 图片大小校验
 * @param {*} size 
 * @param {*} maxSize 
 */
function imgSizeCheck(size, maxSize) {
	return size < maxSize;
}

async function imgCheckCloud(path, opt) {
 
	
	/*
	let result = await cloudHelper.callCloudSumbit('check/img', params, opt).then(res => {
		return true;
	}).catch(err => {
		return false;
	}); 
		*/

	let result = await wx.cloud.callFunction({
		name: 'cloud',
		data: {
			route: 'check/img',
			token : '',
			params:{img: wx.cloud.CDN( {
				type: 'filePath',
				filePath: path,
			})
		}
		},
		success: function (res) { 
			console.log(res)
			console.log('succ')
			return true;
		},
		fail: function (res) {
			console.log(res)
			return false;
		},
		complete: function (res) {
			 
		}
	});
	return result;
}

/**
 * 图像校验
 * @param {*} imgData 
 */
async function imgCheck(imgData) { 

	let result = await wx.serviceMarket.invokeService({
		service: 'wxee446d7507c68b11',
		api: 'imgSecCheck',
		data: {
			"Action": "ImageModeration",
			"Scenes": ["PORN", "POLITICS", "TERRORISM"],
			"ImageUrl":  new wx.serviceMarket.CDN({
				type: 'filePath',
				filePath: imgData,
			}),
			"ImageBase64": '',
			"Config": "",
			"Extra": ""
		},
	}).then(res => {
		if (res && res.data && res.data.Response &&
			res.data.Response.PornResult && res.data.Response.PornResult.Suggestion === 'PASS' &&
			res.data.Response.PoliticsResult && res.data.Response.PoliticsResult.Suggestion === 'PASS' &&
			res.data.Response.TerrorismResult && res.data.Response.TerrorismResult.Suggestion === 'PASS')
			return true;
		else
			return false;
	}).catch(err => {
		console.log(err);
		return false;
	});

	return result;
}


module.exports = {
	imgCheck,
	imgCheckCloud,
	imgTypeCheck,
	imgSizeCheck
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\data_helper.js
--------------------------------------------------
/**
 * Notes: 字符相关操作函数
 * Ver : CCMiniCloud Framework 2.5.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */


/**
 * 生成一个特定范围内的随机数
 */
const genRandomNum = (min, max) => (Math.random() * (max - min + 1) | 0) + min;

/**
 * 生成一个随机的数字字母字符串 
 */
const genRandomString = len => {
	const text = 'abcdefghijklmnopqrstuvwxyz0123456789';
	const rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text)));
	return rdmString;
}

/**
 * 生成一个随机的字母字符串 
 */
const genRandomAlpha = len => {
	const text = 'abcdefghijklmnopqrstuvwxyz';
	const rdmIndex = text => Math.random() * text.length | 0;
	let rdmString = '';
	for (; rdmString.length < len; rdmString += text.charAt(rdmIndex(text)));
	return rdmString;
}

// 标签格式化
function fmtTag(tag) {
	if (!tag || tag.constructor != String) return '';
	tag = tag.trim();
	tag = tag.replace(/，/g, ',');

	let arr = tag.split(',');
	let newArr = [];
	for (let k = 0; k < arr.length; k++) {
		arr[k] = arr[k].trim();
		if (arr[k].length > 0) newArr.push(arr[k]);
	}
	return newArr.join(',');
}

// 拆分一维数组为二维数组
function spArr(arr, size) {
	if (!arr || !Array.isArray(arr) || arr.length == 0) return arr;

	let newArray = [];
	let index = 0;
	while (index < arr.length) {
		newArray.push(arr.slice(index, index += size));
	}
	return newArray;
}

/**
 * 把字符串格式化为数组
 * @param {*} str 
 * @param {*} sp 
 */
function str2Arr(str, sp = ',') {
	if (str && Array.isArray(str)) return str;

	str = str.replace(/，/g, sp);
	let arr = str.split(sp);
	for (let i = 0; i < arr.length; i++) {
		arr[i] = arr[i].trim();

		if (isNumber(arr[i])) {
			arr[i] = Number(arr[i]);
		}

	}
	return arr;
}

/**
 *  校验只要是数字（包含正负整数，0以及正负浮点数）就返回true 
 * @param {*} val 
 * @returns bool
 */
function isNumber(val) {
	var reg = /^[0-9]+.?[0-9]*$/;
	if (reg.test(val)) {
		return true;
	} else {
		return false;
	}
}

/**
 * 提取对象数组的某个属性数组,如[{'x':1},{'x':2}] 提取 x得到[1,2]
 * @param {*} arr 
 * @param {*} key 
 * @returns []
 */
function getArrByKey(arr, key) {
	if (!Array.isArray(arr)) return;
	return arr.map((item) => {
		return item[key]
	});
}

/**
 * 提取对象数组的多个属性数组, 
 * 如 [{'x':1,'y':11,'z':111},{'x':2,'y':22,'z':222}] 
 * 提取 ['x','y'] 得到[{'x':1,'y':11},{'x':2,'y':22}]
 * @param {*} arr 
 * @param {*} keys 
 * @returns []
 */
function getArrByKeyMulti(arr, keys = []) {
	if (!Array.isArray(arr)) return;
	if (!Array.isArray(keys)) return;

	let ret = [];
	for (let k = 0; k < arr.length; k++) {
		let node = {};
		for (let j in keys) {
			node[keys[j]] = arr[k][keys[j]];
		}
		ret.push(node);
	}

	return ret;
}

/**
 * 提取对象数组某个键值等于某值的对象数据
 * @param {*} arr 
 * @param {*} key  
 * @param {*} val 
 * @returns object {}
 */
function getDataByKey(arr, key, val) { 
	if (!Array.isArray(arr)) return null;

	for (let k = 0; k < arr.length; k++) {
		if (arr[k][key] == val)
			return arr[k];
	}

	return null;
}

/**
 * 文本内容格式化处理
 * @param {*} content 
 * @param {*} len 截取长度 -1不截取
 */
function fmtText(content, len = -1) {
	if (!content) return content;
	
	let str = content.replace(/[\r\n]/g, ""); //去掉回车换行
	if (len > 0) {
		str = str.substr(0, len);
	}
	return str.trim();
}

// 下划线转换驼峰
function toHump(name) {
	name = name.replace(/\_(\w)/g, function (all, letter) {
		return letter.toUpperCase();
	});

	// 首字母大写 
	let firstChar = name.charAt(0).toUpperCase();
	return firstChar + name.slice(1);
}

// 驼峰转换下划线
function toLine(name) {
	name = name.replace(/([A-Z])/g, "_$1").toLowerCase();

	//如果首字符为下划线，干掉
	if (name.charAt(0) === '_')
		return name.slice(1);
	else
		return name;
}

// 金额格式化 dot为金额每隔三位用","或" "间隔
function fmtMoneyShow(s, dot = ',', prefix = '¥') {
	if (s === '' || s === null || s === undefined) s = 0;
	
	s = parseFloat((s + "").replace(/[^\d\.-]/g, "")).toFixed(2) + "";
	var l = s.split(".")[0].split("").reverse(),
		r = s.split(".")[1];
	t = "";
	for (i = 0; i < l.length; i++) {
		t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? dot : "");
	}
	return prefix + t.split("").reverse().join("") + "." + r;
}

// 金额格式化 不能超过16位
function fmtMoney(money) {
	money = Number(money);
	if (!money) money = 0;
	money = money.toFixed(2)
	money = Number(money);
	return money;
}


/**
 *简单数组转对象数组
 * @param {*} arr [1,2,3]
 * @param {*} key [x1,x2,x3]
 * @returns [{x1:1,x2:1,x3:1},{x1:2,x2:2,x3:2},{x1:3,x2:3,x3:3}]
 */
function arr2ObjectArr(arr, key1, key2, key3) {
	let ret = [];
	for (let k = 0; k < arr.length; k++) {
		let obj = {};
		if (key1) obj[key1] = arr[k];
		if (key2) obj[key2] = arr[k];
		if (key3) obj[key3] = arr[k];
		ret.push(obj);
	}
	return ret;
}

/**
 * property
 * @param {*} property 排序属性
 * @returns 排序好的数组 
 * 用法 arr.sort(compare('age'))
 */
function objArrSortAsc(property) {
	return function (a, b) {
		var value1 = a[property];
		var value2 = b[property];
		if (value1 < value2)
			return -1;
		else if (value1 > value2)
			return 1;
		else return 0;
	}
}

/**
 * property
 * @param {*} property 排序属性
 * @returns 排序好的数组 
 * 用法 arr.sort(compare('age'))
 */
function objArrSortDesc(property) {
	return function (a, b) {
		var value1 = a[property];
		var value2 = b[property];
		if (value1 < value2)
			return 1;
		else if (value1 > value2)
			return -1;
		else return 0;
	}
}

/**
 * 数组有则减少，无则增加
 * @param {*} arr 
 * @param {*} data 
 * @param {*} sort 排序方式 asc/desc
 */
function arrAddDel(arr, data, sort = 'asc') {
	if (!arr) return arr;
	if (!Array.isArray(arr)) return arr;

	let idx = arr.indexOf(data);
	if (idx > -1)
		arr.splice(idx, 1);
	else
		arr.push(data)

	if (sort == 'asc')
		return arr.sort();
	else
		return arr.reverse();
} 

//数据深度拷贝
function deepClone(data) {
	if (data === null || typeof data === 'string' || typeof data === 'number' || typeof data === 'boolean' || typeof data === 'undefined') {
		return data;
	}

	return JSON.parse(JSON.stringify(data));
}

function padLeft(str, len, charStr) {
	if (!str)
		str = '';
	else
		str = str + '';
	return new Array(len - str.length + 1).join(charStr || '') + str;
}

function padRight(str, len, charStr) {
	if (!str)
		str = '';
	else
		str = str + '';
	return str + new Array(len - str.length + 1).join(charStr || '');
}


// 选项表单处理
function getSelectOptions(str) {
	if (!str)
		return [];
	else if (str.includes('=')) {
		let arr = str.split(',');
		for (let k = 0; k < arr.length; k++) {
			let node = arr[k].split('=');
			arr[k] = {};

			let labelArr = node[1].split('|');
			arr[k].label = labelArr[0];
			if (labelArr.length > 1) { //扩展属性
				arr[k].ext = labelArr[1];
			}
			arr[k].val = node[0];
		}
		return arr;
	} else {
		return str.split(',');
	}
}

// 数组元素交换位置 index1和index2分别是两个数组的索引值
function arraySwap(arr, index1, index2) {
	arr[index1] = arr.splice(index2, 1, arr[index1])[0];
	return arr;
}

// 数组置顶
function arrayTop(arr, idx) {
	let node = arr.splice(idx, 1)[0];
	arr.unshift(node);
	return arr;
}

// 数组置底
function arrayBottom(arr, idx) {
	let node = arr.splice(idx, 1)[0];
	arr.push(node);
	return arr;
}

/**
 * 把某个值/对象按key插到某个对象数组
 * @param {*} arr  目标数组
 * @param {*} key  键
 * @param {*} val  判断值
 * @param {*} obj  插入对象{}
 */
function insertObjArrByKey(arr, key, val, obj) {
	if (!arr) return arr;

	for (let k = 0; k < arr.length; k++) {
		if (arr[k][key] == val) {
			// 发现存在
			arr[k].list.push(obj);
			return arr;
		}
	}

	// 不存在
	let newObj = {
		[key]: val,
		list: [obj]
	}
	arr.push(newObj);
	return arr;
}

/**
 * 从对象数组中， 根据某个键值 获取满足的对象
 * @param {*} arr 
 * @param {*} key 
 * @param {*} val 
 */
function getValFromArr(arr, key = 'val', val = '') {
	if (!Array.isArray(arr)) return null;
	for (let k = 0; k < arr.length; k++) {
		if (arr[k][key] == val)
			return arr[k];
	}

	return null;
}


module.exports = {
	arrayTop,
	arraySwap,
	arrayBottom,

	fmtTag,

	getValFromArr,
	getArrByKey,
	getArrByKeyMulti, //提取对象数组的多个属性数组
	spArr, //拆分一维数组为二维
	getDataByKey,
	str2Arr,
	arr2ObjectArr,
	insertObjArrByKey,
	arrAddDel,
	objArrSortAsc,
	objArrSortDesc,

	arrAddDel,
	isNumber,

	padLeft,
	padRight,

	genRandomString, // 随机字符串
	genRandomAlpha,
	genRandomNum, // 随机数字 
	fmtText, // 文本内容格式化处理
	fmtMoneyShow, //金额格式化
	fmtMoney,

	toHump,
	toLine,

	getSelectOptions, //选项表单处理

	deepClone

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\file_helper.js
--------------------------------------------------
/**
 * Notes: 文件处理相关函数
 * Ver : CCMiniCloud Framework 2.7.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-02-05 04:00:00 
 */
const pageHelper = require('./page_helper.js');
const timeHelper = require('./time_helper.js');

function openDoc(name, url, ext = '.xlsx') {

	wx.showLoading({
		title: '文件下载中',
	});

	wx.downloadFile({
		url,
		//fileID:' ',
		filePath: wx.env.USER_DATA_PATH + '/' + name + timeHelper.time('YMDhms') + ext,
		success: function (res) {
			wx.hideLoading();
			if (res.statusCode != 200)
				return pageHelper.showModal('打开文件失败，请重试或者采取别的下载方式');

			const filePath = res.filePath;
			wx.openDocument({
				showMenu: true,
				filePath: filePath,
				success: function (res) {
					console.log('打开文档成功');
				}
			})
		},
		fail: function (err) {
			wx.hideLoading();
			console.log(err);
			pageHelper.showModal('打开文件失败，请重试或者采取别的下载方式');
		}
	})
}

module.exports = {
	openDoc
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\form_helper.js
--------------------------------------------------
 /**
  * Notes: 表单通用类库
  * Ver : CCMiniCloud Framework 2.8.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
  * Date: 2021-02-28 07:48:00 
  */


 /**
  * model变表单
  * @param {*} model 
  */
 function model2Form(model) {
 	let newModel = {};
 	for (let key in model) {
 		let arr = key.split('_');
 		let result = '';
 		for (let i = 1; i < arr.length; i++) {
 			let name = arr[i].toLowerCase();
 			name = name.charAt(0).toUpperCase() + name.slice(1);
 			result = result + name;
 		}

 		newModel['form' + result] = model[key];
 	}
 	return newModel;
 }

 // picker表单赋值到页面data
 function setOptions(that, options, name, val) {
 	let idx = options.indexOf(val);
 	idx = (idx < 0) ? 0 : idx;
 	that.setData({
 		[name]: idx
 	})
 }

 module.exports = {
 	model2Form,
 	setOptions
 }
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\helper.js
--------------------------------------------------
 /**
  * Notes: 通用类库
  * Ver : CCMiniCloud Framework 2.9.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
  * Date: 2020-11-14 07:48:00 
  */

 /**
  * 判断变量，参数，对象属性是否定义
  * @param {*} val 
  */
 function isDefined(val) {
 	// ==  不能判断是否为null
 	if (val === undefined)
 		return false;
 	else
 		return true;
 }

 /**
  * 判断对象是否为空
  * @param {*} obj 
  */
 function isObjectNull(obj) {
 	return (Object.keys(obj).length == 0);
 }


 function sleep(time) {
 	return new Promise((resolve) => setTimeout(resolve, time));
 };


 function formatNumber(n) {
 	n = n.toString()
 	return n[1] ? n : '0' + n
 }

 /**
  * 从picker options中 获取索引值
  * @param {*} options 
  * [{
 		value: 0,
 		label: '猎头'
 	}]
  * @param {*} val 
  */
 function getOptionsIdx(options, val) {
 	for (let i = 0; i < options.length; i++) {
 		if (options[i].value === val)
 			return i;
 	}
 	return 0;
 }
  
 

 module.exports = {
 	isDefined,
 	isObjectNull,  
 	sleep,
     

 	getOptionsIdx,    
 
 }
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\mini_helper.js
--------------------------------------------------
/**
 * Notes: 软硬件系统相关函数
 * Ver : CCMiniCloud Framework 2.11.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-01-25 29:00:00 
 */


function getAuth(auth, authName, callback) {
	auth = 'scope.' + auth;
	wx.getSetting({
		success: res => {
			console.log(res)
			if (res.authSetting[auth]) {
				console.log('true');
				callback && callback();
			} else if (res.authSetting[auth] === undefined) {
				// 未做任何授权
				wx.showModal({
					title: '提示',
					mask: true,
					content: '您尚未开启' + authName + '的权限，请点击确定去开启权限！',
					success: (res) => {
						if (res.confirm) {
							wx.authorize({
								scope: auth,
								success: (res) => {
									console.log('授权成功', res);
									callback && callback();
								},
								fail: (res) => {
									console.log('您没有授权 fail=', res);
									wx.showToast({
										mask: true,
										title: '您没有授权，无法' + authName,
										icon: 'none'
									});
								}
							});
						} else {
							wx.showToast({
								mask: true,
								title: '您没有授权，无法' + authName,
								icon: 'none'
							});
						}
					}
				});
			} else {
				// 已经禁止
				wx.showModal({
					title: '提示',
					content: '您未开启' + authName + '的权限，请点击确定去开启权限！',
					success: (res) => {
						if (res.confirm) {
							wx.openSetting({
								success: (res) => {
									wx.showToast({
										mask: true,
										icon: 'none',
										title: '正在' + authName,
									});
									if (res.authSetting[auth]) {
										console.log('false success res=', res);
										callback && callback();
									} else {
										wx.showToast({
											mask: true,
											title: '您没有授权，无法' + authName + '！',
											icon: 'none'
										});
									}
								},
								fail: (res) => {
									console.log('false file res=', res);
								}
							});
						} else {
							wx.showToast({
								mask: true,
								title: '您没有授权，无法' + authName,
								icon: 'none'
							});
						}
					}
				});
			}
		}
	});
}

module.exports = {
	getAuth
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\page_helper.js
--------------------------------------------------
/**
 * Notes: 通用页面操作类库
 * Ver : CCMiniCloud Framework 2.0.11 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const helper = require('./helper.js');
const setting = require('../setting/setting.js');
const cacheHelper = require('./cache_helper.js');
const picHelper = require('./pic_helper.js');

function openMap(e) {
	let location = dataset(e, 'location');
	let address = dataset(e, 'address');
	wx.openLocation({
		latitude: location.latitude,
		longitude: location.longitude,
		address: address,
		scale: 18
	})
}

// 加入手机日程 单位秒
function addPhoneCalendar(title, startTime, endTime, alarmOffset = 3600) {
	wx.addPhoneCalendar({
		title,
		startTime,
		endTime,
		//	description: "这是日程内容", 
		alarm: 'true',
		alarmOffset, //提前时间，秒
		success: () => {
			pageHelper.showSuccToast('添加成功');
		},
		fail: (res) => {
			if (res && res.errMsg && res.errMsg.includes('refuesed')) {
				pageHelper.showModal('请在手机的"设置›微信" 选项中，允许微信访问你的日历', '日历权限未开启')
			}
		},
		complete: (res) => {
			console.log(res)
		}

	});
}

// 自定义导航高度
function getCustomNavHeight() {
	let sysInfo = wx.getSystemInfoSync();
	let menuInfo = wx.getMenuButtonBoundingClientRect();
	let navigationBarHeight = menuInfo.top + menuInfo.bottom - sysInfo.statusBarHeight;
	return navigationBarHeight;
}

function getCurrentPageURL() {
	const pages = getCurrentPages();
	const currentPage = pages[pages.length - 1];
	const url = `/${currentPage.route}`;
	return url;
}

function getCurrentPageUrlWithArgs() {
	let pages = getCurrentPages();
	let currentPage = pages[pages.length - 1];
	let url = currentPage.route;
	let options = currentPage.options;

	let urlWithArgs = url + '?';
	for (let key in options) {
		let value = options[key];
		urlWithArgs += key + '=' + value + '&';
	}
	urlWithArgs = urlWithArgs.substring(0, urlWithArgs.length - 1);
	return '/' + urlWithArgs;
}


function getPID() {
	let route = getCurrentPageURL();

	let PID = route.replace('/projects/', '');
	PID = PID.split('/')[0];
	return PID;
}

function fmtURLByPID(url, PID = '') {
	if (!PID) PID = getPID();
	if (url.startsWith('/pages/')) {
		url = url.replace('/pages/', '/projects/' + PID + '/pages/');
	} else {
		url = '/projects/' + PID + '/' + url;
	} 
	return url;
}

/** 定时器销毁 */
function clearTimer(that, timerName = 'timer') {
	if (helper.isDefined(that.data[timerName])) {
		clearInterval(that.data[timerName]);
	}
}

/**
 *  获取父页面
 * @param {*} deep  1=当前 2=父页 3=父父页
 */
function getPrevPage(deep = 2) {
	let pages = getCurrentPages();
	let prevPage = pages[pages.length - deep]; //上一个页面 
	return prevPage;
}

/**
 * 修改当前/父页面的某个列表节点
 * @param {*} id 主键
 * @param {*} valName 被修改的字段名
 * @param {*} val  被修改的值 
 * @param {*} list   数据集
 * @param {*} idName 主键名
 */
function modifyListNode(id, list, valName, val, idName = '_id') {

	if (!list || !Array.isArray(list)) return false;
	let pos = list.findIndex(item => item[idName] === id);
	if (pos > -1) {
		list[pos][valName] = val;
		return true;
	}
	return false;
}

/**
 * 修改当前/父页面的某个列表节点(单个值)
 * @param {*} id 主键
 * @param {*} valName 被修改的字段名
 * @param {*} val  被修改的值
 * @param {*} deep  1=当前 2=父页 3=父父页
 * @param {*} listName   数据集名
 * @param {*} idName 主键名
 */
function modifyPrevPageListNode(id, valName, val, deep = 2, listName = 'dataList', idName = '_id') {
	let prevPage = getPrevPage(deep);
	if (!prevPage) return;

	let dataList = prevPage.data[listName];
	if (!dataList) return;

	let list = dataList['list'];
	if (modifyListNode(id, list, valName, val, idName)) {
		prevPage.setData({
			[listName + '.list']: list
		});
	}
}

/**
 * 修改当前/父页面的某个列表节点(一组值)
 * @param {*} id 主键
 * @param {*} valName 被修改的字段名
 * @param {*} val  被修改的值
 * @param {*} deep  1=当前 2=父页 3=父父页
 * @param {*} listName   数据集名
 * @param {*} idName 主键名
 */
function modifyPrevPageListNodeObject(id, vals, deep = 2, listName = 'dataList', idName = '_id') {
	let prevPage = getPrevPage(deep);
	if (!prevPage) return;

	let dataList = prevPage.data[listName];
	if (!dataList) return;

	let list = dataList['list'];

	for (let key in vals) {
		modifyListNode(id, list, key, vals[key], idName)
	}

	prevPage.setData({
		[listName + '.list']: list
	});
}

/**
 * 从记录数组里删除某个节点
 * @param {*} id 
 * @param {*} list 
 * @param {*} idName 
 */
function delListNode(id, list, idName = '_id') {
	if (!list || !Array.isArray(list)) return false;
	let pos = list.findIndex(item => item[idName] === id);
	if (pos > -1) {
		list.splice(pos, 1);
		return true;
	}
	return false;
}


/**
 * 删除当前/父页面的某个列表节点
 * @param {*} id 主键
 * @param {*} deep 1=当前 2=父页 3=父父页
 * @param {*} listName  数据集名
 * @param {*} idName  主键名
 */
function delPrevPageListNode(id, deep = 2, listName = 'dataList', idName = '_id') {
	let prevPage = getPrevPage(deep);
	let dataList = prevPage.data[listName];
	if (!dataList) return;

	let list = dataList['list'];
	let total = dataList['total'] - 1;
	if (delListNode(id, list, idName)) {
		prevPage.setData({
			[listName + '.list']: list,
			[listName + '.total']: total
		});
	}

}

/**
 * 刷新当前/父页面的某个列表节点
 * @param {*} deep  1=当前 2=父页 3=父父页
 * @param {*} listName  数据集名
 * @param {*} listFunc  翻页函数名
 */
async function refreshPrevListNode(deep = 2, listName = 'dataList', listFunc = '_getList') {
	let prevPage = getPrevPage(deep);
	let dataList = prevPage.data[listName];
	if (!dataList) return;
	await prevPage[listFunc]();
}

/**
 * 回到顶部测算
 */
function scrollTop(e, that) {
	if (e.scrollTop > 100) {
		that.setData({
			topShow: true
		});
	} else {
		that.setData({
			topShow: false
		});
	}
}


/**
 * 删除图片
 * @param {*} that 
 * @param {*} idx  被删除图片索引
 * @param {*} imgListName  图片数组名
 */
function delImage(that, idx, imgListName = 'imgList') {
	let callback = function () {
		that.data[imgListName].splice(idx, 1);
		that.setData({
			[imgListName]: that.data[imgListName]
		})
	}
	showConfirm('确定要删除该图片吗？', callback);
}

/**
 * 图片预览
 * @param {*} that 
 * @param {*} url 
 * @param {*} imgListName  图片数组名
 */
function previewImage(that, url, imgListName = 'imgList') {
	// 图片预览
	wx.previewImage({
		urls: that.data[imgListName],
		current: url
	});
}

/**
 * 取得data-数据 去掉驼峰式命名，改成纯小写式命名
 * @param {*} e 
 * @param {*} name 
 * @param {*} child  是否获取穿透子元素的data-
 */
function dataset(e, name, child = false) {
	if (!child)
		return e.currentTarget.dataset[name];
	else
		return e.target.dataset[name];
}

// 表单的双向数据绑定 
function model(that, e) {
	let item = e.currentTarget.dataset.item;
	that.setData({
		[item]: e.detail.value
	})
}

// 表单的开关按钮数据绑定 mode=int/bool
function switchModel(that, e, mode = 'int') {
	let item = e.currentTarget.dataset.item;
	let sel = (e.detail.value) ? 1 : 0;

	if (mode == 'bool') {
		sel = (e.detail.value) ? true : false;
	}

	that.setData({
		[item]: sel
	})
}

// 无提示成功，同时做后续处理, 最多可显示两行
function showNoneToast(title = '操作完成', duration = 1500, callback) {
	return wx.showToast({
		title: title,
		icon: 'none',
		duration: duration,
		mask: true,
		success: function () {
			callback && (setTimeout(() => {
				callback();
			}, duration));
		}
	});
}

// 无提示成功，返回 
function showNoneToastReturn(title = '操作完成', duration = 2000) {
	let callback = function () {
		wx.navigateBack();
	}
	return showNoneToast(title, duration, callback);
}

// 错误提示成功，同时做后续处理, 最多显示7个汉字长度
function showErrToast(title = '操作失败', duration = 1500, callback) {
	return wx.showToast({
		title: title,
		icon: 'error',
		duration: duration,
		mask: true,
		success: function () {
			callback && (setTimeout(() => {
				callback();
			}, duration));
		}
	});
}

// 加载中，同时做后续处理, 最多显示7个汉字长度
function showLoadingToast(title = '加载中', duration = 1500, callback) {
	return wx.showToast({
		title: title,
		icon: 'loading',
		duration: duration,
		mask: true,
		success: function () {
			callback && (setTimeout(() => {
				callback();
			}, duration));
		}
	});
}

// 提示成功，同时做后续处理, 最多显示7个汉字长度
function showSuccToast(title = '操作成功', duration = 1500, callback) {
	return wx.showToast({
		title: title,
		icon: 'success',
		duration: duration,
		mask: true,
		success: function () {
			callback && (setTimeout(() => {
				callback();
			}, duration));
		}
	});
}

// 提示成功，同时返回
function showSuccToastReturn(title = '操作成功', duration = 1500) {
	let callback = function () {
		wx.navigateBack();
	}
	return showSuccToast(title, duration, callback);
}

// 清理提示焦点
function formClearFocus(that) {
	let data = that.data;
	let focus = {};
	for (let key in data) {
		if (key.startsWith('form') && !key.endsWith('Focus'))
			focus[key + 'Focus'] = null;
	}
	that.setData({
		...focus
	});
}

// 焦点提示
function formHint(that, formName, hint) {
	that.setData({
		[formName + 'Focus']: hint
	});
	return showModal(hint);
}

// 二次确认操作 
function showConfirm(title = '确定要删除吗？', yes, no) {
	return wx.showModal({
		title: '',
		content: title,
		cancelText: '取消',
		confirmText: '确定',
		success: res => {
			if (res.confirm) {
				yes && yes();
			} else if (res.cancel) {
				no && no();
			}
		}
	})
}

function showModal(content, title = '温馨提示', callback = null, confirmText = null) {
	return wx.showModal({
		title,
		content: content,
		confirmText: confirmText || '确定',
		showCancel: false,
		success(res) {
			callback && callback();
		}
	});
}

/**
 * 页面赋值
 * @param {*} that 
 * @param {*} data 
 */
function setPageData(that, data) {
	// 删除页面保留数据
	if (helper.isDefined(data['__webviewId__']))
		delete data['__webviewId__'];

	that.setData(data);
}
/**
 * 配合搜索列表响应监听
 * @param {*} that 
 */
function commListListener(that, e) {
	if (helper.isDefined(e.detail.search))
		that.setData({
			search: '',
			sortType: '',
		});
	else {
		that.setData({
			dataList: e.detail.dataList,
		});
		if (e.detail.sortType)
			that.setData({
				sortType: e.detail.sortType,
			});
	}

}

function bindShowModalTap(e) {
	this.setData({
		modalName: e.currentTarget.dataset.modal
	})
}

function bindHideModalTap(e) {
	this.setData({
		modalName: null
	})
}


/**
 * 控制回页首按钮
 * @param {*} e 
 */
function showTopBtn(e, that) {
	if (e.scrollTop > 100) {
		that.setData({
			topBtnShow: true
		});
	} else {
		that.setData({
			topBtnShow: false
		});
	}
}

/**
 * 回到顶部
 */
function top() {
	wx.pageScrollTo({
		scrollTop: 0
	})
}

// 跳到锚点
function anchor(id, that) {
	try {
		let query = wx.createSelectorQuery().in(that);
		query.selectViewport().scrollOffset()
		//#comm 跳转到指定id位置
		query.select('#' + id).boundingClientRect();

		query.exec(function (res) {
			if (!res || res.length != 2 || !res[0] || !res[1]) return;
			//第一个为视图，第二个为当前id

			let miss = res[0].scrollTop + res[1].top - 10;
			wx.pageScrollTo({
				scrollTop: miss,
				duration: 300
			});
		});
	}
	catch (err) {
		console.error(err);
	}
}

// 页面跳转/图片预览 
function url(e, that) {
	let url = e.currentTarget.dataset.url;
	let type = e.currentTarget.dataset.type;
	if (!type) type = 'url';

	switch (type) {
		case 'picker': {
			//picker 选择trigger 	
			let item = e.currentTarget.dataset.item;
			that.setData({
				[item]: e.detail
			})
			break;
		}
		case 'top': {
			top();
			break;
		}
		case 'mini': {
			wx.navigateToMiniProgram({
				appId: e.currentTarget.dataset.app,
				path: url,
				envVersion: 'release'
			});
			break;
		}
		case 'redirect': {
			if (!url) return;
			wx.redirectTo({
				url
			});
			break;
		}
		case 'reLaunch':
		case 'relaunch': {
			if (!url) return;
			wx.reLaunch({
				url
			})
			break;
		}
		case 'copy': {
			wx.setClipboardData({
				data: url,
				success(res) {
					wx.getClipboardData({
						success(res) {
							showNoneToast('已复制到剪贴板');
						}
					})
				}
			});
			break;
		}
		case 'hint': {
			if (!url) return;
			showModal(url);
			break;
		}
		case 'switch': {
			if (!url) return;
			wx.switchTab({
				url
			});
			break;
		}
		case 'back': {
			wx.navigateBack();
			break;
		}
		case 'toURL': {
			toURL(url);
			break;
		}
		case 'phone': {
			wx.makePhoneCall({
				phoneNumber: url
			});
			break;
		}
		case 'anchor': {
			anchor(url, that);
			break;
		}
		case 'saveimg':
		case 'saveimage': {
			let callback = function () {
				wx.saveImageToPhotosAlbum({ //成功之后保存到本地 
					filePath: url, //生成的图片的本地路径
					success: function (res) {
						wx.showToast({
							title: e.currentTarget.dataset.hint || '保存成功',
							icon: 'none',
							duration: 2000
						})
					},
					fail: function (err) {
						console.log(err);
					}
				})
			}

			picHelper.getWritePhotosAlbum(callback);
			break;
		}
		case 'bool': //正反 
			{
				that.setData({
					[url]: !that.data[url]
				})
				break;
			}
		case 'img':
		case 'image': {
			if (url.indexOf('qlogo') > -1) { //微信大图
				url = url.replace('/132', '/0');
			}
			let urls = [url];

			if (helper.isDefined(e.currentTarget.dataset.imgs))
				urls = e.currentTarget.dataset.imgs;

			wx.previewImage({
				current: url, // 当前显示图片的http链接
				urls
			})
			break;
		}
		default:
			if (!url) return;
			wx.navigateTo({
				url
			})

	}

}

function getOptions(that, options, idName = 'id') {
	let id = options[idName];

	if (!id) id = options['scene']; // 二维码扫入

	if (!id) return false;

	that.setData({
		[idName]: id
	});
	return true;

}

// 页面提示
function hint(msg, type = 'redirect') {
	if (type == 'reLaunch')
		wx.reLaunch({
			url: fmtURLByPID('/pages/public/hint?type=9&msg=' + encodeURIComponent(msg)),
		});
	else
		wx.redirectTo({
			url: fmtURLByPID('/pages/public/hint?type=9&msg=' + encodeURIComponent(msg)),
		});
}


// 跳转操作，找到页面中的目标，出栈后面的 delta=1为上一页面
function toURL(url) {
	let pages = getCurrentPages();
	for (let k = 0; k < pages.length; k++) {
		if (pages[k].route.includes(url)) {
			wx.navigateBack({
				delta: pages.length - k - 1
			});
			return;
		}
	}

	wx.redirectTo({
		url,
	});

}

/** ListTouch触摸开始 */
function listTouchStart(e, that) {
	that.setData({
		touchX: e.touches[0].pageX
	})
}

/** ListTouch计算方向 */
function listTouchMove(e, that, precision = 50) {
	if (that.data.touchX - e.touches[0].pageX > precision) {
		that.setData({
			touchDirection: 'left'
		});
	} else if (that.data.touchX - e.touches[0].pageX < -precision) {
		that.setData({
			touchDirection: 'right'
		});
	}

}

/** ListTouch计算滚动 */
function listTouchEnd(e, that) {
	if (that.data.touchDirection == 'left') {
		that.setData({
			touchCur: e.currentTarget.dataset.idx
		})
	} else {
		that.setData({
			touchCur: null
		})
	}

	that.setData({
		touchDirection: null
	});
}



/**
 * 多条件复合查询条件
 * @param {*} e 
 * @param {*} key 查询键值
 * @param {*} val  查询值
 * @param {*} def  键值的数据类型(int,str,float)
 */
function queryMulti(that, e, key, val, def) {
	key = helper.isDefined(key) ? key : dataset(e, 'key');
	val = helper.isDefined(val) ? val : dataset(e, 'val');
	def = helper.isDefined(def) ? def : dataset(e, 'def');

	// 类型转换
	if (def == 'int') {
		val = parseInt(val);
	} else if (def == 'float') {
		val = parseFloat(val);
	} else if (def == 'str') {
		val = val.toString();
	}

	let _params = that.data._params;
	_params.query[key] = val;
	that.setData({
		_params
	})
}

/**
 * 页面缓存
 * @param {*} key  
 * @param {*} that 
 * @param {*} listKey  数据项KEY
 */
function cacheListExist(key, that, listKey = 'list') {
	key = key.toUpperCase();
	if (setting.CACHE_IS_LIST)
		return cacheHelper.get(key + '_LIST') && that.data && that.data[listKey];
	else
		return false;
}

function cacheListRemove(key) {
	key = key.toUpperCase();
	if (setting.CACHE_IS_LIST)
		cacheHelper.remove(key + '_LIST');
}

function cacheListSet(key, time = setting.CACHE_LIST_TIME) {
	key = key.toUpperCase();
	if (setting.CACHE_IS_LIST)
		cacheHelper.set(key + '_LIST', 'TRUE', time);
}

// 通过数组构建列表的菜单
function makeListMenu(arr, label, mark) {
	let ret = [];
	ret.push({ label, type: mark, value: '' });
	for (let k = 0; k < arr.length; k++) {
		ret.push({ label: arr[k], type: mark, value: arr[k] });
	}
	return ret;
}


module.exports = {
	openMap,
	addPhoneCalendar,

	getCustomNavHeight,

	getPID,
	getCurrentPageURL,
	getCurrentPageUrlWithArgs,
	fmtURLByPID,

	//### form
	formClearFocus,
	formHint,

	//### 
	dataset, //节点数据data-

	//### 节点操作
	getPrevPage,
	modifyListNode,
	modifyPrevPageListNode, //单个
	modifyPrevPageListNodeObject, //一组
	delListNode,
	delPrevPageListNode,
	refreshPrevListNode,

	scrollTop, //### 回顶部

	// ### 图片 
	previewImage,
	delImage,

	//## 提示窗口
	showSuccToastReturn,
	showSuccToast,
	showErrToast,
	showNoneToast,
	showNoneToastReturn,
	showLoadingToast,
	showConfirm,
	showModal,
	setPageData,

	hint, //单独提示页

	commListListener, //组件监听

	bindShowModalTap,
	bindHideModalTap,
	showTopBtn,

	getOptions, //获取id或者其他参数

	model, // 双向数据绑定
	switchModel, //开关控件数据绑定

	top, // 回顶部事件
	url, // 跳转事件
	anchor, //锚点跳转事件  

	toURL, //跳转操作

	//### 列表横向滑动
	listTouchStart,
	listTouchMove,
	listTouchEnd,

	//### 多条件复合查询
	queryMulti,

	clearTimer, //定时器销毁

	//LIST数据缓存
	cacheListExist,
	cacheListRemove,
	cacheListSet,

	makeListMenu

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\pic_helper.js
--------------------------------------------------
/**
 * Notes: 图片处理相关函数
 * Ver : CCMiniCloud Framework 2.0.13 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-10-25 04:00:00 
 */


function getWritePhotosAlbum(callback) {
	wx.getSetting({
		success: res => {
			console.log('res=', res);
			if (res.authSetting['scope.writePhotosAlbum']) {
				console.log('true');
				callback && callback();
			} else if (res.authSetting['scope.writePhotosAlbum'] === undefined) {
				wx.showModal({
					title: '提示',
					content: '您未开启保存图片到相册的权限，请点击确定去开启权限！',
					success: (res) => {
						if (res.confirm) {
							wx.authorize({
								scope: 'scope.writePhotosAlbum',
								success: (res) => {
									callback && callback()
									console.log('授权下载成功', res);
								},
								fail: (res) => {
									console.log('您没有授权 fail=', res);
									wx.showToast({
										title: '您没有授权，无法保存到相册',
										icon: 'none'
									});
								}
							});
						} else {
							console.log('取消了');
						}
					}
				});
			} else {
				wx.showModal({
					title: '提示',
					content: '您未开启保存图片到相册的权限，请点击确定去开启权限！',
					success: (res) => {
						if (res.confirm) {
							wx.openSetting({
								success: (res) => {
									wx.showToast({
										icon: 'none',
										title: '正在保存图片',
									});
									if (res.authSetting['scope.writePhotosAlbum']) {
										console.log('false success res=', res);
										callback && callback();
									} else {
										wx.showToast({
											title: '您没有授权，无法保存到相册！',
											icon: 'none'
										});
									}
								},
								fail: (res) => {
									console.log('false file res=', res);
								}
							});
						} else {
							wx.showToast({
								title: '您没有授权，无法保存到相册',
								icon: 'none'
							});
						}
					}
				});
			}
		}
	});
}

module.exports = {
	getWritePhotosAlbum
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\time_helper.js
--------------------------------------------------
/**
 * Notes: 时间相关函数
 * Ver : CCMiniCloud Framework 2.0.14 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-09-05 04:00:00 
 */

const util = require('./helper.js');


/** 日期简化，去掉多余的前缀0 */
function simpleDate(date) {
	let arr = date.split('-');
	if (arr.length < 3) return date;
	let month = arr[1];
	if (month.indexOf('0') == 0)
		month = month.replace('0', '');

	let day = arr[2];
	if (day.indexOf('0') == 0)
		day = day.replace('0', '');

	return arr[0] + '-' + month + '-' + day;
}

/** 时间格式化为年月日点分 */
function fmtDateCHN(date, fmt = 'Y-M-D') {
	if (!date) return '';
	if (fmt == 'hh:mm' && date.includes(':')) {
		if (date.includes(' ')) date = date.split(' ')[1];
		let arr = date.split(':');
		return Number(arr[0]) + '点' + arr[1] + '分';
	} else if (fmt == 'Y-M-D hh:mm') {
		let arr = date.split(' ');
		if (arr.length != 2) return date;
		return fmtDateCHN(arr[0], 'Y-M-D') + fmtDateCHN(arr[1], 'hh:mm');
	} else if (fmt == 'M-D hh:mm') {
		let arr = date.split(' ');
		if (arr.length != 2) return date;
		return fmtDateCHN(arr[0], 'M-D') + ' ' + fmtDateCHN(arr[1], 'hh:mm');
	} else {
		if (date.includes(' ')) date = date.split(' ')[0];

		let arr = date.split('-');
		if (fmt == 'Y-M') //年月
			return arr[0] + '年' + Number(arr[1]) + '月';
		else if (fmt == 'M-D') //月日
			return arr[1] + '月' + Number(arr[2]) + '日';
		else if (fmt == 'Y') //年
			return arr[0] + '年';
		else
			return arr[0] + '年' + Number(arr[1]) + '月' + Number(arr[2]) + '日';
	}


}

/**
 * 毫秒时间戳转时间格式
 * @param {*} unixtime  毫秒
 * @param {*} format  Y-M-D h:m:s
 * @param {*} diff  时区差异 毫秒
 */
function timestamp2Time(unixtime, format = 'Y-M-D h:m:s', diff = 0) {
	let formateArr = ['Y', 'M', 'D', 'h', 'm', 's'];
	let returnArr = [];
	let date = new Date(unixtime + diff);
	returnArr.push(date.getFullYear());
	returnArr.push(formatNumber(date.getMonth() + 1));
	returnArr.push(formatNumber(date.getDate()));
	returnArr.push(formatNumber(date.getHours()));
	returnArr.push(formatNumber(date.getMinutes()));
	returnArr.push(formatNumber(date.getSeconds()));
	for (let i in returnArr) {
		format = format.replace(formateArr[i], returnArr[i]);
	}
	return format;
}


function timestame2Ago(dateTimeStamp, fmt = 'Y-M-D', diff = 0) { //dateTimeStamp是一个时间毫秒，注意时间戳是秒的形式，在这个毫秒的基础上除以1000，就是十位数的时间戳。13位数的都是时间毫秒。
	let minute = 1000 * 60; //把分，时，天，周，半个月，一个月用毫秒表示
	let hour = minute * 60;
	let day = hour * 24;
	let week = day * 7;
	let month = day * 30;
	let now = new Date().getTime(); //获取当前时间毫秒

	let diffValue = now - dateTimeStamp; //时间差

	if (diffValue < 0) {
		return;
	}
	let minC = diffValue / minute; //计算时间差的分，时，天，周，月
	let hourC = diffValue / hour;
	let dayC = diffValue / day;

	let result = '';

	let weekC = diffValue / week;
	let monthC = diffValue / month;
	if (monthC >= 1 && monthC <= 3) {
		result = ' ' + parseInt(monthC) + '月前'
	} else if (weekC >= 1 && weekC <= 3) {
		result = ' ' + parseInt(weekC) + '周前'
	} else if (dayC >= 1 && dayC <= 6) {
		result = ' ' + parseInt(dayC) + '天前'
	} else if (hourC >= 1 && hourC <= 23) {
		result = ' ' + parseInt(hourC) + '小时前'
	} else if (minC >= 1 && minC <= 59) {
		result = ' ' + parseInt(minC) + '分钟前'
	} else if (diffValue >= 0 && diffValue <= minute) {
		result = '刚刚'
	} else {
		result = timestamp2Time(dateTimeStamp, fmt, diff);

	}
	return result;
}

function formatNumber(n) {
	n = n.toString()
	return n[1] ? n : '0' + n
}


/**
 * 时间转时间戳 
 * @param {*} date  支持 Y-M-D h:m:s / Y-M-D
 */
function time2Timestamp(date) {
	if (date.length < 10) {
		let arr = date.split('-');
		if (arr[1].length == 1) arr[1] = '0' + arr[1];
		if (arr[2].length == 1) arr[2] = '0' + arr[2];
		date = arr[0] + '-' + arr[1] + '-' + arr[2];
	}
	if (date.length == 10) date = date + ' 00:00:00';
	let d = new Date(date.replace(/-/g, '/'));
	return d.getTime();
}

/**
 *  获取当前时间戳/时间Y-M-D h:m:s
 * @param {*} 时间格式 Y-M-D h:m:s
 * @param {int} 时间步长 (秒)
 */
function time(fmt, step = 0) {
	let t = 0;
	if (util.isDefined(fmt)) {
		let t = new Date().getTime() + step * 1000;
		return timestamp2Time(t, fmt);
	}
	return new Date().getTime() + t * 1000;
}

// 获取某天0点
function getDayFirstTimestamp(timestamp) {
	if (!timestamp) timestamp = time();
	return time2Timestamp(timestamp2Time(timestamp, 'Y-M-D'));
}

/**
 * 根据出生日期计算年龄周岁 传参格式为1996-06-08
 * @param {*} birth 
 */
function getAge(birth, isMonth = false) {
	var returnAge = '';
	var mouthAge = '';
	var arr = birth.split('-');
	var birthYear = arr[0];
	var birthMonth = arr[1];
	var birthDay = arr[2];
	var d = new Date();
	var nowYear = d.getFullYear();
	var nowMonth = d.getMonth() + 1;
	var nowDay = d.getDate();
	if (nowYear == birthYear) {
		// returnAge = 0; //同年 则为0岁
		var monthDiff = nowMonth - birthMonth; //月之差 
		if (monthDiff < 0) { } else {
			mouthAge = monthDiff + '个月';
		}
	} else {
		var ageDiff = nowYear - birthYear; //年之差
		if (ageDiff > 0) {
			if (nowMonth == birthMonth) {
				var dayDiff = nowDay - birthDay; //日之差 
				if (dayDiff < 0) {
					returnAge = ageDiff - 1 + '岁';
				} else {
					returnAge = ageDiff + '岁';
				}
			} else {
				var monthDiff = nowMonth - birthMonth; //月之差 
				if (monthDiff < 0) {
					returnAge = ageDiff - 1 + '岁';
				} else {
					mouthAge = monthDiff + '个月';
					returnAge = ageDiff + '岁';
				}
			}
		} else {
			returnAge = -1; //返回-1 表示出生日期输入错误 晚于今天
		}
	}
	if (isMonth)
		return returnAge + mouthAge; //返回周岁年龄+月份
	else
		return returnAge;
}

/**
 * 日期计算周几
 * @param {*} day  日期为输入日期，格式为 2013-03-10
 */
function week(day) {
	let arys1 = new Array();
	arys1 = day.split('-');
	let ssdate = new Date(arys1[0], parseInt(arys1[1] - 1), arys1[2]);
	let week1 = String(ssdate.getDay()).replace("0", "日").replace("1", "一").replace("2", "二").replace("3", "三").replace("4", "四").replace("5", "五").replace("6", "六") //就是你要的星期几
	return "周" + week1; //就是你要的星期几 
}

/** 获取某天所在某月第一天时间戳 */
function getMonthFirstTimestamp(timestamp) {
	let inDate = new Date(timestamp);
	let year = inDate.getFullYear();
	let month = inDate.getMonth();
	return new Date(year, month, 1).getTime();
}

/** 获取某天所在某月最后一天时间戳 */
function getMonthLastTimestamp(timestamp) {
	let inDate = new Date(timestamp);
	let year = inDate.getFullYear();
	let month = inDate.getMonth();
	return new Date(year, month + 1, 1).getTime() - 1;
}

// 取得分钟时间戳
function getNowMinTimestamp() {
	let min = time('Y-M-D h:m') + ':00';
	let timestamp = time2Timestamp(min);
	return {
		min,
		timestamp
	}
}


// 获取当前日期所在周一 输入和返回格式=yyyy-mm-dd
function getFirstOfWeek(date) {
	let now = new Date(date);
	let nowTime = now.getTime();
	let day = now.getDay();
	if (day == 0) day = 7;
	let oneDayTime = 24 * 60 * 60 * 1000;
	let mondayTime = nowTime - (day - 1) * oneDayTime;
	return timestamp2Time(mondayTime, 'Y-M-D');
}

// 获取当前日期所在周一 输入和返回格式=yyyy-mm-dd
function getLastOfWeek(date) {
	let now = new Date(date);
	let nowTime = now.getTime();
	let day = now.getDay();
	if (day == 0) day = 7;
	let oneDayTime = 24 * 60 * 60 * 1000;
	let sundayTime = nowTime + (7 - day) * oneDayTime;
	return timestamp2Time(sundayTime, 'Y-M-D');
}

// 获取当前日期所在月第一天 输入和返回格式=yyyy-mm-dd
function getFirstOfMonth(date) {
	let arr = date.split('-');
	return arr[0] + '-' + arr[1] + '-01';
}

// 获取当前日期所在月最后一天 输入和返回格式=yyyy-mm-dd
function getLastOfMonth(date) {
	let now = new Date(date);
	let y = now.getFullYear();
	let m = now.getMonth();
	let lastDay = new Date(y, m + 1, 0).getTime();
	return timestamp2Time(lastDay, 'Y-M-D');
}

/**
 * 取倒计时（天时分秒） 支持时间戳或者Y-M-D/Y-M-D h:m:s
 * @param {*} datetimeTo 
 * @param {*} flag 1=正 -1=负
 */
function getTimeLeft(datetimeTo, flag = 1) {
	let time1 = datetimeTo;

	if (String(datetimeTo).includes('-')) {
		datetimeTo = String(datetimeTo);
		if (!datetimeTo.includes(':'))
			datetimeTo += ' 00:00:00';
		time1 = new Date(datetimeTo).getTime();
	}

	let time2 = new Date().getTime();
	let mss = time1 - time2;

	// 将时间差（毫秒）格式为：天时分秒
	let days = parseInt(mss / (1000 * 60 * 60 * 24));
	let hours = parseInt((mss % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
	let minutes = parseInt((mss % (1000 * 60 * 60)) / (1000 * 60));
	let seconds = parseInt((mss % (1000 * 60)) / 1000);

	return [flag * days, flag * hours, flag * minutes, flag * seconds];

}


module.exports = {
	fmtDateCHN,
	simpleDate,

	getTimeLeft,

	getNowMinTimestamp,

	getMonthFirstTimestamp,
	getMonthLastTimestamp,

	getDayFirstTimestamp,

	timestamp2Time,
	timestame2Ago,
	time2Timestamp,
	time,
	getAge,
	week, //星期

	getFirstOfWeek,
	getLastOfWeek,
	getFirstOfMonth,
	getLastOfMonth
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\helper\validate.js
--------------------------------------------------
/**
 * Notes: 数据校验类库
 * Ver : CCMiniCloud Framework 2.0.15 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-01-07 07:48:00 
 *  
 */
const pageHelper = require('./page_helper.js');

const CHECK_OPEN = true;
const CHECK_SOURCE = 'client'; //client/admin 

/**
 * 判断变量，参数，对象属性是否定义
 * @param {*} val 
 */
function isDefined(val) {
	// ==  不能判断是否为null
	if (val === undefined)
		return false;
	else
		return true;
}

function isNull(value) {
	if (value === null || value === undefined) return true;
	if (getDataType(value) == String && value === '') return true;
	return false;
}

function isStrAndArrNull(value) {
	if (value === null || value === undefined) return true;

	let type = getDataType(value);
	if (type == String && value === '') return true;
	if (type == Array && value.length == 0) return true;

	return false;
}

function isRealNull(value) {
	if (value === null || value === undefined) return true;

	let type = getDataType(value);
	if (type == String && value === '') return true;
	if (type == Array && value.length == 0) return true;
	if (type == Object && JSON.stringify(value) == '{}') return true;

	return false;
}

function getDataType(value) {
	if (value === null || value === undefined) return value;
	let ret = value.constructor;

	let str = ret.toString();

	if (str.indexOf('function Object') == 0) ret = Object;
	if (str.indexOf('function Array') == 0) ret = Array;

	return ret;
}

// 是否必填
function checkRequired(value, desc = '') {
	switch (getDataType(value)) {
		case Object:
			if (JSON.stringify(value) == '{}')
				return desc + '不能为空obj';
			break;
		case Array:
			if (value.length == 0)
				return desc + '不能为空';
			break;
		case String:
			if (value.length == 0)
				return desc + '不能为空';
			break;
		case null:
		case undefined:
			return desc + '不能为空';
	}
}

// 校验字符/数组长度，校验数字大小
function checkMin(value, min, desc = '') {
	if (isStrAndArrNull(value)) return;

	min = Number(min);
	switch (getDataType(value)) {
		case Array:
			if (value.length < min)
				return desc + '不能少于' + min + '项';
			break;
		case String:
			if (value.length < min)
				return desc + '不能少于' + min + '位';
			break;
		case Number:
			if (value < min)
				return desc + '不能小于' + min;
			break;
	}
};

// 校验字符/数组长度，校验数字大小
function checkMax(value, max, desc = '') {
	if (isStrAndArrNull(value)) return;

	max = Number(max);
	switch (getDataType(value)) {
		case Array:
			if (value.length > max)
				return desc + '不能多于' + max + '项';
			break;
		case String:
			if (value.length > max)
				return desc + '不能多于' + max + '位';
			break;
		case Number:
			if (value > max)
				return desc + '不能大于' + max;
			break;
	}
};

// 校验字符/数组长度 
function checkLen(value, len, desc = '') {
	if (isStrAndArrNull(value)) return;

	len = Number(len);
	switch (getDataType(value)) {
		case Array:
			if (value.length != len)
				return desc + '必须为' + len + '项';
			break;
		case String:
			if (value.length != len)
				return desc + '必须为' + len + '位';
			break;
	}
};

function checkMobile(value, desc = '') {
	if (isNull(value)) return;

	if (!/(^1[1|2|3|4|5|6|7|8|9][0-9]{9}$)/.test(value))
		return desc + '格式不正确';
}

function checkInt(value, desc = '') {
	if (isNull(value)) return;

	if (!/^[0-9]+$/.test(value))
		return desc + '必须为数字';
}

function checkDigit(value, desc = '') {
	if (isNull(value)) return;

	if (!/^\d+(\.\d+)?$/.test(value))
		return desc + '必须为数字或小数';
}

function checkLetter(value, desc = '') {
	if (isNull(value)) return;

	if (!/^[A-Za-z]+$/.test(value))
		return desc + '必须为字母';
}

function checkMoney(value, desc = '') {
	if (isNull(value)) return;

	if (!/(^[1-9]([0-9]+)?(\.[0-9]{1,2})?$)|(^(0){1}$)|(^[0-9]\.[0-9]([0-9])?$)/.test(value))
		return desc + '必须为金额格式，例如2.00';
}


function checkLetterNum(value, desc = '') {
	if (isNull(value)) return;

	if (!/^\w+$/.test(value))
		return desc + '必须为字母，数字和下划线';
}

function checkId(value, desc = '', min = 1, max = 100) {
	if (isNull(value)) return;

	min = Number(min);
	max = Number(max);

	if (getDataType(value) != String) return desc + '必须为ID字符串格式';

	if (value.length < min || value.length > max) return desc + '必须为ID格式';
	/*if (!/^\w+$/.test(value))
		return desc + '必须为ID格式';*/
}

//  邮箱
function checkEmail(value, desc = '') {
	if (isNull(value)) return;

	let reg = /^[A-Za-z0-9+]+[A-Za-z0-9\.\_\-+]*@([A-Za-z0-9\-]+\.)+[A-Za-z0-9]+$/;
	if (!reg.test(value)) return desc + '必须为邮箱格式';
}

// 短日期，形如 (yyyy-mm-dd 2008-07-22)
function checkDate(value, desc = '') {
	if (isNull(value)) return;

	let hint = '请选择' + desc;
	if (value.length != 10) return hint;
	let r = value.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/);
	if (r == null) return hint;
	let d = new Date(r[1], r[3] - 1, r[4]);
	let chk = d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3] && d.getDate() == r[4];
	if (!chk) return hint;
}

// 年份，形如 (yyyy 2008)
function checkYear(value, desc = '') {
	if (isNull(value)) return;

	let hint = '请选择' + desc;
	if (value.length != 4) return hint;
	value += '-01-01';
	return checkDate(value, desc);
}

// 年月，形如 (yyyy-mm 2008-01)
function checkYearMonth(value, desc = '') {
	if (isNull(value)) return;

	let hint = '请选择' + desc;
	if (value.length != 7) return hint;

	value += '-01';
	return checkDate(value, desc);
}

// 短时间(时分秒)，形如 (13:04:06)
function checkTime(value, desc = '') {
	if (isNull(value)) return;

	let hint = desc + '必须为时间格式';
	if (value.length != 8) return hint;

	let a = value.match(/^(\d{1,2})(:)?(\d{1,2})\2(\d{1,2})$/);
	if (a == null) return hint;
	if (a[1] > 23 || a[3] > 59 || a[4] > 59) return hint;
}

// 短时间(时分)，形如 (hh:mm 13:04)
function checkHourMinute(value, desc = '') {
	if (isNull(value)) return;

	let hint = desc + '必须为时分时间格式';
	if (value.length != 5) return hint;

	value += ':01';
	return checkTime(value, desc);
}

// 长时间，形如 (2008-07-22 13:04:06)
function checkDatimeTime(value, desc = '') {
	if (isNull(value)) return;

	let hint = desc + '必须为完整时间格式';
	if (value.length != 19) return hint;

	var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2}) (\d{1,2}):(\d{1,2}):(\d{1,2})$/;
	var r = value.match(reg);
	if (r == null) return hint;
	var d = new Date(r[1], r[3] - 1, r[4], r[5], r[6], r[7]);
	let chk = d.getFullYear() == r[1] && (d.getMonth() + 1) == r[3] && d.getDate() == r[4] && d.getHours() == r[5] && d.getMinutes() == r[6] && d.getSeconds() == r[7];
	if (!chk) return hint;
}

function checkArray(value, desc = '') {
	if (!Array.isArray(value))
		return desc + '填写错误arr';
}

function checkObject(value, desc = '') {
	if (value.constructor != Object) {
		if (value.constructor.toString().indexOf('function Object') != 0)
			return desc + '填写错误obj';
	}

}

function checkBoolean(value, desc = '') {
	if (value.constructor != Boolean)
		return desc + '填写错误bool';
}

// 枚举 ref=1,2,3,4格式
function checkIn(value, ref, desc = '') {
	if (isNull(value)) return;

	let type = getDataType(value);
	if (type != String && type != Number) return desc + '填写范围错误';

	let arr = String(ref).split(',');
	if (!arr.includes(value) && !arr.includes(value + ''))
		return desc + '填写范围错误';
}

function checkIds(value, desc) { }

function checkString(value, desc) {
	if (value.constructor != String)
		return desc + '填写错误';
}


function check(data, rules, that) {
	let returnData = {};
	for (let key in rules) {
		let arr = rules[key].split('|');

		let desc = key; // 字段说明
		let defVal = undefined; // 缺省值
		let dataType = 'String'; //数据类型   

		if (!CHECK_OPEN) { // 不校验
			// 取值
			let val = data[formName];
			returnData[key] = val;
			continue;
		}

		// 小循环获取规则
		for (let i = 0; i < arr.length; i++) {
			// 数据项说明  
			if (arr[i].startsWith('name=')) {
				desc = '「' + arr[i].replace('name=', '') + '」';
				continue;
			}

			// 缺省值 
			if (arr[i].startsWith('default=')) {
				defVal = arr[i].replace('default=', '').trim();
				continue;
			}

			// 数据类型 
			switch (arr[i].toLowerCase()) {
				case 'int':
				case 'digit':
					dataType = 'Number';
					break;
				case 'array':
				case 'arr':
					dataType = 'Array';
					break;
				case 'object':
				case 'obj':
					dataType = 'Object';
					break;
				case 'bool':
				case 'boolean':
					dataType = 'Boolean';
					break;
			}
		}

		// 校验 
		let formName = (CHECK_SOURCE == 'admin') ? k : arr[0]; // 表单名  admin/client

		// 取值
		let val = data[formName];

		switch (dataType) {
			case 'Array': {
				if (defVal !== undefined) {
					try {
						defVal = JSON.parse(defVal);

						if (getDataType(defVal) != Array)
							return _showError(desc + '默认值数组格式错误', formName, that);
					} catch (ex) {
						return _showError(desc + '默认值数组格式错误', formName, that);
					}
				}
				if (val === null || val === undefined) val = defVal;

				if (val !== undefined && getDataType(val) != Array)
					return _showError(desc + '数组格式错误', formName, that);

				break;
			}
			case 'Object': {
				if (defVal !== undefined) {
					try {
						defVal = JSON.parse(defVal);

						if (getDataType(defVal) != Object)
							return _showError(desc + '默认值对象格式错误', formName, that);
					} catch (ex) {
						return _showError(desc + '默认值对象格式错误', formName, that);
					}
				}
				if (val === null || val === undefined) val = defVal;

				if (val !== undefined && getDataType(val) != Object)
					return _showError(desc + '对象格式错误', formName, that);

				break;
			}
			case 'Boolean': {
				if (defVal !== undefined) {
					try {
						defVal = JSON.parse(defVal);

						if (getDataType(defVal) != Boolean)
							return _showError(desc + '默认值布尔格式错误', formName, that);
					} catch (ex) {
						return _showError(desc + '默认值布尔格式错误');
					}
				}
				if (val === null || val === undefined) val = defVal;

				if (val !== undefined && getDataType(val) != Boolean)
					return _showError(desc + '布尔格式错误', formName, that);

				break;
			}
			case 'Number': {
				if (checkDigit(defVal, desc + '默认值'))
					return _showError(desc + '默认值格式错误', formName, that);

				if (val === null || val === undefined) val = defVal;

				if (val === undefined) break;

				if (val === '') //数字不能为空
					return _showError(desc + '不能为空', formName, that);

				let dataType = getDataType(val);
				if (dataType == Object || dataType == Boolean || dataType == Array)
					return _showError(desc + '必须为数字格式', formName, that);

				// 数字格式校验
				let result = checkDigit(val, desc);
				if (result) return _showError(result, formName, that);

				val = Number(val);

				break;
			}
			case 'String': {
				let dataType = getDataType(val);
				if (dataType == Object || dataType == Boolean || dataType == Array)
					return _showError(desc + '必须为字符串格式', formName, that);

				if (val === null || val === undefined) val = defVal;

				if (val === undefined) break;

				try {
					val = String(val).trim(); // 数字会被转为字符串
				} catch (ex) {
					return _showError(desc + '必须为字符串格式', formName, that);
				}
				break;
			}
		}

		returnData[key] = val;

		let fromStep = (CHECK_SOURCE == 'admin') ? 0 : 1; //admin/client
		for (let i = fromStep; i < arr.length; i++) {
			let result = '';

			let rules = arr[i].split(':');
			let ruleName = rules[0];

			// 空 且非必填的 不校验 
			if (ruleName != 'must' && val === undefined) continue;

			switch (ruleName) {
				case 'must':
					result = checkRequired(val, desc);
					break;
				case 'str':
				case 'string':
					result = checkString(val, desc);
					break;
				case 'arr':
				case 'array':
					result = checkArray(val, desc);
					break;
				case 'obj':
				case 'object':
					result = checkObject(val, desc);
					break;
				case 'bool':
				case 'boolean':
					result = checkBoolean(val, desc);
					break;
				case 'money':
					result = checkMoney(val, desc);
					break;
				case 'year':
					result = checkYear(val, desc);
					break;
				case 'yearmonth':
					result = checkYearMonth(val, desc);
					break;
				case 'date':
					result = checkDate(val, desc);
					break;
				case 'time':
					result = checkTime(val, desc);
					break;
				case 'hourminute':
					result = checkHourMinute(val, desc);
					break;
				case 'datetime':
					result = checkDatimeTime(val, desc);
					break;
				case 'min':
					result = checkMin(val, Number(rules[1]), desc);
					break;
				case 'max':
					result = checkMax(val, Number(rules[1]), desc);
					break;
				case 'len':
					result = checkLen(val, Number(rules[1]), desc);
					break;
				case 'in':
					result = checkIn(val, rules[1], desc);
					break;
				case 'email':
					result = checkEmail(val, desc);
					break;
				case 'mobile':
					result = checkMobile(val, desc);
					break;
				case 'int': // 正整数
					result = checkInt(val, desc);
					break;
				case 'digit': // 正小整数
					result = checkDigit(val, desc);
					break;
				case 'id':
					result = checkId(val, desc);
					break;
				case 'letter':
					result = checkLetter(val, desc);
					break;
				case 'letter_num':
					result = checkLetterNum(val, desc);
					break;
			}

			if (result) {
				_showError(result, formName, that);
				return false;
			} else {

				if (that) {
					if (CHECK_SOURCE == 'client') {
						// 删除原有的自动聚焦 //admin/client
						if (isDefined(that.data[formName + 'Focus'])) {
							that.setData({ //TODO delete?
								[formName + 'Focus']: false
							});
						}
					}
				}
			}

		}
	}
	return returnData;
}

function _showError(result, formName, that) { //admin/client
	if (CHECK_SOURCE == 'client') {
		wx.showModal({
			title: '温馨提示',
			content: result,
			showCancel: false,
			success(res) {
				// 自动聚焦
				if (that) {
					pageHelper.anchor(formName, that);

					that.setData({
						[formName + 'Focus']: result,
					});
				}

			}
		});
	} else {
		throw new AppError(result, appCode.DATA);
	}

}

module.exports = {
	check,

	checkString,
	checkArray,
	checkObject,
	checkMoney,
	checkYear,
	checkYearMonth,
	checkDate,
	checkTime,
	checkHourMinute,
	checkDatimeTime,
	checkMin,
	checkMax,
	checkLen,
	checkIn,
	checkEmail,
	checkMobile,
	checkInt, // 正小整数
	checkDigit,
	checkId,
	checkLetter,
	checkLetterNum,

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\lib\tools\base64_lib.js
--------------------------------------------------
/**
 * Notes:  
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-10-25 04:00:00 
 */

function Base64() {

	// private property
	var _keyStr = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";

	// public method for encoding
	this.encode = function (input) {
		var output = "";
		var chr1, chr2, chr3, enc1, enc2, enc3, enc4;
		var i = 0;
		input = _utf8_encode(input);
		while (i < input.length) {
			chr1 = input.charCodeAt(i++);
			chr2 = input.charCodeAt(i++);
			chr3 = input.charCodeAt(i++);
			enc1 = chr1 >> 2;
			enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);
			enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);
			enc4 = chr3 & 63;
			if (isNaN(chr2)) {
				enc3 = enc4 = 64;
			} else if (isNaN(chr3)) {
				enc4 = 64;
			}
			output = output +
				_keyStr.charAt(enc1) + _keyStr.charAt(enc2) +
				_keyStr.charAt(enc3) + _keyStr.charAt(enc4);
		}
		return output;
	}

	// public method for decoding
	this.decode = function (input) {
		var output = "";
		var chr1, chr2, chr3;
		var enc1, enc2, enc3, enc4;
		var i = 0;
		input = input.replace(/[^A-Za-z0-9\+\/\=]/g, "");
		while (i < input.length) {
			enc1 = _keyStr.indexOf(input.charAt(i++));
			enc2 = _keyStr.indexOf(input.charAt(i++));
			enc3 = _keyStr.indexOf(input.charAt(i++));
			enc4 = _keyStr.indexOf(input.charAt(i++));
			chr1 = (enc1 << 2) | (enc2 >> 4);
			chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
			chr3 = ((enc3 & 3) << 6) | enc4;
			output = output + String.fromCharCode(chr1);
			if (enc3 != 64) {
				output = output + String.fromCharCode(chr2);
			}
			if (enc4 != 64) {
				output = output + String.fromCharCode(chr3);
			}
		}
		output = _utf8_decode(output);
		return output;
	}

	// private method for UTF-8 encoding
	var _utf8_encode = function (string) {
		string = string.replace(/\r\n/g, "\n");
		var utftext = "";
		for (var n = 0; n < string.length; n++) {
			var c = string.charCodeAt(n);
			if (c < 128) {
				utftext += String.fromCharCode(c);
			} else if ((c > 127) && (c < 2048)) {
				utftext += String.fromCharCode((c >> 6) | 192);
				utftext += String.fromCharCode((c & 63) | 128);
			} else {
				utftext += String.fromCharCode((c >> 12) | 224);
				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
				utftext += String.fromCharCode((c & 63) | 128);
			}

		}
		return utftext;
	}

	// private method for UTF-8 decoding
	var _utf8_decode = function (utftext) {
		var string = "";
		var i = 0;
		var c = c1 = c2 = 0;
		while (i < utftext.length) {
			c = utftext.charCodeAt(i);
			if (c < 128) {
				string += String.fromCharCode(c);
				i++;
			} else if ((c > 191) && (c < 224)) {
				c2 = utftext.charCodeAt(i + 1);
				string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));
				i += 2;
			} else {
				c2 = utftext.charCodeAt(i + 1);
				c3 = utftext.charCodeAt(i + 2);
				string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
				i += 3;
			}
		}
		return string;
	}
}


var base = new Base64();

function encode(str) {
	return base.encode(str);
}

function decode(str) {
	return base.decode(str);
}

function safeEncode(str) { 

	return encode(str).replace(/[\+=\/]/g, function (c) {
		switch (c) {
			case '+':
				return '-';
			case '=':
				return '';
			case '/':
				return '_';
		}
	})
}


export {
	encode,
	decode,
	safeEncode
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\lib\tools\lunar_lib.js
--------------------------------------------------
/* 公历转农历代码思路：
1、建立农历年份查询表
2、计算输入公历日期与公历基准的相差天数
3、从农历基准开始遍历农历查询表，计算自农历基准之后每一年的天数，并用相差天数依次相减，确定农历年份
4、利用剩余相差天数以及农历每个月的天数确定农历月份
5、利用剩余相差天数确定农历哪一天
https://github.com/xm2by/fragment
 */

//农历节日
const LUNAR_HOLIDAY = {
	'0101': '春节',
	'0115': '元宵节',
	'0505': '端午节',
	'0707': '七夕',
	'0715': '中元节',
	'0815': '中秋节',
	'0909': '重阳节',
	'1208': '腊八节',
	'1224': '小年'
};

// 公历节日
const PUBLIC_HOLIDAY = {
	'0101': '元旦',
	'0214': '情人节',
	'0307': '女生节',
	'0308': '妇女节',
	'0312': '植树节',
	'0314': '白色情人',
	'0315': '消费者日',
	'0401': '愚人节',
	'0404': '复活节',
	'0501': '劳动节',
	'0504': '青年节',
	'0510': '母亲节',
	'0512': '护士节',
	'0601': '儿童节',
	'0620': '父亲节',
	'0701': '建党节',
	'0801': '建军节',
	'0910': '教师节',
	'0928': '孔子诞辰',
	'1001': '国庆节',
	'1006': '老人节',
	'1024': '联合国日',
	'1101': '万圣节',
	'1125': '感恩节',
	'1224': '平安夜',
	'1225': '圣诞节'
};

const SOLAR_STERM = ['小寒', '大寒', '立春', '雨水', '惊蛰', '春分', '清明', '谷雨', '立夏', '小满', '芒种', '夏至', '小暑', '大暑', '立秋', '处暑', '白露', '秋分', '寒露', '霜降', '立冬', '小雪', '大雪', '冬至'];


const SOLAR_STERM_INFO = [0, 1272480000, 2548020000, 3830160000, 5120220000, 6420840000,
	7732020000, 9055260000, 10388940000, 11733060000, 13084320000, 14441580000,
	15800580000, 17159340000, 18513780000, 19861980000, 21201000000, 22529640000,
	23846820000, 25152600000, 26447700000, 27733440000, 29011920000, 30285480000
];

// 农历1949-2100年查询表
const LUNAR_YEAR_ARR = [
	0x0b557, //1949
	0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0, //1950-1959
	0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0, //1960-1969
	0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6, //1970-1979
	0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570, //1980-1989
	0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x055c0, 0x0ab60, 0x096d5, 0x092e0, //1990-1999
	0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5, //2000-2009
	0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930, //2010-2019
	0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530, //2020-2029
	0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45, //2030-2039
	0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0, //2040-2049
	0x14b63, 0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0, //2050-2059
	0x0a2e0, 0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4, //2060-2069
	0x052d0, 0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0, //2070-2079
	0x0b273, 0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160, //2080-2089
	0x0e968, 0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a2d0, 0x0d150, 0x0f252, //2090-2099
	0x0d520 //2100
];
const LUNAR_MONTH = ['正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '冬', '腊'];
const LUNAR_DAY = ['一', '二', '三', '四', '五', '六', '七', '八', '九', '十', '初', '廿'];
const TIAN_GAN = ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'];
const DIZHI = ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'];


// 公历转农历函数
function sloarToLunar(sy, sm, sd) {
	if (typeof (sy) == 'string') {
		let arr = sy.split('-');
		sy = Number(arr[0]);
		sm = Number(arr[1]);
		sd = Number(arr[2]);
	}

	// 公历节日
	let publicHoliday = (sm > 9 ? sm : '0' + sm) + '' + (sd > 9 ? sd : '0' + sd);
	if (PUBLIC_HOLIDAY.hasOwnProperty(publicHoliday)) {
		return PUBLIC_HOLIDAY[publicHoliday];
	}

	// 输入的月份减1处理
	sm -= 1;

	// 计算与公历基准的相差天数
	// Date.UTC()返回的是距离公历1970年1月1日的毫秒数,传入的月份需要减1
	let daySpan = (Date.UTC(sy, sm, sd) - Date.UTC(1949, 0, 29)) / (24 * 60 * 60 * 1000) + 1;
	let ly, lm, ld;
	// 确定输出的农历年份
	for (let j = 0; j < LUNAR_YEAR_ARR.length; j++) {
		daySpan -= lunarYearDays(LUNAR_YEAR_ARR[j]);
		if (daySpan <= 0) {
			ly = 1949 + j;
			// 获取农历年份确定后的剩余天数
			daySpan += lunarYearDays(LUNAR_YEAR_ARR[j]);
			break
		}
	}

	// 确定输出的农历月份
	for (let k = 0; k < lunarYearMonths(LUNAR_YEAR_ARR[ly - 1949]).length; k++) {
		daySpan -= lunarYearMonths(LUNAR_YEAR_ARR[ly - 1949])[k];
		if (daySpan <= 0) {
			// 有闰月时，月份的数组长度会变成13，因此，当闰月月份小于等于k时，lm不需要加1
			if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) && hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) <= k) {
				if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) < k) {
					lm = k;
				} else if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) === k) {
					lm = '闰' + k;
				} else {
					lm = k + 1;
				}
			} else {
				lm = k + 1;
			}
			// 获取农历月份确定后的剩余天数
			daySpan += lunarYearMonths(LUNAR_YEAR_ARR[ly - 1949])[k];
			break
		}
	}

	// 确定输出农历哪一天
	ld = daySpan;

	//农历节日
	let paraHoliday = (lm > 9 ? lm : '0' + lm) + '' + (ld > 9 ? ld : '0' + ld);
	if (LUNAR_HOLIDAY.hasOwnProperty(paraHoliday)) {
		return LUNAR_HOLIDAY[paraHoliday];
	}

	// TODO:除夕
	/*
	if (lm == 12) {
		var theLastDay = lDate.isLeap ? leapDays(y) : monthDays(y, m); //农历当月最後一天
		if (theLastDay == ld) {
			return "除夕";
		}
	}*/

	// 农历节气 
	let temp = getSolarTerm(sy, sm + 1, sd)
	if (temp) return temp;


	// 将计算出来的农历月份转换成汉字月份，闰月需要在前面加上闰字
	if (hasLeapMonth(LUNAR_YEAR_ARR[ly - 1949]) && (typeof (lm) === 'string' && lm.indexOf('闰') > -1)) {
		lm = `闰${LUNAR_MONTH[/\d/.exec(lm) - 1]}`
	} else {
		lm = LUNAR_MONTH[lm - 1];
	}

	// 将计算出来的农历年份转换为天干地支年
	//ly = getTianGan(ly) + getDiZhi(ly);
	ly = '';

	// 将计算出来的农历天数转换成汉字
	if (ld < 11) {
		ld = `${LUNAR_DAY[10]}${LUNAR_DAY[ld-1]}`
	} else if (ld > 10 && ld < 20) {
		ld = `${LUNAR_DAY[9]}${LUNAR_DAY[ld-11]}`
	} else if (ld === 20) {
		ld = `${LUNAR_DAY[1]}${LUNAR_DAY[9]}`
	} else if (ld > 20 && ld < 30) {
		ld = `${LUNAR_DAY[11]}${LUNAR_DAY[ld-21]}`
	} else if (ld === 30) {
		ld = `${LUNAR_DAY[2]}${LUNAR_DAY[9]}`
	}

	//console.log(ly, lm, ld);
	if (ld == '初一') ld = lm + '月';

	/*
	return {
		lunarYear: ly,
		LUNAR_MONTH: lm,
		LUNAR_DAY: ld,
	}*/
	return ld;
}

// 计算农历年是否有闰月，参数为存储农历年的16进制
// 农历年份信息用16进制存储，其中16进制的最后1位可以用于判断是否有闰月
function hasLeapMonth(ly) {
	// 获取16进制的最后1位，需要用到&与运算符
	if (ly & 0xf) {
		return ly & 0xf
	} else {
		return false
	}
}

// 如果有闰月，计算农历闰月天数，参数为存储农历年的16进制
// 农历年份信息用16进制存储，其中16进制的第1位（0x除外）可以用于表示闰月是大月还是小月
function leapMonthDays(ly) {
	if (hasLeapMonth(ly)) {
		// 获取16进制的第1位（0x除外）
		return (ly & 0xf0000) ? 30 : 29
	} else {
		return 0
	}
}

// 计算农历一年的总天数，参数为存储农历年的16进制
// 农历年份信息用16进制存储，其中16进制的第2-4位（0x除外）可以用于表示正常月是大月还是小月
function lunarYearDays(ly) {
	let totalDays = 0;

	// 获取正常月的天数，并累加
	// 获取16进制的第2-4位，需要用到>>移位运算符
	for (let i = 0x8000; i > 0x8; i >>= 1) {
		let monthDays = (ly & i) ? 30 : 29;
		totalDays += monthDays;
	}
	// 如果有闰月，需要把闰月的天数加上
	if (hasLeapMonth(ly)) {
		totalDays += leapMonthDays(ly);
	}

	return totalDays
}

// 获取农历每个月的天数
// 参数需传入16进制数值
function lunarYearMonths(ly) {
	let monthArr = [];

	// 获取正常月的天数，并添加到monthArr数组中
	// 获取16进制的第2-4位，需要用到>>移位运算符
	for (let i = 0x8000; i > 0x8; i >>= 1) {
		monthArr.push((ly & i) ? 30 : 29);
	}
	// 如果有闰月，需要把闰月的天数加上
	if (hasLeapMonth(ly)) {
		monthArr.splice(hasLeapMonth(ly), 0, leapMonthDays(ly));
	}

	return monthArr
}

// 将农历年转换为天干，参数为农历年
function getTianGan(ly) {
	let tianGanKey = (ly - 3) % 10;
	if (tianGanKey === 0) tianGanKey = 10;
	return TIAN_GAN[tianGanKey - 1]
}

// 将农历年转换为地支，参数为农历年
function getDiZhi(ly) {
	let diZhiKey = (ly - 3) % 12;
	if (diZhiKey === 0) diZhiKey = 12;
	return DIZHI[diZhiKey - 1]
}

/**
 * 节气（参数为公历)
 * @param {*} sy 
 * @param {*} sm 
 * @param {*} sd 
 */
function getSolarTerm(sy, sm, sd) {
	sm -= 1;
	let solarTermStr = "";
	//月份乘2是因为每月平均2节气对应二十四节气加一考虑存在闰月
	let tmp1 = new Date((31556925974.7 * (sy - 1900) + SOLAR_STERM_INFO[sm * 2 + 1]) + Date.UTC(1900, 0, 6, 2, 5));
	let tmp2 = tmp1.getUTCDate();
	if (tmp2 == sd) solarTermStr = SOLAR_STERM[sm * 2 + 1];
	tmp1 = new Date((31556925974.7 * (sy - 1900) + SOLAR_STERM_INFO[sm * 2]) + Date.UTC(1900, 0, 6, 2, 5));
	tmp2 = tmp1.getUTCDate();
	if (tmp2 == sd) solarTermStr = SOLAR_STERM[sm * 2];
	if (sd > 1) {
		sd -= 1;
	} else {
		sm -= 1;
		sd = 31;
		if (sm < 0) {
			sy -= 1;
			sm = 11;
		}
	}
	return solarTermStr;
}

module.exports = {
	sloarToLunar
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\lib\tools\md5_lib.js
--------------------------------------------------
/**
 * Notes: MD5类库
 * Ver : CCMiniCloud Framework 2.15.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2021-03-01 14:00:00 
 */

function safe_add(x, y) {
	var lsw = (x & 0xFFFF) + (y & 0xFFFF)
	var msw = (x >> 16) + (y >> 16) + (lsw >> 16)
	return (msw << 16) | (lsw & 0xFFFF)
}

/*
 * Bitwise rotate a 32-bit number to the left.
 */
function rol(num, cnt) {
	return (num << cnt) | (num >>> (32 - cnt))
}

/*
 * These functions implement the four basic operations the algorithm uses.
 */
function cmn(q, a, b, x, s, t) {
	return safe_add(rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b)
}

function ff(a, b, c, d, x, s, t) {
	return cmn((b & c) | ((~b) & d), a, b, x, s, t)
}

function gg(a, b, c, d, x, s, t) {
	return cmn((b & d) | (c & (~d)), a, b, x, s, t)
}

function hh(a, b, c, d, x, s, t) {
	return cmn(b ^ c ^ d, a, b, x, s, t)
}

function ii(a, b, c, d, x, s, t) {
	return cmn(c ^ (b | (~d)), a, b, x, s, t)
}

/*
 * Calculate the MD5 of an array of little-endian words, producing an array
 * of little-endian words.
 */
function coreMD5(x) {
	var a = 1732584193
	var b = -271733879
	var c = -1732584194
	var d = 271733878

	for (var i = 0; i < x.length; i += 16) {
		var olda = a
		var oldb = b
		var oldc = c
		var oldd = d

		a = ff(a, b, c, d, x[i + 0], 7, -680876936)
		d = ff(d, a, b, c, x[i + 1], 12, -389564586)
		c = ff(c, d, a, b, x[i + 2], 17, 606105819)
		b = ff(b, c, d, a, x[i + 3], 22, -1044525330)
		a = ff(a, b, c, d, x[i + 4], 7, -176418897)
		d = ff(d, a, b, c, x[i + 5], 12, 1200080426)
		c = ff(c, d, a, b, x[i + 6], 17, -1473231341)
		b = ff(b, c, d, a, x[i + 7], 22, -45705983)
		a = ff(a, b, c, d, x[i + 8], 7, 1770035416)
		d = ff(d, a, b, c, x[i + 9], 12, -1958414417)
		c = ff(c, d, a, b, x[i + 10], 17, -42063)
		b = ff(b, c, d, a, x[i + 11], 22, -1990404162)
		a = ff(a, b, c, d, x[i + 12], 7, 1804603682)
		d = ff(d, a, b, c, x[i + 13], 12, -40341101)
		c = ff(c, d, a, b, x[i + 14], 17, -1502002290)
		b = ff(b, c, d, a, x[i + 15], 22, 1236535329)

		a = gg(a, b, c, d, x[i + 1], 5, -165796510)
		d = gg(d, a, b, c, x[i + 6], 9, -1069501632)
		c = gg(c, d, a, b, x[i + 11], 14, 643717713)
		b = gg(b, c, d, a, x[i + 0], 20, -373897302)
		a = gg(a, b, c, d, x[i + 5], 5, -701558691)
		d = gg(d, a, b, c, x[i + 10], 9, 38016083)
		c = gg(c, d, a, b, x[i + 15], 14, -660478335)
		b = gg(b, c, d, a, x[i + 4], 20, -405537848)
		a = gg(a, b, c, d, x[i + 9], 5, 568446438)
		d = gg(d, a, b, c, x[i + 14], 9, -1019803690)
		c = gg(c, d, a, b, x[i + 3], 14, -187363961)
		b = gg(b, c, d, a, x[i + 8], 20, 1163531501)
		a = gg(a, b, c, d, x[i + 13], 5, -1444681467)
		d = gg(d, a, b, c, x[i + 2], 9, -51403784)
		c = gg(c, d, a, b, x[i + 7], 14, 1735328473)
		b = gg(b, c, d, a, x[i + 12], 20, -1926607734)

		a = hh(a, b, c, d, x[i + 5], 4, -378558)
		d = hh(d, a, b, c, x[i + 8], 11, -2022574463)
		c = hh(c, d, a, b, x[i + 11], 16, 1839030562)
		b = hh(b, c, d, a, x[i + 14], 23, -35309556)
		a = hh(a, b, c, d, x[i + 1], 4, -1530992060)
		d = hh(d, a, b, c, x[i + 4], 11, 1272893353)
		c = hh(c, d, a, b, x[i + 7], 16, -155497632)
		b = hh(b, c, d, a, x[i + 10], 23, -1094730640)
		a = hh(a, b, c, d, x[i + 13], 4, 681279174)
		d = hh(d, a, b, c, x[i + 0], 11, -358537222)
		c = hh(c, d, a, b, x[i + 3], 16, -722521979)
		b = hh(b, c, d, a, x[i + 6], 23, 76029189)
		a = hh(a, b, c, d, x[i + 9], 4, -640364487)
		d = hh(d, a, b, c, x[i + 12], 11, -421815835)
		c = hh(c, d, a, b, x[i + 15], 16, 530742520)
		b = hh(b, c, d, a, x[i + 2], 23, -995338651)

		a = ii(a, b, c, d, x[i + 0], 6, -198630844)
		d = ii(d, a, b, c, x[i + 7], 10, 1126891415)
		c = ii(c, d, a, b, x[i + 14], 15, -1416354905)
		b = ii(b, c, d, a, x[i + 5], 21, -57434055)
		a = ii(a, b, c, d, x[i + 12], 6, 1700485571)
		d = ii(d, a, b, c, x[i + 3], 10, -1894986606)
		c = ii(c, d, a, b, x[i + 10], 15, -1051523)
		b = ii(b, c, d, a, x[i + 1], 21, -2054922799)
		a = ii(a, b, c, d, x[i + 8], 6, 1873313359)
		d = ii(d, a, b, c, x[i + 15], 10, -30611744)
		c = ii(c, d, a, b, x[i + 6], 15, -1560198380)
		b = ii(b, c, d, a, x[i + 13], 21, 1309151649)
		a = ii(a, b, c, d, x[i + 4], 6, -145523070)
		d = ii(d, a, b, c, x[i + 11], 10, -1120210379)
		c = ii(c, d, a, b, x[i + 2], 15, 718787259)
		b = ii(b, c, d, a, x[i + 9], 21, -343485551)

		a = safe_add(a, olda)
		b = safe_add(b, oldb)
		c = safe_add(c, oldc)
		d = safe_add(d, oldd)
	}
	return [a, b, c, d]
}

/*
 * Convert an array of little-endian words to a hex string.
 */
function binl2hex(binarray) {
	var hex_tab = "0123456789abcdef"
	var str = ""
	for (var i = 0; i < binarray.length * 4; i++) {
		str += hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8 + 4)) & 0xF) +
			hex_tab.charAt((binarray[i >> 2] >> ((i % 4) * 8)) & 0xF)
	}
	return str
}

/*
 * Convert an array of little-endian words to a base64 encoded string.
 */
function binl2b64(binarray) {
	var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"
	var str = ""
	for (var i = 0; i < binarray.length * 32; i += 6) {
		str += tab.charAt(((binarray[i >> 5] << (i % 32)) & 0x3F) |
			((binarray[i >> 5 + 1] >> (32 - i % 32)) & 0x3F))
	}
	return str
}

/*
 * Convert an 8-bit character string to a sequence of 16-word blocks, stored
 * as an array, and append appropriate padding for MD4/5 calculation.
 * If any of the characters are >255, the high byte is silently ignored.
 */
function str2binl(str) {
	var nblk = ((str.length + 8) >> 6) + 1 // number of 16-word blocks
	var blks = new Array(nblk * 16)
	for (var i = 0; i < nblk * 16; i++) blks[i] = 0
	for (var i = 0; i < str.length; i++)
		blks[i >> 2] |= (str.charCodeAt(i) & 0xFF) << ((i % 4) * 8)
	blks[i >> 2] |= 0x80 << ((i % 4) * 8)
	blks[nblk * 16 - 2] = str.length * 8
	return blks
}

/*
 * Convert a wide-character string to a sequence of 16-word blocks, stored as
 * an array, and append appropriate padding for MD4/5 calculation.
 */
function strw2binl(str) {
	var nblk = ((str.length + 4) >> 5) + 1 // number of 16-word blocks
	var blks = new Array(nblk * 16)
	for (var i = 0; i < nblk * 16; i++) blks[i] = 0
	for (var i = 0; i < str.length; i++)
		blks[i >> 1] |= str.charCodeAt(i) << ((i % 2) * 16)
	blks[i >> 1] |= 0x80 << ((i % 2) * 16)
	blks[nblk * 16 - 2] = str.length * 16
	return blks
}

/*
 * External interface
 */
function hexMD5(str) {
	return binl2hex(coreMD5(str2binl(str)))
}

function hexMD5w(str) {
	return binl2hex(coreMD5(strw2binl(str)))
}

function b64MD5(str) {
	return binl2b64(coreMD5(str2binl(str)))
}

function b64MD5w(str) {
	return binl2b64(coreMD5(strw2binl(str)))
}
/* Backward compatibility */
function calcMD5(str) {
	return binl2hex(coreMD5(str2binl(str)))
}
module.exports = {
	md5: hexMD5
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\lib\tools\qrcode_lib.js
--------------------------------------------------
//---------------------------------------------------------------------
/*
 * @demoURL: https://github.com/Pudon/weapp-qrcode 
 */
//---------------------------------------------------------------------

/**
 * qrcode
 * @param typeNumber 1 to 40 Version
 * @param errorCorrectLevel 'L','M','Q','H'
 */
var qrcode = function(typeNumber, errorCorrectLevel) {

    var PAD0 = 0xEC;
    var PAD1 = 0x11;

    var _typeNumber = typeNumber;
    var _errorCorrectLevel = QRErrorCorrectLevel[errorCorrectLevel];
    var _modules = null;
    var _moduleCount = 0;
    var _dataCache = null;
    var _dataList = new Array();

    var _this = {};

    var makeImpl = function(test, maskPattern) {

	_moduleCount = _typeNumber * 4 + 17;
	_modules = function(moduleCount) {
	    var modules = new Array(moduleCount);
	    for (var row = 0; row < moduleCount; row += 1) {
		modules[row] = new Array(moduleCount);
		for (var col = 0; col < moduleCount; col += 1) {
		    modules[row][col] = null;
		}
	    }
	    return modules;
	}(_moduleCount);

	setupPositionProbePattern(0, 0);
	setupPositionProbePattern(_moduleCount - 7, 0);
	setupPositionProbePattern(0, _moduleCount - 7);
	setupPositionAdjustPattern();
	setupTimingPattern();
	setupTypeInfo(test, maskPattern);

	if (_typeNumber >= 7) {
	    setupTypeNumber(test);
	}

	if (_dataCache == null) {
	    _dataCache = createData(_typeNumber, _errorCorrectLevel, _dataList);
	}

	mapData(_dataCache, maskPattern);
    };

    var setupPositionProbePattern = function(row, col) {

	for (var r = -1; r <= 7; r += 1) {

	    if (row + r <= -1 || _moduleCount <= row + r) continue;

	    for (var c = -1; c <= 7; c += 1) {

		if (col + c <= -1 || _moduleCount <= col + c) continue;

		if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )
		     || (0 <= c && c <= 6 && (r == 0 || r == 6) )
		     || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {
		    _modules[row + r][col + c] = true;
		} else {
		    _modules[row + r][col + c] = false;
		}
	    }
	}
    };

    var getBestMaskPattern = function() {

	var minLostPoint = 0;
	var pattern = 0;

	for (var i = 0; i < 8; i += 1) {

	    makeImpl(true, i);

	    var lostPoint = QRUtil.getLostPoint(_this);

	    if (i == 0 || minLostPoint > lostPoint) {
		minLostPoint = lostPoint;
		pattern = i;
	    }
	}

	return pattern;
    };

    var setupTimingPattern = function() {

	for (var r = 8; r < _moduleCount - 8; r += 1) {
	    if (_modules[r][6] != null) {
		continue;
	    }
	    _modules[r][6] = (r % 2 == 0);
	}

	for (var c = 8; c < _moduleCount - 8; c += 1) {
	    if (_modules[6][c] != null) {
		continue;
	    }
	    _modules[6][c] = (c % 2 == 0);
	}
    };

    var setupPositionAdjustPattern = function() {

	var pos = QRUtil.getPatternPosition(_typeNumber);

	for (var i = 0; i < pos.length; i += 1) {

	    for (var j = 0; j < pos.length; j += 1) {

		var row = pos[i];
		var col = pos[j];

		if (_modules[row][col] != null) {
		    continue;
		}

		for (var r = -2; r <= 2; r += 1) {

		    for (var c = -2; c <= 2; c += 1) {

			if (r == -2 || r == 2 || c == -2 || c == 2
			    || (r == 0 && c == 0) ) {
			    _modules[row + r][col + c] = true;
			} else {
			    _modules[row + r][col + c] = false;
			}
		    }
		}
	    }
	}
    };

    var setupTypeNumber = function(test) {

	var bits = QRUtil.getBCHTypeNumber(_typeNumber);

	for (var i = 0; i < 18; i += 1) {
	    var mod = (!test && ( (bits >> i) & 1) == 1);
	    _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;
	}

	for (var i = 0; i < 18; i += 1) {
	    var mod = (!test && ( (bits >> i) & 1) == 1);
	    _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;
	}
    };

    var setupTypeInfo = function(test, maskPattern) {

	var data = (_errorCorrectLevel << 3) | maskPattern;
	var bits = QRUtil.getBCHTypeInfo(data);

	// vertical
	for (var i = 0; i < 15; i += 1) {

	    var mod = (!test && ( (bits >> i) & 1) == 1);

	    if (i < 6) {
		_modules[i][8] = mod;
	    } else if (i < 8) {
		_modules[i + 1][8] = mod;
	    } else {
		_modules[_moduleCount - 15 + i][8] = mod;
	    }
	}

	// horizontal
	for (var i = 0; i < 15; i += 1) {

	    var mod = (!test && ( (bits >> i) & 1) == 1);

	    if (i < 8) {
		_modules[8][_moduleCount - i - 1] = mod;
	    } else if (i < 9) {
		_modules[8][15 - i - 1 + 1] = mod;
	    } else {
		_modules[8][15 - i - 1] = mod;
	    }
	}

	// fixed module
	_modules[_moduleCount - 8][8] = (!test);
    };

    var mapData = function(data, maskPattern) {

	var inc = -1;
	var row = _moduleCount - 1;
	var bitIndex = 7;
	var byteIndex = 0;
	var maskFunc = QRUtil.getMaskFunction(maskPattern);

	for (var col = _moduleCount - 1; col > 0; col -= 2) {

	    if (col == 6) col -= 1;

	    while (true) {

		for (var c = 0; c < 2; c += 1) {

		    if (_modules[row][col - c] == null) {

			var dark = false;

			if (byteIndex < data.length) {
			    dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);
			}

			var mask = maskFunc(row, col - c);

			if (mask) {
			    dark = !dark;
			}

			_modules[row][col - c] = dark;
			bitIndex -= 1;

			if (bitIndex == -1) {
			    byteIndex += 1;
			    bitIndex = 7;
			}
		    }
		}

		row += inc;

		if (row < 0 || _moduleCount <= row) {
		    row -= inc;
		    inc = -inc;
		    break;
		}
	    }
	}
    };

    var createBytes = function(buffer, rsBlocks) {

	var offset = 0;

	var maxDcCount = 0;
	var maxEcCount = 0;

	var dcdata = new Array(rsBlocks.length);
	var ecdata = new Array(rsBlocks.length);

	for (var r = 0; r < rsBlocks.length; r += 1) {

	    var dcCount = rsBlocks[r].dataCount;
	    var ecCount = rsBlocks[r].totalCount - dcCount;

	    maxDcCount = Math.max(maxDcCount, dcCount);
	    maxEcCount = Math.max(maxEcCount, ecCount);

	    dcdata[r] = new Array(dcCount);

	    for (var i = 0; i < dcdata[r].length; i += 1) {
		dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];
	    }
	    offset += dcCount;

	    var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);
	    var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);

	    var modPoly = rawPoly.mod(rsPoly);
	    ecdata[r] = new Array(rsPoly.getLength() - 1);
	    for (var i = 0; i < ecdata[r].length; i += 1) {
		var modIndex = i + modPoly.getLength() - ecdata[r].length;
		ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;
	    }
	}

	var totalCodeCount = 0;
	for (var i = 0; i < rsBlocks.length; i += 1) {
	    totalCodeCount += rsBlocks[i].totalCount;
	}

	var data = new Array(totalCodeCount);
	var index = 0;

	for (var i = 0; i < maxDcCount; i += 1) {
	    for (var r = 0; r < rsBlocks.length; r += 1) {
		if (i < dcdata[r].length) {
		    data[index] = dcdata[r][i];
		    index += 1;
		}
	    }
	}

	for (var i = 0; i < maxEcCount; i += 1) {
	    for (var r = 0; r < rsBlocks.length; r += 1) {
		if (i < ecdata[r].length) {
		    data[index] = ecdata[r][i];
		    index += 1;
		}
	    }
	}

	return data;
    };

    var createData = function(typeNumber, errorCorrectLevel, dataList) {

	var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);

	var buffer = qrBitBuffer();

	for (var i = 0; i < dataList.length; i += 1) {
	    var data = dataList[i];
	    buffer.put(data.getMode(), 4);
	    buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );
	    data.write(buffer);
	}

	// calc num max data.
	var totalDataCount = 0;
	for (var i = 0; i < rsBlocks.length; i += 1) {
	    totalDataCount += rsBlocks[i].dataCount;
	}

	if (buffer.getLengthInBits() > totalDataCount * 8) {
	    throw new Error('code length overflow. ('
			    + buffer.getLengthInBits()
			    + '>'
			    + totalDataCount * 8
			    + ')');
	}

	// end code
	if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {
	    buffer.put(0, 4);
	}

	// padding
	while (buffer.getLengthInBits() % 8 != 0) {
	    buffer.putBit(false);
	}

	// padding
	while (true) {

	    if (buffer.getLengthInBits() >= totalDataCount * 8) {
		break;
	    }
	    buffer.put(PAD0, 8);

	    if (buffer.getLengthInBits() >= totalDataCount * 8) {
		break;
	    }
	    buffer.put(PAD1, 8);
	}

	return createBytes(buffer, rsBlocks);
    };

    _this.addData = function(data) {
	var newData = qr8BitByte(data);
	_dataList.push(newData);
	_dataCache = null;
    };

    _this.isDark = function(row, col) {
	if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {
	    throw new Error(row + ',' + col);
	}
	return _modules[row][col];
    };

    _this.getModuleCount = function() {
	return _moduleCount;
    };

    _this.make = function() {
	makeImpl(false, getBestMaskPattern() );
    };

    _this.createTableTag = function(cellSize, margin) {

	cellSize = cellSize || 2;
	margin = (typeof margin == 'undefined')? cellSize * 4 : margin;

	var qrHtml = '';

	qrHtml += '<table style="';
	qrHtml += ' border-width: 0px; border-style: none;';
	qrHtml += ' border-collapse: collapse;';
	qrHtml += ' padding: 0px; margin: ' + margin + 'px;';
	qrHtml += '">';
	qrHtml += '<tbody>';

	for (var r = 0; r < _this.getModuleCount(); r += 1) {

	    qrHtml += '<tr>';

	    for (var c = 0; c < _this.getModuleCount(); c += 1) {
		qrHtml += '<td style="';
		qrHtml += ' border-width: 0px; border-style: none;';
		qrHtml += ' border-collapse: collapse;';
		qrHtml += ' padding: 0px; margin: 0px;';
		qrHtml += ' width: ' + cellSize + 'px;';
		qrHtml += ' height: ' + cellSize + 'px;';
		qrHtml += ' background-color: ';
		qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';
		qrHtml += ';';
		qrHtml += '"/>';
	    }

	    qrHtml += '</tr>';
	}

	qrHtml += '</tbody>';
	qrHtml += '</table>';

	return qrHtml;
    };

    _this.createImgTag = function(cellSize, margin, size) {

	cellSize = cellSize || 2;
	margin = (typeof margin == 'undefined')? cellSize * 4 : margin;

	var min = margin;
	var max = _this.getModuleCount() * cellSize + margin;

	return createImgTag(size, size, function(x, y) {
	    if (min <= x && x < max && min <= y && y < max) {
		var c = Math.floor( (x - min) / cellSize);
		var r = Math.floor( (y - min) / cellSize);
		return _this.isDark(r, c)? 0 : 1;
	    } else {
		return 1;
	    }
	} );
    };

    return _this;
};

//---------------------------------------------------------------------
// qrcode.stringToBytes
//---------------------------------------------------------------------

qrcode.stringToBytes = function(s) {
    var bytes = new Array();
    for (var i = 0; i < s.length; i += 1) {
	var c = s.charCodeAt(i);
	bytes.push(c & 0xff);
    }
    return bytes;
};

//---------------------------------------------------------------------
// qrcode.createStringToBytes
//---------------------------------------------------------------------

/**
 * @param unicodeData base64 string of byte array.
 * [16bit Unicode],[16bit Bytes], ...
 * @param numChars
 */
qrcode.createStringToBytes = function(unicodeData, numChars) {

    // create conversion map.

    var unicodeMap = function() {

	var bin = base64DecodeInputStream(unicodeData);
	var read = function() {
	    var b = bin.read();
	    if (b == -1) throw new Error();
	    return b;
	};

	var count = 0;
	var unicodeMap = {};
	while (true) {
	    var b0 = bin.read();
	    if (b0 == -1) break;
	    var b1 = read();
	    var b2 = read();
	    var b3 = read();
	    var k = String.fromCharCode( (b0 << 8) | b1);
	    var v = (b2 << 8) | b3;
	    unicodeMap[k] = v;
	    count += 1;
	}
	if (count != numChars) {
	    throw new Error(count + ' != ' + numChars);
	}

	return unicodeMap;
    }();

    var unknownChar = '?'.charCodeAt(0);

    return function(s) {
	var bytes = new Array();
	for (var i = 0; i < s.length; i += 1) {
	    var c = s.charCodeAt(i);
	    if (c < 128) {
		bytes.push(c);
	    } else {
		var b = unicodeMap[s.charAt(i)];
		if (typeof b == 'number') {
		    if ( (b & 0xff) == b) {
			// 1byte
			bytes.push(b);
		    } else {
			// 2bytes
			bytes.push(b >>> 8);
			bytes.push(b & 0xff);
		    }
		} else {
		    bytes.push(unknownChar);
		}
	    }
	}
	return bytes;
    };
};

//---------------------------------------------------------------------
// QRMode
//---------------------------------------------------------------------

var QRMode = {
    MODE_NUMBER :		1 << 0,
    MODE_ALPHA_NUM : 	1 << 1,
    MODE_8BIT_BYTE : 	1 << 2,
    MODE_KANJI :		1 << 3
};

//---------------------------------------------------------------------
// QRErrorCorrectLevel
//---------------------------------------------------------------------

var QRErrorCorrectLevel = {
    L : 1,
    M : 0,
    Q : 3,
    H : 2
};

//---------------------------------------------------------------------
// QRMaskPattern
//---------------------------------------------------------------------

var QRMaskPattern = {
    PATTERN000 : 0,
    PATTERN001 : 1,
    PATTERN010 : 2,
    PATTERN011 : 3,
    PATTERN100 : 4,
    PATTERN101 : 5,
    PATTERN110 : 6,
    PATTERN111 : 7
};

//---------------------------------------------------------------------
// QRUtil
//---------------------------------------------------------------------

var QRUtil = function() {

    var PATTERN_POSITION_TABLE = [
	[],
	[6, 18],
	[6, 22],
	[6, 26],
	[6, 30],
	[6, 34],
	[6, 22, 38],
	[6, 24, 42],
	[6, 26, 46],
	[6, 28, 50],
	[6, 30, 54],
	[6, 32, 58],
	[6, 34, 62],
	[6, 26, 46, 66],
	[6, 26, 48, 70],
	[6, 26, 50, 74],
	[6, 30, 54, 78],
	[6, 30, 56, 82],
	[6, 30, 58, 86],
	[6, 34, 62, 90],
	[6, 28, 50, 72, 94],
	[6, 26, 50, 74, 98],
	[6, 30, 54, 78, 102],
	[6, 28, 54, 80, 106],
	[6, 32, 58, 84, 110],
	[6, 30, 58, 86, 114],
	[6, 34, 62, 90, 118],
	[6, 26, 50, 74, 98, 122],
	[6, 30, 54, 78, 102, 126],
	[6, 26, 52, 78, 104, 130],
	[6, 30, 56, 82, 108, 134],
	[6, 34, 60, 86, 112, 138],
	[6, 30, 58, 86, 114, 142],
	[6, 34, 62, 90, 118, 146],
	[6, 30, 54, 78, 102, 126, 150],
	[6, 24, 50, 76, 102, 128, 154],
	[6, 28, 54, 80, 106, 132, 158],
	[6, 32, 58, 84, 110, 136, 162],
	[6, 26, 54, 82, 110, 138, 166],
	[6, 30, 58, 86, 114, 142, 170]
    ];
    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);
    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);
    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);

    var _this = {};

    var getBCHDigit = function(data) {
	var digit = 0;
	while (data != 0) {
	    digit += 1;
	    data >>>= 1;
	}
	return digit;
    };

    _this.getBCHTypeInfo = function(data) {
	var d = data << 10;
	while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {
	    d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );
	}
	return ( (data << 10) | d) ^ G15_MASK;
    };

    _this.getBCHTypeNumber = function(data) {
	var d = data << 12;
	while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {
	    d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );
	}
	return (data << 12) | d;
    };

    _this.getPatternPosition = function(typeNumber) {
	return PATTERN_POSITION_TABLE[typeNumber - 1];
    };

    _this.getMaskFunction = function(maskPattern) {

	switch (maskPattern) {

	    case QRMaskPattern.PATTERN000 :
		return function(i, j) { return (i + j) % 2 == 0; };
	    case QRMaskPattern.PATTERN001 :
		return function(i, j) { return i % 2 == 0; };
	    case QRMaskPattern.PATTERN010 :
		return function(i, j) { return j % 3 == 0; };
	    case QRMaskPattern.PATTERN011 :
		return function(i, j) { return (i + j) % 3 == 0; };
	    case QRMaskPattern.PATTERN100 :
		return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };
	    case QRMaskPattern.PATTERN101 :
		return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };
	    case QRMaskPattern.PATTERN110 :
		return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };
	    case QRMaskPattern.PATTERN111 :
		return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };

		default :
		throw new Error('bad maskPattern:' + maskPattern);
	}
    };

    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {
	var a = qrPolynomial([1], 0);
	for (var i = 0; i < errorCorrectLength; i += 1) {
	    a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );
	}
	return a;
    };

    _this.getLengthInBits = function(mode, type) {

	if (1 <= type && type < 10) {

	    // 1 - 9

	    switch(mode) {
		case QRMode.MODE_NUMBER 	: return 10;
		case QRMode.MODE_ALPHA_NUM 	: return 9;
		case QRMode.MODE_8BIT_BYTE	: return 8;
		case QRMode.MODE_KANJI		: return 8;
		    default :
		    throw new Error('mode:' + mode);
	    }

	} else if (type < 27) {

	    // 10 - 26

	    switch(mode) {
		case QRMode.MODE_NUMBER 	: return 12;
		case QRMode.MODE_ALPHA_NUM 	: return 11;
		case QRMode.MODE_8BIT_BYTE	: return 16;
		case QRMode.MODE_KANJI		: return 10;
		    default :
		    throw new Error('mode:' + mode);
	    }

	} else if (type < 41) {

	    // 27 - 40

	    switch(mode) {
		case QRMode.MODE_NUMBER 	: return 14;
		case QRMode.MODE_ALPHA_NUM	: return 13;
		case QRMode.MODE_8BIT_BYTE	: return 16;
		case QRMode.MODE_KANJI		: return 12;
		    default :
		    throw new Error('mode:' + mode);
	    }

	} else {
	    throw new Error('type:' + type);
	}
    };

    _this.getLostPoint = function(qrcode) {

	var moduleCount = qrcode.getModuleCount();

	var lostPoint = 0;

	// LEVEL1

	for (var row = 0; row < moduleCount; row += 1) {
	    for (var col = 0; col < moduleCount; col += 1) {

		var sameCount = 0;
		var dark = qrcode.isDark(row, col);

		for (var r = -1; r <= 1; r += 1) {

		    if (row + r < 0 || moduleCount <= row + r) {
			continue;
		    }

		    for (var c = -1; c <= 1; c += 1) {

			if (col + c < 0 || moduleCount <= col + c) {
			    continue;
			}

			if (r == 0 && c == 0) {
			    continue;
			}

			if (dark == qrcode.isDark(row + r, col + c) ) {
			    sameCount += 1;
			}
		    }
		}

		if (sameCount > 5) {
		    lostPoint += (3 + sameCount - 5);
		}
	    }
	};

	// LEVEL2

	for (var row = 0; row < moduleCount - 1; row += 1) {
	    for (var col = 0; col < moduleCount - 1; col += 1) {
		var count = 0;
		if (qrcode.isDark(row, col) ) count += 1;
		if (qrcode.isDark(row + 1, col) ) count += 1;
		if (qrcode.isDark(row, col + 1) ) count += 1;
		if (qrcode.isDark(row + 1, col + 1) ) count += 1;
		if (count == 0 || count == 4) {
		    lostPoint += 3;
		}
	    }
	}

	// LEVEL3

	for (var row = 0; row < moduleCount; row += 1) {
	    for (var col = 0; col < moduleCount - 6; col += 1) {
		if (qrcode.isDark(row, col)
		    && !qrcode.isDark(row, col + 1)
		    &&  qrcode.isDark(row, col + 2)
		    &&  qrcode.isDark(row, col + 3)
		    &&  qrcode.isDark(row, col + 4)
		    && !qrcode.isDark(row, col + 5)
		    &&  qrcode.isDark(row, col + 6) ) {
		    lostPoint += 40;
		}
	    }
	}

	for (var col = 0; col < moduleCount; col += 1) {
	    for (var row = 0; row < moduleCount - 6; row += 1) {
		if (qrcode.isDark(row, col)
		    && !qrcode.isDark(row + 1, col)
		    &&  qrcode.isDark(row + 2, col)
		    &&  qrcode.isDark(row + 3, col)
		    &&  qrcode.isDark(row + 4, col)
		    && !qrcode.isDark(row + 5, col)
		    &&  qrcode.isDark(row + 6, col) ) {
		    lostPoint += 40;
		}
	    }
	}

	// LEVEL4

	var darkCount = 0;

	for (var col = 0; col < moduleCount; col += 1) {
	    for (var row = 0; row < moduleCount; row += 1) {
		if (qrcode.isDark(row, col) ) {
		    darkCount += 1;
		}
	    }
	}

	var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;
	lostPoint += ratio * 10;

	return lostPoint;
    };

    return _this;
}();

//---------------------------------------------------------------------
// QRMath
//---------------------------------------------------------------------

var QRMath = function() {

    var EXP_TABLE = new Array(256);
    var LOG_TABLE = new Array(256);

    // initialize tables
    for (var i = 0; i < 8; i += 1) {
	EXP_TABLE[i] = 1 << i;
    }
    for (var i = 8; i < 256; i += 1) {
	EXP_TABLE[i] = EXP_TABLE[i - 4]
	    ^ EXP_TABLE[i - 5]
	    ^ EXP_TABLE[i - 6]
	    ^ EXP_TABLE[i - 8];
    }
    for (var i = 0; i < 255; i += 1) {
	LOG_TABLE[EXP_TABLE[i] ] = i;
    }

    var _this = {};

    _this.glog = function(n) {

	if (n < 1) {
	    throw new Error('glog(' + n + ')');
	}

	return LOG_TABLE[n];
    };

    _this.gexp = function(n) {

	while (n < 0) {
	    n += 255;
	}

	while (n >= 256) {
	    n -= 255;
	}

	return EXP_TABLE[n];
    };

    return _this;
}();

//---------------------------------------------------------------------
// qrPolynomial
//---------------------------------------------------------------------

function qrPolynomial(num, shift) {

    if (typeof num.length == 'undefined') {
	throw new Error(num.length + '/' + shift);
    }

    var _num = function() {
	var offset = 0;
	while (offset < num.length && num[offset] == 0) {
	    offset += 1;
	}
	var _num = new Array(num.length - offset + shift);
	for (var i = 0; i < num.length - offset; i += 1) {
	    _num[i] = num[i + offset];
	}
	return _num;
    }();

    var _this = {};

    _this.getAt = function(index) {
	return _num[index];
    };

    _this.getLength = function() {
	return _num.length;
    };

    _this.multiply = function(e) {

	var num = new Array(_this.getLength() + e.getLength() - 1);

	for (var i = 0; i < _this.getLength(); i += 1) {
	    for (var j = 0; j < e.getLength(); j += 1) {
		num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );
	    }
	}

	return qrPolynomial(num, 0);
    };

    _this.mod = function(e) {

	if (_this.getLength() - e.getLength() < 0) {
	    return _this;
	}

	var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );

	var num = new Array(_this.getLength() );
	for (var i = 0; i < _this.getLength(); i += 1) {
	    num[i] = _this.getAt(i);
	}

	for (var i = 0; i < e.getLength(); i += 1) {
	    num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);
	}

	// recursive call
	return qrPolynomial(num, 0).mod(e);
    };

    return _this;
};

//---------------------------------------------------------------------
// QRRSBlock
//---------------------------------------------------------------------

var QRRSBlock = function() {


    // [1: [L, M, Q, H], ..]
    var RS_BLOCK_TABLE=[[1,26,19],[1,26,16],[1,26,13],[1,26,9],[1,44,34],[1,44,28],[1,44,22],[1,44,16],[1,70,55],[1,70,44],[2,35,17],[2,35,13],[1,100,80],[2,50,32],[2,50,24],[4,25,9],[1,134,108],[2,67,43],[2,33,15,2,34,16],[2,33,11,2,34,12],[2,86,68],[4,43,27],[4,43,19],[4,43,15],[2,98,78],[4,49,31],[2,32,14,4,33,15],[4,39,13,1,40,14],[2,121,97],[2,60,38,2,61,39],[4,40,18,2,41,19],[4,40,14,2,41,15],[2,146,116],[3,58,36,2,59,37],[4,36,16,4,37,17],[4,36,12,4,37,13],[2,86,68,2,87,69],[4,69,43,1,70,44],[6,43,19,2,44,20],[6,43,15,2,44,16],[4,101,81],[1,80,50,4,81,51],[4,50,22,4,51,23],[3,36,12,8,37,13],[2,116,92,2,117,93],[6,58,36,2,59,37],[4,46,20,6,47,21],[7,42,14,4,43,15],[4,133,107],[8,59,37,1,60,38],[8,44,20,4,45,21],[12,33,11,4,34,12],[3,145,115,1,146,116],[4,64,40,5,65,41],[11,36,16,5,37,17],[11,36,12,5,37,13],[5,109,87,1,110,88],[5,65,41,5,66,42],[5,54,24,7,55,25],[11,36,12],[5,122,98,1,123,99],[7,73,45,3,74,46],[15,43,19,2,44,20],[3,45,15,13,46,16],[1,135,107,5,136,108],[10,74,46,1,75,47],[1,50,22,15,51,23],[2,42,14,17,43,15],[5,150,120,1,151,121],[9,69,43,4,70,44],[17,50,22,1,51,23],[2,42,14,19,43,15],[3,141,113,4,142,114],[3,70,44,11,71,45],[17,47,21,4,48,22],[9,39,13,16,40,14],[3,135,107,5,136,108],[3,67,41,13,68,42],[15,54,24,5,55,25],[15,43,15,10,44,16],[4,144,116,4,145,117],[17,68,42],[17,50,22,6,51,23],[19,46,16,6,47,17],[2,139,111,7,140,112],[17,74,46],[7,54,24,16,55,25],[34,37,13],[4,151,121,5,152,122],[4,75,47,14,76,48],[11,54,24,14,55,25],[16,45,15,14,46,16],[6,147,117,4,148,118],[6,73,45,14,74,46],[11,54,24,16,55,25],[30,46,16,2,47,17],[8,132,106,4,133,107],[8,75,47,13,76,48],[7,54,24,22,55,25],[22,45,15,13,46,16],[10,142,114,2,143,115],[19,74,46,4,75,47],[28,50,22,6,51,23],[33,46,16,4,47,17],[8,152,122,4,153,123],[22,73,45,3,74,46],[8,53,23,26,54,24],[12,45,15,28,46,16],[3,147,117,10,148,118],[3,73,45,23,74,46],[4,54,24,31,55,25],[11,45,15,31,46,16],[7,146,116,7,147,117],[21,73,45,7,74,46],[1,53,23,37,54,24],[19,45,15,26,46,16],[5,145,115,10,146,116],[19,75,47,10,76,48],[15,54,24,25,55,25],[23,45,15,25,46,16],[13,145,115,3,146,116],[2,74,46,29,75,47],[42,54,24,1,55,25],[23,45,15,28,46,16],[17,145,115],[10,74,46,23,75,47],[10,54,24,35,55,25],[19,45,15,35,46,16],[17,145,115,1,146,116],[14,74,46,21,75,47],[29,54,24,19,55,25],[11,45,15,46,46,16],[13,145,115,6,146,116],[14,74,46,23,75,47],[44,54,24,7,55,25],[59,46,16,1,47,17],[12,151,121,7,152,122],[12,75,47,26,76,48],[39,54,24,14,55,25],[22,45,15,41,46,16],[6,151,121,14,152,122],[6,75,47,34,76,48],[46,54,24,10,55,25],[2,45,15,64,46,16],[17,152,122,4,153,123],[29,74,46,14,75,47],[49,54,24,10,55,25],[24,45,15,46,46,16],[4,152,122,18,153,123],[13,74,46,32,75,47],[48,54,24,14,55,25],[42,45,15,32,46,16],[20,147,117,4,148,118],[40,75,47,7,76,48],[43,54,24,22,55,25],[10,45,15,67,46,16],[19,148,118,6,149,119],[18,75,47,31,76,48],[34,54,24,34,55,25],[20,45,15,61,46,16]];

    var qrRSBlock = function(totalCount, dataCount) {
	var _this = {};
	_this.totalCount = totalCount;
	_this.dataCount = dataCount;
	return _this;
    };

    var _this = {};

    var getRsBlockTable = function(typeNumber, errorCorrectLevel) {

	switch(errorCorrectLevel) {
	    case QRErrorCorrectLevel.L :
		return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];
	    case QRErrorCorrectLevel.M :
		return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];
	    case QRErrorCorrectLevel.Q :
		return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];
	    case QRErrorCorrectLevel.H :
		return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];
		default :
		return undefined;
	}
    };

    _this.getRSBlocks = function(typeNumber, errorCorrectLevel) {

	var rsBlock = getRsBlockTable(typeNumber, errorCorrectLevel);

	if (typeof rsBlock == 'undefined') {
	    throw new Error('bad rs block @ typeNumber:' + typeNumber +
			    '/errorCorrectLevel:' + errorCorrectLevel);
	}

	var length = rsBlock.length / 3;

	var list = new Array();

	for (var i = 0; i < length; i += 1) {

	    var count = rsBlock[i * 3 + 0];
	    var totalCount = rsBlock[i * 3 + 1];
	    var dataCount = rsBlock[i * 3 + 2];

	    for (var j = 0; j < count; j += 1) {
		list.push(qrRSBlock(totalCount, dataCount) );
	    }
	}

	return list;
    };

    return _this;
}();

//---------------------------------------------------------------------
// qrBitBuffer
//---------------------------------------------------------------------

var qrBitBuffer = function() {

    var _buffer = new Array();
    var _length = 0;

    var _this = {};

    _this.getBuffer = function() {
	return _buffer;
    };

    _this.getAt = function(index) {
	var bufIndex = Math.floor(index / 8);
	return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;
    };

    _this.put = function(num, length) {
	for (var i = 0; i < length; i += 1) {
	    _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);
	}
    };

    _this.getLengthInBits = function() {
	return _length;
    };

    _this.putBit = function(bit) {

	var bufIndex = Math.floor(_length / 8);
	if (_buffer.length <= bufIndex) {
	    _buffer.push(0);
	}

	if (bit) {
	    _buffer[bufIndex] |= (0x80 >>> (_length % 8) );
	}

	_length += 1;
    };

    return _this;
};

//---------------------------------------------------------------------
// qr8BitByte
//---------------------------------------------------------------------

var qr8BitByte = function(data) {

    var _mode = QRMode.MODE_8BIT_BYTE;
    var _data = data;
    var _parsedData = [];

    var _this = {};


    // Added to support UTF-8 Characters
    for (var i = 0, l = _data.length; i < l; i++) {
	var byteArray = [];
	var code = _data.charCodeAt(i);

	if (code > 0x10000) {
	    byteArray[0] = 0xF0 | ((code & 0x1C0000) >>> 18);
	    byteArray[1] = 0x80 | ((code & 0x3F000) >>> 12);
	    byteArray[2] = 0x80 | ((code & 0xFC0) >>> 6);
	    byteArray[3] = 0x80 | (code & 0x3F);
	} else if (code > 0x800) {
	    byteArray[0] = 0xE0 | ((code & 0xF000) >>> 12);
	    byteArray[1] = 0x80 | ((code & 0xFC0) >>> 6);
	    byteArray[2] = 0x80 | (code & 0x3F);
	} else if (code > 0x80) {
	    byteArray[0] = 0xC0 | ((code & 0x7C0) >>> 6);
	    byteArray[1] = 0x80 | (code & 0x3F);
	} else {
	    byteArray[0] = code;
	}

        // Fix Unicode corruption bug
        _parsedData.push(byteArray);
    }

    _parsedData = Array.prototype.concat.apply([], _parsedData);

    if (_parsedData.length != _data.length) {
	_parsedData.unshift(191);
	_parsedData.unshift(187);
	_parsedData.unshift(239);
    }

    var _bytes = _parsedData;

    _this.getMode = function() {
	return _mode;
    };

    _this.getLength = function(buffer) {
	return _bytes.length;
    };

    _this.write = function(buffer) {
	for (var i = 0; i < _bytes.length; i += 1) {
	    buffer.put(_bytes[i], 8);
	}
    };

    return _this;
};

//=====================================================================
// GIF Support etc.
//

//---------------------------------------------------------------------
// byteArrayOutputStream
//---------------------------------------------------------------------

var byteArrayOutputStream = function() {

    var _bytes = new Array();

    var _this = {};

    _this.writeByte = function(b) {
	_bytes.push(b & 0xff);
    };

    _this.writeShort = function(i) {
	_this.writeByte(i);
	_this.writeByte(i >>> 8);
    };

    _this.writeBytes = function(b, off, len) {
	off = off || 0;
	len = len || b.length;
	for (var i = 0; i < len; i += 1) {
	    _this.writeByte(b[i + off]);
	}
    };

    _this.writeString = function(s) {
	for (var i = 0; i < s.length; i += 1) {
	    _this.writeByte(s.charCodeAt(i) );
	}
    };

    _this.toByteArray = function() {
	return _bytes;
    };

    _this.toString = function() {
	var s = '';
	s += '[';
	for (var i = 0; i < _bytes.length; i += 1) {
	    if (i > 0) {
		s += ',';
	    }
	    s += _bytes[i];
	}
	s += ']';
	return s;
    };

    return _this;
};

//---------------------------------------------------------------------
// base64EncodeOutputStream
//---------------------------------------------------------------------

var base64EncodeOutputStream = function() {

    var _buffer = 0;
    var _buflen = 0;
    var _length = 0;
    var _base64 = '';

    var _this = {};

    var writeEncoded = function(b) {
	_base64 += String.fromCharCode(encode(b & 0x3f) );
    };

    var encode = function(n) {
	if (n < 0) {
	    // error.
	} else if (n < 26) {
	    return 0x41 + n;
	} else if (n < 52) {
	    return 0x61 + (n - 26);
	} else if (n < 62) {
	    return 0x30 + (n - 52);
	} else if (n == 62) {
	    return 0x2b;
	} else if (n == 63) {
	    return 0x2f;
	}
	throw new Error('n:' + n);
    };

    _this.writeByte = function(n) {

	_buffer = (_buffer << 8) | (n & 0xff);
	_buflen += 8;
	_length += 1;

	while (_buflen >= 6) {
	    writeEncoded(_buffer >>> (_buflen - 6) );
	    _buflen -= 6;
	}
    };

    _this.flush = function() {

	if (_buflen > 0) {
	    writeEncoded(_buffer << (6 - _buflen) );
	    _buffer = 0;
	    _buflen = 0;
	}

	if (_length % 3 != 0) {
	    // padding
	    var padlen = 3 - _length % 3;
	    for (var i = 0; i < padlen; i += 1) {
		_base64 += '=';
	    }
	}
    };

    _this.toString = function() {
	return _base64;
    };

    return _this;
};

//---------------------------------------------------------------------
// base64DecodeInputStream
//---------------------------------------------------------------------

var base64DecodeInputStream = function(str) {

    var _str = str;
    var _pos = 0;
    var _buffer = 0;
    var _buflen = 0;

    var _this = {};

    _this.read = function() {

	while (_buflen < 8) {

	    if (_pos >= _str.length) {
		if (_buflen == 0) {
		    return -1;
		}
		throw new Error('unexpected end of file./' + _buflen);
	    }

	    var c = _str.charAt(_pos);
	    _pos += 1;

	    if (c == '=') {
		_buflen = 0;
		return -1;
	    } else if (c.match(/^\s$/) ) {
		// ignore if whitespace.
		continue;
	    }

	    _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );
	    _buflen += 6;
	}

	var n = (_buffer >>> (_buflen - 8) ) & 0xff;
	_buflen -= 8;
	return n;
    };

    var decode = function(c) {
	if (0x41 <= c && c <= 0x5a) {
	    return c - 0x41;
	} else if (0x61 <= c && c <= 0x7a) {
	    return c - 0x61 + 26;
	} else if (0x30 <= c && c <= 0x39) {
	    return c - 0x30 + 52;
	} else if (c == 0x2b) {
	    return 62;
	} else if (c == 0x2f) {
	    return 63;
	} else {
	    throw new Error('c:' + c);
	}
    };

    return _this;
};

//---------------------------------------------------------------------
// gifImage (B/W)
//---------------------------------------------------------------------

var gifImage = function(width, height) {

    var _width = width;
    var _height = height;
    var _data = new Array(width * height);

    var _this = {};

    _this.setPixel = function(x, y, pixel) {
	_data[y * _width + x] = pixel;
    };

    _this.write = function(out) {

	//---------------------------------
	// GIF Signature

	out.writeString('GIF87a');

	//---------------------------------
	// Screen Descriptor

	out.writeShort(_width);
	out.writeShort(_height);

	out.writeByte(0x80); // 2bit
	out.writeByte(0);
	out.writeByte(0);

	//---------------------------------
	// Global Color Map

	// black
	out.writeByte(0x00);
	out.writeByte(0x00);
	out.writeByte(0x00);

	// white
	out.writeByte(0xff);
	out.writeByte(0xff);
	out.writeByte(0xff);

	//---------------------------------
	// Image Descriptor

	out.writeString(',');
	out.writeShort(0);
	out.writeShort(0);
	out.writeShort(_width);
	out.writeShort(_height);
	out.writeByte(0);

	//---------------------------------
	// Local Color Map

	//---------------------------------
	// Raster Data

	var lzwMinCodeSize = 2;
	var raster = getLZWRaster(lzwMinCodeSize);

	out.writeByte(lzwMinCodeSize);

	var offset = 0;

	while (raster.length - offset > 255) {
	    out.writeByte(255);
	    out.writeBytes(raster, offset, 255);
	    offset += 255;
	}

	out.writeByte(raster.length - offset);
	out.writeBytes(raster, offset, raster.length - offset);
	out.writeByte(0x00);

	//---------------------------------
	// GIF Terminator
	out.writeString(';');
    };

    var bitOutputStream = function(out) {

	var _out = out;
	var _bitLength = 0;
	var _bitBuffer = 0;

	var _this = {};

	_this.write = function(data, length) {

	    if ( (data >>> length) != 0) {
		throw new Error('length over');
	    }

	    while (_bitLength + length >= 8) {
		_out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );
		length -= (8 - _bitLength);
		data >>>= (8 - _bitLength);
		_bitBuffer = 0;
		_bitLength = 0;
	    }

	    _bitBuffer = (data << _bitLength) | _bitBuffer;
	    _bitLength = _bitLength + length;
	};

	_this.flush = function() {
	    if (_bitLength > 0) {
		_out.writeByte(_bitBuffer);
	    }
	};

	return _this;
    };

    var getLZWRaster = function(lzwMinCodeSize) {

	var clearCode = 1 << lzwMinCodeSize;
	var endCode = (1 << lzwMinCodeSize) + 1;
	var bitLength = lzwMinCodeSize + 1;

	// Setup LZWTable
	var table = lzwTable();

	for (var i = 0; i < clearCode; i += 1) {
	    table.add(String.fromCharCode(i) );
	}
	table.add(String.fromCharCode(clearCode) );
	table.add(String.fromCharCode(endCode) );

	var byteOut = byteArrayOutputStream();
	var bitOut = bitOutputStream(byteOut);

	// clear code
	bitOut.write(clearCode, bitLength);

	var dataIndex = 0;

	var s = String.fromCharCode(_data[dataIndex]);
	dataIndex += 1;

	while (dataIndex < _data.length) {

	    var c = String.fromCharCode(_data[dataIndex]);
	    dataIndex += 1;

	    if (table.contains(s + c) ) {

		s = s + c;

	    } else {

		bitOut.write(table.indexOf(s), bitLength);

		if (table.size() < 0xfff) {

		    if (table.size() == (1 << bitLength) ) {
			bitLength += 1;
		    }

		    table.add(s + c);
		}

		s = c;
	    }
	}

	bitOut.write(table.indexOf(s), bitLength);

	// end code
	bitOut.write(endCode, bitLength);

	bitOut.flush();

	return byteOut.toByteArray();
    };

    var lzwTable = function() {

	var _map = {};
	var _size = 0;

	var _this = {};

	_this.add = function(key) {
	    if (_this.contains(key) ) {
		throw new Error('dup key:' + key);
	    }
	    _map[key] = _size;
	    _size += 1;
	};

	_this.size = function() {
	    return _size;
	};

	_this.indexOf = function(key) {
	    return _map[key];
	};

	_this.contains = function(key) {
	    return typeof _map[key] != 'undefined';
	};

	return _this;
    };

    return _this;
};

var createImgTag = function(width, height, getPixel, alt) {

    var gif = gifImage(width, height);
    for (var y = 0; y < height; y += 1) {
	for (var x = 0; x < width; x += 1) {
	    gif.setPixel(x, y, getPixel(x, y) );
	}
    }

    var b = byteArrayOutputStream();
    gif.write(b);

    var base64 = base64EncodeOutputStream();
    var bytes = b.toByteArray();
    for (var i = 0; i < bytes.length; i += 1) {
	base64.writeByte(bytes[i]);
    }
    base64.flush();

    var img = '';
    img += 'data:image/gif;base64,';
    img += base64;

    return img;
};

//---------------------------------------------------------------------
// returns qrcode function.

var drawImg = function(text, options) {
    options = options || {};
    var typeNumber = options.typeNumber || 4;
    var errorCorrectLevel = options.errorCorrectLevel || 'M';
    var size = options.size || 500;

    var qr;

    try {
        qr = qrcode(typeNumber, errorCorrectLevel || 'M');
        qr.addData(text);
        qr.make();
    } catch (e) {
        if(typeNumber >= 40) {
            throw new Error('Text too long to encode');
        } else {
            return drawImg(text, {
                size: size,
                errorCorrectLevel: errorCorrectLevel,
                typeNumber: typeNumber + 1
            });
        }
    }

    // calc cellsize and margin
    var cellsize = parseInt(size / qr.getModuleCount());
    var margin = parseInt((size - qr.getModuleCount() * cellsize) / 2);

    return qr.createImgTag(cellsize, margin, size);
};
module.exports = {
	drawImg: drawImg
};
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\lib\tools\wxcharts-min.js
--------------------------------------------------
/*
 * charts for WeChat small app v1.0
 *
 * https://github.com/xiaolin3303/wx-charts
 * 2016-11-28
 *
 * Designed and built with all the love of Web
 */
 
"use strict";function assign(t,e){if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var i=Object(t),a=1;a<arguments.length;a++){var n=arguments[a];if(null!=n)for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(i[o]=n[o])}return i}function findRange(t,e,i){if(isNaN(t))throw new Error("[wxCharts] unvalid series data!");i=i||10,e=e||"upper";for(var a=1;i<1;)i*=10,a*=10;for(t="upper"===e?Math.ceil(t*a):Math.floor(t*a);t%i!=0;)"upper"===e?t++:t--;return t/a}function calValidDistance(t,e,i,a){var n=a.width-i.padding-e.xAxisPoints[0],o=e.eachSpacing*a.categories.length,r=t;return t>=0?r=0:Math.abs(t)>=o-n&&(r=n-o),r}function isInAngleRange(t,e,i){function a(t){for(;t<0;)t+=2*Math.PI;for(;t>2*Math.PI;)t-=2*Math.PI;return t}return t=a(t),e=a(e),i=a(i),e>i&&(i+=2*Math.PI,t<e&&(t+=2*Math.PI)),t>=e&&t<=i}function calRotateTranslate(t,e,i){var a=t,n=i-e,o=a+(i-n-a)/Math.sqrt(2);return o*=-1,{transX:o,transY:(i-n)*(Math.sqrt(2)-1)-(i-n-a)/Math.sqrt(2)}}function createCurveControlPoints(t,e){function i(t,e){return!(!t[e-1]||!t[e+1])&&(t[e].y>=Math.max(t[e-1].y,t[e+1].y)||t[e].y<=Math.min(t[e-1].y,t[e+1].y))}var a=null,n=null,o=null,r=null;if(e<1?(a=t[0].x+.2*(t[1].x-t[0].x),n=t[0].y+.2*(t[1].y-t[0].y)):(a=t[e].x+.2*(t[e+1].x-t[e-1].x),n=t[e].y+.2*(t[e+1].y-t[e-1].y)),e>t.length-3){var s=t.length-1;o=t[s].x-.2*(t[s].x-t[s-1].x),r=t[s].y-.2*(t[s].y-t[s-1].y)}else o=t[e+1].x-.2*(t[e+2].x-t[e].x),r=t[e+1].y-.2*(t[e+2].y-t[e].y);return i(t,e+1)&&(r=t[e+1].y),i(t,e)&&(n=t[e].y),{ctrA:{x:a,y:n},ctrB:{x:o,y:r}}}function convertCoordinateOrigin(t,e,i){return{x:i.x+t,y:i.y-e}}function avoidCollision(t,e){if(e)for(;util.isCollision(t,e);)t.start.x>0?t.start.y--:t.start.x<0?t.start.y++:t.start.y>0?t.start.y++:t.start.y--;return t}function fillSeriesColor(t,e){var i=0;return t.map(function(t){return t.color||(t.color=e.colors[i],i=(i+1)%e.colors.length),t})}function getDataRange(t,e){var i=0,a=e-t;return i=a>=1e4?1e3:a>=1e3?100:a>=100?10:a>=10?5:a>=1?1:a>=.1?.1:.01,{minRange:findRange(t,"lower",i),maxRange:findRange(e,"upper",i)}}function measureText(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10;t=String(t);var t=t.split(""),i=0;return t.forEach(function(t){/[a-zA-Z]/.test(t)?i+=7:/[0-9]/.test(t)?i+=5.5:/\./.test(t)?i+=2.7:/-/.test(t)?i+=3.25:/[\u4e00-\u9fa5]/.test(t)?i+=10:/\(|\)/.test(t)?i+=3.73:/\s/.test(t)?i+=2.5:/%/.test(t)?i+=8:i+=10}),i*e/10}function dataCombine(t){return t.reduce(function(t,e){return(t.data?t.data:t).concat(e.data)},[])}function getSeriesDataItem(t,e){var i=[];return t.forEach(function(t){if(null!==t.data[e]&&void 0!==t.data[e]){var a={};a.color=t.color,a.name=t.name,a.data=t.format?t.format(t.data[e]):t.data[e],i.push(a)}}),i}function getMaxTextListLength(t){var e=t.map(function(t){return measureText(t)});return Math.max.apply(null,e)}function getRadarCoordinateSeries(t){for(var e=2*Math.PI/t,i=[],a=0;a<t;a++)i.push(e*a);return i.map(function(t){return-1*t+Math.PI/2})}function getToolTipData(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{},o=t.map(function(t){return{text:n.format?n.format(t,a[i]):t.name+": "+t.data,color:t.color}}),r=[],s={x:0,y:0};return e.forEach(function(t){void 0!==t[i]&&null!==t[i]&&r.push(t[i])}),r.forEach(function(t){s.x=Math.round(t.x),s.y+=t.y}),s.y/=r.length,{textList:o,offset:s}}function findCurrentIndex(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,o=-1;return isInExactChartArea(t,i,a)&&e.forEach(function(e,i){t.x+n>e&&(o=i)}),o}function isInExactChartArea(t,e,i){return t.x<e.width-i.padding&&t.x>i.padding+i.yAxisWidth+i.yAxisTitleWidth&&t.y>i.padding&&t.y<e.height-i.legendHeight-i.xAxisHeight-i.padding}function findRadarChartCurrentIndex(t,e,i){var a=2*Math.PI/i,n=-1;if(isInExactPieChartArea(t,e.center,e.radius)){var o=function(t){return t<0&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI),t},r=Math.atan2(e.center.y-t.y,t.x-e.center.x);r*=-1,r<0&&(r+=2*Math.PI);e.angleList.map(function(t){return t=o(-1*t)}).forEach(function(t,e){var i=o(t-a/2),s=o(t+a/2);s<i&&(s+=2*Math.PI),(r>=i&&r<=s||r+2*Math.PI>=i&&r+2*Math.PI<=s)&&(n=e)})}return n}function findPieChartCurrentIndex(t,e){var i=-1;if(isInExactPieChartArea(t,e.center,e.radius)){var a=Math.atan2(e.center.y-t.y,t.x-e.center.x);a=-a;for(var n=0,o=e.series.length;n<o;n++){var r=e.series[n];if(isInAngleRange(a,r._start_,r._start_+2*r._proportion_*Math.PI)){i=n;break}}}return i}function isInExactPieChartArea(t,e,i){return Math.pow(t.x-e.x,2)+Math.pow(t.y-e.y,2)<=Math.pow(i,2)}function splitPoints(t){var e=[],i=[];return t.forEach(function(t,a){null!==t?i.push(t):(i.length&&e.push(i),i=[])}),i.length&&e.push(i),e}function calLegendData(t,e,i){if(!1===e.legend)return{legendList:[],legendHeight:0};var a=[],n=0,o=[];return t.forEach(function(t){var i=30+measureText(t.name||"undefined");n+i>e.width?(a.push(o),n=i,o=[t]):(n+=i,o.push(t))}),o.length&&a.push(o),{legendList:a,legendHeight:a.length*(i.fontSize+8)+5}}function calCategoriesData(t,e,i){var a={angle:0,xAxisHeight:i.xAxisHeight},n=getXAxisPoints(t,e,i),o=n.eachSpacing,r=t.map(function(t){return measureText(t)}),s=Math.max.apply(this,r);return s+2*i.xAxisTextPadding>o&&(a.angle=45*Math.PI/180,a.xAxisHeight=2*i.xAxisTextPadding+s*Math.sin(a.angle)),a}function getRadarDataPoints(t,e,i,a,n){var o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1,r=n.extra.radar||{};r.max=r.max||0;var s=Math.max(r.max,Math.max.apply(null,dataCombine(a))),l=[];return a.forEach(function(a){var n={};n.color=a.color,n.data=[],a.data.forEach(function(a,r){var l={};l.angle=t[r],l.proportion=a/s,l.position=convertCoordinateOrigin(i*l.proportion*o*Math.cos(l.angle),i*l.proportion*o*Math.sin(l.angle),e),n.data.push(l)}),l.push(n)}),l}function getPieDataPoints(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=0,a=0;return t.forEach(function(t){t.data=null===t.data?0:t.data,i+=t.data}),t.forEach(function(t){t.data=null===t.data?0:t.data,t._proportion_=t.data/i*e}),t.forEach(function(t){t._start_=a,a+=2*t._proportion_*Math.PI}),t}function getPieTextMaxLength(t){t=getPieDataPoints(t);var e=0;return t.forEach(function(t){var i=t.format?t.format(+t._proportion_.toFixed(2)):util.toFixed(100*t._proportion_)+"%";e=Math.max(e,measureText(i))}),e}function fixColumeData(t,e,i,a,n,o){return t.map(function(t){return null===t?null:(t.width=(e-2*n.columePadding)/i,o.extra.column&&o.extra.column.width&&+o.extra.column.width>0?t.width=Math.min(t.width,+o.extra.column.width):t.width=Math.min(t.width,25),t.x+=(a+.5-i/2)*t.width,t)})}function getXAxisPoints(t,e,i){var a=i.yAxisWidth+i.yAxisTitleWidth,n=e.width-2*i.padding-a,o=e.enableScroll?Math.min(5,t.length):t.length,r=n/o,s=[],l=i.padding+a,h=e.width-i.padding;return t.forEach(function(t,e){s.push(l+e*r)}),!0===e.enableScroll?s.push(l+t.length*r):s.push(h),{xAxisPoints:s,startX:l,endX:h,eachSpacing:r}}function getDataPoints(t,e,i,a,n,o,r){var s=arguments.length>7&&void 0!==arguments[7]?arguments[7]:1,l=[],h=o.height-2*r.padding-r.xAxisHeight-r.legendHeight;return t.forEach(function(t,c){if(null===t)l.push(null);else{var d={};d.x=a[c]+Math.round(n/2);var x=h*(t-e)/(i-e);x*=s,d.y=o.height-r.xAxisHeight-r.legendHeight-Math.round(x)-r.padding,l.push(d)}}),l}function getYAxisTextList(t,e,i){var a=dataCombine(t);a=a.filter(function(t){return null!==t});var n=Math.min.apply(this,a),o=Math.max.apply(this,a);if("number"==typeof e.yAxis.min&&(n=Math.min(e.yAxis.min,n)),"number"==typeof e.yAxis.max&&(o=Math.max(e.yAxis.max,o)),n===o){var r=o||1;n-=r,o+=r}for(var s=getDataRange(n,o),l=s.minRange,h=s.maxRange,c=[],d=(h-l)/i.yAxisSplit,x=0;x<=i.yAxisSplit;x++)c.push(l+d*x);return c.reverse()}function calYAxisData(t,e,i){var a=getYAxisTextList(t,e,i),n=i.yAxisWidth,o=a.map(function(t){return t=util.toFixed(t,2),t=e.yAxis.format?e.yAxis.format(Number(t)):t,n=Math.max(n,measureText(t)+5),t});return!0===e.yAxis.disabled&&(n=0),{rangesFormat:o,ranges:a,yAxisWidth:n}}function drawPointShape(t,e,i,a){a.beginPath(),a.setStrokeStyle("#ffffff"),a.setLineWidth(1),a.setFillStyle(e),"diamond"===i?t.forEach(function(t,e){null!==t&&(a.moveTo(t.x,t.y-4.5),a.lineTo(t.x-4.5,t.y),a.lineTo(t.x,t.y+4.5),a.lineTo(t.x+4.5,t.y),a.lineTo(t.x,t.y-4.5))}):"circle"===i?t.forEach(function(t,e){null!==t&&(a.moveTo(t.x+3.5,t.y),a.arc(t.x,t.y,4,0,2*Math.PI,!1))}):"rect"===i?t.forEach(function(t,e){null!==t&&(a.moveTo(t.x-3.5,t.y-3.5),a.rect(t.x-3.5,t.y-3.5,7,7))}):"triangle"===i&&t.forEach(function(t,e){null!==t&&(a.moveTo(t.x,t.y-4.5),a.lineTo(t.x-4.5,t.y+4.5),a.lineTo(t.x+4.5,t.y+4.5),a.lineTo(t.x,t.y-4.5))}),a.closePath(),a.fill(),a.stroke()}function drawRingTitle(t,e,i){var a=t.title.fontSize||e.titleFontSize,n=t.subtitle.fontSize||e.subtitleFontSize,o=t.title.name||"",r=t.subtitle.name||"",s=t.title.color||e.titleColor,l=t.subtitle.color||e.subtitleColor,h=o?a:0,c=r?n:0;if(r){var d=measureText(r,n),x=(t.width-d)/2+(t.subtitle.offsetX||0),f=(t.height-e.legendHeight+n)/2;o&&(f-=(h+5)/2),i.beginPath(),i.setFontSize(n),i.setFillStyle(l),i.fillText(r,x,f),i.stroke(),i.closePath()}if(o){var u=measureText(o,a),g=(t.width-u)/2+(t.title.offsetX||0),p=(t.height-e.legendHeight+a)/2;r&&(p+=(c+5)/2),i.beginPath(),i.setFontSize(a),i.setFillStyle(s),i.fillText(o,g,p),i.stroke(),i.closePath()}}function drawPointText(t,e,i,a){var n=e.data;a.beginPath(),a.setFontSize(i.fontSize),a.setFillStyle("#666666"),t.forEach(function(t,i){if(null!==t){var o=e.format?e.format(n[i]):n[i];a.fillText(o,t.x-measureText(o)/2,t.y-2)}}),a.closePath(),a.stroke()}function drawRadarLabel(t,e,i,a,n,o){var r=a.extra.radar||{};e+=n.radarLabelTextMargin,o.beginPath(),o.setFontSize(n.fontSize),o.setFillStyle(r.labelColor||"#666666"),t.forEach(function(t,r){var s={x:e*Math.cos(t),y:e*Math.sin(t)},l=convertCoordinateOrigin(s.x,s.y,i),h=l.x,c=l.y;util.approximatelyEqual(s.x,0)?h-=measureText(a.categories[r]||"")/2:s.x<0&&(h-=measureText(a.categories[r]||"")),o.fillText(a.categories[r]||"",h,c+n.fontSize/2)}),o.stroke(),o.closePath()}function drawPieText(t,e,i,a,n,o){var r=n+i.pieChartLinePadding,s=[],l=null;t.map(function(t){return{arc:2*Math.PI-(t._start_+2*Math.PI*t._proportion_/2),text:t.format?t.format(+t._proportion_.toFixed(2)):util.toFixed(100*t._proportion_)+"%",color:t.color}}).forEach(function(t){var e=Math.cos(t.arc)*r,a=Math.sin(t.arc)*r,o=Math.cos(t.arc)*n,h=Math.sin(t.arc)*n,c=e>=0?e+i.pieChartTextPadding:e-i.pieChartTextPadding,d=a,x=measureText(t.text),f=d;l&&util.isSameXCoordinateArea(l.start,{x:c})&&(f=c>0?Math.min(d,l.start.y):e<0?Math.max(d,l.start.y):d>0?Math.max(d,l.start.y):Math.min(d,l.start.y)),c<0&&(c-=x);var u={lineStart:{x:o,y:h},lineEnd:{x:e,y:a},start:{x:c,y:f},width:x,height:i.fontSize,text:t.text,color:t.color};l=avoidCollision(u,l),s.push(l)}),s.forEach(function(t){var e=convertCoordinateOrigin(t.lineStart.x,t.lineStart.y,o),n=convertCoordinateOrigin(t.lineEnd.x,t.lineEnd.y,o),r=convertCoordinateOrigin(t.start.x,t.start.y,o);a.setLineWidth(1),a.setFontSize(i.fontSize),a.beginPath(),a.setStrokeStyle(t.color),a.setFillStyle(t.color),a.moveTo(e.x,e.y);var s=t.start.x<0?r.x+t.width:r.x,l=t.start.x<0?r.x-5:r.x+5;a.quadraticCurveTo(n.x,n.y,s,r.y),a.moveTo(e.x,e.y),a.stroke(),a.closePath(),a.beginPath(),a.moveTo(r.x+t.width,r.y),a.arc(s,r.y,2,0,2*Math.PI),a.closePath(),a.fill(),a.beginPath(),a.setFillStyle("#666666"),a.fillText(t.text,l,r.y+3),a.closePath(),a.stroke(),a.closePath()})}function drawToolTipSplitLine(t,e,i,a){var n=i.padding,o=e.height-i.padding-i.xAxisHeight-i.legendHeight;a.beginPath(),a.setStrokeStyle("#cccccc"),a.setLineWidth(1),a.moveTo(t,n),a.lineTo(t,o),a.stroke(),a.closePath()}function drawToolTip(t,e,i,a,n){var o=!1;e=assign({x:0,y:0},e),e.y-=8;var r=t.map(function(t){return measureText(t.text)}),s=9+4*a.toolTipPadding+Math.max.apply(null,r),l=2*a.toolTipPadding+t.length*a.toolTipLineHeight;e.x-Math.abs(i._scrollDistance_)+8+s>i.width&&(o=!0),n.beginPath(),n.setFillStyle(i.tooltip.option.background||a.toolTipBackground),n.setGlobalAlpha(a.toolTipOpacity),o?(n.moveTo(e.x,e.y+10),n.lineTo(e.x-8,e.y+10-5),n.lineTo(e.x-8,e.y+10+5),n.moveTo(e.x,e.y+10),n.fillRect(e.x-s-8,e.y,s,l)):(n.moveTo(e.x,e.y+10),n.lineTo(e.x+8,e.y+10-5),n.lineTo(e.x+8,e.y+10+5),n.moveTo(e.x,e.y+10),n.fillRect(e.x+8,e.y,s,l)),n.closePath(),n.fill(),n.setGlobalAlpha(1),t.forEach(function(t,i){n.beginPath(),n.setFillStyle(t.color);var r=e.x+8+2*a.toolTipPadding,l=e.y+(a.toolTipLineHeight-a.fontSize)/2+a.toolTipLineHeight*i+a.toolTipPadding;o&&(r=e.x-s-8+2*a.toolTipPadding),n.fillRect(r,l,4,a.fontSize),n.closePath()}),n.beginPath(),n.setFontSize(a.fontSize),n.setFillStyle("#ffffff"),t.forEach(function(t,i){var r=e.x+8+2*a.toolTipPadding+4+5;o&&(r=e.x-s-8+2*a.toolTipPadding+4+5);var l=e.y+(a.toolTipLineHeight-a.fontSize)/2+a.toolTipLineHeight*i+a.toolTipPadding;n.fillText(t.text,r,l+a.fontSize)}),n.stroke(),n.closePath()}function drawYAxisTitle(t,e,i,a){var n=i.xAxisHeight+(e.height-i.xAxisHeight-measureText(t))/2;a.save(),a.beginPath(),a.setFontSize(i.fontSize),a.setFillStyle(e.yAxis.titleFontColor||"#333333"),a.translate(0,e.height),a.rotate(-90*Math.PI/180),a.fillText(t,n,i.padding+.5*i.fontSize),a.stroke(),a.closePath(),a.restore()}function drawColumnDataPoints(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=calYAxisData(t,e,i),r=o.ranges,s=getXAxisPoints(e.categories,e,i),l=s.xAxisPoints,h=s.eachSpacing,c=r.pop(),d=r.shift();return a.save(),e._scrollDistance_&&0!==e._scrollDistance_&&!0===e.enableScroll&&a.translate(e._scrollDistance_,0),t.forEach(function(o,r){var s=o.data,x=getDataPoints(s,c,d,l,h,e,i,n);x=fixColumeData(x,h,t.length,r,i,e),a.beginPath(),a.setFillStyle(o.color),x.forEach(function(t,n){if(null!==t){var o=t.x-t.width/2+1,r=e.height-t.y-i.padding-i.xAxisHeight-i.legendHeight;a.moveTo(o,t.y),a.rect(o,t.y,t.width-2,r)}}),a.closePath(),a.fill()}),t.forEach(function(o,r){var s=o.data,x=getDataPoints(s,c,d,l,h,e,i,n);x=fixColumeData(x,h,t.length,r,i,e),!1!==e.dataLabel&&1===n&&drawPointText(x,o,i,a)}),a.restore(),{xAxisPoints:l,eachSpacing:h}}function drawAreaDataPoints(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=calYAxisData(t,e,i),r=o.ranges,s=getXAxisPoints(e.categories,e,i),l=s.xAxisPoints,h=s.eachSpacing,c=r.pop(),d=r.shift(),x=e.height-i.padding-i.xAxisHeight-i.legendHeight,f=[];return a.save(),e._scrollDistance_&&0!==e._scrollDistance_&&!0===e.enableScroll&&a.translate(e._scrollDistance_,0),e.tooltip&&e.tooltip.textList&&e.tooltip.textList.length&&1===n&&drawToolTipSplitLine(e.tooltip.offset.x,e,i,a),t.forEach(function(t,o){var r=t.data,s=getDataPoints(r,c,d,l,h,e,i,n);if(f.push(s),splitPoints(s).forEach(function(i){if(a.beginPath(),a.setStrokeStyle(t.color),a.setFillStyle(t.color),a.setGlobalAlpha(.6),a.setLineWidth(2),i.length>1){var n=i[0],o=i[i.length-1];a.moveTo(n.x,n.y),"curve"===e.extra.lineStyle?i.forEach(function(t,e){if(e>0){var n=createCurveControlPoints(i,e-1);a.bezierCurveTo(n.ctrA.x,n.ctrA.y,n.ctrB.x,n.ctrB.y,t.x,t.y)}}):i.forEach(function(t,e){e>0&&a.lineTo(t.x,t.y)}),a.lineTo(o.x,x),a.lineTo(n.x,x),a.lineTo(n.x,n.y)}else{var r=i[0];a.moveTo(r.x-h/2,r.y),a.lineTo(r.x+h/2,r.y),a.lineTo(r.x+h/2,x),a.lineTo(r.x-h/2,x),a.moveTo(r.x-h/2,r.y)}a.closePath(),a.fill(),a.setGlobalAlpha(1)}),!1!==e.dataPointShape){var u=i.dataPointShape[o%i.dataPointShape.length];drawPointShape(s,t.color,u,a)}}),!1!==e.dataLabel&&1===n&&t.forEach(function(t,o){drawPointText(getDataPoints(t.data,c,d,l,h,e,i,n),t,i,a)}),a.restore(),{xAxisPoints:l,calPoints:f,eachSpacing:h}}function drawLineDataPoints(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=calYAxisData(t,e,i),r=o.ranges,s=getXAxisPoints(e.categories,e,i),l=s.xAxisPoints,h=s.eachSpacing,c=r.pop(),d=r.shift(),x=[];return a.save(),e._scrollDistance_&&0!==e._scrollDistance_&&!0===e.enableScroll&&a.translate(e._scrollDistance_,0),e.tooltip&&e.tooltip.textList&&e.tooltip.textList.length&&1===n&&drawToolTipSplitLine(e.tooltip.offset.x,e,i,a),t.forEach(function(t,o){var r=t.data,s=getDataPoints(r,c,d,l,h,e,i,n);if(x.push(s),splitPoints(s).forEach(function(i,n){a.beginPath(),a.setStrokeStyle(t.color),a.setLineWidth(2),1===i.length?(a.moveTo(i[0].x,i[0].y),a.arc(i[0].x,i[0].y,1,0,2*Math.PI)):(a.moveTo(i[0].x,i[0].y),"curve"===e.extra.lineStyle?i.forEach(function(t,e){if(e>0){var n=createCurveControlPoints(i,e-1);a.bezierCurveTo(n.ctrA.x,n.ctrA.y,n.ctrB.x,n.ctrB.y,t.x,t.y)}}):i.forEach(function(t,e){e>0&&a.lineTo(t.x,t.y)}),a.moveTo(i[0].x,i[0].y)),a.closePath(),a.stroke()}),!1!==e.dataPointShape){var f=i.dataPointShape[o%i.dataPointShape.length];drawPointShape(s,t.color,f,a)}}),!1!==e.dataLabel&&1===n&&t.forEach(function(t,o){drawPointText(getDataPoints(t.data,c,d,l,h,e,i,n),t,i,a)}),a.restore(),{xAxisPoints:l,calPoints:x,eachSpacing:h}}function drawToolTipBridge(t,e,i,a){i.save(),t._scrollDistance_&&0!==t._scrollDistance_&&!0===t.enableScroll&&i.translate(t._scrollDistance_,0),t.tooltip&&t.tooltip.textList&&t.tooltip.textList.length&&1===a&&drawToolTip(t.tooltip.textList,t.tooltip.offset,t,e,i),i.restore()}function drawXAxis(t,e,i,a){var n=getXAxisPoints(t,e,i),o=n.xAxisPoints,r=(n.startX,n.endX,n.eachSpacing),s=e.height-i.padding-i.xAxisHeight-i.legendHeight,l=s+i.xAxisLineHeight;a.save(),e._scrollDistance_&&0!==e._scrollDistance_&&a.translate(e._scrollDistance_,0),a.beginPath(),a.setStrokeStyle(e.xAxis.gridColor||"#cccccc"),!0!==e.xAxis.disableGrid&&("calibration"===e.xAxis.type?o.forEach(function(t,e){e>0&&(a.moveTo(t-r/2,s),a.lineTo(t-r/2,s+4))}):o.forEach(function(t,e){a.moveTo(t,s),a.lineTo(t,l)})),a.closePath(),a.stroke();var h=e.width-2*i.padding-i.yAxisWidth-i.yAxisTitleWidth,c=Math.min(t.length,Math.ceil(h/i.fontSize/1.5)),d=Math.ceil(t.length/c);t=t.map(function(t,e){return e%d!=0?"":t}),0===i._xAxisTextAngle_?(a.beginPath(),a.setFontSize(i.fontSize),a.setFillStyle(e.xAxis.fontColor||"#666666"),t.forEach(function(t,e){var n=r/2-measureText(t)/2;a.fillText(t,o[e]+n,s+i.fontSize+5)}),a.closePath(),a.stroke()):t.forEach(function(t,n){a.save(),a.beginPath(),a.setFontSize(i.fontSize),a.setFillStyle(e.xAxis.fontColor||"#666666");var l=measureText(t),h=r/2-l,c=calRotateTranslate(o[n]+r/2,s+i.fontSize/2+5,e.height),d=c.transX,x=c.transY;a.rotate(-1*i._xAxisTextAngle_),a.translate(d,x),a.fillText(t,o[n]+h,s+i.fontSize+5),a.closePath(),a.stroke(),a.restore()}),a.restore()}function drawYAxisGrid(t,e,i){for(var a=t.height-2*e.padding-e.xAxisHeight-e.legendHeight,n=Math.floor(a/e.yAxisSplit),o=e.yAxisWidth+e.yAxisTitleWidth,r=e.padding+o,s=t.width-e.padding,l=[],h=0;h<e.yAxisSplit;h++)l.push(e.padding+n*h);l.push(e.padding+n*e.yAxisSplit+2),i.beginPath(),i.setStrokeStyle(t.yAxis.gridColor||"#cccccc"),i.setLineWidth(1),l.forEach(function(t,e){i.moveTo(r,t),i.lineTo(s,t)}),i.closePath(),i.stroke()}function drawYAxis(t,e,i,a){if(!0!==e.yAxis.disabled){var n=calYAxisData(t,e,i),o=n.rangesFormat,r=i.yAxisWidth+i.yAxisTitleWidth,s=e.height-2*i.padding-i.xAxisHeight-i.legendHeight,l=Math.floor(s/i.yAxisSplit),h=i.padding+r,c=e.width-i.padding,d=e.height-i.padding-i.xAxisHeight-i.legendHeight;a.setFillStyle(e.background||"#ffffff"),e._scrollDistance_<0&&a.fillRect(0,0,h,d+i.xAxisHeight+5),a.fillRect(c,0,e.width,d+i.xAxisHeight+5);for(var x=[],f=0;f<=i.yAxisSplit;f++)x.push(i.padding+l*f);a.stroke(),a.beginPath(),a.setFontSize(i.fontSize),a.setFillStyle(e.yAxis.fontColor||"#666666"),o.forEach(function(t,e){var n=x[e]?x[e]:d;a.fillText(t,i.padding+i.yAxisTitleWidth,n+i.fontSize/2)}),a.closePath(),a.stroke(),e.yAxis.title&&drawYAxisTitle(e.yAxis.title,e,i,a)}}function drawLegend(t,e,i,a){if(e.legend){var n=calLegendData(t,e,i),o=n.legendList;o.forEach(function(t,n){var o=0;t.forEach(function(t){t.name=t.name||"undefined",o+=15+measureText(t.name)+15});var r=(e.width-o)/2+5,s=e.height-i.padding-i.legendHeight+n*(i.fontSize+8)+5+8;a.setFontSize(i.fontSize),t.forEach(function(t){switch(e.type){case"line":a.beginPath(),a.setLineWidth(1),a.setStrokeStyle(t.color),a.moveTo(r-2,s+5),a.lineTo(r+17,s+5),a.stroke(),a.closePath(),a.beginPath(),a.setLineWidth(1),a.setStrokeStyle("#ffffff"),a.setFillStyle(t.color),a.moveTo(r+7.5,s+5),a.arc(r+7.5,s+5,4,0,2*Math.PI),a.fill(),a.stroke(),a.closePath();break;case"pie":case"ring":a.beginPath(),a.setFillStyle(t.color),a.moveTo(r+7.5,s+5),a.arc(r+7.5,s+5,7,0,2*Math.PI),a.closePath(),a.fill();break;default:a.beginPath(),a.setFillStyle(t.color),a.moveTo(r,s),a.rect(r,s,15,10),a.closePath(),a.fill()}r+=20,a.beginPath(),a.setFillStyle(e.extra.legendTextColor||"#333333"),a.fillText(t.name,r,s+9),a.closePath(),a.stroke(),r+=measureText(t.name)+10})})}}function drawPieDataPoints(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=e.extra.pie||{};t=getPieDataPoints(t,n);var r={x:e.width/2,y:(e.height-i.legendHeight)/2},s=Math.min(r.x-i.pieChartLinePadding-i.pieChartTextPadding-i._pieTextMaxLength_,r.y-i.pieChartLinePadding-i.pieChartTextPadding);if(e.dataLabel?s-=10:s-=2*i.padding,t=t.map(function(t){return t._start_+=(o.offsetAngle||0)*Math.PI/180,t}),t.forEach(function(t){a.beginPath(),a.setLineWidth(2),a.setStrokeStyle("#ffffff"),a.setFillStyle(t.color),a.moveTo(r.x,r.y),a.arc(r.x,r.y,s,t._start_,t._start_+2*t._proportion_*Math.PI),a.closePath(),a.fill(),!0!==e.disablePieStroke&&a.stroke()}),"ring"===e.type){var l=.6*s;"number"==typeof e.extra.ringWidth&&e.extra.ringWidth>0&&(l=Math.max(0,s-e.extra.ringWidth)),a.beginPath(),a.setFillStyle(e.background||"#ffffff"),a.moveTo(r.x,r.y),a.arc(r.x,r.y,l,0,2*Math.PI),a.closePath(),a.fill()}if(!1!==e.dataLabel&&1===n){for(var h=!1,c=0,d=t.length;c<d;c++)if(t[c].data>0){h=!0;break}h&&drawPieText(t,e,i,a,s,r)}return 1===n&&"ring"===e.type&&drawRingTitle(e,i,a),{center:r,radius:s,series:t}}function drawRadarDataPoints(t,e,i,a){var n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,o=e.extra.radar||{},r=getRadarCoordinateSeries(e.categories.length),s={x:e.width/2,y:(e.height-i.legendHeight)/2},l=Math.min(s.x-(getMaxTextListLength(e.categories)+i.radarLabelTextMargin),s.y-i.radarLabelTextMargin);l-=i.padding,a.beginPath(),a.setLineWidth(1),a.setStrokeStyle(o.gridColor||"#cccccc"),r.forEach(function(t){var e=convertCoordinateOrigin(l*Math.cos(t),l*Math.sin(t),s);a.moveTo(s.x,s.y),a.lineTo(e.x,e.y)}),a.stroke(),a.closePath();for(var h=1;h<=i.radarGridCount;h++)!function(t){var e={};a.beginPath(),a.setLineWidth(1),a.setStrokeStyle(o.gridColor||"#cccccc"),r.forEach(function(n,o){var r=convertCoordinateOrigin(l/i.radarGridCount*t*Math.cos(n),l/i.radarGridCount*t*Math.sin(n),s);0===o?(e=r,a.moveTo(r.x,r.y)):a.lineTo(r.x,r.y)}),a.lineTo(e.x,e.y),a.stroke(),a.closePath()}(h);return getRadarDataPoints(r,s,l,t,e,n).forEach(function(t,n){if(a.beginPath(),a.setFillStyle(t.color),a.setGlobalAlpha(.6),t.data.forEach(function(t,e){0===e?a.moveTo(t.position.x,t.position.y):a.lineTo(t.position.x,t.position.y)}),a.closePath(),a.fill(),a.setGlobalAlpha(1),!1!==e.dataPointShape){var o=i.dataPointShape[n%i.dataPointShape.length];drawPointShape(t.data.map(function(t){return t.position}),t.color,o,a)}}),drawRadarLabel(r,l,s,e,i,a),{center:s,radius:l,angleList:r}}function drawCanvas(t,e){e.draw()}function Animation(t){this.isStop=!1,t.duration=void 0===t.duration?1e3:t.duration,t.timing=t.timing||"linear";var e=function(){return"undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setTimeout?function(t,e){setTimeout(function(){var e=+new Date;t(e)},e)}:function(t){t(null)}}(),i=null,a=function(n){if(null===n||!0===this.isStop)return t.onProcess&&t.onProcess(1),void(t.onAnimationFinish&&t.onAnimationFinish());if(null===i&&(i=n),n-i<t.duration){var o=(n-i)/t.duration;o=(0,Timing[t.timing])(o),t.onProcess&&t.onProcess(o),e(a,17)}else t.onProcess&&t.onProcess(1),t.onAnimationFinish&&t.onAnimationFinish()};a=a.bind(this),e(a,17)}function drawCharts(t,e,i,a){var n=this,o=e.series,r=e.categories;o=fillSeriesColor(o,i);var s=calLegendData(o,e,i),l=s.legendHeight;i.legendHeight=l;var h=calYAxisData(o,e,i),c=h.yAxisWidth;if(i.yAxisWidth=c,r&&r.length){var d=calCategoriesData(r,e,i),x=d.xAxisHeight,f=d.angle;i.xAxisHeight=x,i._xAxisTextAngle_=f}"pie"!==t&&"ring"!==t||(i._pieTextMaxLength_=!1===e.dataLabel?0:getPieTextMaxLength(o));var u=e.animation?1e3:0;switch(this.animationInstance&&this.animationInstance.stop(),t){case"line":this.animationInstance=new Animation({timing:"easeIn",duration:u,onProcess:function(t){drawYAxisGrid(e,i,a);var s=drawLineDataPoints(o,e,i,a,t),l=s.xAxisPoints,h=s.calPoints,c=s.eachSpacing;n.chartData.xAxisPoints=l,n.chartData.calPoints=h,n.chartData.eachSpacing=c,drawXAxis(r,e,i,a),drawLegend(e.series,e,i,a),drawYAxis(o,e,i,a),drawToolTipBridge(e,i,a,t),drawCanvas(e,a)},onAnimationFinish:function(){n.event.trigger("renderComplete")}});break;case"column":this.animationInstance=new Animation({timing:"easeIn",duration:u,onProcess:function(t){drawYAxisGrid(e,i,a);var s=drawColumnDataPoints(o,e,i,a,t),l=s.xAxisPoints,h=s.eachSpacing;n.chartData.xAxisPoints=l,n.chartData.eachSpacing=h,drawXAxis(r,e,i,a),drawLegend(e.series,e,i,a),drawYAxis(o,e,i,a),drawCanvas(e,a)},onAnimationFinish:function(){n.event.trigger("renderComplete")}});break;case"area":this.animationInstance=new Animation({timing:"easeIn",duration:u,onProcess:function(t){drawYAxisGrid(e,i,a);var s=drawAreaDataPoints(o,e,i,a,t),l=s.xAxisPoints,h=s.calPoints,c=s.eachSpacing;n.chartData.xAxisPoints=l,n.chartData.calPoints=h,n.chartData.eachSpacing=c,drawXAxis(r,e,i,a),drawLegend(e.series,e,i,a),drawYAxis(o,e,i,a),drawToolTipBridge(e,i,a,t),drawCanvas(e,a)},onAnimationFinish:function(){n.event.trigger("renderComplete")}});break;case"ring":case"pie":this.animationInstance=new Animation({timing:"easeInOut",duration:u,onProcess:function(t){n.chartData.pieData=drawPieDataPoints(o,e,i,a,t),drawLegend(e.series,e,i,a),drawCanvas(e,a)},onAnimationFinish:function(){n.event.trigger("renderComplete")}});break;case"radar":this.animationInstance=new Animation({timing:"easeInOut",duration:u,onProcess:function(t){n.chartData.radarData=drawRadarDataPoints(o,e,i,a,t),drawLegend(e.series,e,i,a),drawCanvas(e,a)},onAnimationFinish:function(){n.event.trigger("renderComplete")}})}}function Event(){this.events={}}var config={yAxisWidth:15,yAxisSplit:5,xAxisHeight:15,xAxisLineHeight:15,legendHeight:15,yAxisTitleWidth:15,padding:12,columePadding:3,fontSize:10,dataPointShape:["diamond","circle","triangle","rect"],colors:["#7cb5ec","#f7a35c","#434348","#90ed7d","#f15c80","#8085e9"],pieChartLinePadding:25,pieChartTextPadding:15,xAxisTextPadding:3,titleColor:"#333333",titleFontSize:20,subtitleColor:"#999999",subtitleFontSize:15,toolTipPadding:3,toolTipBackground:"#000000",toolTipOpacity:.7,toolTipLineHeight:14,radarGridCount:3,radarLabelTextMargin:15},util={toFixed:function(t,e){return e=e||2,this.isFloat(t)&&(t=t.toFixed(e)),t},isFloat:function(t){return t%1!=0},approximatelyEqual:function(t,e){return Math.abs(t-e)<1e-10},isSameSign:function(t,e){return Math.abs(t)===t&&Math.abs(e)===e||Math.abs(t)!==t&&Math.abs(e)!==e},isSameXCoordinateArea:function(t,e){return this.isSameSign(t.x,e.x)},isCollision:function(t,e){return t.end={},t.end.x=t.start.x+t.width,t.end.y=t.start.y-t.height,e.end={},e.end.x=e.start.x+e.width,e.end.y=e.start.y-e.height,!(e.start.x>t.end.x||e.end.x<t.start.x||e.end.y>t.start.y||e.start.y<t.end.y)}},Timing={easeIn:function(t){return Math.pow(t,3)},easeOut:function(t){return Math.pow(t-1,3)+1},easeInOut:function(t){return(t/=.5)<1?.5*Math.pow(t,3):.5*(Math.pow(t-2,3)+2)},linear:function(t){return t}};Animation.prototype.stop=function(){this.isStop=!0},Event.prototype.addEventListener=function(t,e){this.events[t]=this.events[t]||[],this.events[t].push(e)},Event.prototype.trigger=function(){for(var t=arguments.length,e=Array(t),i=0;i<t;i++)e[i]=arguments[i];var a=e[0],n=e.slice(1);this.events[a]&&this.events[a].forEach(function(t){try{t.apply(null,n)}catch(t){console.error(t)}})};var Charts=function(t){t.title=t.title||{},t.subtitle=t.subtitle||{},t.yAxis=t.yAxis||{},t.xAxis=t.xAxis||{},t.extra=t.extra||{},t.legend=!1!==t.legend,t.animation=!1!==t.animation;var e=assign({},config);e.yAxisTitleWidth=!0!==t.yAxis.disabled&&t.yAxis.title?e.yAxisTitleWidth:0,e.pieChartLinePadding=!1===t.dataLabel?0:e.pieChartLinePadding,e.pieChartTextPadding=!1===t.dataLabel?0:e.pieChartTextPadding,this.opts=t,this.config=e,this.context=wx.createCanvasContext(t.canvasId),this.chartData={},this.event=new Event,this.scrollOption={currentOffset:0,startTouchX:0,distance:0},drawCharts.call(this,t.type,t,e,this.context)};Charts.prototype.updateData=function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.opts.series=t.series||this.opts.series,this.opts.categories=t.categories||this.opts.categories,this.opts.title=assign({},this.opts.title,t.title||{}),this.opts.subtitle=assign({},this.opts.subtitle,t.subtitle||{}),drawCharts.call(this,this.opts.type,this.opts,this.config,this.context)},Charts.prototype.stopAnimation=function(){this.animationInstance&&this.animationInstance.stop()},Charts.prototype.addEventListener=function(t,e){this.event.addEventListener(t,e)},Charts.prototype.getCurrentDataIndex=function(t){var e=t.touches&&t.touches.length?t.touches:t.changedTouches;if(e&&e.length){var i=e[0],a=i.x,n=i.y;return"pie"===this.opts.type||"ring"===this.opts.type?findPieChartCurrentIndex({x:a,y:n},this.chartData.pieData):"radar"===this.opts.type?findRadarChartCurrentIndex({x:a,y:n},this.chartData.radarData,this.opts.categories.length):findCurrentIndex({x:a,y:n},this.chartData.xAxisPoints,this.opts,this.config,Math.abs(this.scrollOption.currentOffset))}return-1},Charts.prototype.showToolTip=function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if("line"===this.opts.type||"area"===this.opts.type){var i=this.getCurrentDataIndex(t),a=this.scrollOption.currentOffset,n=assign({},this.opts,{_scrollDistance_:a,animation:!1});if(i>-1){var o=getSeriesDataItem(this.opts.series,i);if(0!==o.length){var r=getToolTipData(o,this.chartData.calPoints,i,this.opts.categories,e),s=r.textList,l=r.offset;n.tooltip={textList:s,offset:l,option:e}}}drawCharts.call(this,n.type,n,this.config,this.context)}},Charts.prototype.scrollStart=function(t){t.touches[0]&&!0===this.opts.enableScroll&&(this.scrollOption.startTouchX=t.touches[0].x)},Charts.prototype.scroll=function(t){if(t.touches[0]&&!0===this.opts.enableScroll){var e=t.touches[0].x-this.scrollOption.startTouchX,i=this.scrollOption.currentOffset,a=calValidDistance(i+e,this.chartData,this.config,this.opts);this.scrollOption.distance=e=a-i;var n=assign({},this.opts,{_scrollDistance_:i+e,animation:!1});drawCharts.call(this,n.type,n,this.config,this.context)}},Charts.prototype.scrollEnd=function(t){if(!0===this.opts.enableScroll){var e=this.scrollOption,i=e.currentOffset,a=e.distance;this.scrollOption.currentOffset=i+a,this.scrollOption.distance=0}},module.exports=Charts;

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\pages\test1\test1.js
--------------------------------------------------
const myFavBh = require('../../comm/behavior/my_fav_bh.js');
const myFootBh = require('../../comm/behavior/my_foot_bh.js');
const newsIndexBh = require('../../comm/behavior/news_index_bh.js');
const searchBh = require('../../comm/behavior/search_bh.js');
const favBiz = require('../../comm/biz/fav_biz.js');
const fileHelper = require('../../helper/file_helper.js');
const qr = require('../../lib/tools/qrcode_lib.js');
const base64 = require('../../lib/tools/base64_lib.js')
const miniHelper = require('../../helper/mini_helper.js')
const formHelper = require('../../helper/form_helper.js') 
Page({

	/**
	 * 页面的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad(options) {

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady() {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow() {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide() {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload() {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh() {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom() {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage() {

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\pages\test1\test1.json
--------------------------------------------------
{
	"usingComponents": {
"cmpt-car-number": "/cmpts/public/car_number/car_number_cmpt",
		"cmpt-customer-nav": "/cmpts/public/custom_nav/custom_nav_cmpt",
		"cmpt-swiper": "/cmpts/public/swiper/swiper_cmpt",
		"cmpt-date-select": "/cmpts/public/calendar/date_select/date_select_cmpt",
		"cmpt-time-select": "/cmpts/public/calendar/time_select/time_select_cmpt",
		"cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
		"cmpt-poster": "/cmpts/public/poster/poster_cmpt",
		"cmpt-picker": "/cmpts/public/picker/picker_cmpt",
		"cmpt-checkbox": "/cmpts/public/checkbox/checkbox_cmpt",
		"cmpt-editor": "/cmpts/public/editor/editor_cmpt",
		"cmpt-table": "/cmpts/public/table/table_cmpt",
		"cmpt-ex-form": "/cmpts/public/form/form_show/form_show_cmpt",
		"cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt"
	}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\pages\test1\test1.wxml
--------------------------------------------------
<cmpt-picker-multi />
<cmpt-table />
<cmpt-poster />
<cmpt-wxa />

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\pages\test1\test1.wxss
--------------------------------------------------

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\activity_biz.js
--------------------------------------------------
/**
 * Notes: 职位模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-24 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js');
const pageHelper = require('../../../helper/page_helper.js');
const cloudHelper = require('../../../helper/cloud_helper.js');
const projectSetting = require('../public/project_setting.js');

class ActivityBiz extends BaseBiz { 
 
	static async cancelMyActivityJoin(activityJoinId, callback) {
		let cb = async () => {
			try {
				let params = {
					activityJoinId
				}
				let opts = {
					title: '取消中'
				}

				await cloudHelper.callCloudSumbit('activity/my_join_cancel', params, opts).then(res => {
					pageHelper.showSuccToast('已取消', 1500, callback);
				});
			} catch (err) {
				console.log(err);
			}
		}

		pageHelper.showConfirm('确认取消该申请?', cb);
	}


	static openMap(address, geo) {
		if (geo && geo.latitude)
			wx.openLocation({
				latitude: geo.latitude,
				longitude: geo.longitude,
				address,
				scale: 18
			})
		else {
			wx.setClipboardData({
				data: address,
				success(res) {
					wx.getClipboardData({
						success(res) {
							pageHelper.showNoneToast('已复制到剪贴板，请在地图APP里查询');
						}
					})
				}
			});
		}
	}
}

module.exports = ActivityBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\admin_activity_biz.js
--------------------------------------------------
/**
 * Notes: 职位后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-06-24 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js');
const ActivityBiz = require('./activity_biz.js');
const projectSetting = require('../public/project_setting.js');
const formSetHelper = require('../../../cmpts/public/form/form_set_helper.js');
const timeHelper = require('../../../helper/time_helper.js');

class AdminActivityBiz extends BaseBiz {
	static initFormData(id = '') {

		return {
			id,

			fields: projectSetting.ACTIVITY_FIELDS,

			formTitle: '',
			formCateId: '',
			formCateName: '',
			formOrder: 9999,

			formMaxCnt: 50,
			formStart: timeHelper.time('Y-M-D h:m:s'),
			formEnd: '',

			formAddress: '',
			formAddressGeo: {
				address: '',
				latitude: 0,
				longitude: 0,
				name: ''
			},

			formCheckSet: 0,
			formCancelSet: 1,

			formForms: [],

			formJoinForms: formSetHelper.initFields(projectSetting.ACTIVITY_JOIN_FIELDS),
		}

	}

	static selectLocation(that) {
		let callback = function (res) {
			if (!res || !res.name || !res.address || !res.latitude || !res.longitude)
				return;

			let formAddress = res.address + '  ' + res.name;

			let formAddressGeo = {};
			formAddressGeo.name = res.name;
			formAddressGeo.address = res.address;
			formAddressGeo.latitude = res.latitude;
			formAddressGeo.longitude = res.longitude;
			that.setData({
				formAddressGeo,
				formAddress
			});
		}
		if (that.data.formAddressGeo && that.data.formAddressGeo.latitude > 0) {
			wx.chooseLocation({
				latitude: that.data.formAddressGeo.latitude,
				longitude: that.data.formAddressGeo.longitude,
				success: function (res) {
					callback(res);
				}
			})
		} else {
			wx.chooseLocation({
				success: function (res) {
					callback(res);
				},
				fail: function (err) {
					console.log(err);
				}
			})
		}
	}
}

AdminActivityBiz.CHECK_FORM = {
	title: 'formTitle|must|string|min:2|max:50|name=职位名称',
	cateId: 'formCateId|id|name=企业',
	cateName: 'formCateName|string|name=企业',
	order: 'formOrder|must|int|min:0|max:9999|name=排序号',

	maxCnt: 'formMaxCnt|must|int|name=人数上限',
	start: 'formStart|must|string|name=申请开始时间',
	end: 'formEnd|must|string|name=申请截止时间',

	address: 'formAddress|must|string|name=工作地点',
	addressGeo: 'formAddressGeo|must|object|name=工作地点GEO',

	checkSet: 'formCheckSet|must|int|name=审核设置',
	cancelSet: 'formCancelSet|must|int|name=取消设置',
	forms: 'formForms|array',
	joinForms: 'formJoinForms|array|name=用户申请资料设置',
};

module.exports = AdminActivityBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\admin_cate_biz.js
--------------------------------------------------
/**
 * Notes: 分类后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2023-11-14 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js'); 
const projectSetting = require('../public/project_setting.js'); 

class AdminCateBiz extends BaseBiz { 

	/** 表单初始化相关数据 */
	static async initCateFormData(id = '') {
		return {
			id,

			fields: projectSetting.CATE_FIELDS,

			// 表单数据  
			formOrder: 9999,
			formTitle: '',
			formForms: [],
		}

	}

 


}

/** 表单校验  本地 */
AdminCateBiz.CATE_CHECK_FORM = {
	title: 'formTitle|must|string|name=企业名称',
	order: 'formOrder|must|int|min:0|max:9999|name=排序号',
	forms: 'formForms|array',
};
 


module.exports = AdminCateBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\admin_news_biz.js
--------------------------------------------------
/**
 * Notes: 资讯后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js');
const NewsBiz = require('./news_biz.js');
const projectSetting = require('../public/project_setting.js');

class AdminNewsBiz extends BaseBiz {


	/** 表单初始化相关数据 */
	static initFormData(id = '') {
		let cateIdOptions = NewsBiz.getCateList();

		return {
			id,

			contentDesc: '',

			// 分类
			cateIdOptions,

			fields: projectSetting.NEWS_FIELDS,

			// 图片数据 
			imgList: [],


			// 表单数据  
			formOrder: 9999,
			formTitle: '',
			formDesc: '',
			formContent: [],
			formCateId: (cateIdOptions.length == 1) ? cateIdOptions[0].val : '',
			formForms:[],
		}

	}

	static getCateName(cateId) {
		let cateList = projectSetting.NEWS_CATE;

		for (let k = 0; k < cateList.length; k++)  { 
			if (cateList[k].id == cateId) return cateList[k].title;
		}
		return '';
	}

}


/** 表单校验  本地 */
AdminNewsBiz.CHECK_FORM = {
	title: 'formTitle|must|string|min:4|max:50|name=标题',
	cateId: 'formCateId|must|id|name=分类',
	order: 'formOrder|must|int|min:0|max:9999|name=排序号',
	desc: 'formDesc|string|min:10|max:200|name=简介',
	forms: 'formForms|array',
};


module.exports = AdminNewsBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\cate_biz.js
--------------------------------------------------
/**
 * Notes: 分类后台管理模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2023-11-14 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js'); 

class CateBiz extends BaseBiz {

 
 
}

module.exports = CateBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\news_biz.js
--------------------------------------------------
/**
 * Notes: 资讯模块业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-11-14 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js');
const dataHelper = require('../../../helper/data_helper.js'); 
const projectSetting = require('../public/project_setting.js');

class NewsBiz extends BaseBiz {   

	/** 取得分类 */
	static getCateList() {
		let cateList = projectSetting.NEWS_CATE; 

		let arr = [];
		for (let k = 0; k < cateList.length; k++) {
			arr.push({
				label: cateList[k].title,
				type: 'cateId',

				id: cateList[k].id,
				title: cateList[k].title,
				style: cateList[k].style,
				
				val: cateList[k].id, //for options
				value: cateList[k].id, //for list
			})
		}
		return arr;
	}


	static setCateTitle(cateId = null, that) {

		// 获取当前小程序的页面栈
		let pages = getCurrentPages();
		// 数组中索引最大的页面--当前页面
		let currentPage = pages[pages.length - 1];
		// 附加参数 
		if (currentPage.options && currentPage.options.id) {
			cateId = currentPage.options.id;
		}
		let cateList = dataHelper.getSelectOptions(projectSetting.NEWS_CATE);
		for (let k = 0; k < cateList.length; k++) {
			if (cateList[k].val == cateId) {
				wx.setNavigationBarTitle({
					title: cateList[k].label
				});

				if (cateList[k].ext) { //样式
					that.setData({
						listMode: cateList[k].ext
					});
				} else {
					that.setData({
						listMode: 'leftbig'
					});
				}

			}
		}

	}

	/** 搜索菜单设置 */
	static async getSearchMenu() {
		let sortMenus = [{
			label: '全部',
			type: '',
			value: ''
		}];
		let sortMenusAfter = [{
			label: '最新',
			type: 'sort',
			value: 'new'
		},];
		let sortItems = [];

		sortMenus = sortMenus.concat(sortMenusAfter);

		return {
			sortItems,
			sortMenus
		}
	}
}

module.exports = NewsBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\biz\project_biz.js
--------------------------------------------------
/**
 * Notes: 项目通用业务逻辑
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2022-05-22 07:48:00 
 */

const BaseBiz = require('../../../comm/biz/base_biz.js'); 
const projectSetting = require('../public/project_setting.js');
const PubilcBiz = require('../../../comm/biz/public_biz.js');
const PassportBiz = require('../../../comm/biz/passport_biz.js'); 

class ProjectBiz extends BaseBiz {

	/**
	 * 页面初始化    
	 * @param {*} that  
	 */
	static initPage(that, { isSetNavColor = true } = {}) {   

		let skin = {};
		skin.NAV_BG = projectSetting.NAV_BG;
		skin.NAV_COLOR = projectSetting.NAV_COLOR;
		skin.PROJECT_COLOR = projectSetting.PROJECT_COLOR;
		
		PubilcBiz.initPageBase(that, { skin, isSetNavColor });
	}

}

module.exports = ProjectBiz;
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\about\index\about_index.js
--------------------------------------------------
const behavior = require('../../../../../comm/behavior/about_bh.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const projectSetting = require('../../../public/project_setting.js');

Page({

	behaviors: [behavior],

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);

		if (options && options.key)
			this._loadDetail(options.key, projectSetting.SETUP_CONTENT_ITEMS);
	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\about\index\about_index.json
--------------------------------------------------
{
	"usingComponents": { 
	  },
	"enablePullDownRefresh": true 
  }
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\about\index\about_index.wxml
--------------------------------------------------
<include src="../../../../../tpls/project/about_tpl.wxml" />
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\about\index\about_index.wxss
--------------------------------------------------
@import "../../../../../style/public/detail.wxss"; 
@import "../../../style/skin.wxss"; 
  
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\detail\activity_detail.js
--------------------------------------------------
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const pageHelper = require('../../../../../helper/page_helper.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const PassportBiz = require('../../../../../comm/biz/passport_biz.js');
const ActivityBiz = require('../../../biz/activity_biz.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);
		if (!pageHelper.getOptions(this, options)) return;
		this._loadDetail();

	},

	_loadDetail: async function () {
		let id = this.data.id;
		if (!id) return;

		let params = {
			id,
		};
		let opt = {
			title: 'bar'
		};
		let activity = await cloudHelper.callCloudData('activity/view', params, opt);
		if (!activity) {
			this.setData({
				isLoad: null
			})
			return;
		}

		this.setData({
			isLoad: true,
			activity,
		});
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () { },

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () { },

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () { },

	bindJoinTap: async function (e) {
		if (!await PassportBiz.loginMustCancelWin(this)) return;

		let callback = async () => {
			try {
				let opts = {
					title: '提交中'
				}
				let params = {
					activityId: this.data.id,
					forms: []
				}
				await cloudHelper.callCloudSumbit('activity/join', params, opts).then(res => {
					let content = (res.data.check == 0) ? '申请成功！' : '申请已提交，请耐心等待系统审核';

					let cb = () => {
						wx.redirectTo({
							url: 'activity_detail?id=' + this.data.id,
						});
					}
					pageHelper.showModal(content, '温馨提示', cb);
				})
			} catch (err) {
				console.log(err);
			};
		}
		pageHelper.showConfirm('确认申请该职位？', callback);

	},

	bindCancelJoinTap: async function (e) {
		if (!await PassportBiz.loginMustCancelWin(this)) return;
		let cb = () => {
			wx.redirectTo({
				url: 'activity_detail?id=' + this.data.id,
			})
		}
		await ActivityBiz.cancelMyActivityJoin(this.data.activity.myActivityJoinId, cb);
	},

	bindOpenMapTap: function (e) {
		let address = pageHelper.dataset(e, 'address');
		let geo = pageHelper.dataset(e, 'geo');
		ActivityBiz.openMap(address, geo);
	},
	url: function (e) {
		pageHelper.url(e, this);
	},

	onPageScroll: function (e) {
		// 回页首按钮
		pageHelper.showTopBtn(e, this);

	},

	onShareAppMessage: function (res) {
		return {
			title: this.data.activity.ACTIVITY_TITLE,
			imageUrl: this.data.activity.ACTIVITY_OBJ.cover[0]
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\detail\activity_detail.json
--------------------------------------------------
{
	"usingComponents": {   
		"cmpt-detail": "/cmpts/biz/detail/detail_cmpt"
	}, 
	"enablePullDownRefresh": true,  
	"navigationBarTitleText": "职位详情"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\detail\activity_detail.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l load-project"></view>

<block wx:if="{{isLoad}}">

	<view class="main">

		<view class="detail shadow-project">
			<view class="title big">{{activity.ACTIVITY_TITLE}}</view>
			<view class="price">{{activity.ACTIVITY_OBJ.money}}</view>
			<view class="tag-list">
				<view class="type">{{activity.ACTIVITY_OBJ.type}}</view>
				<view class="type">{{activity.ACTIVITY_OBJ.biz}}</view>
				<view wx:if="{{activity.ACTIVITY_MAX_CNT==0}}">人数不限</view>
				<view wx:else>招{{activity.ACTIVITY_MAX_CNT}}人</view>
				<view>{{activity.ACTIVITY_OBJ.pay}}</view>
				<view wx:for="{{activity.ACTIVITY_OBJ.tag}}" wx:key="k">{{item.title}}</view>
			</view>
		</view>



		<view bind:tap="url" data-url="../../cate/detail/cate_detail?id={{activity.ACTIVITY_CATE_ID}}" class="detail shadow-project" wx:if="{{activity.cate}}">
			<!--<view class="title">发布企业</view>-->
			<view class="company">
				<view class="left">
					<image src="{{activity.cate.CATE_OBJ.cover[0]}}" class="loading" mode="aspectFill" />
				</view>
				<view class="right">
					<view class="top">{{activity.cate.CATE_TITLE}}</view>
					<view class="bottom">{{activity.cate.CATE_CNT}}个职位</view>
				</view>
			</view>
		</view>

		<view class="rule">
			<view class="item {{activity.statusDesc=='招聘中'?'bg-olive':'bg-orange'}} light" style="border-color:{{activity.statusDesc=='招聘中'?'#B6DB84':'#F8B076'}}">
				<text class="t1"><text wx:if="{{activity.ACTIVITY_MAX_CNT==0}}">人数不限</text> <text wx:else>{{activity.ACTIVITY_JOIN_CNT}}<text class="margin-left-xxs margin-right-xxs">/</text>{{activity.ACTIVITY_MAX_CNT}}</text></text>
				<text class="t2">{{activity.statusDesc}}</text>
			</view>
			<view class="item bg-blue light" style="border-color: #85b1fc">
				<text class="t1">{{activity.end}}</text>
				<text class="t2">截止申请时间</text>
			</view>
			<view class="item bg-pink light" style="border-color: #f5b2d8">
				<text class="t1">
					<text wx:if="{{activity.ACTIVITY_CHECK_SET==0}}">申请后无需审核</text>
					<text wx:if="{{activity.ACTIVITY_CHECK_SET==1}}">申请后需要系统审核</text>
				</text>
				<text class="t2">审核规则</text>
			</view>
			<view class="item bg-cyan light" style="border-color: #55dbd5">
				<text class="t1">
					<text wx:if="{{activity.ACTIVITY_CANCEL_SET==0}}">申请后不可取消</text>
					<text wx:if="{{activity.ACTIVITY_CANCEL_SET==1}}">申请后随时可取消</text>
					<text wx:if="{{activity.ACTIVITY_CANCEL_SET==2}}">申请截止前可取消</text>
				</text>
				<text class="t2">取消规则</text>
			</view>
		</view>


		<view class="detail  shadow-project">

			<view class="line1">
				<view class="left">
					<image src="../../../images/detail/task.png" />
				</view>
				<view class="right">
					<view class="top">工作日期</view>
					<view class="bottom">{{activity.ACTIVITY_OBJ.date}}</view>
				</view>
			</view>

			<view class="line1">
				<view class="left">
					<image src="../../../images/detail/time.png" />
				</view>
				<view class="right">
					<view class="top">工作时间</view>
					<view class="bottom">{{activity.ACTIVITY_OBJ.time}}</view>
				</view>
			</view>

			<view class="line1">
				<view class="left">
					<image src="../../../images/detail/person.png" />
				</view>
				<view class="right">
					<view class="top">人员要求</view>
					<view class="bottom">{{activity.ACTIVITY_OBJ.person}}</view>
				</view>
			</view>

			<!--
			<view class="line1">
				<view class="left">
					<image src="../../../images/detail/money.png" />
				</view>
				<view class="right">
					<view class="top">报酬</view>
					<view class="bottom">{{activity.ACTIVITY_OBJ.money}}</view>
				</view>
			</view>-->

			<view class="line1">
				<view class="left">
					<image src="../../../images/detail/location.png" />
				</view>
				<view class="right" bindtap="bindOpenMapTap" data-address="{{activity.ACTIVITY_ADDRESS}}" data-geo="{{activity.ACTIVITY_ADDRESS_GEO}}">
					<view class="top">工作地点</view>
					<view class="bottom">{{activity.ACTIVITY_ADDRESS}} <text class="icon-right text-grey"></text></view>
				</view>
			</view>
		</view>
		<view class="detail  shadow-project">
			<view class="title">详细说明</view>

			<view class="line2 margin-top-s margin-bottom">
				<text>{{activity.ACTIVITY_OBJ.desc}}</text>
			</view>
		</view>

	</view>

	<view style="height:200rpx"></view>


	<cmpt-detail mode="mode2" topBtnShow="{{topBtnShow}}" tag="{{activity.myActivityJoinTag}}" oid="{{activity._id}}" cate="{{activity.ACTIVITY_OBJ.type}}" title="{{activity.ACTIVITY_TITLE}}" cover="/projects/jobpart/images/job.jpg" qr="{{activity.ACTIVITY_QR}}" desc="查看职位详情" bg="{{skin.PROJECT_COLOR}}">
		<view class="bottom-line">
			<button open-type="contact" send-message-title="{{activity.ACTIVITY_TITLE}}" send-message-path="{{'/projects/jobpart/pages/activity/detail/activity_detail?id='+ activity._id}}" show-message-card="true" class="clearbtn join bg-yellow light ">在线咨询</button>


			<view bindtap="bindJoinTap" wx:if="{{activity.myActivityJoinTag!='未被录用'&& activity.statusDesc=='招聘中'&&!activity.myActivityJoinId}}" class="join bg-project margin-left-s">我要申请</view>
			<view wx:elif="{{activity.myActivityJoinTag=='未被录用'&& activity.statusDesc=='招聘中'&&!activity.myActivityJoinId}}" class="join bg-grey light margin-left-s">我申请过</view>
			<view bindtap="bindCancelJoinTap" wx:elif="{{activity.myActivityJoinId}}" class="join bg-grey light  margin-left-s">取消申请</view>
			<view wx:else class="join bg-grey light margin-left-s">{{activity.statusDesc}}</view>
		</view>
	</cmpt-detail>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\detail\activity_detail.wxss
--------------------------------------------------
@import "../../../../../style/public/detail.wxss";
@import "../../../style/skin.wxss";

.main {
	padding: 20rpx 16rpx 30rpx;
}

.detail {
	width: 100%;
	background-color: #fff;
	padding: 30rpx;
	overflow: hidden;
	display: flex;
	flex-direction: column;
	border-radius: 20rpx;
	margin-bottom: 20rpx;
}

.detail .title {
	font-size: 32rpx;
	font-weight: bold;
	padding: 0rpx 0;
	margin-bottom: 10rpx;
}

.detail .title.big {
	font-size: 44rpx;
}

.detail .price {
	width: 100%;
	font-size: 30rpx;
	color: var(--red);
	font-weight: bold;
	padding: 0 10rpx 30rpx;
}

.detail .tag-list {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
}

.detail .tag-list>view {
	padding: 4rpx 16rpx;
	border-radius: 6rpx;
	background-color: #fff;
	font-size: 22rpx;
	margin-right: 10rpx;
	border: 2rpx solid #ddd;
	color: #777;
	margin-bottom: 10rpx;
}

.detail .tag-list>view.type {
	background-color: #FFF3E7;
	color: #FF8812;
	border: 2rpx solid #FFF3E7;
} 

.detail .line1 {
	padding: 16rpx 0;
	display: flex;
	justify-content: baseline;
}

.detail .line1 .left {
	display: flex;
	justify-content: flex-start;
	margin-right: 10rpx;
}

.detail .line1 .left image {
	width: 30rpx;
	height: 30rpx;
}

.detail .line1 .right {
	display: flex;
	flex-direction: column;
}

.detail .line1 .right .top {
	color: #999;
	font-size: 24rpx;
}

.detail .line1 .right .bottom {
	color: #444;
	font-size: 26rpx;
	padding: 10rpx 0;
}

.detail .line2 {
	width: 100%;
	line-height: 1.6;
	font-size: 28rpx;
}

.detail .company {
	width: 100%;
	display: flex;
	padding: 0rpx 0;
}

.detail .company .left {
	display: flex;
	margin-right: 20rpx;
}

.detail .company .left image {
	width: 80rpx;
	height: 80rpx;
	border-radius: 50%;
}

.detail .company .right {
	flex: 1;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.detail .company .right .top {
	width: 100%;
	font-size: 28rpx;
	font-weight: bold;
	color: #333;
	margin-bottom: 10rpx;
}

.detail .company .right .bottom {
	width: 100%;
	font-size: 26rpx;
	color: #999;
}

.rule {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	margin-bottom: 10rpx;
	border-radius: 20rpx;
	margin-top: 10rpx;
}

.rule .item {
	width: calc((100% - 20rpx)/2);
	background-color: #fff;
	margin-bottom: 20rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
	padding: 20rpx 0;
	border-radius: 10rpx;
	border:2rpx solid #ccc;
}

.rule .item:nth-child(2n+1) {
	margin-right: 20rpx;
}

.rule .item .t1 {
	font-size: 28rpx;
}

.rule .item .t2 {
	font-size: 24rpx;
	margin-top: 6rpx;
	color: #999 !important;
}

.map {
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
}

/*底部*/
.bottom-line {
	height: 140rpx;
	background-color: #fff;
	border-radius: 60rpx;
	display: flex;
	align-content: space-between;
	align-items: center;
	padding: 0 20rpx;
}

.bottom-line .join {
	padding: 20rpx 35rpx;
	background-color: var(--projectColor);
	border-radius: 50rpx;
	color: #000;
	text-align: center;
	font-size: 30rpx; 
}  

.cmpt-biz-detail-mode2 .inner .slot-inner {
	flex: 1;
	display: flex;
	justify-content: flex-end;
}

.cmpt-biz-detail-mode2 .inner {
	padding: 0 !important;
}

.icon-favorfill {
	color: var(--projectColor) !important;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\index\activity_index.js
--------------------------------------------------
const ProjectBiz = require('../../../biz/project_biz.js');
const pageHelper = require('../../../../../helper/page_helper.js');
const projectSetting = require('../../../public/project_setting.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		isTotalMenu: true,
		_params: null,

		sortMenus: [],
		sortItems: [],
	},

	/**
		 * 生命周期函数--监听页面加载
		 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);


		if (options && options.search) {
			this.setData({ search: options.search });
		}

		this._getSearchMenu();

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},


	onShareAppMessage: function () {

	},

	_getSearchMenu: function () {

		let sortMenus = [
			{ label: '全部', type: 'cateId', value: '' },
			{ label: '临时兼职', type: 'type', value: '临时兼职' },
			{ label: '固定兼职', type: 'type', value: '固定兼职' },
		];

		let sortItems1 = pageHelper.makeListMenu(projectSetting.ACTIVITY_BIZ, '岗位', 'biz');
		let sortItems2 = pageHelper.makeListMenu(projectSetting.ACTIVITY_PAY, '结算方式', 'pay');

		this.setData({
			isLoad: true,
			sortItems: [sortItems1, sortItems2],
			sortMenus
		})

	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\index\activity_index.json
--------------------------------------------------
{
	"usingComponents": { 
	}, 
	"disableScroll": true, 
	"navigationBarTitleText": "职位"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\index\activity_index.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l load-project"></view>
<block wx:else>

	<cmpt-comm-list pulldownType="{{['modal','modal','modal','modal','modal']}}" type="activity-list" _params="{{_params}}" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" sortMenusDefaultIndex="0" route="activity/list" topBottom="120" isTotalMenu="{{isTotalMenu}}" placeholder="搜索职位，企业，门店" bind:list="bindCommListCmpt">
		<view class="main">
			<view class="list">
				<view class="item shadow-project" wx:for="{{dataList.list}}" wx:key="key" bindtap="url" data-url="../detail/activity_detail?id={{item._id}}">
					<view class="top">
						<view class="title">
							<view class="left">{{item.ACTIVITY_TITLE}}</view>
							<view class="right text-cut">{{item.ACTIVITY_OBJ.money}}</view>
						</view>
						<view class="desc content-cut-one">
							<text>{{item.ACTIVITY_OBJ.date}}</text>
							<text class="text-black margin-left-xs margin-right-xs">|</text>
							<text>{{item.ACTIVITY_OBJ.time}}</text>
						</view>
						<view class="tag-list">
							<view class="type">{{item.ACTIVITY_OBJ.type}}</view>
							<view class="type">{{item.ACTIVITY_OBJ.biz}}</view>
							<view wx:if="{{item.ACTIVITY_MAX_CNT==0}}">人数不限</view>
							<view wx:else>招{{item.ACTIVITY_MAX_CNT}}人</view>
							<view>{{item.ACTIVITY_OBJ.pay}}</view>
							<view wx:for="{{item.ACTIVITY_OBJ.tag}}" wx:for-item="itm" wx:key="k">{{itm.title}}</view>
						</view>
					</view>
					<view class="line">
						<view class="left">
							<block wx:if="{{item.cate&&item.cate.CATE_TITLE}}">
								<image mode="aspectFit" class="loading" lazy-load="{{true}}" src="{{item.cate.CATE_OBJ.cover[0]}}" />
								<text>{{item.cate.CATE_TITLE}}</text>
							</block>
						</view>
						<view class="join {{item.statusDesc=='招聘中'?'active':''}}">
							<text wx:if="{{item.statusDesc=='招聘中'}}">立即申请</text>
							<text wx:else>{{item.statusDesc}}</text>
						</view>
					</view>
				</view>

			</view>

		</view>


		<!--load begin-->
		<import src="../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{skin:'load-project',dataList}}" />
		<!--load end-->

	</cmpt-comm-list>


	<block wx:if="{{skin.IS_SUB&&isTotalMenu}}">
		<import src="../../tpls/menu_tpl.wxml" />
		<template is="menuTpl" data="{{skin,curMenu:'activity_index',returnHome}}" />
	</block>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\index\activity_index.wxss
--------------------------------------------------
@import "../../../style/skin.wxss";
@import "../../../../../cmpts/public/calendar//calendar_comm/din.wxss";


.main {
	padding: 0rpx !important;
}

.list {
	width: 100%;
	padding: 10rpx 16rpx;
	display: flex;
	flex-direction: column;
}

.list .item {
	width: 100%;
	display: flex;
	background-color: #fff;
	padding: 30rpx 20rpx;
	overflow: hidden;
	position: relative;
	border-radius: 20rpx;
	margin-bottom: 20rpx;
}

.list .item {
	flex: 1;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
}

.list .item .top {
	width: 100%;
	display: flex;
	flex-direction: column;
}

.list .item .top .title {
	width: 100%;
	margin-bottom: 20rpx;
	display: flex;
	justify-content: space-between;
}

.list .item .top .title .left {
	flex: 1;
	font-size: 32rpx;
	color: #000;
	font-weight: bold;
}

.list .item .top .title .right {
	font-size: 28rpx;
	color: var(--red);
	margin-left: 6rpx;
	max-width: 250rpx;
	font-family: 'din';
}

.list .item .top .desc {
	width: 100%;
	font-size: 26rpx;
	color: #444;
	margin-bottom: 16rpx;
}

.list .item .top .tag-list {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
}

.list .item .top .tag-list>view {
	padding: 4rpx 10rpx;
	border-radius: 4rpx;
	background-color: #f8f8f8;
	font-size: 22rpx;
	margin-right: 10rpx;
	color: #777;
	margin-bottom: 10rpx;
}

.list .item .top .tag-list>view.type {
	background-color: #FFF3E7;
	color: #FF8812;
}


.list .item .line {
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: center;
	margin-top: 24rpx;
}

.list .item .line .left {
	flex: 1;
	display: flex;
	font-size: 24rpx;
	color: #999;
	align-items: center;
}

.list .item .line .left image {
	width: 30rpx;
	height: 30rpx;
	margin-right: 10rpx;
	border-radius: 50%;
}

.list .item .line .join {
	color: #ccc;
	font-size: 28rpx;
	padding: 10rpx 30rpx;
	background-color: #f8f8f8;
	border: 2rpx solid #ccc;
	border-radius: 40rpx;
}

.list .item .line .join.active {
	background-color: #FFF3E7;
	border-color: #FFF3E7;
	color: #FF8812;
}

.tabs .tab-menu.cur {
	color: #000 !important;
	font-size: 30rpx !important;
}

.tabs .tab-menu.cur:after {
	content: " ";
	position: absolute;
	left: 50%;
	bottom: 0rpx;
	width: 50%;
	height: 8rpx !important;
	background-color: var(--projectColor) !important;
	transform: translateX(-50%);
	border-radius: 20rpx !important;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\my_join_list\activity_my_join_list.js
--------------------------------------------------
const pageHelper = require('../../../../../helper/page_helper.js');
const helper = require('../../../../../helper/helper.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const ActivityBiz = require('../../../biz/activity_biz.js');
const PassportBiz = require('../../../../../comm/biz/passport_biz.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLogin: true
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		ProjectBiz.initPage(this);

		if (options && helper.isDefined(options.status)) {
			this.setData({
				isLoad: true,
				_params: {
					sortType: 'status',
					sortVal: options.status,
				}
			});
		}
		
		this._getSearchMenu();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: function () {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},

	/** 搜索菜单设置 */
	_getSearchMenu: function () {
		let sortItem1 = [
			{ label: '排序', type: '', value: '' },
			{ label: '按时间倒序', type: 'timedesc', value: '' },
			{ label: '按时间正序', type: 'timeasc', value: '' }];

		let sortItems = [sortItem1];
		let sortMenus = [
			{ label: '全部', type: 'all', value: '' },
			{ label: '待审核', type: 'status', value: '0' },
			{ label: '已录用', type: 'status', value: '1' },
			{ label: '未录用', type: 'status', value: '99' }
		]

		this.setData({
			search: '',
			sortItems,
			sortMenus,
			isLoad: true
		});

	},
	bindCancelTap: async function (e) {
		if (!await PassportBiz.loginMustCancelWin(this)) return;

		let activityJoinId = pageHelper.dataset(e, 'id');

		let callback = () => {
			pageHelper.delListNode(activityJoinId, this.data.dataList.list, '_id');
			this.data.dataList.total--;
			this.setData({
				dataList: this.data.dataList
			});
		}
		await ActivityBiz.cancelMyActivityJoin(activityJoinId, callback);
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\my_join_list\activity_my_join_list.json
--------------------------------------------------
{
	"usingComponents": { 
	}, 
	"disableScroll": true, 
	"navigationBarTitleText": "我的求职申请"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\my_join_list\activity_my_join_list.wxml
--------------------------------------------------
<block wx:if="{{isLoad}}">
	<cmpt-comm-list  _params="{{_params}}" type="my_activity_join" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="activity/my_join_list" isTotalMenu="{{true}}" sortMenusDefaultIndex="0" topBottom="120" placeholder="搜索职位" bind:list="bindCommListCmpt">

		<view slot="searchEnd">

		</view>

		<!-- List Begin -->
		<view class="text-pic-list-box padding-project">

			<view class="item card-project shadow-project" wx:for="{{dataList.list}}" wx:key="index"> 
				<image  wx:if="{{item.ACTIVITY_JOIN_STATUS==0}}" class="status" src="../../../images/my/wait.png" />
				<image  wx:if="{{item.ACTIVITY_JOIN_STATUS==1}}" class="status" src="../../../images/my/succ.png" />
				<image  wx:if="{{item.ACTIVITY_JOIN_STATUS==99}}" class="status" src="../../../images/my/un.png" />

				<view class="title content-cut-two">{{item.ACTIVITY_JOIN_ACTIVITY_TITLE}}</view>
				<view class="data">
					申请时间：<text class="text-cut">{{item.ACTIVITY_JOIN_ADD_TIME}}</text>
				</view>
				<view class="data" wx:if="{{item.ACTIVITY_JOIN_ACTIVITY_CATE_NAME}}">
					企业：<text class="text-cut">{{item.ACTIVITY_JOIN_ACTIVITY_CATE_NAME}}</text>
				</view>

				<view class="data">
					<text wx:if="{{item.ACTIVITY_JOIN_STATUS==0}}" style="color:#38BDFE"><text class="icon-newshot margin-right-xxs"></text>待审核</text> 

					<text wx:if="{{item.ACTIVITY_JOIN_STATUS==1}}" style="color:#25B195"><text class="icon-check margin-right-xxs"></text>已录用 </text> 

					<block wx:elif="{{item.ACTIVITY_JOIN_STATUS==99}}">
						<text style="color:#FD5455"><text class="icon-roundclose margin-right-xxs"></text>未录用<text class="text-grey" wx:if="{{item.ACTIVITY_JOIN_REASON}}">：{{item.ACTIVITY_JOIN_REASON}}</text></text>
					</block>

				</view>

				<view class="data data-button">
					<button bindtap="url" data-url="../detail/activity_detail?id={{item.ACTIVITY_JOIN_ACTIVITY_ID}}" class="btn mid bg-gray text-black">查看职位详情</button>
					<button wx:if="{{(item.ACTIVITY_JOIN_STATUS==1||item.ACTIVITY_JOIN_STATUS==0)}}" bindtap="bindCancelTap" data-id="{{item._id}}" class="btn mid bg-grey light"><text class="icon-close"></text>取消</button>
				</view>

			</view>

			<!--load begin-->
			<import src="../../../../../tpls/public/list_load_tpl.wxml" />
			<template is="listLoadTpl" data="{{skin:'load-project',dataList}}" />
			<!--load end-->

		</view>
		<!-- List END -->

	</cmpt-comm-list>

	<!--  button Begin -->
	<!--  button END -->

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\my_join_list\activity_my_join_list.wxss
--------------------------------------------------
@import "../../../../../style/public/article_list.wxss";
@import "../../../style/skin.wxss";

.text-pic-list-box .item {
	padding: 20rpx 30rpx 20rpx 40rpx;
	position: relative;
	overflow: hidden;
}

.text-pic-list-box .item .status {
	z-index: 9999;
	position: absolute;
	top: 8rpx;
	right: 10rpx;
	width: 110rpx;
	height: 110rpx; 
}

.btn.mid {
	padding: 0 30rpx;
}

.text-pic-list-box .item .author {
	font-size: 28rpx;
	color: #999;
}

.text-pic-list-box .item .title {
	position: relative;
	padding-right: 20rpx;
}

.text-pic-list-box .item .data {
	line-height: 1.5;
	font-size: 24rpx;
	color: #999;
	margin-top: 10rpx;
	display: flex;
	justify-content: flex-start;
	align-items: center;
}

.text-time {
	color: #ccc;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\query\activity_query.js
--------------------------------------------------
const ProjectBiz = require('../../../biz/project_biz.js');
const pageHelper = require('../../../../../helper/page_helper.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		isTotalMenu: false,
		_params: null,

		sortMenus: [],
		sortItems: [],
	},

	/**
		 * 生命周期函数--监听页面加载
		 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);


		if (options && options.search) {
			this.setData({ search: options.search });
		}

		this._getSearchMenu();

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},


	onShareAppMessage: function () {

	},

	_getSearchMenu: function () {
		this.setData({
			isLoad: true,
		})
	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\query\activity_query.json
--------------------------------------------------
{
	"usingComponents": { 
	}, 
	"disableScroll": true, 
	"navigationBarTitleText": "职位"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\query\activity_query.wxml
--------------------------------------------------
<include src="../index/activity_index.wxml" />
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\activity\query\activity_query.wxss
--------------------------------------------------
@import "../index/activity_index.wxss";
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\add\activity_form_tpl.wxml
--------------------------------------------------
<view class="form-box shadow">
	<view class="form-group">
		<view class="title must">职位名称</view>
	</view>

	<view class="form-group">
		<input placeholder="请填写职位名称" placeholder-class="phc" model:value="{{formTitle}}" focus="{{formTitleFocus}}" maxlength="50"></input>
	</view>
	<view wx:if="{{formTitleFocus}}" class="hint-desc error">{{formTitleFocus}}</view>


	<view class="form-group arrow" id="formCateId" bind:tap="bindSelectCompanyTap">
		<view class="title must">选择所属企业</view>
		<view style="margin-right: 40rpx;">{{formCateId?formCateName:'无所属企业'}}</view>
	</view>
	<view wx:if="{{formCateIdFocus}}" class="hint-desc error">{{formCateIdFocus}}</view>

	<view class="form-group">
		<view class="title must">排序号<text class="text-grey text-normal margin-left-xs">(小的先显示)</text></view>
		<input placeholder="排序号，小的先显示" type="number" placeholder-class="phc" model:value="{{formOrder}}" focus="{{formOrderFocus}}" maxlength="4"></input>
	</view>
	<view wx:if="{{formOrderFocus}}" class="hint-desc error">{{formOrderFocus}}</view>

	<view class="form-group">
		<view class="title must">人数上限<text class="text-grey text-normal margin-left-xs">(0为不限制)</text></view>
		<input placeholder="请填写人数上限" type="number" placeholder-class="phc" model:value="{{formMaxCnt}}" focus="{{formMaxCntFocus}}" maxlength="5"></input>
	</view>
	<view wx:if="{{formMaxCntFocus}}" class="hint-desc error">{{formMaxCntFocus}}</view>

	<!--
	<view class="form-group arrow" id="formStart">
		<view class="title must">职位申请开始时间</view>
		<cmpt-picker-time mark="formStart" mode="fullminute" timeModeStep="5" bind:select="url" data-type="picker" data-item="formStart" endYear="2025" item="{{formStart}}">
			<view class="form-text">{{formStart||'请选择'}}</view>
		</cmpt-picker-time>
	</view>
	<view wx:if="{{formStartFocus}}" class="hint-desc error">{{formStartFocus}}</view>-->

	<view class="form-group arrow" id="formEnd">
		<view class="title must">职位申请截止时间</view>
		<cmpt-picker-time mark="formEnd" mode="fullminute" timeModeStep="5" bind:select="url" data-type="picker" data-item="formEnd" endYear="2025" item="{{formEnd}}">
			<view class="form-text">{{formEnd||'请选择'}}</view>
		</cmpt-picker-time>
	</view>
	<view wx:if="{{formEndFocus}}" class="hint-desc error">{{formEndFocus}}</view>


	<view class="form-group" id="formAddress" bindtap="bindMapTap">
		<view class="title must">工作地点 <text class="icon-location text-orange text-normal margin-left-xs">选择地图定位</text></view>
		<view class="action">{{formAddress.length}}/500</view>
	</view>
	<view class="form-group align-start">
		<textarea model:value="{{formAddress}}" placeholder-class="phc" placeholder="请填写地址" style="min-height:150rpx" auto-height="true" maxlength="500" focus="{{formAddressFocus}}" cursor-spacing="100"></textarea>
	</view>
	<view wx:if="{{formAddressFocus}}" class="hint-desc error">{{formAddressFocus}}</view>
</view>

<view class="form-box shadow">
	<view class="form-group" id="formCheckSet">
		<view class="title must">审核设置</view>
		<cmpt-picker mark="checkSet" style="flex:1" model:item="{{formCheckSet}}" sourceDataStr="0=申请后不需要后台审核,1=申请后需要后台审核" />
	</view>
	<view wx:if="{{formCheckSetFocus}}" class="hint-desc error">{{formCheckSetFocus}}</view>

	<view class="form-group" id="formCancelSet">
		<view class="title must">取消设置</view>
		<cmpt-picker mark="cancelSet" style="flex:1" model:item="{{formCancelSet}}" sourceDataStr="0=不可取消,1=随时可取消,2=申请截止前可取消" />
	</view>
	<view wx:if="{{formCancelSetFocus}}" class="hint-desc error">{{formCancelSetFocus}}</view>



</view>

<view class="form-box shadow margin-top-xs">
	<cmpt-form-show id="cmpt-form" mark="cmpt-form" source="admin" isCacheMatch="{{false}}" fields="{{fields}}" forms="{{formForms}}" isDefMatch="{{id?false:true}}">
	</cmpt-form-show>
</view>

<!--
<view class="form-box shadow">
	<view class="form-group">
		<view class="title must">用户申请填写资料设置 <text class="text-grey text-normal">(共{{formJoinForms.length}}个字段)</text></view>
	</view>
	<cmpt-form-set id="form-set" bind:formset="bindJoinFormsCmpt" fields="{{formJoinForms}}" />
</view>-->


<button bindtap="bindFormSubmit" class="btn-admin margin-top-xs">提交</button>

<view style="height:200rpx"></view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\add\admin_activity_add.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const AdminActivityBiz = require('../../../../biz/admin_activity_biz.js'); 
const validate = require('../../../../../../helper/validate.js');
const PublicBiz = require('../../../../../../comm/biz/public_biz.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		wx.setNavigationBarTitle({
			title: projectSetting.ACTIVITY_NAME + '-添加',
		});

		this.setData(AdminActivityBiz.initFormData());
		this.setData({
			isLoad: true
		});
	},


	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () { },

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () { },

	url: function (e) {
		pageHelper.url(e, this);
	},
	switchModel: function (e) {
		pageHelper.switchModel(this, e);
	},

	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let data = this.data;
		data = validate.check(data, AdminActivityBiz.CHECK_FORM, this);
		if (!data) return; 
	 

		let forms = this.selectComponent("#cmpt-form").getForms(true);
		if (!forms) return;
		data.forms = forms;
 
		try {

			// 创建
			let result = await cloudHelper.callCloudSumbit('admin/activity_insert', data);
			let activityId = result.data.id;

			// 图片
			await cloudHelper.transFormsTempPics(forms, 'activity/', activityId, 'admin/activity_update_forms');

			let callback = async function () {
				PublicBiz.removeCacheList('admin-activity-list');
				PublicBiz.removeCacheList('activity-list');
				wx.navigateBack();

			}
			pageHelper.showSuccToast('添加成功', 2000, callback);

		} catch (err) {
			console.log(err);
		}
	},

	bindJoinFormsCmpt: function (e) {
		this.setData({
			formJoinForms: e.detail,
		});
	},

	bindMapTap: function (e) {
		AdminActivityBiz.selectLocation(this);
	},

	bindSelectCompanyTap: function (e) {
		let itemList = ['选择企业', '无需指定企业'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: {
						wx.navigateTo({
							url: '../../cate/list/admin_cate_list?company=company',
						});
						break;
					}
					case 1: {
						this.setData({formCateId:'',formCateName:''});
						break;
					} 
				}
			},
			fail: function (err) { }
		})
	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\add\admin_activity_add.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
		"cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
		"cmpt-form-set": "/cmpts/public/form/form_set/form_set_cmpt"
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\add\admin_activity_add.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view>
<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<include src="activity_form_tpl.wxml" /> 
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\add\admin_activity_add.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\edit\admin_activity_edit.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const dataHelper = require('../../../../../../helper/data_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');
const AdminActivityBiz = require('../../../../biz/admin_activity_biz.js');
const formSetHelper = require('../../../../../../cmpts/public/form/form_set_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;
		if (!pageHelper.getOptions(this, options)) return;

		wx.setNavigationBarTitle({
			title: projectSetting.ACTIVITY_NAME + '-修改',
		});

		this._loadDetail();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () { },

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () { },

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		this.selectComponent("#cmpt-form").reload();
		wx.stopPullDownRefresh();
	},

	model: function (e) {
		pageHelper.model(this, e);
	},

	_loadDetail: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let id = this.data.id;
		if (!id) return;

		if (!this.data.isLoad) this.setData(AdminActivityBiz.initFormData(id)); // 初始化表单数据

		let params = {
			id
		};
		let opt = {
			title: 'bar'
		};
		let activity = await cloudHelper.callCloudData('admin/activity_detail', params, opt);
		if (!activity) {
			this.setData({
				isLoad: null
			})
			return;
		};

		if (!Array.isArray(activity.ACTIVITY_JOIN_FORMS) || activity.ACTIVITY_JOIN_FORMS.length == 0)
			activity.ACTIVITY_JOIN_FORMS = projectSetting.ACTIVITY_JOIN_FIELDS;


		this.setData({
			isLoad: true,

			formTitle: activity.ACTIVITY_TITLE,
			formCateId: activity.ACTIVITY_CATE_ID,
			formCateName: activity.ACTIVITY_CATE_NAME,
			formOrder: activity.ACTIVITY_ORDER,

			formMaxCnt: activity.ACTIVITY_MAX_CNT,
			formStart: activity.ACTIVITY_START,
			formEnd: activity.ACTIVITY_END,

			formAddress: activity.ACTIVITY_ADDRESS,
			formAddressGeo: activity.ACTIVITY_ADDRESS_GEO,

			formCheckSet: activity.ACTIVITY_CHECK_SET,
			formCancelSet: activity.ACTIVITY_CANCEL_SET,

			formForms: activity.ACTIVITY_FORMS,
			formJoinForms: formSetHelper.initFields(activity.ACTIVITY_JOIN_FORMS),

		});

	},

	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		// 数据校验
		let data = this.data;
		data = validate.check(data, AdminActivityBiz.CHECK_FORM, this);
		if (!data) return;


		let forms = this.selectComponent("#cmpt-form").getForms(true);
		if (!forms) return;
		data.forms = forms;


		try {
			let activityId = this.data.id;
			data.id = activityId;

			// 先修改，再上传 
			await cloudHelper.callCloudSumbit('admin/activity_edit', data).then(res => {
				// 更新列表页面数据
				let node = {
					'ACTIVITY_TITLE': data.title,
					'ACTIVITY_CATE_NAME': data.cateName,
					'ACTIVITY_ORDER': data.order,
					'ACTIVITY_START': data.start,
					'ACTIVITY_END': data.end,
					'ACTIVITY_MAX_CNT': data.maxCnt,
					'ACTIVITY_CHECK_SET': data.checkSet,
					'ACTIVITY_CANCEL_SET': data.cancelSet,
					'ACTIVITY_OBJ': {
						'type': dataHelper.getDataByKey(data.forms, 'mark', 'type').val,
						'biz': dataHelper.getDataByKey(data.forms, 'mark', 'biz').val,
						'pay': dataHelper.getDataByKey(data.forms, 'mark', 'pay').val
					},
					statusDesc: res.data.statusDesc
				}
				pageHelper.modifyPrevPageListNodeObject(activityId, node);
			});

			await cloudHelper.transFormsTempPics(forms, 'activity/', activityId, 'admin/activity_update_forms');

			let callback = () => {
				wx.navigateBack();
			}
			pageHelper.showSuccToast('修改成功', 2000, callback);

		} catch (err) {
			console.log(err);
		}

	},

	bindMapTap: function (e) {
		AdminActivityBiz.selectLocation(this);
	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	switchModel: function (e) {
		pageHelper.switchModel(this, e);
	},

	bindJoinFormsCmpt: function (e) {
		this.setData({
			formJoinForms: e.detail,
		});
	},

	bindSelectCompanyTap: function (e) {
		let itemList = ['选择企业', '无需指定企业'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: {
						wx.navigateTo({
							url: '../../cate/list/admin_cate_list?company=company',
						});
						break;
					}
					case 1: {
						this.setData({ formCateId: '', formCateName: '' });
						break;
					}
				}
			},
			fail: function (err) { }
		})
	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\edit\admin_activity_edit.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
		"cmpt-picker-time": "/cmpts/public/picker_time/picker_time_cmpt",
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt",
		"cmpt-form-set": "/cmpts/public/form/form_set/form_set_cmpt"
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\edit\admin_activity_edit.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-grey"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-grey"></view>

<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<include src="../add/activity_form_tpl.wxml" /> 
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\edit\admin_activity_edit.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss'; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\export\admin_activity_export.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js'); 
const cloudHelper = require('../../../../../../helper/cloud_helper.js'); 
const fileHelper = require('../../../../../../helper/file_helper.js'); 

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		title: '', 
		url: '',
		time: '', 
		status: 1
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this)) return;
		if (!pageHelper.getOptions(this, options, 'activityId')) return;

		if (options && options.title) {
			let title = decodeURIComponent(options.title);
			this.setData({
				title
			});
		}

		this._loadDetail(1);
	},

	_loadDetail: async function (isDel) {
		if (!AdminBiz.isAdmin(this)) return;

		let params = {
			isDel
		}
		let options = {
			title: 'bar'
		}
		let data = await cloudHelper.callCloudData('admin/activity_join_data_get', params, options);

		if (!data) return;

		this.setData({
			isLoad: true,
			url: data.url 
		})

	},


	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail(1);
		wx.stopPullDownRefresh();
	},

	bindOpenTap:function(e) {
		fileHelper.openDoc('职位申请名单', this.data.url);
	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	bindExportTap: async function (e) {
		try {
			let options = {
				title: '数据生成中'
			}

			let params = {
				activityId: this.data.activityId, 
				status: this.data.status
			}

			await cloudHelper.callCloudData('admin/activity_join_data_export', params, options).then(res => {  
				this._loadDetail(0);
				pageHelper.showModal('数据文件生成成功(' + res.total + '条记录), 请点击「直接打开」按钮或者复制文件地址下载');

			});
		} catch (err) {
			console.log(err);
			pageHelper.showNoneToast('导出失败，请重试');
		}

	},

	bindDelTap: async function (e) {
		try {
			let options = {
				title: '数据删除中'
			}
			await cloudHelper.callCloudData('admin/activity_join_data_del', {}, options).then(res => {
				this.setData({
					url: '', 
				});
				pageHelper.showSuccToast('删除成功');
			});
		} catch (err) {
			console.log(err);
			pageHelper.showNoneToast('删除失败，请重试');
		}

	},


})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\export\admin_activity_export.json
--------------------------------------------------
{
	"usingComponents": { 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"enablePullDownRefresh": true,  
	"navigationBarTitleText": "申请名单导出"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\export\admin_activity_export.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view>


<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<view class="form-box shadow">
		<view class="form-group">
			<view class="title text-cut">{{title}}</view>
		</view> 
	 

		<view class="form-group">
			<view class="title must">数据类型</view>
			<cmpt-picker mark="status" style="flex:1" model:item="{{status}}" sourceDataStr="1=已录用名单,0=待审核名单,99=未录用名单,999=所有名单" />
		</view>

	</view>

	<view class="form-box shadow margin-top-xs">
		<view class="form-group">
			<view class="title"  style="font-size:30rpx">数据下载链接<text wx:if="{{time}}" class="text-gray text-s margin-left-s">({{time}} 生成)</text> </view>

			<button hover-class="button-hover" class="btn bg-admin text-white shadow" bindtap="url" data-type="copy" data-url="{{url}}">复制</button>
		</view>
		<view class="form-group align-start" bindtap="url" data-type="copy" data-url="{{url}}">
			<textarea maxlength="500" placeholder="数据文件尚未生成，点击下方按钮生成" placeholder-class="phc" value="{{url}}" style="height:50rpx"></textarea>
		</view>

		<block wx:if="{{url}}">
			<view class="form-group" style="padding:20rpx 15rpx 20rpx;">
				<view class="title-desc">
					<text user-select="true">※ <text class="text-black">链接使用说明</text>
						1. 复制以上链接地址，建议在电脑浏览器中打开链接下载数据文件
						2. 为保障信息安全，请勿外传数据链接
						3. 为了防止隐私数据泄露，请在下载后及时点击下方按钮删除
					</text>
				</view>
			</view>
		</block>
	</view>

	<button bindtap="bindExportTap" class="btn-admin margin-top">{{url?'重新生成名单数据':'生成名单数据'}} (Excel文件)</button> 

	<button wx:if="{{url}}" bindtap="bindOpenTap" class="btn-admin bg-purple light">直接打开数据文件</button>   

	<button wx:if="{{url}}" bindtap="bindDelTap" class="btn-admin bg-orange light">删除数据文件</button> 

	<view class="form-group" wx:if="{{url}}">
		<view class="title-desc text-red"><text class="icon-info margin-right-xs"></text>为了防止隐私数据泄露，请在下载上述文件后及时点击按钮删除
		</view>
	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\export\admin_activity_export.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss'; 

.form-box .title-desc {
	padding-bottom: 10rpx;
	border: 0;
	font-size: 29rpx;
	color: #888;
}

.btn-admin{
	margin-bottom: 20rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\join_list\admin_activity_join_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cacheHelper = require('../../../../../../helper/cache_helper.js');
const helper = require('../../../../../../helper/helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');

const CACHE_CANCEL_REASON = 'ACTIVITY_JOIN_CANCEL_REASON'; 

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		isAllFold: true,

		parentDayIdx: 0,
		parentTimeIdx: 0,

		menuIdx: 0,

		activityId: '',

		title: '',
		titleEn: '',

		cancelModalShow: false,
		cancelAllModalShow: false,
		formReason: '',
		curIdx: -1
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		// 附加参数 
		if (options && options.activityId) {
			//设置搜索菜单 
			this._getSearchMenu();

			this.setData({
				activityId: options.activityId,
				_params: {
					activityId: options.activityId
				}
			}, () => {
				this.setData({
					isLoad: true
				});
			});
		}

		if (options && options.title) {
			let title = decodeURIComponent(options.title);
			this.setData({
				title,
				titleEn: options.title
			});
			wx.setNavigationBarTitle({
				title: '申请名单 - ' + title
			});
		}
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},


	bindCopyTap: function (e) {
		let idx = pageHelper.dataset(e, 'idx');
		let forms = this.data.dataList.list[idx].ACTIVITY_JOIN_FORMS;

		let ret = '';

		if (this.data.title)
			ret += `职位：${this.data.title}\r`;
			
		ret += `用户名：${this.data.dataList.list[idx].user.USER_NAME}\r`;
		ret += `手机：${this.data.dataList.list[idx].user.USER_MOBILE}\r`;

		if (this.data.dataList.list[idx].ACTIVITY_JOIN_ACTIVITY_CATE_NAME)
			ret += `企业：${this.data.dataList.list[idx].ACTIVITY_JOIN_ACTIVITY_CATE_NAME}\r`;



		for (let k = 0; k < forms.length; k++) {
			ret += forms[k].title + '：' + forms[k].val + '\r';
		}
		wx.setClipboardData({
			data: ret,
			success(res) {
				wx.getClipboardData({
					success(res) {
						pageHelper.showSuccToast('已复制到剪贴板');
					}
				})
			}
		});

	},

	bindCancelTap: function (e) {
		this.setData({
			formReason: cacheHelper.get(CACHE_CANCEL_REASON) || '',
			curIdx: pageHelper.dataset(e, 'idx'),
			cancelModalShow: true
		});
	},

 

	bindCancelCmpt: async function () {
		let e = {
			currentTarget: {
				dataset: {
					status: 99,
					idx: this.data.curIdx
				}
			}
		}
		cacheHelper.set(CACHE_CANCEL_REASON, this.data.formReason, 86400 * 365);
		await this.bindStatusTap(e);
	},

	 

	bindDelTap: async function (e) {

		let callback = async () => {
			let idx = Number(pageHelper.dataset(e, 'idx'));
			let dataList = this.data.dataList;
			let activityJoinId = dataList.list[idx]._id;
			let params = {
				activityJoinId
			}
			let opts = {
				title: '删除中'
			}
			try {
				await cloudHelper.callCloudSumbit('admin/activity_join_del', params, opts).then(res => {

					let cb = () => {
						let dataList = this.data.dataList;
						dataList.list.splice(idx, 1);
						dataList.total--;
						this.setData({
							dataList
						});
					}

					pageHelper.showSuccToast('删除成功', 1000, cb);
				});
			} catch (err) {
				console.error(err);
			}
		}

		pageHelper.showConfirm('确认删除该申请记录？ 删除后用户将无法查询到本申请记录', callback);


	},

	bindStatusTap: async function (e) {
		let status = Number(pageHelper.dataset(e, 'status')); 

		let callback = async () => {
			let idx = Number(pageHelper.dataset(e, 'idx'));
			let dataList = this.data.dataList;
			let activityJoinId = dataList.list[idx]._id;
			let params = {
				activityJoinId,
				status,
				reason: this.data.formReason
			}
			let opts = {
				title: '处理中'
			}
			try {
				await cloudHelper.callCloudSumbit('admin/activity_join_status', params, opts).then(res => {
					pageHelper.showSuccToast('操作成功', 1000);
					let sortIndex = this.selectComponent('#cmpt-comm-list').getSortIndex();

					if (sortIndex != -1 && sortIndex != 5 && !this.data.search) { // 全部或者检索的结果
						dataList.list.splice(idx, 1);
						dataList.total--;
					} else {
						dataList.list[idx].ACTIVITY_JOIN_REASON = this.data.formReason;
						dataList.list[idx].ACTIVITY_JOIN_STATUS = status;
					}

					this.setData({
						cancelModalShow: false,
						formReason: '',
						curIdx: -1,
						dataList
					});

				});
			} catch (err) {
				console.error(err);
			}
		}

		switch (status) {
			case 99:
				await callback();
				break;
			case 1: {

				pageHelper.showConfirm('确认变更为「已录用」状态？', callback);
			}
		}

	},

	bindCommListCmpt: function (e) {

		pageHelper.commListListener(this, e);

	},

	// 修改与展示状态菜单
	_getSearchMenu: function () {

		let sortItems = [];
		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: `待审核`, type: 'status', value: 0 },
			{ label: `已录用`, type: 'status', value: 1 },
			{ label: `未录用`, type: 'status', value: 99 },
		];
		this.setData({
			sortItems,
			sortMenus
		})


	},

	bindClearReasonTap: function (e) {
		this.setData({
			formReason: ''
		})
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\join_list\admin_activity_join_list.json
--------------------------------------------------
{
	"usingComponents": {
		 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",   
	"navigationBarTitleText": "职位申请名单管理"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\join_list\admin_activity_join_list.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-grey"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-grey"></view>

<block wx:if="{{isAdmin&&isLoad}}">

	<cmpt-comm-list source='admin' id="cmpt-comm-list" type="admin-activity-join-list" search="{{search||''}}" _params="{{_params}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="admin/activity_join_list" topBottom="50" placeholder="搜索" sortMenusDefaultIndex="0" bind:list="bindCommListCmpt">

		<view slot="searchEnd">
			 
		</view>

		<!-- List Begin -->
		<view class="join-list">
			<view wx:if="{{dataList && dataList.total }}" class="load text-grey">共有{{dataList.total}}条符合条件记录

			</view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="header">
					<view class="left">
						<text class="icon-calendar margin-right-xxs"></text><text class="">{{item.ACTIVITY_JOIN_ADD_TIME}}</text>
					</view>
					<view class="right" bindtap="bindCopyTap" data-idx="{{index}}">
						<text class="icon-copy margin-right-xxs"></text>复制资料
					</view>
				</view>

				<view class="info">

					<view class="info-item">
						<view class="title">状态</view>
						<view class="mao">：</view>
						<view class="content">
							<view wx:if="{{item.ACTIVITY_JOIN_STATUS==1}}" class="text-green"><text class="icon-roundcheck margin-right-xxs"></text>已录用

							</view>
							<view wx:elif="{{item.ACTIVITY_JOIN_STATUS==0}}" class="text-blue">等待审核</view>
							<view wx:elif="{{item.ACTIVITY_JOIN_STATUS==99}}" class="text-grey">未录用</view>
						</view>
					</view>

					<view class="info-item" wx:if="{{item.ACTIVITY_JOIN_STATUS==99}}">
						<view class="title">未录用原因</view>
						<view class="mao">：</view>
						<view class="content">{{item.ACTIVITY_JOIN_REASON||'未填'}}</view>
					</view>

					<view class="info-item" bind:tap="url" data-url="../../user/detail/admin_user_detail?id={{item.ACTIVITY_JOIN_USER_ID}}">
						<view class="title">用户名</view>
						<view class="mao">：</view>
						<view class="content"> {{item.user.USER_NAME}} <text class="text-s text-grey margin-left-xs" style="font-weight: normal;font-size: 24rpx;">[查看简历资料]</text>
						</view>
					</view>

					<view class="info-item">
						<view class="title">手机</view>
						<view class="mao">：</view>
						<view class="content" bind:tap="url" data-type="phone" data-url="{{item.user.USER_MOBILE}}" style="display: flex;align-items: baseline;">
							<text>{{item.user.USER_MOBILE}}</text>
							<text class="icon-phone margin-left-xs text-grey"></text>
						</view>
					</view>

					<view class="info-item">
						<view class="title">职位</view>
						<view class="mao">：</view>
						<view class="content"> {{item.ACTIVITY_JOIN_ACTIVITY_TITLE}} </view>
					</view>

					<view class="info-item" wx:if="{{item.ACTIVITY_JOIN_ACTIVITY_CATE_NAME}}">
						<view class="title">企业</view>
						<view class="mao">：</view>
						<view class="content"> {{item.ACTIVITY_JOIN_ACTIVITY_CATE_NAME}} </view>
					</view> 

					<view class="oprt">
						<block wx:if="{{item.ACTIVITY_JOIN_STATUS==0||item.ACTIVITY_JOIN_STATUS==1}}">
							<view bindtap="bindCancelTap" data-idx="{{index}}" data-status="99" data-old="{{item.ACTIVITY_JOIN_STATUS}}" class="btn bg-grey light  margin-right-s">设为不予录用</view>
						</block>

						<block wx:if="{{item.ACTIVITY_JOIN_STATUS==0 || item.ACTIVITY_JOIN_STATUS==99}}">
							<view bindtap="bindStatusTap" data-idx="{{index}}" data-status="1" data-old="{{item.ACTIVITY_JOIN_STATUS}}" class="btn bg-green light margin-right-s">设为已录用</view>
						</block>


						<view bindtap="bindDelTap" data-idx="{{index}}" class="btn bg-orange light margin-right-s">删除</view>

					</view>
				</view>

				<view class="no">{{index+1}}</view>
			</view>
		</view>
		<!-- List END -->

		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{dataList,skin:'text-grey',noHint:'暂无记录'}}" />
		<!--load end-->


	</cmpt-comm-list>

	 
	<cmpt-modal wx:if="{{cancelModalShow}}" model:show="{{cancelModalShow}}" type="dialog" title="设为不予录用" bind:click="bindCancelCmpt" class="modal-form" cancelText="返回" confirmText="确定">
		<view class="form-group" style="padding:0 10rpx">
			<view class="title">不予理由 <text class="text-grey text-mid">(选填)</text>：</view>
			<view bindtap="bindClearReasonTap" style="width:150rpx;text-align: right;" class="text-grey"><text class="icon-roundclose"></text>清空</view>
		</view>

		<view class="form-group cancel-area">
			<textarea placeholder-class="phc" placeholder="请输入不予不过理由 (非必填)" style="height:110rpx" model:value="{{formReason}}" maxlength="100"></textarea>
		</view>
	</cmpt-modal>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\join_list\admin_activity_join_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

page {
	background-color: #f8f8f8;
}

.join-list {
	width: 100%;
	padding: 0rpx 20rpx 20rpx;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	position: relative;
}

.join-list .item {
	width: 100%;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	background-color: #fff;
	border-radius: 5rpx;
	overflow: hidden;
	margin-bottom: 30rpx;
	position: relative;
	border: 1rpx solid #ddd;
}

.join-list .item .no {
	position: absolute;
	right: 0;
	bottom: 0;
	font-size: 25rpx;
	color: #999;
	line-height: 2;
	padding: 0rpx 15rpx 0rpx 15rpx;
	background-color: #eee;
	border-top-left-radius: 15rpx;
}

.join-list .item .header {
	width: 100%;
	font-size: 26rpx;
	text-align: left;
	line-height: 2.6;
	background-color: #f2f2f2;
	padding: 0 15rpx;
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.join-list .item .header .left {
	color: #333;
}

.join-list .item .header .right {
	font-size: 25rpx;
	color: #666;
}

.join-list .item .info {
	width: 100%;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	background-color: #fff;
	min-height: 150rpx;
	padding: 15rpx 20rpx 20rpx;
	position: relative;
}

.join-list .item .info .right-corner {
	position: absolute;
	left: 10rpx;
	top: 0;
	width: 100rpx;
	height: 50rpx;
}

.join-list .item .info .fold {
	width: 100%;
	text-align: center;
	font-size: 24rpx;
	color: #999;
	padding: 0 20rpx 10rpx;
}

.join-list .item .info .info-item {
	width: 100%;
	display: flex;
	align-items: flex-start;
	justify-content: flex-start;
	background-color: #fff;
	line-height: 1.5;
	font-size: 25rpx;
	font-weight: bold;
	margin-bottom: 20rpx;
}

.join-list .item .info .info-item .title {
	width: 160rpx;
	color: #777;
	text-align: right;
}

.join-list .item .info .info-item .mao {
	color: #777;
	text-align: left;
	margin-right: 10rpx;
}

.join-list .item .info .info-item .content {
	flex: 1;
	color: #333;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
}

.join-list .item .info .info-item.add-time {
	font-size: 24rpx !important;
	font-weight: normal !important;
	border-top: 1rpx dashed #ccc;
	padding-top: 15rpx;
}

.join-list .item .info .oprt {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	padding: 0rpx 0 0rpx;
}

.join-list .item .info .oprt .btn {
	padding: 0 30rpx;
	font-size: 26rpx;
	border-radius: 10rpx !important;
}

.cancel-area {
	border: 1rpx solid #ddd;
}

.time-line {
	width: 100%;
	text-align: right;
	font-size: 24rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\list\admin_activity_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		wx.setNavigationBarTitle({
			title: projectSetting.ACTIVITY_NAME + '-管理',
		});
		this.setData({
			ACTIVITY_NAME: projectSetting.ACTIVITY_NAME
		});

		if (options && options.search) {
			this.setData({ search: options.search });
		}


		//设置搜索菜单
		this._getSearchMenu();

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () { },

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () { },

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},

	bindJoinMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let itemList = ['申请名单管理', '导出名单Excel表格', '清空申请数据'];

		let activityId = pageHelper.dataset(e, 'id');
		let title = encodeURIComponent(pageHelper.dataset(e, 'title'));

		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: {
						wx.navigateTo({
							url: '../join_list/admin_activity_join_list?activityId=' + activityId + '&title=' + title,
						});
						break;
					}
					case 1: {
						wx.navigateTo({
							url: '../export/admin_activity_export?activityId=' + activityId + '&title=' + title,
						});
						break;
					}
					case 2: {
						this._clear(e);
					}
				}
			},
			fail: function (res) { }
		})
	},

	_clear: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');

		let params = {
			id
		}

		let callback = async () => {
			try {
				let opts = {
					title: '处理中'
				}
				await cloudHelper.callCloudSumbit('admin/activity_clear', params, opts).then(res => {
					let node = {
						'ACTIVITY_JOIN_CNT': 0,
					}
					pageHelper.modifyPrevPageListNodeObject(id, node, 1);

					pageHelper.showSuccToast('清空完成');
				});
			} catch (err) {
				console.log(err);
			}
		}
		pageHelper.showConfirm('确认清空所有数据？清空后不可恢复', callback);

	},

	bindStatusMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let itemList = ['启用', '停用 (不显示)', '删除'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: { //启用
						e.currentTarget.dataset['status'] = 1;
						await this._setStatus(e);
						break;
					}
					case 1: { //停止 
						e.currentTarget.dataset['status'] = 0;
						await this._setStatus(e);
						break;
					}
					case 2: { //删除
						await this._del(e);
						break;
					}
				}
			},
			fail: function (res) { }
		})
	},

	bindMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let idx = pageHelper.dataset(e, 'idx');

		let order = this.data.dataList.list[idx].ACTIVITY_ORDER;
		let orderDesc = (order == 0) ? '取消置顶' : '置顶';

		let vouch = this.data.dataList.list[idx].ACTIVITY_VOUCH;
		let vouchDesc = (vouch == 0) ? '推荐到首页' : '取消首页推荐';

		let itemList = ['预览', orderDesc, vouchDesc, '生成专属二维码', '评论管理'];
		let id = pageHelper.dataset(e, 'id');

		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: { //预览 
						wx.navigateTo({
							url: '../../../activity/detail/activity_detail?id=' + id,
						});
						break;
					}
					case 1: { //置顶 
						let sort = (order == 0) ? 9999 : 0;
						e.currentTarget.dataset['sort'] = sort;
						await this._setSort(e);
						break;
					}
					case 2: { //上首页 
						vouch = (vouch == 0) ? 1 : 0;
						e.currentTarget.dataset['vouch'] = vouch;
						await this._setVouch(e);
						break;
					}
					case 3: { //二维码 
						let title = encodeURIComponent(pageHelper.dataset(e, 'title'));
						let qr = encodeURIComponent(pageHelper.dataset(e, 'qr'));
						wx.navigateTo({
							url: `../../setup/qr/admin_setup_qr?title=${title}&qr=${qr}`,
						})
						break;
					}
					case 4: { //评论管理  
						wx.navigateTo({
							url: '../../../comment/list/comment_list?source=admin&id=' + id,
						})
						break;
					}
				}


			},
			fail: function (res) { }
		})
	},

	_setSort: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;

		let id = pageHelper.dataset(e, 'id');
		let sort = pageHelper.dataset(e, 'sort');
		if (!id) return;

		let params = {
			id,
			sort
		}

		try {
			await cloudHelper.callCloudSumbit('admin/activity_sort', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'ACTIVITY_ORDER', sort);
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (err) {
			console.log(err);
		}
	},

	_setVouch: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;

		let id = pageHelper.dataset(e, 'id');
		let vouch = pageHelper.dataset(e, 'vouch');
		if (!id) return;

		let params = {
			id,
			vouch
		}

		try {
			await cloudHelper.callCloudSumbit('admin/activity_vouch', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'ACTIVITY_VOUCH', vouch);
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (err) {
			console.log(err);
		}
	},

	_del: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');

		let params = {
			id
		}

		let callback = async () => {
			try {
				let opts = {
					title: '删除中'
				}
				await cloudHelper.callCloudSumbit('admin/activity_del', params, opts).then(res => {
					pageHelper.delListNode(id, this.data.dataList.list, '_id');
					this.data.dataList.total--;
					this.setData({
						dataList: this.data.dataList
					});
					pageHelper.showSuccToast('删除成功');
				});
			} catch (err) {
				console.log(err);
			}
		}
		pageHelper.showConfirm('确认删除？删除后申请数据将一并删除且不可恢复', callback);

	},

	_setStatus: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');
		let status = Number(pageHelper.dataset(e, 'status'));
		let params = {
			id,
			status
		}

		try {
			await cloudHelper.callCloudSumbit('admin/activity_status', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'ACTIVITY_STATUS', status, '_id');
				pageHelper.modifyListNode(id, this.data.dataList.list, 'statusDesc', res.data.statusDesc, '_id');
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (err) {
			console.log(err);
		}
	},

	_getSearchMenu: function () {

		let sortItems0 = pageHelper.makeListMenu(projectSetting.ACTIVITY_BIZ, '分类', 'biz');
		let sortItems1 = pageHelper.makeListMenu(projectSetting.ACTIVITY_PAY, '结算方式', 'pay');


		let sortItems2 = [
			{ label: '排序', type: '', value: 0 },
			{ label: '按申请人数', type: 'sort', value: 'ACTIVITY_JOIN_CNT|desc' },
		];



		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: '正常', type: 'status', value: 1 },
			{ label: '停用', type: 'status', value: 0 },
			{ label: '最新', type: 'sort', value: 'new' },
			{ label: '首页推荐', type: 'vouch', value: 'vouch' },
			{ label: '置顶', type: 'top', value: 'top' },
		]
		this.setData({
			sortItems: [sortItems0, sortItems1, sortItems2],
			sortMenus,
			isLoad: true
		})
	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\list\admin_activity_list.json
--------------------------------------------------
{
	"usingComponents": { 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"disableScroll": true 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\list\admin_activity_list.wxml
--------------------------------------------------
<block wx:if="{{isAdmin&&isLoad}}">
	<cmpt-comm-list  pulldownType="{{['modal','modal','modal','modal','modal']}}" source='admin' type="admin-activity-list" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="admin/activity_list" sortMenusDefaultIndex="0" topBottom="50" placeholder="搜索标题" bind:list="bindCommListCmpt">

		<view slot="searchEnd"> 
			<button bindtap="url" data-url="../add/admin_activity_add" class="btn radius bg-admin text-white margin-right-s"><text class="icon-roundadd margin-right-xxs"></text>添加新职位</button>
		</view>
		<!-- List Begin -->
		<view class="admin-comm-list">
			<view wx:if="{{dataList && dataList.total }}" class="load text-grey">共有{{dataList.total}}条符合条件记录</view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="no">{{index+1}}</view>
				<view class="header">
					<view class="left text-cut"><text wx:if="{{item.ACTIVITY_ORDER==0}}" class="text-black margin-right-xxs" style="font-weight:normal;font-size:24rpx">[置顶]</text><text wx:if="{{item.ACTIVITY_VOUCH==1}}" class="text-black margin-right-xxs" style="font-weight:normal;font-size:24rpx">[首页推荐]</text> {{item.ACTIVITY_TITLE}}
					</view>
					<view class="right">
						<text wx:if="{{item.ACTIVITY_STATUS==1}}" class="text-black">「正常」</text>
						<text wx:elif="{{item.ACTIVITY_STATUS==0}}" class="text-orange">「停用」</text>
					</view>
				</view>

				<view class="info">
					
					<view class="info-item">
						<view class="title">申请状态</view>
						<view class="mao">：</view>
						<view class="content text-bold text-red">{{item.statusDesc}}</view>
					</view>

					<view  class="info-item">
						<view class="title">企业</view>
						<view class="mao">：</view>
						<view class="content">『{{item.ACTIVITY_CATE_NAME||'无所属企业'}}』</view>
					</view>

					<view  class="info-item">
						<view class="title">参数</view>
						<view class="mao">：</view>
						<view class="content">{{item.ACTIVITY_OBJ.type}}，{{item.ACTIVITY_OBJ.biz}}，{{item.ACTIVITY_OBJ.pay}}</view>
					</view>

					<view class="info-item">
						<view class="title">排序号</view>
						<view class="mao">：</view>
						<view class="content">{{item.ACTIVITY_ORDER}} <text class="margin-left-xxs text-grey">(小的先显示)</text></view>
					</view>

					<view class="info-item">
						<view class="title">申请截止时间</view>
						<view class="mao">：</view>
						<view class="content">{{item.end}}</view>
					</view>
 

					<view class="info-item">
						<view class="title">人数限定</view>
						<view class="mao">：</view>
						<view class="content">{{item.ACTIVITY_JOIN_CNT}}<text class="margin-left-xxs margin-right-xxs">/</text>{{item.ACTIVITY_MAX_CNT==0?'不限人数':item.ACTIVITY_MAX_CNT+'人'}} <text class="margin-left text-grey">(仅指申请成功+待审人数)</text></view>
					</view>

					<view class="info-item">
						<view class="title">参数设定</view>
						<view class="mao">：</view>
						<view class="content">
							<text wx:if="{{item.ACTIVITY_CHECK_SET==1}}">申请后需要审核</text>
							<text wx:if="{{item.ACTIVITY_CHECK_SET==0}}">申请后无需审核</text>
							<text class="margin-left-xs margin-right-xs">/</text>
							<text wx:if="{{item.ACTIVITY_CANCEL_SET==0}}">不可取消</text>
							<text wx:if="{{item.ACTIVITY_CANCEL_SET==1}}">随时可取消</text>
							<text wx:if="{{item.ACTIVITY_CANCEL_SET==2}}">申请截止前可取消</text>

						</view>
					</view>  

					<!--
					<view class="info-item">
						<view class="title">创建</view>
						<view class="mao">：</view>
						<view class="content">{{item.ACTIVITY_ADD_TIME}}</view>
					</view>-->

					<view class="oprt">
						<view bindtap="url" data-url="../edit/admin_activity_edit?id={{item._id}}" class="btn round margin-right-s"><text class="icon-edit margin-right-xxs"></text>编辑</view>

						<view bindtap="bindJoinMoreTap" data-id="{{item._id}}" data-title="{{item.ACTIVITY_TITLE}}" class="btn margin-right-s">申请名单</view>

						<view bindtap="bindStatusMoreTap" data-id="{{item._id}}" class="btn margin-right-s">状态管理</view>

						<view bindtap="bindMoreTap" data-id="{{item._id}}" data-idx="{{index}}" data-qr="{{item.ACTIVITY_QR}}" data-title="{{item.ACTIVITY_TITLE}}" class="btn margin-right-s">更多操作</view>

						<!--
						<view bindtap="url" data-url="../../../activity/detail/activity_detail?id={{item._id}}" class="btn margin-right-s">预览</view>-->

					</view>
				</view>
			</view>

		</view>
		<!-- List END -->

		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{dataList,skin:'text-grey'}}" />
		<!--load end-->


	</cmpt-comm-list>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\activity\list\admin_activity_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
@import '../../../../../../style/project/admin_list_style.wxss';

page {
	background-color: #f8f8f8;
}

 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\add\admin_cate_add.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const PublicBiz = require('../../../../../../comm/biz/public_biz.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');
const AdminCateBiz = require('../../../../biz/admin_cate_biz.js'); 

Page({

	/**
	 * 页面的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return; 
 
		this.setData(await AdminCateBiz.initCateFormData()); // 初始化表单数据
		this.setData({
			isLoad: true
		}); 

	},  
 
	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	model: function (e) {
		pageHelper.model(this, e);
	}, 
 

	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let data = this.data;
		data = validate.check(data, AdminCateBiz.CATE_CHECK_FORM, this);
		if (!data) return; 

		let forms = this.selectComponent("#cmpt-form").getForms(true);
		if (!forms) return;
		data.forms = forms;
 

		try { 
 

			// 先创建，再上传 
			let result = await cloudHelper.callCloudSumbit('admin/cate_insert', data);
			let cateId = result.data.id; 
			 

			await cloudHelper.transFormsTempPics(forms, 'cate/', cateId, 'admin/cate_update_forms');

			let callback = async function () {
				PublicBiz.removeCacheList('admin-cate-list');
				PublicBiz.removeCacheList('cate-list');
				wx.navigateBack();

			}
			pageHelper.showSuccToast('添加成功', 2000, callback);

		} catch (err) {
			console.log(err);
		}

	}, 

 
	url: function (e) {
		pageHelper.url(e, this);
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\add\admin_cate_add.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
		"cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"  
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true,
	"navigationBarTitleText": "添加企业"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\add\admin_cate_add.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view>
<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<include src="admin_cate_form_tpl.wxml" /> 
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\add\admin_cate_add.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\add\admin_cate_form_tpl.wxml
--------------------------------------------------
<view class="form-box shadow">
	<view class="form-group">
		<view class="title must">企业名称</view>
	</view>

	<view class="form-group">
		<input placeholder="简短的分类名称" placeholder-class="phc" model:value="{{formTitle}}" focus="{{formTitleFocus}}" maxlength="50"></input>
	</view>
	<view wx:if="{{formTitleFocus}}" class="hint-desc error">{{formTitleFocus}}</view>

	<view class="form-group">
		<view class="title must">排序号<text class="text-grey text-normal margin-left-xs">(小的先显示)</text></view>
		<input placeholder="排序号，小的先显示" type="number" placeholder-class="phc" model:value="{{formOrder}}" focus="{{formOrderFocus}}" maxlength="4"></input>
	</view>
	<view wx:if="{{formOrderFocus}}" class="hint-desc error">{{formOrderFocus}}</view> 
 
</view>

<view class="form-box shadow margin-top-xs">
	<cmpt-form-show id="cmpt-form" mark="cmpt-form" source="admin" isCacheMatch="{{false}}" fields="{{fields}}" forms="{{formForms}}" isDefMatch="{{id?false:true}}">
	</cmpt-form-show>
</view>


<button bindtap="bindFormSubmit" class="btn-admin margin-top-xs">{{!isEdit?'添加':'修改'}}企业</button>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\edit\admin_cate_edit.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const dataHelper = require('../../../../../../helper/data_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');
const AdminCateBiz = require('../../../../biz/admin_cate_biz.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		isEdit: true,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;
		if (!pageHelper.getOptions(this, options)) return;

		this._loadDetail();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	model: function (e) {
		pageHelper.model(this, e);
	},

	_loadDetail: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let id = this.data.id;
		if (!id) return;

		if (!this.data.isLoad) this.setData(await AdminCateBiz.initCateFormData(id)); // 初始化表单数据

		let params = {
			id
		};
		let opt = {
			title: 'bar'
		};
		let cate = await cloudHelper.callCloudData('admin/cate_detail', params, opt);
		if (!cate) {
			this.setData({
				isLoad: null
			})
			return;
		};

		this.setData({
			isLoad: true,


			// 表单数据    
			formOrder: cate.CATE_ORDER,

			formTitle: cate.CATE_TITLE,
			formForms: cate.CATE_FORMS,

		}, () => {


		});
	},


	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		// 数据校验
		let data = this.data;

		data = validate.check(data, AdminCateBiz.CATE_CHECK_FORM, this);
		if (!data) return;

		let forms = this.selectComponent("#cmpt-form").getForms(true);
		if (!forms) return;
		data.forms = forms;

		try {
			let cateId = this.data.id;
			data.id = cateId;

			// 先修改，再上传 
			await cloudHelper.callCloudSumbit('admin/cate_edit', data);

			await cloudHelper.transFormsTempPics(forms, 'cate/', cateId, 'admin/cate_update_forms');

			let callback = async () => {

				// 更新列表页面数据
				let node = {
					'CATE_TITLE': data.title,
					'CATE_ORDER': data.order,
					'CATE_OBJ': {
						'trade': dataHelper.getDataByKey(data.forms, 'mark', 'trade').val,
						'type': dataHelper.getDataByKey(data.forms, 'mark', 'type').val,
						'star': dataHelper.getDataByKey(data.forms, 'mark', 'star').val,
						'size': dataHelper.getDataByKey(data.forms, 'mark', 'size').val
					}

				}
				pageHelper.modifyPrevPageListNodeObject(cateId, node);

				wx.navigateBack();

			}
			pageHelper.showSuccToast('修改成功', 2000, callback);

		} catch (err) {
			console.log(err);
		}

	},

	url: function (e) {
		pageHelper.url(e, this);
	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\edit\admin_cate_edit.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
		"cmpt-picker-multi": "/cmpts/public/picker_multi/picker_multi_cmpt",
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"  
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true,
	"navigationBarTitleText": "编辑企业"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\edit\admin_cate_edit.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-grey"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-grey"></view>

<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<include src="../add/admin_cate_form_tpl.wxml" /> 
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\edit\admin_cate_edit.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss'; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\list\admin_cate_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		search: '',

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		pageHelper.getOptions(this, options, 'company');

		this._getSearchMenu();

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	myCommListListener: function (e) {
		pageHelper.commListListener(this, e);
	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	bindCompanyTap: function (e) {
		let id = pageHelper.dataset(e, 'id');
		let title = pageHelper.dataset(e, 'title');
		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;

		let cb = () => {
			parent.setData({ formCateId: id, formCateName: title });
			wx.navigateBack();
		}
		pageHelper.showConfirm('确认选择该企业？', cb);

	},

	_setStatus: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');
		let status = pageHelper.dataset(e, 'status');
		let params = {
			id,
			status
		}

		try {
			await cloudHelper.callCloudSumbit('admin/cate_status', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'CATE_STATUS', status, '_id');
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (e) {
			console.log(e);
		}
	},

	bindStatusMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let itemList = ['启用', '停用 (不可见)', '删除'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: { //启用
						e.currentTarget.dataset['status'] = 1;
						await this._setStatus(e);
						break;
					}
					case 1: { //停止 
						e.currentTarget.dataset['status'] = 0;
						await this._setStatus(e);
						break;
					}
					case 2: { //删除
						await this._del(e);
						break;
					}

				}


			},
			fail: function (res) { }
		})
	},

	_setVouch: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;

		let id = pageHelper.dataset(e, 'id');
		let vouch = pageHelper.dataset(e, 'vouch');
		if (!id) return;

		let params = {
			id,
			vouch
		}

		try {
			await cloudHelper.callCloudSumbit('admin/cate_vouch', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'CATE_VOUCH', vouch);
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (err) {
			console.log(err);
		}
	},

	_del: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;

		let id = e.currentTarget.dataset.id;
		if (!id) return;

		let params = {
			id,
		}

		let callback = async () => {
			try {
				await cloudHelper.callCloudSumbit('admin/cate_del', params).then(res => {
					pageHelper.delListNode(id, this.data.dataList.list, '_id');
					this.data.dataList.total--;
					this.setData({
						dataList: this.data.dataList
					});
					pageHelper.showSuccToast('删除成功');
				});

			} catch (e) {
				console.log(e);
			}
		}

		pageHelper.showConfirm('确认删除？删除不可恢复', callback);
	},

	bindMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let idx = pageHelper.dataset(e, 'idx');

		let order = this.data.dataList.list[idx].CATE_ORDER;
		let orderDesc = (order == 0) ? '取消置顶' : '置顶';


		let vouch = this.data.dataList.list[idx].CATE_VOUCH;
		let vouchDesc = (vouch == 0) ? '推荐到首页' : '取消首页推荐';

		let itemList = ['预览', orderDesc, vouchDesc, '生成专属二维码'];
		let id = pageHelper.dataset(e, 'id');

		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: { //预览 
						wx.navigateTo({
							url: '../../../cate/detail/cate_detail?id=' + id,
						});
						break;
					}
					case 1: { //置顶 
						let sort = (order == 0) ? 9999 : 0;
						e.currentTarget.dataset['sort'] = sort;
						await this._setSort(e);
						break;
					}
					case 2: { //上首页 
						vouch = (vouch == 0) ? 1 : 0;
						e.currentTarget.dataset['vouch'] = vouch;
						await this._setVouch(e);
						break;
					}
					case 3: { //二维码 
						let title = encodeURIComponent(pageHelper.dataset(e, 'title'));
						let qr = encodeURIComponent(pageHelper.dataset(e, 'qr'));
						wx.navigateTo({
							url: `../../setup/qr/admin_setup_qr?title=${title}&qr=${qr}`,
						})
						break;
					}
				}



			},
			fail: function (res) { }
		})
	},

	_setSort: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = e.currentTarget.dataset.id;
		let sort = e.currentTarget.dataset.sort;
		if (!id) return;

		let params = {
			id,
			sort
		}

		try {
			await cloudHelper.callCloudSumbit('admin/cate_sort', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'CATE_ORDER', sort);
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (e) {
			console.log(e);
		}
	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {

		wx.stopPullDownRefresh();
	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	_getSearchMenu: async function () {


		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: '启用', type: 'status', value: 1 },
			{ label: '停用', type: 'status', value: 0 },
			{ label: '最新', type: 'sort', value: 'new' },
			{ label: '首页推荐', type: 'vouch', value: 'vouch' },
			{ label: '置顶', type: 'top', value: 'top' },
		]

		let sortItems0 = pageHelper.makeListMenu(projectSetting.CATE_TRADE, '行业', 'trade');

		let sortItems1 = pageHelper.makeListMenu(projectSetting.CATE_SIZE, '规模', 'size');

		let sortItems2 = pageHelper.makeListMenu(projectSetting.CATE_TYPE, '性质', 'type');

		let sortItems3 = pageHelper.makeListMenu(projectSetting.CATE_STAR, '推荐', 'star');

		this.setData({
			sortItems: [sortItems0, sortItems1, sortItems2, sortItems3],
			sortMenus
		})


	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\list\admin_cate_list.json
--------------------------------------------------
{
	"usingComponents": {},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "企业管理"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\list\admin_cate_list.wxml
--------------------------------------------------
<block wx:if="{{isAdmin}}">
	<cmpt-comm-list  pulldownType="{{['modal','modal','modal','modal','modal']}}" source='admin' type="admin-cate-list" search="{{search}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="admin/cate_list" isTotalMenu="{{true}}" topBottom="120" placeholder="搜索" returnUrl='/pages/admin/cate/admin_cate_list' bind:list="myCommListListener">

		<view slot="searchEnd" wx:if="{{!company}}">
			<button bindtap="url" data-url="../add/admin_cate_add" class="btn radius bg-admin margin-right-s"><text class="icon-roundadd margin-right-xxs"></text>添加新企业</button>
		</view>

		<!-- List Begin -->
		<view class="admin-comm-list">
			<view wx:if="{{dataList && dataList.total }}" class="load text-grey">共有{{dataList.total}}条符合条件记录</view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="no">{{index+1}}</view>
				<view class="header">

					<view class="left text-cut">
						<text wx:if="{{item.CATE_ORDER==0}}" class="text-black margin-right-xxs" style="font-weight:normal;font-size:24rpx">[置顶]</text><text wx:if="{{item.CATE_VOUCH==1}}" class="text-black margin-right-xxs" style="font-weight:normal;font-size:24rpx">[首页推荐]</text>『{{item.CATE_TITLE}}』
					</view>

					<view class="right">
						<text wx:if="{{item.CATE_STATUS==1}}" class="text-green">「正常」</text>
						<text wx:elif="{{item.CATE_STATUS==0}}" class="text-orange">「停用」</text>
					</view>
				</view>

				<view class="info">
					<view wx:if="{{company}}" bind:tap="bindCompanyTap" data-id="{{item._id}}" data-title="{{item.CATE_TITLE}}" class="company btn bg-admin radius mid"><text class="icon-check"></text>选择该企业</view>

					<view class="info-item">
						<view class="title">排序号</view>
						<view class="mao">：</view>
						<view class="content">{{item.CATE_ORDER}} <text class="margin-left-s text-grey text-s">(小的先显示)</text></view>
					</view>

					<view class="info-item">
						<view class="title">参数</view>
						<view class="mao">：</view>
						<view class="content">{{item.CATE_OBJ.trade}}，{{item.CATE_OBJ.size}}，{{item.CATE_OBJ.type}}，{{item.CATE_OBJ.star}}  </view>
					</view>

					<view class="info-item">
						<view class="title">职位数量</view>
						<view class="mao">：</view>
						<view bind:tap="url" data-url="../../activity/list/admin_activity_list?search={{item.CATE_TITLE}}" class="content">{{item.CATE_CNT}} <text class="text-s text-grey margin-left-s">[查看职位]</text></view>
					</view>



					<view wx:if="{{!company}}" class="oprt">
						<view bindtap="url" data-url="../edit/admin_cate_edit?id={{item._id}}" class="btn round margin-right-s"><text class="icon-edit margin-right-xxs"></text>编辑</view>

						<view bindtap="bindStatusMoreTap" data-id="{{item._id}}" class="btn margin-right-s">状态管理</view>

						<view data-idx="{{index}}" bindtap="bindMoreTap" data-id="{{item._id}}" data-idx="{{index}}" data-qr="{{item.CATE_QR}}" data-title="{{item.CATE_TITLE}}" class="btn margin-right-s">更多操作</view>


						<view bindtap="url" data-url="../../../cate/detail/cate_detail?id={{item._id}}" class="btn margin-right-s">预览</view>

					</view>
				</view>
			</view>

		</view>
		<!-- List END -->


		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{skin,dataList}}" />
		<!--load end-->

		<view style="height:100rpx"></view>

	</cmpt-comm-list>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\cate\list\admin_cate_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

.admin-comm-list .item .info .info-item .title {
	width: 170rpx;
}

.admin-comm-list .item .level {
	position: absolute;
	bottom: 0;
	left: 10rpx;
	z-index: 99999;
	font-size: 24rpx;
	color: #ccc;
	opacity: .5;
}

.admin-comm-list .item .info { 
	position: relative;
}


.admin-comm-list .item .info  .company {
	position: absolute;
	top: 10rpx;
	right: 10rpx; 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\content\admin_content.js
--------------------------------------------------
const AdminBiz = require('../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../helper/page_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		formContent: [{
			type: 'text',
			val: '',
		}]
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;

		let formContent = parent.data.formContent;
		if (formContent && formContent.length > 0)
			this.setData({
				formContent
			});
	},




	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {

	},

	model: function (e) {
		pageHelper.model(this, e);
	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	bindSaveTap: function (e) {
		let formContent = this.selectComponent("#contentEditor").getNodeList();

		let parent = pageHelper.getPrevPage(2);
		if (!parent) return;

		parent.setData({
			formContent
		}, () => {
			parent._setContentDesc();
		});

		wx.navigateBack();
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\content\admin_content.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-editor": "/cmpts/public/editor/editor_cmpt"
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"navigationBarTitleText": "后台-详细内容编辑"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\content\admin_content.wxml
--------------------------------------------------
<block wx:if="{{isAdmin}}">
	<view class="main-admin"> 
		<view class="form-box shadow">
			<view class="form-group" style="width: 100%;">
				<cmpt-editor nodeList="{{formContent}}" viewMode="{{true}}" style="width: 100%;" id="contentEditor"></cmpt-editor>
			</view>
		</view>   
	</view> 
	
	<view class="btn-bottom-admin">
		<view bindtap="url" data-type="back" class="return">不保存,返回</view>
		<view bindtap="bindSaveTap" class="save">保存</view>
	</view>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\content\admin_content.wxss
--------------------------------------------------
@import '../../../../../style/public/admin.wxss';

.main-admin {
	width: 100%;
	box-sizing: border-box;
	padding: 30rpx 20rpx;
	padding-bottom: 200rpx;
}

.form-group {
	padding: 1rpx 1rpx;
	overflow: hidden;
}

.oprt {
	display: flex;
	width: 100%;
	justify-content: space-around;
}

.oprt button {
	width: 45%;
}

.bottom-oprt {
	position: fixed;
	bottom: 0;
	height: 130rpx;
	background-color: #f8f8f8;
	display: flex;
	justify-content: space-around;
	align-items: center;
	border-top: 1rpx solid #ccc;
	z-index: 99999;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\home\admin_home.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		this._loadDetail();
	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	_loadDetail: async function () {

		let admin = AdminBiz.getAdminToken();
		this.setData({
			isLoad: true,
			admin
		});

		try {
			let opts = {
				title: 'bar'
			}
			let res = await cloudHelper.callCloudData('admin/home', {}, opts);
			this.setData({
				stat: res
			});

		} catch (err) {
			console.log(err);
		}
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	bindMoreTap: function (e) {
		let itemList = ['取消所有首页推荐'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				let idx = res.tapIndex;

				if (idx == 0) {
					this._clearVouch();
				}

			},
			fail: function (res) { }
		})
	},

	_clearVouch: async function (e) {
		let cb = async () => {
			try {
				await cloudHelper.callCloudSumbit('admin/clear_vouch').then(res => {
					pageHelper.showSuccToast('操作成功');
				})
			} catch (err) {
				console.log(err);
			}
		};
		pageHelper.showConfirm('您确认清除所有首页推荐？', cb)
	},

	bindExitTap: function (e) {

		let callback = function () {
			AdminBiz.clearAdminToken();
			wx.reLaunch({
				url: pageHelper.fmtURLByPID('/pages/my/index/my_index'),
			});
		}
		pageHelper.showConfirm('您确认退出?', callback);
	}, 

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\home\admin_home.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-foot": "/cmpts/biz/foot/foot_cmpt"
	},
	"enablePullDownRefresh": true,
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"navigationBarTitleText": "后台管理"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\home\admin_home.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-admin"></view>

<view class="main-admin" wx:if="{{isLoad && isAdmin}}">

	<view class="admin-info bg-admin">
		<view class="pic"><text class="icon-profilefill"></text></view>
		<view class="right">
			<view class="name">
				<text class="text-xl">{{admin.name}}</text>

				<text wx:if="{{admin.type==1}}" class="tag small bg-orange light radius margin-left-s">超级管理员</text>
				<text wx:if="{{admin.type==0}}" class="tag small bg-green radius margin-left-s">一般管理员</text>

			</view>
			<view class="desc text-s">共登录{{admin.cnt}}次，上次{{admin.last}}</view>
		</view>
		<view class="exit-admin" bindtap="bindExitTap"><text class="icon-exit"></text></view>
	</view>


	<view class="comm-list grid col-{{stat.length}}">
		<view wx:for="{{stat}}" wx:key="key" class="item">{{item.cnt||'0'}}<text class="text-black">{{item.title}}</text></view>

	</view>

	<view class="bar bg-white solid-bottom margin-top-s ">
		<view class="action">
			<text class="icon-title"></text>功能管理
		</view>
	</view>

	<view class="comm-list grid col-3">
		<view class="item" bindtap="url" data-url="../../user/list/admin_user_list"> <text class="icon-group_fill text-green"></text> <text class="text-black">用户管理</text>
		</view>
		<view class="item" bindtap="url" data-url="../../news/list/admin_news_list"> <text class="icon-form text-darkgreen"></text> <text class="text-black">公告管理</text>
		</view>

		<view class="item" bindtap="url" data-url="../../cate/list/admin_cate_list"> <text class="icon-apps text-orange"></text> <text class="text-black">企业管理</text>
		</view>

		<view class="item" bindtap="url" data-url="../../activity/list/admin_activity_list"> <text class="icon-activity text-purple"></text> <text class="text-black">兼职职位管理</text>
		</view>
	</view>


	<!-- BOTTOM begin -->
	<view class="comm-list menu  margin-top">

		<view class="item arrow" bindtap="url" data-url="../../setup/about_list/admin_setup_about_list">
			<view class="content">
				<text class="icon-edit text-darkgreen"></text>
				<text class="text-black">编辑 - 关于我们</text>
			</view>
		</view>


		<view class="item arrow" bindtap="url" data-url="../../setup/qr/admin_setup_qr">
			<view class="content">
				<text class="icon-qr_code text-mauve"></text>
				<text class="text-black">小程序二维码</text>
			</view>
		</view>
	</view>

	<view class="comm-list menu">
		<view wx:if="{{isSuperAdmin}}" class="item arrow" bindtap="url" data-url="../../mgr/list/admin_mgr_list">
			<view class="content">
				<text class="icon-profile text-red"></text>
				<text class="text-black">系统管理员管理</text>
			</view>
		</view>
		<view class="item arrow" bindtap="url" data-url="../../mgr/pwd/admin_mgr_pwd">
			<view class="content">
				<text class="icon-lock text-orange"></text>
				<text class="text-black">修改我的管理员密码</text>
			</view>
		</view>
		<view class="item arrow" bindtap="url" data-url="../../mgr/log/admin_log_list">
			<view class="content">
				<text class="icon-footprint text-brown"></text>
				<text class="text-black">管理员操作日志</text>
			</view>
		</view>

	</view>

	<view class="comm-list menu margin-bottom-xl">
		<view class="item arrow" bindtap="bindMoreTap">
			<view class="content">
				<text class="icon-settings text-grey"></text>
				<text class="text-black">更多设置</text>
			</view>
		</view>
	</view>

	<!-- BOTTOM END -->
	<button bindtap="bindExitTap" class="btn-admin">退出登录</button>

	<view class="foot-bottom">
		<cmpt-foot />
	</view>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\home\admin_home.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

.main-admin {
	padding: 0;
}

.admin-info {
	height: 200rpx;
	width: 100%;
	color: #fff;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	position: relative;
}

.admin-info .pic {
	width: 100rpx;
	height: 100rpx;
	font-size: 70rpx;
	display: flex;
	justify-content: center;
	align-items: center;
	margin-right: 20rpx; 
	border-radius:20rpx;
	margin-left:20rpx;
}

.admin-info .right {
	flex: 1;
	display: flex;
	flex-direction: column;
}

.admin-info .right .name {
	font-size: 32rpx;
	line-height: 1.8;
}

.admin-info .right .desc {
	font-size: 24rpx;
	line-height: 1.3;
}

.admin-info .exit-admin {
	position: absolute;
	top: 12rpx;
	right: 12rpx;
	font-size: 45rpx;
}


.main-admin .comm-list,
.main-admin .bar {
	background-color: #fff;
	width: 100%;
}

.main-admin .exit {
	width: 100%;
	padding: 0 20rpx;
	margin-bottom: 50rpx;
}

.main-admin .exit button {
	width: 100%;
	color: #fff;
	height: 70rpx;
}

.grid.col-6>view {
	width: 16.66%;
}

.foot-bottom {
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	bottom: 50rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\login\admin_login.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');  
const cacheHelper = require('../../../../../../helper/cache_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		name: '',
		pwd: '',
		remember: false
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		AdminBiz.clearAdminToken();

		// 记住密码 
		let pwd = cacheHelper.get('admin-pwd');
		if (pwd) {
			this.setData({
				name: pwd.name,
				pwd: pwd.pwd,
				remember: true
			});
		}

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	bindBackTap: function (e) {
		wx.reLaunch({
			url: pageHelper.fmtURLByPID('/pages/my/index/my_index'),
		});
	},

	bindLoginTap: async function (e) {
		// 记住密码
		if (this.data.remember) {
			cacheHelper.set('admin-pwd', { pwd: this.data.pwd, name: this.data.name }, 86400 * 30);
		}
		else {
			cacheHelper.clear('admin-pwd');
		}

		return AdminBiz.adminLogin(this, this.data.name, this.data.pwd);
	},

	bindRememberTap: function (e) {
		this.setData({
			remember: !this.data.remember
		})
	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\login\admin_login.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-foot": "/cmpts/biz/foot/foot_cmpt"
	},
	"disableScroll": true,
	"navigationBarBackgroundColor": "#ffffff",
	"navigationBarTextStyle": "black"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\login\admin_login.wxml
--------------------------------------------------
<view class="main-admin bg-admin">
	<view class="login shadow">

		<view class=pic"><text class="icon-settingsfill text-blue"></text></view>
		<view class="hint">后台管理系统</view>

		<view class="form-group margin-top">
			<view class="title">账号：</view>
			<input placeholder="请输入管理员账号" maxlength="30" placeholder-class="phc" model:value="{{name}}"></input>
		</view>

		<view class="form-group">
			<view class="title">密码：</view>
			<input placeholder="请输入管理员密码" maxlength="30" type="password" placeholder-class="phc" model:value="{{pwd}}"></input>
		</view>
		<view class="form-group-pwd" bindtap="bindRememberTap">
			<text class="{{remember?'icon-squarecheckfill text-blue':'icon-square'}}"></text> 记住密码
		</view>

		<button class="btn bg-admin margin-bottom" bindtap="bindLoginTap">点击登录</button>
		<view class="return text-grey">本系统仅限于系统管理员登录</view>
		<view bindtap="bindBackTap" class="return text-grey"><text class="icon-back"></text>返回用户端</view>


	</view>

	<view class="foot-bottom">
		<cmpt-foot />
	</view>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\index\login\admin_login.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

.main-admin {
	width: 100%;
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	position: relative; 
}

.login {
	width: 500rpx;
	background-color: #fff;
	min-height: 550rpx;
	border-radius: 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	align-items: center;
	padding: 50rpx 20rpx;
	margin-top: -100rpx;
}

.login button {
	width: 85%;
	color: #fff;
	font-size: 32rpx;
}

.login .hint {
	width: 100%;
	color: #000;
	font-weight: bold;
	font-size: 36rpx;
	text-align: center;
}

.login .return {
	width: 100%;
	font-size: 30rpx;
	text-align: center;
	font-size: 26rpx;
}

.pic {
	width: 180rpx;
	height: 180rpx;
	font-size: 130rpx;
	display: flex;
	justify-content: center;
	align-items: center;
}

.foot-bottom {
	width: 100%;
	display: flex;
	justify-content: center;
	align-items: center;
	position: absolute;
	bottom: 50rpx;
}

.site-footer {
	color: #fff !important;
}

.form-group .title {
    color:#333;
}

.form-group-pwd {
	width: 100%;
	padding: 25rpx 30rpx;
	color: #777 !important;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\add\admin_mgr_add.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const PublicBiz = require('../../../../../../comm/biz/public_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		formName: '',
		formDesc: '',
		formPhone: '',
		formPassword: '',
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this, true)) return;
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},



	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this, true)) return;

		let data = this.data;

		// 数据校验 
		data = validate.check(data, AdminBiz.CHECK_FORM_MGR_ADD, this);
		if (!data) return;

		try {
			let adminId = this.data.id;
			data.id = adminId;

			await cloudHelper.callCloudSumbit('admin/mgr_insert', data).then(res => {

				let callback = async function () {
					PublicBiz.removeCacheList('admin-mgr');
					wx.navigateBack();

				}
				pageHelper.showSuccToast('添加成功', 1500, callback);
			});


		} catch (err) {
			console.log(err);
		}

	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\add\admin_mgr_add.json
--------------------------------------------------
{
	"usingComponents": {},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"navigationBarTitleText": "添加管理员"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\add\admin_mgr_add.wxml
--------------------------------------------------
 <view class="main-admin" wx:if="{{isAdmin}}">
	<!-- edit form begin -->
	<view class="form-box shadow">
		<view class="form-group">
			<view class="title must">登录账号</view>
			<input maxlength="30" placeholder="请填写登录账号" placeholder-class="phc" model:value="{{formName}}" focus="{{formNameFocus}}"></input>
		</view>
		<view wx:if="{{formNameFocus}}" class="hint-desc error">{{formNameFocus}}</view>

		<view class="form-group">
			<view class="title must">姓名</view>
			<input maxlength="30" placeholder="请填写管理员姓名" model:value="{{formDesc}}" focus="{{formDescFocus}}"></input>
		</view>
		<view wx:if="{{formDescFocus}}" class="hint-desc error">{{formDescFocus}}</view>

		<view class="form-group">
			<view class="title">手机</view>
			<input maxlength="11" placeholder="请填写手机号码" model:value="{{formPhone}}" focus="{{formPhoneFocus}}"></input>
		</view>
		<view wx:if="{{formPhoneFocus}}" class="hint-desc error">{{formPhoneFocus}}</view>

		<view class="form-group">
			<view class="title must">密码</view>
			<input maxlength="30" type="password" placeholder="请填写密码" model:value="{{formPassword}}" focus="{{formPasswordFocus}}"></input>
		</view>
		<view wx:if="{{formPasswordFocus}}" class="hint-desc error">{{formPasswordFocus}}</view>

	</view> 

	<button bindtap="bindFormSubmit" class="btn-admin margin-top">确定添加</button>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\add\admin_mgr_add.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\edit\admin_mgr_edit.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this, true)) return;
		if (!pageHelper.getOptions(this, options)) return;

		this._loadDetail();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	_loadDetail: async function () {
		if (!AdminBiz.isAdmin(this, true)) return;

		let id = this.data.id;
		if (!id) return;

		let params = {
			id
		};
		let opt = {
			title: 'bar'
		};
		let mgr = await cloudHelper.callCloudData('admin/mgr_detail', params, opt);
		if (!mgr) {
			this.setData({
				isLoad: null
			})
			return;
		};

		this.setData({
			isLoad: true,

			// 表单数据 
			formName: mgr.ADMIN_NAME,
			formDesc: mgr.ADMIN_DESC,
			formPhone: mgr.ADMIN_PHONE,
 
			formPassword: ''

		});
	},

	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this, true)) return;

		let data = this.data;

		// 数据校验 
		data = validate.check(data, AdminBiz.CHECK_FORM_MGR_EDIT, this);
		if (!data) return; 

		try {
			let adminId = this.data.id;
			data.id = adminId;

			await cloudHelper.callCloudSumbit('admin/mgr_edit', data).then(res => {

				let callback = () => {
					// 更新列表页面数据
					let node = {
						'ADMIN_NAME': data.name,
						'ADMIN_DESC': data.desc,
						'ADMIN_PHONE': data.phone,
					}
					pageHelper.modifyPrevPageListNodeObject(adminId, node);

					wx.navigateBack();
				}
				pageHelper.showSuccToast('修改成功', 1500, callback);
			});


		} catch (err) {
			console.log(err);
		}

	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\edit\admin_mgr_edit.json
--------------------------------------------------
{
	"usingComponents": {},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "修改管理员"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\edit\admin_mgr_edit.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-admin"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-admin"></view>

<view class="main-admin" wx:if="{{isLoad&&isAdmin}}">
	<!-- edit form begin -->
	<view class="form-box shadow">
		<view class="form-group">
			<view class="title must">登录账号</view>
			<input maxlength="30" placeholder="请填写登录账号" placeholder-class="phc" model:value="{{formName}}" focus="{{formNameFocus}}"></input>
		</view>
		<view wx:if="{{formNameFocus}}" class="hint-desc error">{{formNameFocus}}</view>

		<view class="form-group">
			<view class="title must">姓名</view>
			<input maxlength="30" placeholder="请填写管理员姓名" model:value="{{formDesc}}" focus="{{formDescFocus}}"></input>
		</view>
		<view wx:if="{{formDescFocus}}" class="hint-desc error">{{formDescFocus}}</view>

		<view class="form-group">
			<view class="title">手机</view>
			<input maxlength="11" placeholder="请填写手机号码" model:value="{{formPhone}}" focus="{{formPhoneFocus}}"></input>
		</view>
		<view wx:if="{{formPhoneFocus}}" class="hint-desc error">{{formPhoneFocus}}</view>

	</view>
	<view class="form-box shadow">
		<view class="form-group text-orange">
			<text class="icon-info">不修改密码则保持以下为空</text>
		</view>  
		<view class="form-group">
			<view class="title must">新密码</view>
			<input maxlength="30" type="password" placeholder="请填写密码" model:value="{{formPassword}}" focus="{{formPasswordFocus}}"></input>
		</view>
		<view wx:if="{{formPasswordFocus}}" class="hint-desc error">{{formPasswordFocus}}</view>

	</view>

	<button bindtap="bindFormSubmit" class="btn-admin margin-top">确定修改</button>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\edit\admin_mgr_edit.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\list\admin_mgr_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {

		isSuperAdmin: false,
		dataList: {
			list: []
		}
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this, true)) return;

		//设置搜索菜单
		this.setData(this._getSearchMenu());
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	bindStatusTap: async function (e) {
		if (!AdminBiz.isAdmin(this, true)) return;

		let id = pageHelper.dataset(e, 'id');
		let status = pageHelper.dataset(e, 'status');
		if (!id || !status) return;
		status = Number(status);

		let params = {
			id,
			status
		}

		let that = this;
		try {
			await cloudHelper.callCloudSumbit('admin/mgr_status', params).then(res => {
				pageHelper.modifyListNode(id, that.data.dataList.list, 'ADMIN_STATUS', status, '_id');
				that.setData({
					dataList: that.data.dataList,
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (e) {
			console.log(e);
		}
	},

	bindDelTap: async function (e) {
		if (!AdminBiz.isAdmin(this, true)) return;

		let id = e.currentTarget.dataset.id;
		if (!id) return;

		let params = {
			id,
		}

		let callback = async () => {
			try {
				await cloudHelper.callCloudSumbit('admin/mgr_del', params).then(res => {
					pageHelper.delListNode(id, this.data.dataList.list, '_id');
					this.data.dataList.total--;
					this.setData({
						dataList: this.data.dataList
					});
					pageHelper.showSuccToast('删除成功', 2000);

				});

			} catch (e) {
				console.log(e);
			}
		}

		pageHelper.showConfirm('确认删除？删除不可恢复', callback);
	},

	bindCommListCmpt: function (e) {
		if (!AdminBiz.isAdmin(this, true)) return;
		pageHelper.commListListener(this, e);
	},


	url: function (e) {
		pageHelper.url(e, this);
	},

	_getSearchMenu: function () {

		let sortItems = [];
		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: '超管', type: 'type', value: 1 },
			{ label: '普通', type: 'type', value: 0 },
			{ label: '正常', type: 'status', value: 1 },
			{ label: '停用', type: 'type', value: 0 }
		]

		return {
			search: '',
			sortItems,
			sortMenus,
			isLoad: true
		}

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\list\admin_mgr_list.json
--------------------------------------------------
{
	"usingComponents": {},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"navigationBarTitleText": "管理员管理"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\list\admin_mgr_list.wxml
--------------------------------------------------
<block wx:if="{{isAdmin&&isLoad}}">
	<cmpt-comm-list source='admin' type="admin-mgr" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="admin/mgr_list" sortMenusDefaultIndex="0" topBottom="50" placeholder="搜索账号，姓名，手机" bind:list="bindCommListCmpt">

		<view slot="searchEnd">
			<button bindtap="url" data-url="../add/admin_mgr_add" class="btn radius bg-admin text-white  margin-right-s"><text class="icon-roundadd margin-right-xxs"></text>添加管理员</button>
		</view>

		<!-- List Begin -->
		<view class="admin-comm-list">

			<view wx:if="{{dataList && dataList.total }}" class="load text-grey">共有{{dataList.total}}条符合条件记录 </view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="no">{{index+1}}</view>
				<view class="header">
					<view class="left text-cut">{{item.ADMIN_NAME}}
					</view>
					<view class="right">
						<text class="text-green" wx:if="{{item.ADMIN_STATUS==1}}">正常</text>
						<text class="text-red" wx:if="{{item.ADMIN_STATUS==0}}">停用</text>
					</view>
				</view>

				<view class="info title-mid">
					<view class="info-item">
						<view class="title">管理员身份</view>
						<view class="mao">：</view>
						<view wx:if="{{item.ADMIN_TYPE==1}}" class="content text-bold text-red">超级管理员</view>
						<view wx:else class="content">普通管理员</view>
					</view>

					<view class="info-item">
						<view class="title">登录账号</view>
						<view class="mao">：</view>
						<view class="content">{{item.ADMIN_NAME}}</view>
					</view>

					<view class="info-item">
						<view class="title">姓名</view>
						<view class="mao">：</view>
						<view class="content">{{item.ADMIN_DESC||'未填写'}}</view>
					</view>

					<view class="info-item">
						<view class="title">手机</view>
						<view class="mao">：</view>
						<view class="content">{{item.ADMIN_PHONE}}</view>
					</view>

					<view class="info-item">
						<view class="title">最近登录</view>
						<view class="mao">：</view>
						<view class="content">{{item.ADMIN_LOGIN_CNT}}次 / {{item.ADMIN_LOGIN_TIME}}</view>
					</view> 


					<view class="oprt">
						<view bindtap="url" data-url="../edit/admin_mgr_edit?id={{item._id}}" class="btn  margin-right-s"><text class="icon-edit margin-right-xxs"></text>编辑</view>

						<block wx:if="{{item.ADMIN_TYPE!=1}}">
							<view wx:if="{{item.ADMIN_STATUS==0}}" class="btn text-green" bindtap="bindStatusTap" data-id="{{item._id}}" data-status="1" class="btn  margin-right-s"><text class="icon-delete margin-right-xxs"></text>启用</view>

							<view wx:if="{{item.ADMIN_STATUS==1}}" class="btn margin-left-s text-orange" bindtap="bindStatusTap" data-id="{{item._id}}" data-status="0" class="btn margin-right-s"><text class="icon-roundclose margin-right-xxs text-red"></text>停用</view>

							<view bindtap="bindDelTap" data-id="{{item._id}}" class="btn margin-right-s"><text class="icon-delete margin-right-xxs text-orange"></text>删除</view>

						</block>

					</view>
				</view>
			</view>

		</view>
		<!-- List END -->

		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{dataList, skin:'text-grey'}}" />
		<!--load end--> 

	</cmpt-comm-list>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\list\admin_mgr_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\log\admin_log_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		//设置搜索菜单
		this.setData(this._getSearchMenu());

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},

	bindClearTap: async function (e) {
		let cb = async () => {

			try {
				await cloudHelper.callCloudSumbit('admin/log_clear').then(res => {
					let cb = () =>{
						wx.redirectTo({
						  url: 'admin_log_list',
						})
					}
					pageHelper.showSuccToast('清空完成', 1500, cb);
				})
			}
			catch (err) {
				console.log(err);
			}
		}

		pageHelper.showConfirm('确认清空？清空不可恢复', cb);
	},

	_getSearchMenu: function () {

		let sortItems = [];
		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: '系统', type: 'type', value: 0 },
			{ label: '用户', type: 'type', value: 1 },
			{ label: '文章', type: 'type', value: 2 },
			{ label: '其他', type: 'type', value: 99 }
		]

		return {
			search: '',
			sortItems,
			sortMenus,
			isLoad: true
		}

	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\log\admin_log_list.json
--------------------------------------------------
{
	"usingComponents": { 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"disableScroll": true, 
	"navigationBarTitleText": "后台-操作日志"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\log\admin_log_list.wxml
--------------------------------------------------
<block wx:if="{{isAdmin&&isLoad}}">
	<cmpt-comm-list source='admin' type="admin_log_list" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" sortMenusDefaultIndex="0" route="admin/log_list" topBottom="50" placeholder="搜索内容，管理员账号，姓名" bind:list="bindCommListCmpt">

		<view slot="searchEnd">
			<button bindtap="bindClearTap" class="btn radius bg-admin text-white  margin-right-s"><text class="icon-delete margin-right-xxs"></text>清空日志</button>
		</view>

		<!-- List Begin -->
		<view class="admin-comm-list">
			<view wx:if="{{dataList && dataList.total }}" class="load text-black">共有{{dataList.total}}条符合条件记录 </view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="no">{{index+1}}</view>
				<view class="header">
					<view class="left text-cut">{{item.LOG_TYPE_DESC}}操作</view>
					<view class="right"></view>
				</view>
				<view class="info">
					<view class="info-item">
						<view class="title">操作人</view>
						<view class="mao">：</view>
						<view class="content">{{item.LOG_ADMIN_NAME}} ({{item.LOG_ADMIN_DESC}})</view>
					</view>
					<view class="info-item">
						<view class="title">操作时间</view>
						<view class="mao">：</view>
						<view class="content">{{item.LOG_ADD_TIME}}</view>
					</view>
					<view class="info-item">
						<view class="title">操作内容</view>
						<view class="mao">：</view>
						<view class="content">{{item.LOG_CONTENT}}</view>
					</view>
					<view class="info-item">
						<view class="title">IP地址</view>
						<view class="mao">：</view>
						<view class="content">{{item.LOG_ADD_IP}}</view>
					</view>
				</view>
			</view>
		</view>
		<!-- List END --> 

		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{dataList, skin:'text-grey'}}" />
		<!--load end--> 

	</cmpt-comm-list>
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\log\admin_log_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

page {
	background-color: #f8f8f8;
}
 
.admin-comm-list .item .info { 
	padding: 15rpx 20rpx 0rpx; 
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\pwd\admin_mgr_pwd.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		formOldPassword: '',
		formPassword: '',
		formPassword2: '',
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this)) return;
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let data = this.data;

		// 数据校验 
		data = validate.check(data, AdminBiz.CHECK_FORM_MGR_PWD, this);
		if (!data) return;

		if (data.password != data.password2) {
			return pageHelper.showModal('两次输入的新密码不一致');
		}

		try {
			await cloudHelper.callCloudSumbit('admin/mgr_pwd', data).then(res => {
				let callback = () => {
					wx.navigateBack();
				}
				pageHelper.showSuccToast('修改成功', 1500, callback);
			});


		} catch (err) {
			console.log(err);
		}

	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\pwd\admin_mgr_pwd.json
--------------------------------------------------
{
	"usingComponents": {},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"navigationBarTitleText": "管理员密码修改"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\pwd\admin_mgr_pwd.wxml
--------------------------------------------------
<view class="main-admin" wx:if="{{isAdmin}}"> 
	 
	<view class="form-box shadow"> 
		<view class="form-group">
			<view class="title must">旧密码</view>
			<input maxlength="30" type="password" placeholder="请填写旧密码" model:value="{{formOldPassword}}" focus="{{formOldPasswordFocus}}"></input>
		</view>
		<view wx:if="{{formOldPasswordFocus}}" class="hint-desc error">{{formOldPasswordFocus}}</view>

		<view class="form-group">
			<view class="title must">新密码</view>
			<input maxlength="30" type="password" placeholder="请填写新密码" model:value="{{formPassword}}" focus="{{formPasswordFocus}}"></input>
		</view>
		<view wx:if="{{formPasswordFocus}}" class="hint-desc error">{{formPasswordFocus}}</view>

		<view class="form-group">
			<view class="title must">新密码再次填写</view>
			<input maxlength="30" type="password" placeholder="请再次填写新密码" model:value="{{formPassword2}}" focus="{{formPassword2Focus}}"></input>
		</view>
		<view wx:if="{{formPassword2Focus}}" class="hint-desc error">{{formPassword2Focus}}</view>

	</view>

	<button bindtap="bindFormSubmit" class="btn-admin margin-top">提交修改</button>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\mgr\pwd\admin_mgr_pwd.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\admin_news_form_tpl.wxml
--------------------------------------------------
<view class="form-box shadow">
	<view class="form-group">
		<view class="title must">标题</view>
	</view>

	<view class="form-group">
		<input placeholder="简短的标题" placeholder-class="phc" model:value="{{formTitle}}" focus="{{formTitleFocus}}" maxlength="50"></input>
	</view>
	<view wx:if="{{formTitleFocus}}" class="hint-desc error">{{formTitleFocus}}</view>

	<view wx:if="{{cateIdOptions.length>1}}" class="form-group arrow" id="formCateId">
			<view class="title must">分类</view>
			<cmpt-picker id="cate-picker" sourceData="{{cateIdOptions}}" bind:select="url" data-type="picker" data-item="formCateId" item="{{formCateId}}"> </cmpt-picker>
		</view>
		<view wx:if="{{formCateIdFocus}}" class="hint-desc error">{{formCateIdFocus}}</view>

	<view class="form-group">
		<view class="title must">排序号<text class="text-grey text-normal margin-left-xs">(小的先显示)</text></view>
		<input placeholder="排序号，小的先显示" type="number" placeholder-class="phc" model:value="{{formOrder}}" focus="{{formOrderFocus}}" maxlength="4"></input>
	</view>
	<view wx:if="{{formOrderFocus}}" class="hint-desc error">{{formOrderFocus}}</view>

	<view class="form-group">
		<view class="action text-bold text-l">简介</view>
		<view class="action">{{formDesc.length}}/100</view>
	</view>

	<view class="form-group align-start">
		<textarea name="content" placeholder-class="phc" placeholder="请输入本文简介，若不填写则直接取内容前100个字作为简介" style="min-height:150rpx" model:value="{{formDesc}}" maxlength="100" focus="{{formDescFocus}}" auto-height="true"></textarea>
	</view>
	<view wx:if="{{formDescFocus}}" class="hint-desc error">{{formDescFocus}}</view> 
  
	<view class="form-group arrow" bindtap="url" data-url="../../content/admin_content">
		<view class="title must">详细内容<text class="text-grey text-normal margin-left-xs">(必填)</text></view>
		<view class="form-text {{contentDesc=='未填写'?'text-orange':''}}">{{contentDesc}}</view>
	</view>
	<view wx:if="{{formContentFocus}}" class="hint-desc error">{{formContentFocus}}</view>


</view> 
 

<view class="form-box shadow">
	<!-- img upload begin -->
	<cmpt-img-upload imgMax="{{1}}" title="封面图上传 (必填)" isCheck="{{false}}" imgUploadSize="{{10}}" imgList="{{imgList}}" bind:upload="bindImgUploadCmpt" />
	<!-- img upload end -->
</view>

<view class="form-box shadow margin-top-xs">
	<cmpt-form-show id="cmpt-form" mark="cmpt-form" source="admin" isCacheMatch="{{false}}" fields="{{fields}}" forms="{{formForms}}" isDefMatch="{{id?false:true}}">
	</cmpt-form-show>
</view>


<button bindtap="bindFormSubmit" class="btn-admin margin-top-xs">提交</button>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\add\admin_news_add.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const PublicBiz = require('../../../../../../comm/biz/public_biz.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');
const AdminNewsBiz = require('../../../../biz/admin_news_biz.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		wx.setNavigationBarTitle({
			title: projectSetting.NEWS_NAME + '-添加',
		});

		this.setData(AdminNewsBiz.initFormData()); // 初始化表单数据
		this.setData({
			isLoad: true
		});

		this._setContentDesc();

	},

	_setContentDesc: function () {
		AdminBiz.setContentDesc(this);
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	model: function (e) {
		pageHelper.model(this, e);
	}, 
 

	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let data = this.data;
		if (this.data.formContent.length == 0) {
			return pageHelper.showModal('详细内容不能为空');
		}
		data = validate.check(data, AdminNewsBiz.CHECK_FORM, this);
		if (!data) return; 

		let forms = this.selectComponent("#cmpt-form").getForms(true);
		if (!forms) return;
		data.forms = forms;

		data.cateName = AdminNewsBiz.getCateName(data.cateId);

		try {
			if (this.data.imgList.length == 0) {
				return pageHelper.showModal('请上传封面图');
			}

			// 提取简介
			data.desc = PublicBiz.getRichEditorDesc(data.desc, this.data.formContent);

			// 先创建，再上传 
			let result = await cloudHelper.callCloudSumbit('admin/news_insert', data);
			let newsId = result.data.id;

			// 封面图片 提交处理 
			wx.showLoading({
				title: '提交中...',
				mask: true
			});
			await cloudHelper.transCoverTempPics(this.data.imgList, 'news/', newsId, 'admin/news_update_pic');

			// 富文本
			let formContent = this.data.formContent;
			if (formContent && formContent.length > 0) {
				wx.showLoading({
					title: '提交中...',
					mask: true
				});
				let content = await cloudHelper.transRichEditorTempPics(formContent, 'news/', newsId, 'admin/news_update_content');
				this.setData({
					formContent: content
				});
			}

			await cloudHelper.transFormsTempPics(forms, 'news/', newsId, 'admin/news_update_forms');

			let callback = async function () {
				PublicBiz.removeCacheList('admin-news-list');
				PublicBiz.removeCacheList('news-list');
				wx.navigateBack();

			}
			pageHelper.showSuccToast('添加成功', 2000, callback);

		} catch (err) {
			console.log(err);
		}

	},


	bindImgUploadCmpt: function (e) {
		this.setData({
			imgList: e.detail
		});
	}, 

	url: function (e) {
		pageHelper.url(e, this);
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\add\admin_news_add.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"  
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\add\admin_news_add.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view>
<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<include src="../admin_news_form_tpl.wxml" /> 
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\add\admin_news_add.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\edit\admin_news_edit.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const validate = require('../../../../../../helper/validate.js');
const AdminNewsBiz = require('../../../../biz/admin_news_biz.js');
const PublicBiz = require('../../../../../../comm/biz/public_biz.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;
		if (!pageHelper.getOptions(this, options)) return;

		wx.setNavigationBarTitle({
			title: projectSetting.NEWS_NAME + '-修改',
		});

		this._loadDetail();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	model: function (e) {
		pageHelper.model(this, e);
	},

	_loadDetail: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let id = this.data.id;
		if (!id) return;

		if (!this.data.isLoad) this.setData(AdminNewsBiz.initFormData(id)); // 初始化表单数据

		let params = {
			id
		};
		let opt = {
			title: 'bar'
		};
		let news = await cloudHelper.callCloudData('admin/news_detail', params, opt);
		if (!news) {
			this.setData({
				isLoad: null
			})
			return;
		};

		this.setData({
			isLoad: true,

			imgList: news.NEWS_PIC,

			// 表单数据  
			formCateId: news.NEWS_CATE_ID,
			formOrder: news.NEWS_ORDER,

			formTitle: news.NEWS_TITLE,
			formContent: news.NEWS_CONTENT,

			formDesc: news.NEWS_DESC,

			formForms: news.NEWS_FORMS,

		}, () => {
			this._setContentDesc();

		});
	},

	_setContentDesc: function () {
		AdminBiz.setContentDesc(this);
	},

	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		// 数据校验
		let data = this.data;
		if (this.data.formContent.length == 0) {
			return pageHelper.showModal('详细内容不能为空');
		}
		data = validate.check(data, AdminNewsBiz.CHECK_FORM, this);
		if (!data) return;

		let forms = this.selectComponent("#cmpt-form").getForms(true);
		if (!forms) return;
		data.forms = forms; 

		data.cateName = AdminNewsBiz.getCateName(data.cateId);

		try {
			let newsId = this.data.id;
			data.id = newsId;

			if (this.data.imgList.length == 0) {
				return pageHelper.showModal('请上传封面图');
			}

			// 提取简介  
			data.desc = PublicBiz.getRichEditorDesc(data.desc, this.data.formContent);

			// 先修改，再上传 
			await cloudHelper.callCloudSumbit('admin/news_edit', data);

			// 封面图片 提交处理 
			wx.showLoading({
				title: '提交中...',
				mask: true
			});
			await cloudHelper.transCoverTempPics(this.data.imgList, 'news/', newsId, 'admin/news_update_pic');

			// 富文本图片
			let formContent = this.data.formContent;
			wx.showLoading({
				title: '提交中...',
				mask: true
			});
			let content = await cloudHelper.transRichEditorTempPics(formContent, 'news/', newsId, 'admin/news_update_content');
			this.setData({
				formContent: content
			});

			await cloudHelper.transFormsTempPics(forms, 'news/', newsId, 'admin/news_update_forms');

			let callback = async () => {

				// 更新列表页面数据
				let node = {
					'NEWS_TITLE': data.title,
					'NEWS_CATE_NAME': data.cateName,
					'NEWS_ORDER': data.order,
				}
				pageHelper.modifyPrevPageListNodeObject(newsId, node);

				wx.navigateBack();

			}
			pageHelper.showSuccToast('修改成功', 2000, callback);

		} catch (err) {
			console.log(err);
		}

	},


	bindImgUploadCmpt: function (e) {
		this.setData({
			imgList: e.detail
		});
	},


	url: function (e) {
		pageHelper.url(e, this);
	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\edit\admin_news_edit.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-img-upload": "/cmpts/public/img/img_upload_cmpt",
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"  
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\edit\admin_news_edit.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-grey"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-grey"></view>

<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<include src="../admin_news_form_tpl.wxml" /> 
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\edit\admin_news_edit.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss'; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\list\admin_news_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const NewsBiz = require('../../../../biz/news_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		wx.setNavigationBarTitle({
			title: projectSetting.NEWS_NAME + '-管理',
		});
		this.setData({
			NEWS_NAME: projectSetting.NEWS_NAME
		});

		//设置搜索菜单
		this._getSearchMenu();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () { },

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},

	_setSort: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = e.currentTarget.dataset.id;
		let sort = e.currentTarget.dataset.sort;
		if (!id) return;

		let params = {
			id,
			sort
		}

		try {
			await cloudHelper.callCloudSumbit('admin/news_sort', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'NEWS_ORDER', sort);
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (e) {
			console.log(e);
		}
	},

	_setVouch: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;

		let id = pageHelper.dataset(e, 'id');
		let vouch = pageHelper.dataset(e, 'vouch');
		if (!id) return;

		let params = {
			id,
			vouch
		}

		try {
			await cloudHelper.callCloudSumbit('admin/news_vouch', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'NEWS_VOUCH', vouch);
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (err) {
			console.log(err);
		}
	},

	_del: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');

		let params = {
			id
		}

		let callback = async () => {
			try {
				let opts = {
					title: '删除中'
				}
				await cloudHelper.callCloudSumbit('admin/news_del', params, opts).then(res => {
					pageHelper.delListNode(id, this.data.dataList.list, '_id');
					this.data.dataList.total--;
					this.setData({
						dataList: this.data.dataList
					});
					pageHelper.showSuccToast('删除成功');
				});
			} catch (e) {
				console.log(e);
			}
		}
		pageHelper.showConfirm('确认删除？删除不可恢复', callback);

	},

	bindMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let idx = pageHelper.dataset(e, 'idx');

		let order = this.data.dataList.list[idx].NEWS_ORDER;
		let orderDesc = (order == 0) ? '取消置顶' : '置顶';
 

		let itemList = ['预览', orderDesc, '生成专属二维码'];

		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: { //预览
						let id = pageHelper.dataset(e, 'id');
						wx.navigateTo({
							url: '../../../news/detail/news_detail?id=' + id,
						});
						break;
					}
					case 1: { //置顶 
						let sort = (order == 0) ? 9999 : 0;
						e.currentTarget.dataset['sort'] = sort;
						await this._setSort(e);
						break;
					} 
					case 2: { //二维码 
						let title = encodeURIComponent(pageHelper.dataset(e, 'title'));
						let qr = encodeURIComponent(pageHelper.dataset(e, 'qr')); 
						wx.navigateTo({
							url: `../../setup/qr/admin_setup_qr?title=${title}&qr=${qr}`,
						})
						break;
					}
				}


			},
			fail: function (res) { }
		})
	},

	bindStatusMoreTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let itemList = ['启用', '停用 (不可见)', '删除'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				switch (res.tapIndex) {
					case 0: { //启用
						e.currentTarget.dataset['status'] = 1;
						await this._setStatus(e);
						break;
					}
					case 1: { //停止 
						e.currentTarget.dataset['status'] = 0;
						await this._setStatus(e);
						break;
					}
					case 2: { //删除
						await this._del(e);
						break;
					}

				}


			},
			fail: function (res) { }
		})
	},


	_setStatus: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');
		let status = Number(pageHelper.dataset(e, 'status'));
		let params = {
			id,
			status
		}

		try {
			await cloudHelper.callCloudSumbit('admin/news_status', params).then(res => {
				pageHelper.modifyListNode(id, this.data.dataList.list, 'NEWS_STATUS', status, '_id');
				this.setData({
					dataList: this.data.dataList
				});
				pageHelper.showSuccToast('设置成功');
			});
		} catch (e) {
			console.log(e);
		}
	},

	_getSearchMenu: function () {
		let cateIdOptions = NewsBiz.getCateList();

		let sortItem1 = [{ label: '分类', type: '', value: 0 }];
		sortItem1 = sortItem1.concat(NewsBiz.getCateList());
		let sortItems = [sortItem1];

		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: '正常', type: 'status', value: 1 },
			{ label: '停用', type: 'status', value: 0 },
			{ label: '最新', type: 'sort', value: 'new' }, 
			{ label: '置顶', type: 'top', value: 'top' },
		];

		this.setData({
			search: '',
			cateIdOptions,
			sortItems,
			sortMenus,
			isLoad: true
		})


	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\list\admin_news_list.json
--------------------------------------------------
{
	"usingComponents": { 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"disableScroll": true
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\list\admin_news_list.wxml
--------------------------------------------------
<block wx:if="{{isAdmin&&isLoad}}">
	<cmpt-comm-list source='admin' type="admin-news-list" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="admin/news_list" sortMenusDefaultIndex="0" topBottom="50" placeholder="搜索标题" bind:list="bindCommListCmpt">

		<view slot="searchEnd">
			<button bindtap="url" data-url="../add/admin_news_add" class="btn radius bg-admin text-white margin-right-s"><text class="icon-roundadd margin-right-xxs"></text>添加{{NEWS_NAME}}</button>
		</view>
		<!-- List Begin -->
		<view class="admin-comm-list">
			<view wx:if="{{dataList && dataList.total }}" class="load text-grey">共有{{dataList.total}}条符合条件记录</view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="no">{{index+1}}</view>
				<view class="header">
					<view class="left text-cut"><text wx:if="{{item.NEWS_ORDER==0}}" class="text-black margin-right-xxs" style="font-weight:normal;font-size:24rpx">[置顶]</text><text wx:if="{{item.NEWS_VOUCH==1}}" class="text-black margin-right-xxs" style="font-weight:normal;font-size:24rpx">[首页推荐]</text> {{item.NEWS_TITLE}}
					</view>
					<view class="right">
						<text wx:if="{{item.NEWS_STATUS==1}}" class="text-black">「正常」</text>
						<text wx:elif="{{item.NEWS_STATUS==0}}" class="text-orange">「停用」</text>
					</view>
				</view>

				<view class="info">
					<view wx:if="{{cateIdOptions.length>1}}" class="info-item">
						<view class="title">分类</view>
						<view class="mao">：</view>
						<view class="content">『{{item.NEWS_CATE_NAME}}』</view>
					</view>

					<view class="info-item">
						<view class="title">排序号</view>
						<view class="mao">：</view>
						<view class="content">{{item.NEWS_ORDER}} <text class="margin-left-xxs text-grey">(小的先显示)</text></view>
					</view>

					<view class="info-item">
						<view class="title">创建</view>
						<view class="mao">：</view>
						<view class="content">{{item.NEWS_ADD_TIME}}</view>
					</view>

					<view class="oprt">
						<view bindtap="url" data-url="../edit/admin_news_edit?id={{item._id}}" class="btn round margin-right-s"><text class="icon-edit margin-right-xxs"></text>编辑</view> 

						<view bindtap="bindStatusMoreTap" data-id="{{item._id}}" class="btn margin-right-s">状态管理</view>

						<view data-idx="{{index}}"  bindtap="bindMoreTap" data-id="{{item._id}}" data-idx="{{index}}" data-qr="{{item.NEWS_QR}}" data-title="{{item.NEWS_TITLE}}" class="btn margin-right-s">更多操作</view> 

						<view bindtap="url"  data-url="../../../news/detail/news_detail?id={{item._id}}" class="btn margin-right-s">预览</view>

					</view>
				</view>
			</view>

		</view>
		<!-- List END -->

		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{dataList,skin:'text-grey'}}" />
		<!--load end-->


	</cmpt-comm-list>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\news\list\admin_news_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
@import '../../../../../../style/project/admin_list_style.wxss';

page {
	background-color: #f8f8f8;
}

 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about\admin_setup_about.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		key: '',

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		if (options && options.key) {
			let key = options.key;
			for (let k = 0; k < projectSetting.SETUP_CONTENT_ITEMS.length; k++) {
				let item = projectSetting.SETUP_CONTENT_ITEMS[k];
				if (item.key == key) {
					this._loadDetail(item);
					wx.setNavigationBarTitle({
						title: '编辑' + item.title,
					});
					this.setData({ key: item.key });
					break;
				}
			}
		}
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	_loadDetail: async function (item) {
		if (!AdminBiz.isAdmin(this)) return;

		let opts = {
			'title': 'bar'
		};
		let params = {
			key: item.key
		}

		try {
			await cloudHelper.callCloudSumbit('home/setup_get', params, opts).then(res => {
				let formContent = [{ type: 'text', val: item.title }];
				let content = res.data;
				if (content && Array.isArray(content)) {
					formContent = content;
				}
				this.setData({
					isLoad: true,

					// 表单数据   
					formContent

				});


			});
		}
		catch (err) {
			console.log(err);
		}


	},


	/** 
	 * 数据提交
	 */
	bindFormSubmit: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let formContent = this.selectComponent("#contentEditor").getNodeList();

		await cloudHelper.transRichEditorTempPics(formContent, 'setup/', this.data.key, 'admin/setup_set_content');

		let callback = () => {
			wx.navigateBack();
		}
		pageHelper.showSuccToast('修改成功', 1500, callback);

	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about\admin_setup_about.json
--------------------------------------------------
{
	"usingComponents": {
		"cmpt-editor": "/cmpts/public/editor/editor_cmpt"
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "编辑"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about\admin_setup_about.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view>

<block wx:if="{{isAdmin&&isLoad}}">
	<view class="main-admin">
		<view class="form-box shadow">
			<view class="form-group" style="width: 100%;">
				<cmpt-editor nodeList="{{formContent}}" viewMode="{{true}}" style="width: 100%;" id="contentEditor"></cmpt-editor>
			</view>
		</view>
	</view>
	<view class="btn-bottom-admin"> 
		<view bindtap="bindFormSubmit" class="save">保存修改</view>
	</view>
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about\admin_setup_about.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
 
.main-admin {
	width: 100%;
	box-sizing: border-box;
	padding: 30rpx 20rpx;
	padding-bottom: 200rpx;
}

.form-group {
	padding: 1rpx 1rpx;
	overflow: hidden;
}
  
.btn-bottom-admin>view {
    width: 100%;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about_list\admin_setup_about_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const projectSetting = require('../../../../public/project_setting.js');
const pageHelper = require('../../../../../../helper/page_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad(options) {
		if (!AdminBiz.isAdmin(this)) return;

		this.setData({
			list: projectSetting.SETUP_CONTENT_ITEMS
		});
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady() {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow() {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide() {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload() {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh() {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom() {

	},

	url: function (e) {
		pageHelper.url(e, this);
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about_list\admin_setup_about_list.json
--------------------------------------------------
{
	"usingComponents": {
		 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "单页文章"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about_list\admin_setup_about_list.wxml
--------------------------------------------------
<!-- List Begin -->
<view class="main-admin" wx:if="{{isAdmin}}">
	<view class="admin-comm-list">
		<view class="item" wx:for="{{list}}" wx:key="key" bindtap="url" data-url="../about/admin_setup_about?key={{item.key}}">
			<view class="header">
				<view class="left text-cut">《{{item.title}}》</view>
				<view class="right">
					<view class="btn round margin-right-s"><text class="icon-edit margin-right-xxs"></text>编辑</view>

					<view catchtap="url" data-url="../../../about/index/about_index?key={{item.key}}" class="btn round margin-right-s"><text class="icon-attention margin-right-xxs"></text>预览</view>
				</view>
			</view>
		</view>

	</view>
	<!-- List END -->
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\about_list\admin_setup_about_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

page {
	background-color: #f8f8f8;
}

.main-admin {
	padding: 40rpx 0;
}

.admin-comm-list .item {
	margin-bottom: 40rpx;
}

.admin-comm-list .item .header .left {
	font-size: 32rpx !important;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\qr\admin_setup_qr.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		qrUrl: '',

		title: '',

		path: '',
		sc: '',
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		if (options && options.qr && options.title) {
			this.setData({
				qr: decodeURIComponent(options.qr),
				title: decodeURIComponent(options.title),
			}, () => {
				this._loadDetail();
			});
		}
		else
			this._loadDetail();
	},

	_loadDetail: async function () {
		if (this.data.qr) {
			this.setData({
				qrUrl: this.data.qr,
				isLoad: true
			})
			return;
		}

		let path = pageHelper.fmtURLByPID('/pages/default/index/default_index');
		let params = {
			path 
		};
		let opt = {
			title: 'bar'
		};
		try {
			await cloudHelper.callCloudSumbit('admin/setup_qr', params, opt).then(res => {

				this.setData({
					qrUrl: res.data,
					isLoad: true
				});
			});
		} catch (err) {
			console.error(err);
		}

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	url: function (e) {
		pageHelper.url(e, this);
	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\qr\admin_setup_qr.json
--------------------------------------------------
{
	"usingComponents": {
	 
	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"enablePullDownRefresh": true,  
	"navigationBarTitleText": "小程序码"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\qr\admin_setup_qr.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view>


<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">

	<view class="form-box shadow margin-top-xs">

		<view class="checkin">
			<view class="notice"><text class="icon-scan margin-right-s text-bold"></text>放在推广的地方展示</view>

			<image bindtap="url" data-type="img" data-url="{{qrUrl}}" mode="aspectFill" class="loading" show-menu-by-longpress="{{true}}" src="{{qrUrl}}"></image>
			<view class="oprt text-l">长按图片保存小程序码</view>

			<view wx:if="{{title}}" class="oprt text-black text-normal">《{{title}}》小程序码</view>
		</view>

	</view>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\setup\qr\admin_setup_qr.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

.load.loading::after {
	content: "小程序码生成中...";
}

.form-box .checkin {
	width: 100%;
	padding: 40rpx 40rpx 80rpx;
	padding-bottom: 150rpx;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;
}

.form-box .checkin .notice {
	width: 100%;
	font-size: 36rpx;
	text-align: center;
	color: #000;
	margin-bottom: 30rpx;
}

.form-box .checkin image {
	width: 500rpx;
	height: 500rpx;
	margin: 30rpx 0rpx;
}

.form-box .checkin .oprt {
	margin-top: 0rpx;
	text-align: center;
	font-size: 30rpx;
	color: var(--adminColor);
	padding: 20rpx 10rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\detail\admin_user_detail.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	async onLoad(options) {
		if (!AdminBiz.isAdmin(this)) return;
		if (!pageHelper.getOptions(this, options)) return;

		this._loadDetail();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady() {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow() {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide() {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload() {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	async onPullDownRefresh() {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom() {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage() {

	},

	_loadDetail: async function () {
		if (!AdminBiz.isAdmin(this)) return;

		let id = this.data.id;
		if (!id) return;

		let params = {
			id
		}
		let opts = {
			hint: false
		}
		let user = await cloudHelper.callCloudData('admin/user_detail', params, opts);
		if (!user) {
			this.setData({
				isLoad: null,
			})
			return;
		};

		this.setData({
			isLoad: true,
			user
		})
	},
	url(e) {
		pageHelper.url(e, this);
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\detail\admin_user_detail.json
--------------------------------------------------
{
	"usingComponents": {

	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",  
	"enablePullDownRefresh": true,  
	"navigationBarTitleText": "用户简历资料"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\detail\admin_user_detail.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l text-grey"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l text-grey"></view>

<view wx:if="{{isLoad && isAdmin}}" class="main-admin">
	<view class="admin-comm-list">
		<view class="item">
			<view class="info">
				<view class="info-item pic" bindtap="url" data-url="{{user.USER_PIC}}" data-type="image" >
					<view class="title"></view>
					<view class="mao"> </view>
					<view class="content text-admin">
						<image mode="aspectFill" class="loading" src="{{user.USER_PIC}}" />
					</view>  
				</view>
				<view class="info-item">
					<view class="title">姓名</view>
					<view class="mao">：</view>
					<view class="content text-admin  text-l">{{user.USER_NAME}} </view>
				</view>
				<view class="info-item" bindtap="url" data-type="phone" data-url="{{user.USER_MOBILE}}">
					<view class="title">手机号码</view>
					<view class="mao">：</view>
					<view class="content">{{user.USER_MOBILE}} <text class="icon-phone text-l margin-left-xs"></text></view>
				</view>
				<view class="info-item">
					<view class="title">注册时间</view>
					<view class="mao">：</view>
					<view class="content">{{user.USER_ADD_TIME}} </view>
				</view>
			</view>
		</view>
	</view>
	<view style="height:30rpx;"></view>

	<import src="../../../../../../tpls/public/admin_forms_detail_tpl.wxml" />
	<template is="adminFormsDetailTpl" data="{{forms:user.USER_FORMS}}" />


</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\detail\admin_user_detail.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

.main-admin {
	padding: 30rpx 0rpx;
}

.info-item.pic {
	display: flex;
}

.info-item.pic image{
	width: 180rpx;
	height: 180rpx;
	margin-left: 20rpx;
	border-radius: 2rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\export\admin_user_export.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const fileHelper = require('../../../../../../helper/file_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		url: '',
		time: '',
		condition: '',

		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		if (options && options.condition) {
			this.setData({
				condition: options.condition
			})
		}

		this._loadDetail(1);
	},

	_loadDetail: async function (isDel) {
		if (!AdminBiz.isAdmin(this)) return;

		let params = {
			isDel
		}
		let options = {
			title: 'bar'
		}
		let data = await cloudHelper.callCloudData('admin/user_data_get', params, options);

		if (!data) return;

		this.setData({
			isLoad: true,
			url: data.url,
			time: data.time
		})

	},


	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail(1);
		wx.stopPullDownRefresh();
	},

	bindOpenTap: function (e) {
		fileHelper.openDoc('用户简历资料', this.data.url);
	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	bindExportTap: async function (e) {
		try {
			let options = {
				title: '数据生成中'
			}

			let params = {
				condition: this.data.condition,
				fields: projectSetting.USER_FIELDS
			}

			await cloudHelper.callCloudData('admin/user_data_export', params, options).then(res => {

				this._loadDetail(0);
				pageHelper.showModal('数据文件生成成功(' + res.total + '条记录), 请点击「直接打开」按钮或者复制文件地址下载');

			});
		} catch (err) {
			console.log(err);
			pageHelper.showNoneToast('导出失败，请重试');
		}

	},

	bindDelTap: async function (e) {
		try {
			let options = {
				title: '数据删除中'
			}
			await cloudHelper.callCloudData('admin/user_data_del', {}, options).then(res => {
				this.setData({
					url: '',
					time: ''
				});
				pageHelper.showSuccToast('删除成功');
			});
		} catch (err) {
			console.log(err);
			pageHelper.showNoneToast('删除失败，请重试');
		}

	},


})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\export\admin_user_export.json
--------------------------------------------------
{
	"usingComponents": {

	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white",  
	"enablePullDownRefresh": true,  
	"navigationBarTitleText": "用户简历资料导出"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\export\admin_user_export.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l text-grey"></view> 

<view class="main-admin" wx:if="{{isAdmin&&isLoad}}">
	<view class="form-box shadow">
		<view class="form-group" style="padding:20rpx 15rpx 20rpx;">
			<view class="title-desc">
				※ 数据说明： 针对本次查询结果导出全部数据
			</view>
		</view>
		<view class="form-group">
			<view class="title" style="font-size:30rpx">数据下载链接<text wx:if="{{time}}" class="text-gray text-s margin-left-s">({{time}} 生成)</text> </view>
			<button hover-class="button-hover" class="btn bg-admin text-white shadow" bindtap="url" data-type="copy" data-url="{{url}}">复制</button>
		</view>
		<view class="form-group align-start" bindtap="url" data-type="copy" data-url="{{url}}">
			<textarea maxlength="500" placeholder="数据文件尚未生成，点击下方按钮生成" placeholder-class="phc" value="{{url}}" style="height:50rpx"></textarea>
		</view>

		<block wx:if="{{url}}">
			<view class="form-group" style="padding:20rpx 15rpx 20rpx;">
				<view class="title-desc">
					<text user-select="true">※ <text class="text-black">链接使用说明</text>
						1. 复制以上链接地址，建议在电脑浏览器中打开链接下载数据文件
						2. 为保障信息安全，请勿外传数据链接
						3. 为了防止隐私数据泄露，请在下载后及时点击下方按钮删除
					</text>
				</view>
			</view>
		</block>
	</view>

	<button bindtap="bindExportTap" class="btn-admin margin-top">{{url?'重新生成数据':'生成数据'}} (Excel文件)</button> 

	<button wx:if="{{url}}" bindtap="bindOpenTap" class="btn-admin bg-purple light">直接打开数据文件</button>  

	<button wx:if="{{url}}" bindtap="bindDelTap" class="btn-admin margin-bottom-s bg-red light">删除数据文件</button>  

	<view class="form-group" wx:if="{{url}}">
		<view class="title-desc text-red"><text class="icon-info margin-right-xs"></text>为了防止隐私数据泄露，请在下载上述文件后及时点击按钮删除
		</view>
	</view>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\export\admin_user_export.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';
 
.form-box .title-desc {
	padding-bottom: 10rpx;
	border: 0;
	font-size: 29rpx;
	color: #888;
}

.btn-admin{
	margin-bottom: 20rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\list\admin_user_list.js
--------------------------------------------------
const AdminBiz = require('../../../../../../comm/biz/admin_biz.js');
const pageHelper = require('../../../../../../helper/page_helper.js');
const cacheHelper = require('../../../../../../helper/cache_helper.js');
const cloudHelper = require('../../../../../../helper/cloud_helper.js');
const projectSetting = require('../../../../public/project_setting.js');

const CACHE_USER_CHECK_REASON = 'CACHE_USER_CHECK_REASON';

Page({

	/**
	 * 页面的初始数据
	 */
	data: {
		userRegCheck: projectSetting.USER_REG_CHECK,
		checkModalShow: false,

		formReason: '',
		curIdx: -1,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (!AdminBiz.isAdmin(this)) return;

		//设置搜索菜单
		await this._getSearchMenu();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},


	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},

	bindDelTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let id = pageHelper.dataset(e, 'id');

		let params = {
			id
		}

		let callback = async () => {
			try {
				let opts = {
					title: '删除中'
				}
				await cloudHelper.callCloudSumbit('admin/user_del', params, opts).then(res => {
					
					pageHelper.delListNode(id, this.data.dataList.list, 'USER_MINI_OPENID');
					this.data.dataList.total--;
					this.setData({
						dataList: this.data.dataList
					});
					pageHelper.showSuccToast('删除成功');
				});
			} catch (e) {
				console.log(e);
			}
		}
		pageHelper.showConfirm('确认删除？删除不可恢复', callback);

	},


	bindClearReasonTap: function (e) {
		this.setData({
			formReason: ''
		})
	},

	bindCheckTap: function (e) {
		let curIdx = pageHelper.dataset(e, 'idx');
		this.setData({
			formReason: cacheHelper.get(CACHE_USER_CHECK_REASON) || '',
			curIdx,
			checkModalShow: true,
		});
	},

	bindCheckCmpt: async function () {
		let e = {
			currentTarget: {
				dataset: {
					status: 8,
					idx: this.data.curIdx
				}
			}
		}
		cacheHelper.set(CACHE_USER_CHECK_REASON, this.data.formReason, 86400 * 365);
		await this.bindStatusTap(e);
	},

	bindStatusTap: async function (e) {
		if (!AdminBiz.isAdmin(this)) return;
		let status = pageHelper.dataset(e, 'status');

		let idx = Number(pageHelper.dataset(e, 'idx'));

		let dataList = this.data.dataList;
		let id = dataList.list[idx].USER_MINI_OPENID;

		let params = {
			id,
			status,
			reason: this.data.formReason
		}

		let cb = async () => {
		try {
			await cloudHelper.callCloudSumbit('admin/user_status', params).then(res => {
					let sortIndex = this.selectComponent('#cmpt-comm-list').getSortIndex();
 
					if (sortIndex != -1 && sortIndex != 5 && !this.data.search) { // 全部或者检索的结果
						dataList.list.splice(idx, 1);
						dataList.total--;
				this.setData({
					dataList: this.data.dataList
				});
					} else {
						let data1Name = 'dataList.list[' + idx + '].USER_CHECK_REASON';
						let data2Name = 'dataList.list[' + idx + '].USER_STATUS';
						this.setData({
							[data1Name]: this.data.formReason,
							[data2Name]: status
						});
					}

					this.setData({
						checkModalShow: false,
						formReason: '',
						curIdx: -1,
					});
					pageHelper.showSuccToast('操作成功');
			});
		} catch (e) {
			console.log(e);
		}
		}

		if (status == 8) {
			pageHelper.showConfirm('该用户审核不通过，用户修改资料后可重新提交审核', cb)
		}
		else
			pageHelper.showConfirm('确认执行此操作?', cb);
	},

	_getSearchMenu: async function () {

		let sortItems1 = [
			{ label: '注册时间', type: '', value: '' },
			{ label: '注册时间从早到晚', type: 'sort', value: 'USER_ADD_TIME|asc' },
			{ label: '注册时间从晚到早', type: 'sort', value: 'USER_ADD_TIME|desc' },
		];
		let sortMenus = [
			{ label: '全部', type: '', value: '' },
			{ label: '正常', type: 'status', value: 1 },
			{ label: '禁用', type: 'status', value: 9 }

		]

		if (projectSetting.USER_REG_CHECK) {
			sortMenus = sortMenus.concat([
				{ label: '待审核', type: 'status', value: 0 },
				{ label: '审核未过', type: 'status', value: 8 }
			]);
		}
		this.setData({
			search: '',
			sortItems: [sortItems1],
			sortMenus,
			isLoad: true
		})


	}

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\list\admin_user_list.json
--------------------------------------------------
{
	"usingComponents": {

	},
	"navigationBarBackgroundColor": "#2499f2",
	"navigationBarTextStyle": "white", 
	"disableScroll": true, 
	"navigationBarTitleText": "用户简历资料管理"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\list\admin_user_list.wxml
--------------------------------------------------
<block wx:if="{{isAdmin&&isLoad}}">
	<cmpt-comm-list id="cmpt-comm-list" source='admin' type="admin-meet" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" route="admin/user_list" sortMenusDefaultIndex="0" topBottom="50" placeholder="搜索" bind:list="bindCommListCmpt">

		<view slot="searchEnd">
			<button bindtap="url" data-url="../export/admin_user_export?condition={{dataList.condition}}" class="btn mid radius bg-admin text-white margin-right-s"><text class="icon-down margin-right-xxs"></text>导出用户简历资料</button>
		</view>

		<!-- List Begin -->
		<view class="admin-comm-list">
			<view wx:if="{{dataList && dataList.total }}" class="load text-grey">共有{{dataList.total}}条符合条件记录 </view>

			<view class="item" wx:for="{{dataList.list}}" wx:key="key">
				<view class="no">{{index+1}}</view>
				<view class="header">
					<view class="left text-cut">{{item.USER_NAME}}
					</view>
					<view class="right">
						<text wx:if="{{item.USER_STATUS==1}}" class="text-black">「正常」</text>
						<text wx:elif="{{item.USER_STATUS==0}}" class="text-orange">「待审核」</text>
						<text wx:elif="{{item.USER_STATUS==8}}" class="text-red">「审核未过」</text>
						<text wx:elif="{{item.USER_STATUS==9}}" class="text-purple">「禁用」</text>
					</view>
				</view>

				<view class="info">
					<view wx:if="{{item.USER_STATUS==8}}" class="info-item">
						<view class="title">审核理由</view>
						<view class="mao">：</view>
						<view class="content">{{item.USER_CHECK_REASON||'未填写'}}</view>
					</view>
					<view class="info-item" bindtap="url" data-type="phone" data-url="{{item.USER_MOBILE}}">
						<view class="title">手机</view>
						<view class="mao">：</view>
						<view class="content">{{item.USER_MOBILE||'未填写'}} <text wx:if="{{item.USER_MOBILE}}" class="icon-phone margin-left-s"></text></view>
					</view>

					<view class="info-item">
						<view class="title">注册</view>
						<view class="mao">：</view>
						<view class="content">{{item.USER_ADD_TIME}}</view>
					</view>

					<view class="info-item" bindtap="url" data-url="../detail/admin_user_detail?id={{item.USER_MINI_OPENID}}">
						<view class="title">详情</view>
						<view class="mao">：</view>
						<view class="content text-blue">查看更多用户简历资料...</view>
					</view>

					<view class="oprt">

						<block wx:if="{{userRegCheck}}">
							<view wx:if="{{item.USER_STATUS==0}}" bindtap="bindStatusTap" data-status="1" data-idx="{{index}}" class="btn  margin-right-s text-green">审核通过</view> 

							<view wx:if="{{item.USER_STATUS==0}}" bindtap="bindCheckTap" data-status="8" data-idx="{{index}}" class="btn  margin-right-s text-red">审核不过</view>
						</block>

						<view wx:if="{{item.USER_STATUS==9}}" bindtap="bindStatusTap" data-status="1" data-idx="{{index}}" class="btn  margin-right-s"><text class="icon-check margin-right-xxs text-green"></text>恢复正常</view>

						<view wx:if="{{item.USER_STATUS!=9}}" bindtap="bindStatusTap" data-status="9" data-idx="{{index}}" class="btn  margin-right-s"><text class="icon-close margin-right-xxs text-purple"></text>禁用</view>

						<view bindtap="bindDelTap" data-id="{{item.USER_MINI_OPENID}}" class="btn  margin-right-s"><text class="icon-delete margin-right-xxs text-orange"></text>删除</view>

					</view>
				</view>
			</view>
		</view>
		<!-- List END -->

		<!--load begin-->
		<import src="../../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{skin:'text-grey',dataList}}" />
		<!--load end-->


	</cmpt-comm-list>


	<cmpt-modal wx:if="{{checkModalShow}}" model:show="{{checkModalShow}}" type="dialog" title="审核不过" bind:click="bindCheckCmpt" class="modal-form" cancelText="返回" confirmText="确定">
		<view class="form-group" style="padding:0 10rpx">
			<view class="title">审核不过理由 <text class="text-grey text-mid">(选填)</text>：</view>
			<view bindtap="bindClearReasonTap" style="width:150rpx;text-align: right;" class="text-grey"><text class="icon-roundclose"></text>清空</view>
		</view>

		<view class="form-group cancel-area">
			<textarea placeholder-class="phc" placeholder="请输入审核不过理由 (非必填)" style="height:110rpx" model:value="{{formReason}}" maxlength="100"></textarea>
		</view>
	</cmpt-modal>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\admin\user\list\admin_user_list.wxss
--------------------------------------------------
@import '../../../../../../style/public/admin.wxss';

page {
	background-color: #f8f8f8;
} 

.admin-comm-list .item .info .oprt { 
    padding: 0rpx 0rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\detail\cate_detail.js
--------------------------------------------------
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const pageHelper = require('../../../../../helper/page_helper.js');
const ProjectBiz = require('../../../biz/project_biz.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);

		if (!pageHelper.getOptions(this, options)) return;

		this._loadDetail();

	},

	_loadDetail: async function () {
		let id = this.data.id;
		if (!id) return;

		let params = {
			id,
		};
		let opt = {
			title: 'bar'
		};
		let cate = await cloudHelper.callCloudData('cate/view', params, opt);
		if (!cate) {
			this.setData({
				isLoad: null
			})
			return;
		}

		this.setData({
			isLoad: true,
			cate,
		});

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	onPageScroll: function (e) {
		// 回页首按钮
		pageHelper.showTopBtn(e, this);

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function (res) {
		return {
			title: this.data.cate.CATE_TITLE,
			imageUrl: this.data.cate.CATE_PIC[0]
		} 
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\detail\cate_detail.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-detail": "/cmpts/biz/detail/detail_cmpt"
	},
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "企业详情"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\detail\cate_detail.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l load-project"></view>

<block wx:if="{{isLoad}}">
	<view class="main padding-project">
		<view class="article-box margin-top-xs">
			<!-- article content begin -->
			<view class="article card-project shadow-project">
				<view class="title"><text user-select="true">{{cate.CATE_TITLE}}</text></view>
				<view class="tag-list"> 
							<view>{{cate.CATE_OBJ.trade}}</view> 
							<view>{{cate.CATE_OBJ.type}}</view>  
							<view>{{cate.CATE_OBJ.size}}</view> 
							<view>{{cate.CATE_OBJ.star}}</view> 
						</view>

				<view class="job" bind:tap="url" data-url="../../activity/query/activity_query?search={{cate.CATE_TITLE}}">
					<view>职位数：{{cate.CATE_CNT}}</view>
					<text class="icon-right" style="color: #ccc;"></text>
				</view>

				<block wx:for="{{cate.CATE_OBJ.content}}" wx:key="key">
					<view class="content" wx:if="{{item.type=='text'}}">
						<text user-select="{{true}}">{{item.val}}</text>
					</view>

					<view class="pics" wx:if="{{item.type=='img'}}">
						<image bindtap="url" data-type='img' data-url="{{item.val}}" show-menu-by-longpress="{{true}}" class="loading" mode='widthFix' lazy-load="true" src="{{item.val}}">
						</image>
					</view>
				</block>
				<!-- article content end -->

			</view>
			<!-- article content end -->

		</view>

	</view>

	<cmpt-detail mode="mode1" topBtnShow="{{topBtnShow}}" oid="{{cate._id}}" cate="企业库" title="{{cate.CATE_TITLE}}" cover="{{cate.CATE_OBJ.cover[0]}}" qr="{{cate.CATE_QR}}" desc="查看详情" bg="{{skin.PROJECT_COLOR}}"></cmpt-detail>
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\detail\cate_detail.wxss
--------------------------------------------------
@import "../../../../../style/public/detail.wxss";
@import "../../../style/skin.wxss";

.job {
	width: 100%;
	padding: 20rpx 30rpx;
	display: flex;
	justify-content: space-between;
	border-radius: 10rpx;
	font-size: 28rpx;
	margin: 30rpx 0 10rpx;
	background-color: #FFF3E7;
	color: #FF8812;
}

.tag-list {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
}

.tag-list>view {
	padding: 4rpx 10rpx;
	border-radius: 4rpx;
	background-color: #f8f8f8;
	font-size: 22rpx;
	margin-right: 10rpx;
	color: #777;
	margin-top: 10rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\index\cate_index.js
--------------------------------------------------
const ProjectBiz = require('../../../biz/project_biz.js');
const pageHelper = require('../../../../../helper/page_helper.js');
const projectSetting = require('../../../public/project_setting.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		_params: null,

		sortMenus: [],
		sortItems: [],
	},

	/**
		 * 生命周期函数--监听页面加载
		 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);

		this._getSearchMenu();
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},

	bindCommListCmpt: function (e) {
		pageHelper.commListListener(this, e);
	},


	onShareAppMessage: function () {

	},

	_getSearchMenu: function () {

		let sortMenus = [
			{ label: '全部', type: 'cateId', value: '' },
			{ label: '最新', type: 'new', value: 'new' },
			{ label: '职位数ˇ', type: 'sort', value: 'CATE_CNT|desc' },
		];

		let sortItems0 = pageHelper.makeListMenu(projectSetting.CATE_TRADE, '行业', 'trade');

		let sortItems1 = pageHelper.makeListMenu(projectSetting.CATE_SIZE, '规模', 'size');

		let sortItems2 = pageHelper.makeListMenu(projectSetting.CATE_TYPE, '性质', 'type');

		let sortItems3 = pageHelper.makeListMenu(projectSetting.CATE_STAR, '推荐', 'star');

		this.setData({
			isLoad: true,
			sortItems: [sortItems0, sortItems1, sortItems2, sortItems3],
			sortMenus
		})

	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\index\cate_index.json
--------------------------------------------------
{
	"usingComponents": { 
	}, 
	"disableScroll": true, 
	"navigationBarTitleText": "企业库"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\index\cate_index.wxml
--------------------------------------------------
<view wx:if="{{!isLoad}}" class="margin-top load loading text-l load-project"></view>
<block wx:else>

	<cmpt-comm-list pulldownType="{{['modal','modal','modal','modal','modal']}}" type="cate-list" _params="{{_params}}" search="{{search||''}}" _menus="{{sortMenus}}" _items="{{sortItems}}" sortMenusDefaultIndex="0" route="cate/list" topBottom="120" isTotalMenu="{{true}}" placeholder="搜索企业名称" bind:list="bindCommListCmpt">
		<view class="main">
			<view class="list">
				<view class="item card-project shadow-project" wx:for="{{dataList.list}}" wx:key="key" bind:tap="url" data-url="../detail/cate_detail?id={{item._id}}">
					<view class="left">
						<image class="loading" mode="heightFix" lazy-load="{{true}}" src="{{item.CATE_OBJ.cover[0]}}" />
					</view>
					<view class="right">
						<view class="line1">{{item.CATE_TITLE}}</view>
						<view class="tag-list"> 
							<view>{{item.CATE_OBJ.trade}}</view> 
							<view>{{item.CATE_OBJ.type}}</view>  
							<view>{{item.CATE_OBJ.size}}</view> 
							<view>{{item.CATE_OBJ.star}}</view> 
						</view>
						<view class="line2"><text>总职位数 {{item.CATE_CNT}}</text></view>
					</view>
					<view class="arrow"><text class="icon-right"></text></view>
				</view>
			</view>
		</view>


		<!--load begin-->
		<import src="../../../../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{skin:'load-project',dataList}}" />
		<!--load end-->

	</cmpt-comm-list>


	<block wx:if="{{skin.IS_SUB}}">
		<import src="../../tpls/menu_tpl.wxml" />
		<template is="menuTpl" data="{{skin,curMenu:'cate_index',returnHome}}" />
	</block>

</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\cate\index\cate_index.wxss
--------------------------------------------------
@import "../../../style/skin.wxss";

.list {
	width: 100%;
	padding: 0rpx 0 20rpx;
}

.list .item {
	width: 100%;
	background-color: #fff;
	padding: 30rpx;
	display: flex;
	margin-bottom: 20rpx;
}

.list .item .left {
	width: 200rpx;
	display: flex;
	justify-content: center;
}

.list .item .left>image {
	max-width: 200rpx;
	height: 150rpx;
	border-radius: 12rpx;
	margin-right: 20rpx; 
}

.list .item .right {
	flex: 1;
	display: flex;
	flex-direction: column;
}

.list .item .right .line1 {
	color: #000;
	font-size: 32rpx;
	font-weight: bold;
}

.list .item .right .tag-list {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
}

.list .item .right .tag-list>view {
	padding: 4rpx 10rpx;
	border-radius: 4rpx;
	background-color: #f8f8f8;
	font-size: 22rpx;
	margin-right: 10rpx;
	color: #777;
	margin-top: 10rpx;
}

.list .item .right .line2 {
	margin-top: 14rpx;
}

.list .item .right .line2>text {
	font-size: 26rpx;
	background-color: #FFF3E7;
	color: #FF8812;
	padding: 6rpx 12rpx;
	border-radius: 4rpx;
}


.list .item .arrow {
	color: #ccc;
	display: flex;
	align-items: center;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\default\index\default_index.js
--------------------------------------------------
const pageHelper = require('../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const ProjectSetting = require('../../../public/project_setting.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		cur: 'hot',
		cateList: []
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);
	},

	_loadList: async function () {
		let opts = {
			title: 'bar'
		}
		await cloudHelper.callCloudSumbit('home/list', {}, opts).then(res => {
			this.setData({
				...res.data
			});
		})
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {
		this._loadList();
	},

	onPullDownRefresh: async function () {
		await this._loadList();
		wx.stopPullDownRefresh();
	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	url: async function (e) {
		pageHelper.url(e, this);
	},


	bindCurTap: function (e) {
		let cur = pageHelper.dataset(e, 'cur');
		this.setData({ cur });
	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function () {

	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\default\index\default_index.json
--------------------------------------------------
{
	"usingComponents": { 
	},  
	"enablePullDownRefresh": true, 
	"navigationStyle": "custom",
	"navigationBarTitleText": "首页"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\default\index\default_index.wxml
--------------------------------------------------
<view class="main">
	<view class="up">
		<image mode="widthFix" src="../../../images/home.jpg" />
	</view>
	<view class="down">
		<view class="menu shadow-project">
			<view bindtap="url" data-type="relaunch" data-url="../../news/index/news_index" class="item">
				<view class="item-inner">
					<view class="img">
						<image src="../../../images/menu/1.png" />
					</view>
					<view class="title">通知公告</view>
				</view>
			</view>

			<view bindtap="url" data-type="relaunch" data-url="../../activity/index/activity_index" class="item">
				<view class="item-inner">
					<view class="img">
						<image src="../../../images/menu/2.png" />
					</view>
					<view class="title">兼职申请</view>
				</view>
			</view>

			<view bindtap="url" data-type="relaunch" data-url="../../cate/index/cate_index" class="item">
				<view class="item-inner">
					<view class="img">
						<image src="../../../images/menu/3.png" />
					</view>
					<view class="title">企业库</view>
				</view>
			</view>

			<view bindtap="url" data-url="../../my/edit/my_edit" class="item">
				<view class="item-inner">
					<view class="img">
						<image src="../../../images/menu/4.png" />
					</view>
					<view class="title">简历填写</view>
				</view>
			</view>
		</view>

		<view class="area shadow-project">
			<view class="hot-line">
				<view class="left">
					<view class="icon-left"></view>精选企业
				</view>
				<view class="right"></view>
			</view>

			<view wx:if="{{!cateList}}" class="margin-top load loading text-l load-project"></view>

			<!--横向拖动 Begin-->
			<view class="scroll-x" wx:if="{{cateList&&cateList.length>0}}">
				<scroll-view scroll-x="{{true}}" class="comm-list-scroll">
					<view class="item-scroll" wx:for="{{cateList}}" wx:key="key" bindtap="url" data-url="../../cate/detail/cate_detail?id={{item._id}}">
						<image lazy-load="{{true}}" class="loading shadow" src="{{item.CATE_OBJ.cover}}" mode="heightFix"></image>
						<view class="title text-cut1">{{item.CATE_TITLE}}</view>
					</view>
				</scroll-view>
			</view>
			<!--横向拖动 END-->
		</view>

		<view class="area shadow-project">
			<view class="hot-line">
				<view class="left">
					<view class="icon-left"></view>推荐岗位
				</view>
				<view class="right"></view>
			</view>
			<view wx:if="{{!activityList}}" class="margin-top load loading text-l load-project"></view>
			<view class="vouch-list">
				<view class="item" bind:tap="url" data-url="../../activity/detail/activity_detail?id={{item._id}}" wx:for="{{activityList}}" wx:key="k">
					<view class="line1 text-cut">{{item.ACTIVITY_TITLE}}</view>
					<view class="line2 text-cut">{{item.ACTIVITY_OBJ.money}}</view>
					<view class="line3">
						<view>{{item.ACTIVITY_OBJ.type}}</view>
						<view>{{item.ACTIVITY_OBJ.biz}}</view>
						<view wx:if="{{item.ACTIVITY_MAX_CNT>0}}">招{{item.ACTIVITY_MAX_CNT}}人</view>
						<view wx:else="">人数不限</view>
					</view>
				</view>
			</view>
		</view>



		<view class="area shadow-project">
			<view class="hot-line">
				<view class="left">
					<view class="icon-left"></view>最新通知
				</view>
			</view>

			<!-- List Begin -->
			<view wx:if="{{!newsList}}" class="margin-top load loading text-l load-project"></view>

			<view wx:else class="comm-list-box">
				<block wx:for="{{newsList}}" wx:key="key">
					<view class="item item-leftbig1" bindtap="url" data-url="../../news/detail/news_detail?id={{item._id}}">
						<image mode="aspectFill" lazy-load="{{true}}" class="leftbig-left loading shadow" src="{{item.NEWS_PIC}}">
						</image>
						<view class="leftbig-right">
							<view class="leftbig-title content-cut-one">{{item.NEWS_TITLE}}</view>
							<view class="leftbig-desc">
								<text class="content-cut-two">{{item.NEWS_DESC}} </text>
							</view>

						</view>
					</view>

				</block>
			</view>
			<!-- List END -->

		</view>
	</view>
</view>
<view style="height: 100rpx;"></view>
<block wx:if="{{skin.IS_SUB}}">
	<import src="../../tpls/menu_tpl.wxml" />
	<template is="menuTpl" data="{{curMenu:'home_index',returnHome:false}}" />
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\default\index\default_index.wxss
--------------------------------------------------
@import "../../../../../style/public/comm_box_list.wxss";
@import "../../../style/skin.wxss";



.main {
	padding: 0rpx 0rpx 100rpx;
}

.up {
	width: 100%;
}

.up image {
	width: 100%;
	height: 500rpx;
}

.down {
	width: 100%;
	box-sizing: border-box;
	margin-top: 10rpx;
	z-index: 9999;
	padding: 0 24rpx;
}

.menu {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	background-color: #fff;
	margin-top: -60rpx;
	padding: 30rpx 10rpx;
	border-radius: 20rpx;
}

.menu .item {
	width: 25%;
	display: flex;
	align-items: center;
	justify-content: center;
}

.menu .item .item-inner {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;

}

.menu .item-inner .img {
	width: 105rpx;
	height: 105rpx;
	display: flex;
	justify-content: center;
	align-items: center;
}

.menu .item-inner .img image {
	width: 70rpx;
	height: 70rpx;
}

.menu .item-inner .title {
	margin-top: 10rpx;
	font-size: 26rpx;
	color: #333;
}


/*** 图文列表盒子 ***/
.home-list-box {
	width: 100%;
	box-sizing: border-box;
	padding: 20rpx 30rpx 30rpx 30rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
	overflow: hidden;
	padding: 0;
	margin-top: 40rpx;
	overflow: unset;
}

.home-list-box .item {
	padding: 0rpx 0rpx;
	background-color: #fff;
	border-radius: 20rpx;
	position: relative;
	max-height: 180rpx;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	flex-direction: row;
	margin-bottom: 70rpx;
}

.home-list-box .item:first-child {
	margin-top: 60rpx;
}

.home-list-box .item .left {
	width: 190rpx;
	height: 210rpx;
	margin-left: 0rpx;
	margin-top: -30rpx;
	border-radius: 15rpx !important;
	overflow: hidden;
	box-shadow: var(--ShadowSize) var(--greyShadow);
}

.home-list-box .item .right {
	flex: 1;
	display: flex;
	flex-direction: column;
	margin-left: 20rpx;
	margin-right: 20rpx;
	justify-content: center;
	align-items: flex-start;
	position: relative;
	padding: 15rpx 10rpx;
}

.home-list-box .item .right .title {
	width: 100%;
	font-size: 32rpx;
	color: #000;
	line-height: 1.5;
	margin-top: 0rpx;
	font-weight: bold;
}

.home-list-box .item .desc {
	margin-top: 5rpx;
	font-size: 28rpx;
	color: #999;
	line-height: 1.2;
	height: 60rpx;
	margin-bottom: 10rpx;
}


.home-list-box .item .data {
	width: 100%;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	margin-top: 0rpx;
	color: #999;
	font-size: 24rpx;
	position: relative;
}

.area {
	width: 100%;
	background-color: #fff;
	border-radius: 20rpx;
	margin-top: 30rpx;
	padding: 10rpx 0 20rpx;
}

.hot-line {
	width: 100%;
	display: flex;
	justify-content: space-between;
	padding: 10rpx 30rpx 10rpx;
	align-items: center;
	margin-top: 10rpx;
	border-radius: 20rpx;
	align-items: center;
}

.hot-line .left {
	font-size: 30rpx;
	font-weight: bold;
	color: #333;
	margin-top: 10rpx;
	display: flex;
	align-items: center;
}

.hot-line .icon-left {
	width: 14rpx;
	height: 36rpx;
	background-image: linear-gradient(145deg, #FF8812, #FFDD52, #FFF3E7);
	margin-right: 14rpx;
	border-radius: 10rpx;
}

.hot-line .right {
	font-size: 24rpx;
	color: #bbb;
}

.scroll-x {
	width: 100%;
	padding: 0 28rpx;
}

.comm-list-box {
	padding: 0rpx 10rpx 0rpx 10rpx;
}

.comm-list-scroll .item-scroll {
	margin-left: 15rpx;
	margin-right: 15rpx;
	position: relative;
	padding: 10rpx 0rpx;
	text-align: center;
	width: 152rpx;
}

.comm-list-scroll .item-scroll:first-child {
	margin-left: 0rpx;
}

.comm-list-scroll .item-scroll image {
	max-width: 152rpx;
	height: 110rpx;
	border-radius: 10rpx;
	border: 0rpx solid var(--projectColorLight);
}

.comm-list-scroll .item-scroll .title {
	width: 152rpx;
	text-align: center;
	font-size: 24rpx;
	color: #666;
	margin-top: 10rpx;
}

.text-cut1 {
	text-overflow: hidden;
	white-space: nowrap;
	overflow: hidden;
}

.comm-list-box .item-leftbig1 .leftbig-left {
	width: 220rpx;
	height: 130rpx;
}

.comm-list-box .item-leftbig1 .leftbig-right .leftbig-title {
	font-size: 28rpx;
	color: #333;
}

.comm-list-box .item-leftbig1 .leftbig-desc {
	font-size: 24rpx;
	color: #aaa;
	margin-top: 10rpx;
}

.comm-list-box .item-leftbig1 .leftbig-right {
	height: 130rpx;
}

.vouch-list {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	padding: 20rpx 20rpx;
}

.vouch-list .item {
	width: calc((100% - 20rpx) / 2);
	display: flex;
	background-image: linear-gradient(145deg, #f8f8f8, #fff);
	margin-bottom: 20rpx;
	border-radius: 6rpx;
	padding: 20rpx;
	flex-direction: column;
	border: 2rpx solid #f3e6b1;
}

.vouch-list .item:nth-child(2n+1) {
	margin-right: 20rpx;
}

.vouch-list .item .line1 {
	font-size: 28rpx;
	color: #333;
	font-weight: bold;
}

.vouch-list .item .line2 {
	font-size: 26rpx;
	color: var(--red);
	margin-top: 10rpx;
}


.vouch-list .item .line3 {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	font-size: 22rpx;
	margin-top: 10rpx;
}

.vouch-list .item .line3>view {
	padding: 4rpx 6rpx;
	border-radius: 4rpx;
	background-color: #fff;
	font-size: 22rpx;
	margin-right: 6rpx;
	color: #999;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\edit\my_edit.js
--------------------------------------------------
const pageHelper = require('../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const validate = require('../../../../../helper/validate.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const projectSetting = require('../../../public/project_setting.js');
const setting = require('../../../../../setting/setting.js');
const PassportBiz = require('../../../../../comm/biz/passport_biz.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		isEdit: true,

		userRegCheck: projectSetting.USER_REG_CHECK,
		mobileCheck: setting.MOBILE_CHECK
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);
		await this._loadDetail();
	},

	_loadDetail: async function (e) {

		let opts = {
			title: 'bar'
		}
		let user = await cloudHelper.callCloudData('passport/my_detail', {}, opts);
		if (!user)
			return wx.redirectTo({ url: '../reg/my_reg' });

		this.setData({
			isLoad: true,
			isEdit: true,

			user,

			fields: projectSetting.USER_FIELDS,

			formName: user.USER_NAME,
			formMobile: user.USER_MOBILE,
			formPic: user.USER_PIC,
			formForms: user.USER_FORMS
		})
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	bindGetPhoneNumber: async function (e) {
		await PassportBiz.getPhone(e, this);
	},

	bindPicTap: function (e) {  
		this.setData({
			formPic: e.detail.avatarUrl
		})
	},

	bindSubmitTap: async function (e) {
		try {
			let data = this.data;
			// 数据校验 
			data = validate.check(data, projectSetting.USER_CHECK_FORM, this);
			if (!data) return;

			let forms = this.selectComponent("#cmpt-form").getForms(true);
			if (!forms) return;
			data.forms = forms;

			wx.showLoading({ title: '头像上传中' });
			let pic = await cloudHelper.transTempPicOne(this.data.formPic, 'user/', '', false);
			data.pic = pic;
			wx.hideLoading();

			let opts = {
				title: '提交中'
			}
			await cloudHelper.callCloudSumbit('passport/edit_base', data, opts).then(res => {
				let callback = () => {
					wx.reLaunch({ url: '../index/my_index' });
				}
				pageHelper.showSuccToast('修改成功', 1500, callback);
			});
		} catch (err) {
			console.error(err);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\edit\my_edit.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"  
	},
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "个人简历"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\edit\my_edit.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l load-project"></view>

<view wx:if="{{isLoad}}" class="main padding-project">  
	<include src="user_form.wxml" />
	<button bindtap="bindSubmitTap" class="btn-base btn-project shadow">修改资料</button>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\edit\my_edit.wxss
--------------------------------------------------
@import "../../../style/skin.wxss"; 
.submit-line {
	width: 100%;
}

.form-group .mobile {
	flex: 1;
	text-align: left;
}

.submit-line {
	width: 100%;
}

.form-group .mobile {
	flex: 1;
	text-align: left;
} 

.form-group .avatar {
	width: 100rpx;
	height: 100rpx;
	border-radius: 10rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\edit\user_form.wxml
--------------------------------------------------
<view class="form-box shadow-project card-project">
	<view class="form-group padding-top-s" wx:if="{{userRegCheck && user.USER_STATUS==8}}">
		<view wx:if="{{!user.USER_CHECK_REASON}}" class="hint-desc text-red"><text class="icon-notice"></text>审核未通过：请修改资料后重新提交</view>
		<view wx:else class="hint-desc text-red"><text class="icon-notice"></text>审核未通过：{{user.USER_CHECK_REASON}}。请修改资料后重新提交</view>
	</view>
	<view class="form-group padding-top-s" wx:elif="{{userRegCheck && user.USER_STATUS==0}}">
		<view class="hint-desc text-orange"><text class="icon-notice"></text>您的注册资料已经提交，请耐心等待审核~</view>
	</view>


	<view class="form-group">
		<view class="title must">姓名</view>
		<input placeholder="填写您的姓名" placeholder-class="phc" model:value="{{formName}}" focus="{{formNameFocus}}" maxlength="30"></input>
	</view>
	<view wx:if="{{formNameFocus}}" class="hint-desc error">{{formNameFocus}}</view>

	<view class="form-group">
		<view class="title must">手机</view>
		<input wx:if="{{!mobileCheck}}" placeholder="填写您的手机号码" placeholder-class="phc" focus="{{formMobileFocus}}" model:value="{{formMobile}}" maxlength="11"></input>

		<block wx:else>
			<view class="mobile">{{formMobile||'未填写'}}</view>
			<button open-type="getPhoneNumber" bindgetphonenumber="bindGetPhoneNumber" class="btn phone-button"><text wx:if="{{!formMobile}}">一键填写手机号</text><text wx:else>一键修改手机号</text></button>
		</block>
	</view>
	<view wx:if="{{formMobileFocus}}" class="hint-desc error">{{formMobileFocus}}</view>

	<button class="clearbtn form-group" style="padding: 1rpx 30rpx;min-height: 150rpx;" open-type="chooseAvatar" bind:chooseavatar="bindPicTap" id="formPic">
		<view class="title must">头像 <text class="text-grey" style="font-size: 24rpx;">(点击上传)</text></view>
		<image wx:if="{{formPic}}" class="avatar loading" mode="aspectFill" src="{{formPic}}"></image>
		<text wx:else class="icon-cameraadd text-grey" style="font-size: 60rpx;"></text>
	</button>
	<view wx:if="{{formPicFocus}}" class="hint-desc error">{{formPicFocus}}</view>

</view>

<view class="form-box shadow-project card-project margin-top-xs">
	<cmpt-form-show id="cmpt-form" mark="cmpt-form" isCacheMatch="{{false}}" fields="{{fields}}" forms="{{formForms}}" isDefMatch="{{isEdit?false:true}}">
	</cmpt-form-show>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\fav\my_fav.js
--------------------------------------------------
const behavior = require('../../../../../comm/behavior/my_fav_bh.js');
const ProjectBiz = require('../../../biz/project_biz.js');

Page({

	behaviors: [behavior],

	onReady: function () { 
		ProjectBiz.initPage(this);
	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\fav\my_fav.json
--------------------------------------------------
{
	"usingComponents": {},
	"enablePullDownRefresh": true,
	"navigationBarTitleText": "我的收藏"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\fav\my_fav.wxml
--------------------------------------------------
<include src="../../../../../tpls/project/my_fav_tpl.wxml" />
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\fav\my_fav.wxss
--------------------------------------------------
@import "../../../../../style/public/article_list.wxss";
@import "../../../style/skin.wxss";  
@import "../../../../../style/project/my_fav_style.wxss";
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\foot\my_foot.js
--------------------------------------------------
const behavior = require('../../../../../comm/behavior/my_foot_bh.js');
const ProjectBiz = require('../../../biz/project_biz.js');

Page({

	behaviors: [behavior],

	onReady: function () { 
		ProjectBiz.initPage(this);
	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\foot\my_foot.json
--------------------------------------------------
{
	"usingComponents": {},
	"enablePullDownRefresh": true,
	"navigationBarTitleText": "历史浏览"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\foot\my_foot.wxml
--------------------------------------------------
<include src="../../../../../tpls/project/my_foot_tpl.wxml" />
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\foot\my_foot.wxss
--------------------------------------------------
@import "../../../../../style/public/article_list.wxss";
@import "../../../style/skin.wxss";  
@import "../../../../../style/project/my_foot_style.wxss";
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\index\my_index.js
--------------------------------------------------
/** 
 * Ver : CCMiniCloud Framework 2.0.1 ALL RIGHTS RESERVED BY wxid_kyh093u96kxb22 (wechat)
 * Date: 2020-10-29 07:48:00 
 */

const cacheHelper = require('../../../../../helper/cache_helper.js');
const pageHelper = require('../../../../../helper/page_helper.js');
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const AdminBiz = require('../../../../../comm/biz/admin_biz.js');
const setting = require('../../../../../setting/setting.js');
const PassportBiz = require('../../../../../comm/biz/passport_biz.js');

Page({
	data: {
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		if (PassportBiz.isLogin()) {
			let user = {};
			user.USER_NAME = PassportBiz.getUserName();
			this.setData({ user });
		}

		ProjectBiz.initPage(this);

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: async function () {
		PassportBiz.loginSilenceMust(this);
		  this._loadUser();

		this._loadMyStat(); 

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	_loadMyStat: async function (e) {

		let opts = {
			title: 'bar'
		}
		let stat = await cloudHelper.callCloudData('activity/my_stat', {}, opts);
		if (!stat) return;

		this.setData({
			stat
		})
	},

	_loadUser: async function (e) {

		let opts = {
			title: 'bar'
		}
		let user = await cloudHelper.callCloudData('passport/my_detail', {}, opts);
		if (!user) {
			this.setData({
				user: null
			});
			return;
		}

		this.setData({
			user
		})
	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadUser();
		await this._loadMyStat();
		wx.stopPullDownRefresh();
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},


	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function () { },

	url: function (e) {
		pageHelper.url(e, this);
	},

	bindSetTap: function (e, skin) {
		let itemList = ['清除缓存', '后台管理'];
		wx.showActionSheet({
			itemList,
			success: async res => {
				let idx = res.tapIndex;
				if (idx == 0) {
					cacheHelper.clear();
					pageHelper.showNoneToast('清除缓存成功');
				}

				if (idx == 1) {
					if (setting.IS_SUB) {
						AdminBiz.adminLogin(this, 'admin', '123456');
					} else {
						wx.reLaunch({
							url: '../../admin/index/login/admin_login',
						});
					}

				}

			},
			fail: function (res) { }
		})
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\index\my_index.json
--------------------------------------------------
{
	"usingComponents": {

	},
	"navigationStyle": "custom",
	"enablePullDownRefresh": true,
	"navigationBarTitleText": "我的"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\index\my_index.wxml
--------------------------------------------------
<view class="main {{skin.IS_SUB?'sub-margin-bottom':''}}">

	<!--top area begin-->
	<view class="upside upside-shadow" bindtap="url" data-url="{{user?'../edit/my_edit':'../reg/my_reg'}}">
		<image mode="aspectFill" lazy-load class="upImg loading" src="../../../images/my.jpg" />
		<view class="user-bar">
			<view class="detail">
				<view class="name text-cut">{{user?user.USER_NAME:'欢迎回来~~~'}}</view>
				<view class="desc">
					<view wx:if="{{user&&user.USER_STATUS==9}}" class="tag small radius bg-purple light">已禁用</view>
					<view wx:elif="{{user&&user.USER_STATUS==0}}" class="tag small radius bg-orange light">已注册，待审核</view>
					<view wx:elif="{{user&&user.USER_STATUS==8}}" class="tag small radius bg-red light">审核未通过，请修改资料</view>
					<view wx:else class="text-cut">{{user?'欢迎回来~~~':'马上注册，使用更多功能'}}</view>
				</view>
			</view>
			<view class="avatar" wx:if="{{!user.USER_PIC}}">
				<image mode="aspectFit" src="../../../images/tabbar/my_cur.png" />
			</view>
			<image wx:else src="{{user.USER_PIC}}" class="avatar loading" mode="aspectFill" />
		</view>
	</view>
	<!--top area end-->

	<view class="activity">
		<view class="inner card-project shadow-project">
			 
			<view class="item-list">
				<view class="item" bindtap="url" data-url="../../activity/my_join_list/activity_my_join_list?status=0">
					<view wx:if="{{isLogin&&stat&&stat.status0Cnt}}" class="num">{{stat.status0Cnt}}</view>
					<image src="../../../images/my/use.png"></image>
					<text>待审核</text>
				</view>
				<view class="item" bindtap="url" data-url="../../activity/my_join_list/activity_my_join_list?status=1">
					<view wx:if="{{isLogin&&stat&&stat.status1Cnt}}" class="num">{{stat.status1Cnt}}</view>
					<image src="../../../images/my/check.png" />
					<text>已录用</text>
				</view>
				<view class="item" bindtap="url" data-url="../../activity/my_join_list/activity_my_join_list?status=99">
					<view wx:if="{{isLogin&&stat&&stat.status99Cnt}}" class="num">{{stat.status99Cnt}}</view>
					<image src="../../../images/my/out.png" />
					<text>未录用</text>
				</view>
				<view class="item" bindtap="url" data-url="../../activity/my_join_list/activity_my_join_list">
					<image src="../../../images/my/all.png" />
					<text>所有申请</text>
				</view>
			</view>
		</view>
	</view>

	<!--down area begin-->
	<view class="down padding-project">

		<!--base begin -->
		<view class="comm-list menu card-project shadow-project">
			<view wx:if="{{user&&user.USER_STATUS!=9}}" class="item arrow" bindtap="url" data-url="../edit/my_edit">
				<view class="content">
					<text class="icon-edit my-icon-project"></text>
					<text class="text-black">修改我的个人简历</text>
				</view>
			</view>

			<view class="item arrow" bindtap="url" data-url="../fav/my_fav">
				<view class="content">
					<text class="icon-favor my-icon-project"></text>
					<text class="text-black">我的收藏</text>
				</view>
			</view>

			<view class="item arrow" bindtap="url" data-url="../foot/my_foot">
				<view class="content">
					<text class="icon-attention my-icon-project"></text>
					<text class="text-black">浏览足迹</text>
				</view>
			</view>


			<view wx:if="{{skin.IS_SUB}}" class="item arrow" bindtap="bindSetTap">
				<view class="content">
					<text class="icon-settings my-icon-project"></text>
					<text class="text-red text-bold ">系统后台管理<text class="text-grey text-normal">（点击使用）</text></text>
				</view>
			</view>

			<view class="item arrow" bindtap="url" data-url="../../about/index/about_index?key=SETUP_CONTENT_ABOUT">
				<view class="content">
					<text class="icon-service my-icon-project"></text>
					<text class="text-black">关于我们</text>
				</view>
			</view>

			<view wx:if="{{skin.IS_SUB}}" class="item arrow" bindtap="url" data-url="/pages/home/about/home_about">
				<view class="content">
					<text class="icon-mobile my-icon-project"></text>
					<text class="text-orange">联系作者了解更多详情</text>
				</view>
			</view>

			<view wx:if="{{!skin.IS_SUB}}" class="item arrow" bindtap="bindSetTap">
				<view class="content">
					<text class="icon-settings my-icon-project"></text>
					<text class="text-black">设置</text>
				</view>
			</view>

		</view>
		<!--sys end -->

	</view>
	<!--down area end-->

</view>
<view style="height:100rpx"></view>



<block wx:if="{{skin.IS_SUB}}">
	<import src="../../tpls/menu_tpl.wxml" />
	<template is="menuTpl" data="{{curMenu:'my_index',returnHome:false}}" />
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\index\my_index.wxss
--------------------------------------------------
@import "../../../style/skin.wxss";



.main {
	padding: 0;
}

.main .upside {
	background-color: rgba(75, 148, 231, 0.1);
	height: 450rpx;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	position: relative;
	overflow: hidden;
	padding-top: 30rpx;
}

.main .upside .upImg {
	height: inherit;
	width: 100%;
	position: absolute;
	top: 0;
	left: 0;
}

.main .upside .user-bar {
	width: 100%;
	display: flex;
	justify-content: space-between;
	align-items: flex-start;
	padding: 0 60rpx;
	z-index: 9999;
}

.main .upside .user-bar .avatar {
	height: 120rpx;
	width: 120rpx;
	border: 2rpx solid #fff;
	font-size: 80rpx;
	border-radius: 50%;
	background-color: rgba(255, 255, 255, .8);
	display: flex;
	align-items: center;
	justify-content: center;
}

.main .upside .user-bar .avatar image {
	height: 70rpx;
	width: 70rpx;
}

.main .upside .user-bar .detail {
	width: 500rpx;
	margin-left: 0rpx;
	margin-right: 40rpx;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;
	color: #000;
	box-sizing: border-box;
}

.main .upside .user-bar .detail .name {
	width: 100%;
	font-size: 36rpx;
	font-weight: bold;
	color: #000;
}

.main .upside .user-bar .detail .desc {
	width: 100%;
	font-size: 26rpx;
	margin-top: 15rpx;
	color: #333;
}

.activity {
	margin-bottom: 20rpx;
	width: 100%;
	display: flex;
	padding: 0 20rpx;
	margin-top: -80rpx;
	position: relative;
}

.activity .inner {
	width: 100%;
	background-color: #fff;
	position: relative;
	display: flex;
	flex-direction: column;
	justify-content: space-around;
	padding: 40rpx 0rpx;
}

.activity .title {
	width: 100%;
	padding: 0 30rpx 25rpx 50rpx;
	font-size: 30rpx;
	margin-bottom: 25rpx;
	display: flex;
	align-items: center;
	justify-content: space-between;
}

.activity .title .right {
	font-size: 24rpx;
	color: #999;
}

.activity .item-list {
	width: 100%;
	display: flex;
	padding: 0 10rpx;
	justify-content: space-between;
}

.activity .item {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	position: relative;
	width: 25%;
}

.activity .item .num {
	padding: 2rpx 8rpx;
	border-radius: 30%;
	position: absolute;
	top: 0;
	right: 36rpx;
	font-size: 20rpx;
	z-index: 9;
	background-color: #f1685e;
	color: #fff; 
}

.activity .item image {
	width: 52rpx;
	height: 52rpx;
	margin-bottom: 20rpx;
	position: relative;
}

.activity .item text {
	font-size: 26rpx;
	color:#666;
}

.activity .item:last-child {
	border-left: 1rpx solid #eee;
}

.main .down {
	box-sizing: border-box;
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	padding: 10rpx 20rpx 20rpx !important;
	position: relative;
}


.main .down .data {
	display: flex;
	justify-content: space-between;
	align-items: center;
	height: 150rpx;
	padding: 0rpx 40rpx 0rpx 40rpx;
	width: 100%;
	background-color: #fff;
}

.main .down .data view {
	width: 150rpx;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.main .down .data view .num {
	font-size: 32rpx;
	font-weight: bold;
}

.main .down .data view .txt {
	font-size: 24rpx;
	color: #aaa;
}

.main .comm-list .item.arrow::before,
.main .comm-list .item .content .item-icon {
	color: #0E9489;
}

.main .down .today {
	width: 100%;
	padding: 30rpx 30rpx 20rpx;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	background-color: #fff;
}

.main .down .today .title {
	width: 100%;
	text-align: left;
	font-size: 32rpx;
	font-weight: bold;
	line-height: 1.2;
	margin-bottom: 30rpx;
}

.main .down .today .list {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: flex-start;
}

.main .down .today .list .item {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;
	padding: 15rpx 0;
	border-bottom: 1rpx dashed #ccc;
}

.main .down .today .list .item:last-child {
	margin-bottom: 0rpx;
	border: 0;
}

.main .down .today .list .item .time {
	font-size: 28rpx;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: space-between;
	line-height: 2;
	font-weight: bold;
}

.main .down .today .list .item .time .status {
	font-weight: normal;
	font-size: 27rpx;
}

.main .down .today .list .item .project {
	color: #666;
	font-size: 24rpx;
	width: 100%;
	text-align: left;
}

.main .site-footer {
	width: 100%;
	align-self: flex-end;
}

.main .upside-shadow {
	box-shadow: unset
}

.down .comm-list.menu.card-project {
	border-radius: 20rpx !important;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\reg\my_reg.js
--------------------------------------------------
const pageHelper = require('../../../../../helper/page_helper.js');
const helper = require('../../../../../helper/helper.js');
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const validate = require('../../../../../helper/validate.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const projectSetting = require('../../../public/project_setting.js');
const setting = require('../../../../../setting/setting.js');
const PassportBiz = require('../../../../../comm/biz/passport_biz.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
		isEdit: false,

		mobileCheck: setting.MOBILE_CHECK
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);

		if (options && options.retUrl)
			this.data.retUrl = decodeURIComponent(options.retUrl);

		await this._loadDetail();
	},

	_loadDetail: async function (e) {
		let opts = {
			title: 'bar'
		}
		let user = await cloudHelper.callCloudData('passport/my_detail', {}, opts);
		if (user) {
			return wx.redirectTo({ url: '../index/my_index' });
		}

		this.setData({
			isLoad: true,

			fields: projectSetting.USER_FIELDS,

			formName: '',
			formMobile: '',
			formPic: '',
			formForms: []
		});
	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	bindGetPhoneNumber: async function (e) {
		PassportBiz.getPhone(e, this);
	},

	bindPicTap: function (e) {  
		this.setData({
			formPic: e.detail.avatarUrl
		})
	},

	bindSubmitTap: async function (e) {
		try {
			let data = this.data;

			// 数据校验 
			data = validate.check(data, projectSetting.USER_CHECK_FORM, this);
			if (!data) return;

			let forms = this.selectComponent("#cmpt-form").getForms(true);
			if (!forms) return;
			data.forms = forms;

			wx.showLoading({ title: '头像上传中' });
			let pic = await cloudHelper.transTempPicOne(this.data.formPic, 'user/', '', false);
			data.pic = pic;
			wx.hideLoading();

			data.status = projectSetting.USER_REG_CHECK ? 0 : 1;

			let opts = {
				title: '提交中'
			}
			await cloudHelper.callCloudSumbit('passport/register', data, opts).then(result => {
				if (result && helper.isDefined(result.data.token) && result.data.token) {

					// 用户需要审核，不能登录
					if (!projectSetting.USER_REG_CHECK) PassportBiz.setToken(result.data.token);

					let callback = () => {
						if (this.data.retUrl == 'back')
							wx.navigateBack();
						else if (this.data.retUrl)
							wx.redirectTo({
								url: this.data.retUrl,
							})
						else
							wx.reLaunch({ url: '../index/my_index' });
					}

					if (projectSetting.USER_REG_CHECK)
						pageHelper.showModal('注册完成，等待系统审核', '温馨提示', callback);
					else
						pageHelper.showSuccToast('注册成功', 1500, callback);
				}
			});
		} catch (err) {
			console.error(err);
		}
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\reg\my_reg.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-form-show": "/cmpts/public/form/form_show/form_show_cmpt"  
	},
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "注册"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\reg\my_reg.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l load-project"></view>

<view wx:if="{{isLoad}}" class="main padding-project">
	<include src="../edit/user_form.wxml" /> 
	<button bindtap="bindSubmitTap" class="btn-base btn-project shadow">提交注册</button>
</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\my\reg\my_reg.wxss
--------------------------------------------------
@import "../../../style/skin.wxss"; 
.submit-line {
	width: 100%;
}

.form-group .mobile {
	flex: 1;
	text-align: left;
}

.submit-line {
	width: 100%;
}

.form-group .mobile {
	flex: 1;
	text-align: left;
	font-size:28rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\cate1\news_cate1.js
--------------------------------------------------
let behavior = require('../../../../../comm/behavior/news_index_bh.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const NewsBiz = require('../../../biz/news_biz.js');


Page({
	behaviors: [behavior],

	onLoad: function (options) {
		ProjectBiz.initPage(this);
		this._setCate(NewsBiz.getCateList(), options, 2);

	},
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\cate1\news_cate1.json
--------------------------------------------------
{
	"usingComponents": { 
	}, 
	"disableScroll": true, 
	"navigationBarTitleText": "资讯"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\cate1\news_cate1.wxml
--------------------------------------------------
<import src="../../../../../tpls/project/news_index_tpl.wxml" />
<template is="newsIndexTpl" data="{{showUp:false,upImg:'',dataList,isLoad,isLoad,_params,search:search||'',listMode:listMode||'leftbig1',isTotalMenu:true,sortMenus,sortItems}}" />

<block wx:if="{{skin.IS_SUB}}">
	<import src="../../tpls/menu_tpl.wxml" />
	<template is="menuTpl" data="{{curMenu:'news_cate1',returnHome:false}}" />
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\cate1\news_cate1.wxss
--------------------------------------------------
@import "../../../../../style/public/comm_box_list.wxss";
@import "../../../style/skin.wxss"; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\detail\news_detail.js
--------------------------------------------------
const cloudHelper = require('../../../../../helper/cloud_helper.js');
const pageHelper = require('../../../../../helper/page_helper.js');
const ProjectBiz = require('../../../biz/project_biz.js');

Page({
	/**
	 * 页面的初始数据
	 */
	data: {
		isLoad: false,
	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad: async function (options) {
		ProjectBiz.initPage(this);

		if (!pageHelper.getOptions(this, options)) return;

		this._loadDetail();

	},

	_loadDetail: async function () {
		let id = this.data.id;
		if (!id) return;

		let params = {
			id,
		};
		let opt = {
			title: 'bar'
		};
		let news = await cloudHelper.callCloudData('news/view', params, opt);
		if (!news) {
			this.setData({
				isLoad: null
			})
			return;
		}

		this.setData({
			isLoad: true,
			news,
		});

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady: function () { },

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow: function () {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide: function () {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload: function () {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh: async function () {
		await this._loadDetail();
		wx.stopPullDownRefresh();
	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom: function () {

	},

	url: function (e) {
		pageHelper.url(e, this);
	},

	onPageScroll: function (e) {
		// 回页首按钮
		pageHelper.showTopBtn(e, this);

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage: function (res) {
		return {
			title: this.data.news.NEWS_TITLE,
			imageUrl: this.data.news.NEWS_PIC[0]
		} 
	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\detail\news_detail.json
--------------------------------------------------
{
	"usingComponents": { 
		"cmpt-detail": "/cmpts/biz/detail/detail_cmpt"
	},
	"enablePullDownRefresh": true, 
	"navigationBarTitleText": "详细内容"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\detail\news_detail.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l load-project"></view>

<block wx:if="{{isLoad}}">
	<view class="main padding-project">
	<view class="article-box margin-top-xs">
		<!-- article content begin -->
		<view class="article card-project shadow-project">
			<view class="title"><text user-select="true">{{news.NEWS_TITLE}}</text></view>
				<view class="time"> {{news.NEWS_ADD_TIME}} {{news.NEWS_CATE_NAME}} </view> 


			<block wx:for="{{news.NEWS_CONTENT}}" wx:key="key">
				<view class="content" wx:if="{{item.type=='text'}}">
					<text user-select="{{true}}">{{item.val}}</text>
				</view>

				<view class="pics" wx:if="{{item.type=='img'}}">
					<image bindtap="url" data-type='img' data-url="{{item.val}}" show-menu-by-longpress="{{true}}" class="loading" mode='widthFix' lazy-load="true" src="{{item.val}}">
					</image>
				</view>
			</block>
			<!-- article content end -->

		</view>
		<!-- article content end -->

		</view>

	</view>

	<cmpt-detail mode="mode1" topBtnShow="{{topBtnShow}}" oid="{{news._id}}" cate="{{news.NEWS_CATE_NAME}}" title="{{news.NEWS_TITLE}}" cover="{{news.NEWS_PIC[0]}}" qr="{{news.NEWS_QR}}" desc="查看详情"  bg="{{skin.PROJECT_COLOR}}"></cmpt-detail>
</block>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\detail\news_detail.wxss
--------------------------------------------------
@import "../../../../../style/public/detail.wxss"; 
@import "../../../style/skin.wxss"; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\index\news_index.js
--------------------------------------------------
let behavior = require('../../../../../comm/behavior/news_index_bh.js');
const ProjectBiz = require('../../../biz/project_biz.js');
const NewsBiz = require('../../../biz/news_biz.js');

Page({

	behaviors: [behavior], 

	onLoad: function (options) {
		ProjectBiz.initPage(this); 
		this._setCate(NewsBiz.getCateList(), options, null);  
	},


})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\index\news_index.json
--------------------------------------------------
{
	"usingComponents": { 
	}, 
	"disableScroll": true, 
	"navigationBarTitleText": "公告"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\index\news_index.wxml
--------------------------------------------------
<import src="../../../../../tpls/project/news_index_tpl.wxml" />
<template is="newsIndexTpl" data="{{showUp:false,upImg:'',dataList,isLoad,isLoad,_params,search:search||'',listMode:listMode||'leftbig1',isTotalMenu:true,sortMenus,sortItems}}" />

<block wx:if="{{skin.IS_SUB}}">
	<import src="../../tpls/menu_tpl.wxml" />
	<template is="menuTpl" data="{{curMenu:'news_index',returnHome:false}}" />
</block>

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\news\index\news_index.wxss
--------------------------------------------------
@import "../../../../../style/public/comm_box_list.wxss";
@import "../../../style/skin.wxss"; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\search\search.js
--------------------------------------------------
const behavior = require('../../../../comm/behavior/search_bh.js');
const ProjectBiz = require('../../biz/project_biz.js');
const pageHelper = require('../../../../helper/page_helper.js');

Page({

	behaviors: [behavior],

	onReady: function () {
		ProjectBiz.initPage(this);


		let curPage = pageHelper.getPrevPage(1);
		if (!curPage) return;
		if (curPage.options && curPage.options.source == 'admin') {
			wx.setNavigationBarColor({ //管理端顶部
				backgroundColor: '#2499f2',
				frontColor: '#ffffff',
			});
		}

	},

})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\search\search.json
--------------------------------------------------
{
	"usingComponents": { 
	},  
	"navigationBarTitleText": "搜索"
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\search\search.wxml
--------------------------------------------------
<include src="../../../../tpls/project/search_tpl.wxml" />
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\search\search.wxss
--------------------------------------------------
@import "../../style/skin.wxss"; 
@import "../../../../style/project/search_style.wxss";
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\test1\test1.js
--------------------------------------------------
// projects/jobpart/pages/test1/test1.js
Page({

	/**
	 * 页面的初始数据
	 */
	data: {

	},

	/**
	 * 生命周期函数--监听页面加载
	 */
	onLoad(options) {

	},

	/**
	 * 生命周期函数--监听页面初次渲染完成
	 */
	onReady() {

	},

	/**
	 * 生命周期函数--监听页面显示
	 */
	onShow() {

	},

	/**
	 * 生命周期函数--监听页面隐藏
	 */
	onHide() {

	},

	/**
	 * 生命周期函数--监听页面卸载
	 */
	onUnload() {

	},

	/**
	 * 页面相关事件处理函数--监听用户下拉动作
	 */
	onPullDownRefresh() {

	},

	/**
	 * 页面上拉触底事件的处理函数
	 */
	onReachBottom() {

	},

	/**
	 * 用户点击右上角分享
	 */
	onShareAppMessage() {

	}
})
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\test1\test1.wxml
--------------------------------------------------
<!--projects/jobpart/pages/test1/test1.wxml-->
<text>projects/jobpart/pages/test1/test1.wxml</text>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\pages\tpls\menu_tpl.wxml
--------------------------------------------------
<template name="menuTpl"> 
	<view class="tab-bar" >   
		<view wx:if="{{returnHome}}" class="tab-bar-home" bindtap="url" data-type="relaunch"
			data-url="/pages/home/index/home_index">
			<text class="tab-bar-home-text icon-homefill text-grey"></text>
		</view>

		<view class="tab-bar-border"></view>
		<view class="tab-bar-item" bindtap="url" data-type="relaunch" data-url="/projects/jobpart/pages/default/index/default_index">
			<image class="tab-icon" src="/projects/jobpart/images/tabbar/home{{curMenu=='home_index'?'_cur':''}}.png"></image>
			<view class="tab-text {{curMenu=='home_index'?'menu-project':''}}">首页</view>
		</view>

		<view class="tab-bar-item" bindtap="url" data-type="relaunch" data-url="/projects/jobpart/pages/news/index/news_index">
			<image class="tab-icon" src="/projects/jobpart/images/tabbar/news{{curMenu=='news_index'?'_cur':''}}.png"></image>
			<view class="tab-text {{curMenu=='news_index'?'menu-project':''}}">公告</view>
		</view>

		<view  class="tab-bar-item" bindtap="url" data-type="relaunch" data-url="/projects/jobpart/pages/activity/index/activity_index">
			<image class="tab-icon" src="/projects/jobpart/images/tabbar/enroll{{curMenu=='activity_index'?'_cur':''}}.png"></image>
			<view class="tab-text {{curMenu=='activity_index'?'menu-project':''}}">职位</view>
		</view> 

		<view   class="tab-bar-item" bindtap="url" data-type="relaunch" data-url="/projects/jobpart/pages/cate/index/cate_index">
			<image class="tab-icon" src="/projects/jobpart/images/tabbar/cate{{curMenu=='cate_index'?'_cur':''}}.png"></image>
			<view class="tab-text {{curMenu=='cate_index'?'menu-project':''}}">企业库</view>
		</view> 
	 
		<view class="tab-bar-item" bindtap="url" data-type="relaunch" data-url="/projects/jobpart/pages/my/index/my_index">
			<image class="tab-icon" src="/projects/jobpart/images/tabbar/my{{curMenu=='my_index'?'_cur':''}}.png"></image>
			<view class="tab-text {{curMenu=='my_index'?'menu-project':''}}">我的</view>
		</view>


	</view>
</template>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\public\project_setting.js
--------------------------------------------------
const CATE_STAR = ['5星推荐', '4星推荐', '3星推荐', '2星推荐', '1星推荐'];
const CATE_SIZE = ['大型', '中型', '小型', '微型'];
const CATE_TYPE = ['央企', '国企', '民企', '个体户', '政府机关', '事业单位', '外资', '合资', '其他'];
const CATE_TRADE = ['互联网/计算机', '电子/电气/通信', '产品', '客服/运营', '销售/商业', '人力/行政/法务', '财务/审计/税务', '生产制造', '零售/生活服务', '餐饮', '酒店/旅游', '教育培训', '设计', '物业/房地产/建筑', '直播/影视/传媒/娱乐', '市场/公关/广告', '物流/仓储/司机', '采购/贸易', '汽车', '医疗健康', '金融', '咨询/翻译/法律', '能源/环保/农业', '高级管理', '其他'];
const ACTIVITY_PAY = ['日结', '周结', '月结', '一次性结清'];
const ACTIVITY_BIZ = ['群演', '地推', '厨工', '服务生', '杂工', '老师', '直播', '主持', '业务拓展', '普工', '保洁', '保安', '销售', '骑手', '模特', '客服', '店员', '其他'];

module.exports = { //jobpart
	PROJECT_COLOR: '#FFDD52',
	NAV_COLOR: '#000000',
	NAV_BG: '#FFDD52',

	CATE_STAR: CATE_STAR,
	CATE_SIZE: CATE_SIZE,
	CATE_TYPE: CATE_TYPE,
	CATE_TRADE: CATE_TRADE,

	ACTIVITY_PAY: ACTIVITY_PAY,
	ACTIVITY_BIZ: ACTIVITY_BIZ,

	// setup
	SETUP_CONTENT_ITEMS: [
		{ title: '关于我们', key: 'SETUP_CONTENT_ABOUT' },
	],

	// 用户
	USER_REG_CHECK: false,
	USER_FIELDS: [
		{ mark: 'sex', title: '性别', type: 'select', selectOptions: ['男', '女'], must: true },
		{ mark: 'birth', title: '生日', type: 'date', must: true },
		{ mark: 'high', title: '身高(cm)', type: 'int', must: true },
		{ mark: 'weight', title: '体重(kg)', type: 'int', must: true },
		{ mark: 'from', title: '籍贯', type: 'text', must: true },
		{ mark: 'marrie', title: '婚姻状况', type: 'select', selectOptions: ['未婚', '已婚'], must: true },
		{ mark: 'edu', title: '学历', type: 'select', selectOptions: ['初中及以下', '高中', '中专', '大专', '本科', '硕士', '博士', '其他'], must: true },
		{ mark: 'work', title: '所属群体', type: 'select', selectOptions: ['自由自由者', '学生', '宝妈', '待业者', '退休人员', '上班族', '其他'], must: true },
		{ mark: 'worktime', title: '参加工作时间', type: 'month', must: true },
		{ mark: 'skill', title: '自我介绍', type: 'textarea', must: false },
		{
			mark: 'jinli', title: '工作经历', type: 'rows',
			ext: {
				titleName: '工作经历',
				hasDetail: false,
				hasVal: false,
				maxCnt: 10,
				minCnt: 0,
				checkDetail: true,
				hasPic: false,
				checkPic: false,
				titleMode: 'textarea'
			},
			def: [],
			desc: '描述以往的工作经验，相关行业录取加分哦~',
			must: false
		},
	],
	USER_CHECK_FORM: {
		name: 'formName|must|string|min:1|max:30|name=姓名',
		mobile: 'formMobile|must|mobile|name=手机',
		pic: 'formPic|must|string|name=头像',
		forms: 'formForms|array'
	},


	NEWS_NAME: '通知公告',
	NEWS_CATE: [
		{ id: 1, title: '通知公告', style: 'leftbig1' },

	],
	NEWS_FIELDS: [
	],

	ACTIVITY_NAME: '职位',
	ACTIVITY_CATE: [
		{ id: 1, title: '职位' },
	],
	ACTIVITY_FIELDS: [
		{ mark: 'type', title: '类型', type: 'select', selectOptions: ['临时兼职', '固定兼职'], must: true },
		{ mark: 'pay', title: '结算方式', type: 'select', selectOptions: ACTIVITY_PAY, must: true },
		{ mark: 'biz', title: '岗位分类', type: 'select', selectOptions: ACTIVITY_BIZ, must: true },
		{ mark: 'date', title: '工作日期', type: 'text', must: true },
		{ mark: 'time', title: '工作时间', type: 'text', must: true },
		{ mark: 'person', title: '人员要求', type: 'textarea', must: true },
		{ mark: 'money', title: '工资待遇', type: 'text', def: '¥', must: true },
		{ mark: 'desc', title: '详细说明', type: 'textarea', must: true },
		{
			mark: 'tag', title: '特征标签', type: 'rows',
			ext: {
				titleName: '标签',
				hasDetail: false,
				hasVal: false,
				maxCnt: 30,
				minCnt: 0,
				checkDetail: true,
				hasPic: false,
				checkPic: false,
				titleMode: 'input'
			},
			def: [],
			must: false
		},

	],
	ACTIVITY_JOIN_FIELDS: [

	],

	CATE_NAME: '企业',
	CATE_FIELDS: [
		{ mark: 'cover', title: '封面图', type: 'image', min: 1, max: 1, must: true },
		{ mark: 'type', title: '性质', type: 'select', selectOptions: CATE_TYPE, must: true },
		{ mark: 'size', title: '规模', type: 'select', selectOptions: CATE_SIZE, must: true },
		{ mark: 'trade', title: '行业', type: 'select', selectOptions: CATE_TRADE, must: true },
		{ mark: 'star', title: '推荐指数', type: 'select', selectOptions: CATE_STAR, must: true },
		{ mark: 'content', title: '企业详情', type: 'content', must: true },
	],



}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\projects\jobpart\style\skin.wxss
--------------------------------------------------
page {
	background-color: #f8f8f8;

	--projectColor: #FFDD52;
	--projectColorLight: #FFDD52;
	--projectCompareColor: #FFDD52;

	/*#### 父组件日历颜色定义*/
	/* 整体颜色 */
	--calendarPageColor: #fff;
	/* 加重颜色*/
	--calendarMainColor: #FFDD52 !important;
	/* 加重的亮颜色 用于选中日期的数据小圆点 */
	--calendarLightColor: #FFDD52;
}

.bg-admin {
	background-color: #2499f2;
}

.text-project {
	color: #333 !important;
}

.bg-project {
	background-color: var(--projectColor) !important;
	color: #333 !important;
}

.bg-project.light {
	color: var(--projectColor) !important;
	background-color: var(--projectColorLight) !important;
}

.border-project {
	border-color: var(--projectColor) !important;
}

.menu-project {
	color: #000 !important;
}

.tabs .tab {
	font-size: 28rpx !important;
}

.tabs .cur {
	color: #333 !important;
}

.tabs .tab-menu.cur:after {
	background-color: var(--projectColor) !important;
}

.load-project {
	color: #8799a3 !important;
}

.padding-project {
	padding-left: 25rpx !important;
	padding-right: 25rpx !important;
}

.btn-project {
	line-height: 80rpx;
	height: 80rpx;
	color: #000;
	background-color: var(--projectColor);
}

.phone-button {
	color: var(--projectColor) !important;
}

.shadow-project {
	box-shadow: 6rpx 6rpx 20rpx rgba(216, 220, 223, 0.5);
}

.card-project,
.main .list .item.card-project,
.down .comm-list.menu.card-project,
.article-box .article.card-project,
.text-pic-list-box .item.card-project,
.info-list-box .item.card-project,
.main-content .content.card-project,
.meet-list-box .item.card-project,
.form-box.card-project,
.bar .search-form {
	border-radius: 20rpx !important;
}

.up-project {
	width: 100%;
	padding: 0;
	margin: 0;
}

.up-project image {
	padding: 0;
	width: 100%;
	margin: 0;
}

.my-icon-project {
	color: #333 !important;
	font-size: 34rpx;
}


.meet-list-box {
	padding: 20rpx 30rpx 30rpx 30rpx;
}

.title-project {
	color: var(--projectTextColor) !important;
}

.bar .search-form {
	background-color: #f6f7fb;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\setting\setting.js
--------------------------------------------------
﻿module.exports = {
	//### 环境相关 
	CLOUD_ID: 'partjob-1g5flu5ebe7aba48', //云服务id ,本地测试环境 

	// #### 版本信息 
	VER: 'build 2023.10.01',
	COMPANY: '联系作者',

	// #### 系统参数 
	IS_SUB: false, //分包模式 
	IS_DEMO: false, //是否演示版  

	MOBILE_CHECK: false, //手机号码是否真实性校验


	//#################     
	IMG_UPLOAD_SIZE: 20, //图片上传大小M兆    

	// #### 缓存相关
	CACHE_IS_LIST: true, //列表是否缓存
	CACHE_LIST_TIME: 60 * 30, //列表缓存时间秒    

}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\animation.wxss
--------------------------------------------------
 

/* css 滤镜 控制黑白底色gif的 */
.gif-black{  
	mix-blend-mode: screen;  
  }
  .gif-white{  
	mix-blend-mode: multiply; 
  }
  
  
  /* Animation css */
  [class*=animation-] {
	  animation-duration: .5s;
	  animation-timing-function: ease-out;
	  animation-fill-mode: both
  }
  
  .animation-fade {
	  animation-name: fade;
	  animation-duration: .8s;
	  animation-timing-function: linear
  }
  
  .animation-scale-up {
	  animation-name: scale-up
  }
  
  .animation-scale-down {
	  animation-name: scale-down
  }
  
  .animation-slide-top {
	  animation-name: slide-top
  }
  
  .animation-slide-bottom {
	  animation-name: slide-bottom
  }
  
  .animation-slide-left {
	  animation-name: slide-left
  }
  
  .animation-slide-right {
	  animation-name: slide-right
  }
  
  .animation-shake {
	  animation-name: shake
  }
  
  .animation-reverse {
	  animation-direction: reverse
  }
  
  @keyframes fade {
	  0% {
		  opacity: 0
	  }
  
	  100% {
		  opacity: 1
	  }
  }
  
  @keyframes scale-up {
	  0% {
		  opacity: 0;
		  transform: scale(.2)
	  }
  
	  100% {
		  opacity: 1;
		  transform: scale(1)
	  }
  }
  
  @keyframes scale-down {
	  0% {
		  opacity: 0;
		  transform: scale(1.8)
	  }
  
	  100% {
		  opacity: 1;
		  transform: scale(1)
	  }
  }
  
  @keyframes slide-top {
	  0% {
		  opacity: 0;
		  transform: translateY(-100%)
	  }
  
	  100% {
		  opacity: 1;
		  transform: translateY(0)
	  }
  }
  
  @keyframes slide-bottom {
	  0% {
		  opacity: 0;
		  transform: translateY(100%)
	  }
  
	  100% {
		  opacity: 1;
		  transform: translateY(0)
	  }
  }
  
  @keyframes shake {
  
	  0%,
	  100% {
		  transform: translateX(0)
	  }
  
	  10% {
		  transform: translateX(-9px)
	  }
  
	  20% {
		  transform: translateX(8px)
	  }
  
	  30% {
		  transform: translateX(-7px)
	  }
  
	  40% {
		  transform: translateX(6px)
	  }
  
	  50% {
		  transform: translateX(-5px)
	  }
  
	  60% {
		  transform: translateX(4px)
	  }
  
	  70% {
		  transform: translateX(-3px)
	  }
  
	  80% {
		  transform: translateX(2px)
	  }
  
	  90% {
		  transform: translateX(-1px)
	  }
  }
  
  @keyframes slide-left {
	  0% {
		  opacity: 0;
		  transform: translateX(-100%)
	  }
  
	  100% {
		  opacity: 1;
		  transform: translateX(0)
	  }
  }
  
  @keyframes slide-right {
	  0% {
		  opacity: 0;
		  transform: translateX(100%)
	  }
  
	  100% {
		  opacity: 1;
		  transform: translateX(0)
	  }
  }
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\avatar.wxss
--------------------------------------------------

/* ==================
          头像
 ==================== */ 
 .avatar {
	font-variant: small-caps;
	margin: 0;
	padding: 0;
	display: inline-flex;
	text-align: center;
	justify-content: center;
	align-items: center; 
	color: var(--white);
	white-space: nowrap;
	position: relative;
	width: 64rpx;
	height: 64rpx;
	background-size: cover;
	background-position: center;
	vertical-align: middle;
	font-size: 1.5em;
}

.avatar:not([class*="bg-"]) {
	background-color: #ccc;
}

.avatar.xs {
	width: 32rpx;
	height: 32rpx;
	font-size: 1em;
}

.avatar.small {
	width: 48rpx;
	height: 48rpx;
	font-size: 1em;
}

.avatar.large {
	width: 96rpx;
	height: 96rpx;
	font-size: 2em;
}

.avatar.xl {
	width: 128rpx;
	height: 128rpx;
	font-size: 2.5em;
}

.avatar .avatar-text {
	font-size: 0.4em;
}

.avatar-group {
	direction: rtl;
	unicode-bidi: bidi-override;
	padding: 0 10rpx 0 40rpx;
	display: inline-block;
}

.avatar-group .avatar {
	margin-left: -30rpx;
	border: 4rpx solid var(--ghostWhite);
	vertical-align: middle;
}

.avatar-group .avatar.small {
	margin-left: -20rpx;
	border: 1rpx solid var(--ghostWhite);
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\background.wxss
--------------------------------------------------

/* ==================
          背景
 ==================== */

 .bg-red {
	background-color: var(--red)!important;
	color: var(--white)!important;
}

.bg-orange {
	background-color: var(--orange)!important;
	color: var(--white)!important;
}

.bg-yellow {
	background-color: var(--yellow)!important;
	color: var(--black)!important;
}

.bg-olive {
	background-color: var(--olive)!important;
	color: var(--white)!important;
}

.bg-green {
	background-color: var(--green)!important;
	color: var(--white)!important;
}

.bg-darkgreen {
	background-color: var(--darkgreen)!important;
	color: var(--white)!important;
}

.bg-cyan {
	background-color: var(--cyan)!important;
	color: var(--white)!important;
}

.bg-blue {
	background-color: var(--blue)!important;
	color: var(--white)!important;
}

.bg-purple {
	background-color: var(--purple)!important;
	color: var(--white)!important;
}

.bg-mauve {
	background-color: var(--mauve)!important;
	color: var(--white)!important;
}

.bg-pink {
	background-color: var(--pink)!important;
	color: var(--white)!important;
}

.bg-brown {
	background-color: var(--brown)!important;
	color: var(--white)!important;
}

.bg-grey {
	background-color: var(--grey)!important;
	color: var(--white)!important;
}

.bg-gray {
	background-color: #f0f0f0!important;
	color: var(--black)!important;
}

.bg-black {
	background-color: var(--black)!important;
	color: var(--white)!important;
}

.bg-white {
	background-color: var(--white)!important;
	color: var(--darkGray)!important;
}

.bg-shadeTop {
	background-image: linear-gradient(rgba(0, 0, 0, 1), rgba(0, 0, 0, 0.01))!important;
	color: var(--white)!important;
}

.bg-shadeBottom {
	background-image: linear-gradient(rgba(0, 0, 0, 0.01), rgba(0, 0, 0, 1))!important;
	color: var(--white)!important;
}

.bg-red.light {
	color: var(--red)!important;
	background-color: var(--redLight)!important;
}

.bg-orange.light {
	color: var(--orange)!important;
	background-color: var(--orangeLight)!important;
}

.bg-yellow.light {
	color: var(--yellow)!important;
	background-color: var(--yellowLight)!important;
}

.bg-olive.light {
	color: var(--olive)!important;
	background-color: var(--oliveLight)!important;
}

.bg-green.light {
	color: var(--green)!important;
	background-color: var(--greenLight)!important;
}

.bg-cyan.light {
	color: var(--cyan)!important;
	background-color: var(--cyanLight)!important;
}

.bg-blue.light {
	color: var(--blue)!important;
	background-color: var(--blueLight)!important;
}

.bg-purple.light {
	color: var(--purple)!important;
	background-color: var(--purpleLight)!important;
}

.bg-mauve.light {
	color: var(--mauve)!important;
	background-color: var(--mauveLight)!important;
}

.bg-pink.light {
	color: var(--pink)!important;
	background-color: var(--pinkLight)!important;
}

.bg-brown.light {
	color: var(--brown)!important;
	background-color: var(--brownLight)!important;
}

.bg-grey.light {
	color: var(--grey)!important;
	background-color: var(--greyLight)!important;
}

.bg-gradual-red {
	background-image: var(--gradualRed)!important;
	color: var(--white)!important;
}

.bg-gradual-orange {
	background-image: var(--gradualOrange)!important;
	color: var(--white)!important;
}

.bg-gradual-green {
	background-image: var(--gradualGreen)!important;
	color: var(--white)!important;
}

.bg-gradual-purple {
	background-image: var(--gradualPurple)!important;
	color: var(--white)!important;
}

.bg-gradual-pink {
	background-image: var(--gradualPink)!important;
	color: var(--white)!important;
}

.bg-gradual-blue {
	background-image: var(--gradualBlue)!important;
	color: var(--white)!important;
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\bar.wxss
--------------------------------------------------

/* ==================
          操作条
 ==================== */

 .bar {
	display: flex;
	position: relative;
	align-items: center;
	min-height: 100rpx;
	justify-content: space-between;
}

.bar .action {
	display: flex;
	align-items: center;
	height: 100%;
	justify-content: center;
	max-width: 100%;
}


.bar .content {
	position: absolute;
	text-align: center;
	width: calc(100% - 340rpx);
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
	margin: auto;
	height: 60rpx;
	font-size: 32rpx;
	line-height: 60rpx;
	cursor: none;
	pointer-events: none;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}

.bar.ios .content {
	bottom: 7px;
	height: 30px;
	font-size: 32rpx;
	line-height: 30px;
}

.bar .action:first-child {
    margin-left: 30rpx;
    font-size: 30rpx;
}

.bar .action:first-child>text[class*="icon-"] {
	margin-left: -0.3em;
	margin-right: 0.3em;
}


.bar .action:last-child {
    margin-right: 30rpx;
} 



.bar .action>text[class*="icon-"],
.bar .action>view[class*="icon-"] {
	font-size: 36rpx;
}

.bar .action>text[class*="icon-"]+text[class*="icon-"] {
	margin-left: 0.5em;
}

.bar .content {
	position: absolute;
	text-align: center;
	width: calc(100% - 340rpx);
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
	margin: auto;
	height: 60rpx;
	font-size: 32rpx;
	line-height: 60rpx;
	cursor: none;
	pointer-events: none;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
}

.bar.ios .content {
	bottom: 7px;
	height: 30px;
	font-size: 32rpx;
	line-height: 30px;
}

.bar.btn-group {
	justify-content: space-around;
}

.bar.btn-group button {
	padding: 20rpx 32rpx;
}

.bar.btn-group button {
	flex: 1;
	margin: 0 20rpx;
	max-width: 50%;
}

.bar .search-form {
	background-color: #f5f5f5;
	line-height: 64rpx;
	height: 64rpx;
	font-size: 24rpx;
	color: var(--black);
	flex: 1;
	display: flex;
	align-items: center;
	margin: 0 30rpx;
}

.bar .search-form+.action {
	margin-right: 30rpx;
}

.bar .search-form input {
	flex: 1;
	padding-right: 30rpx;
	height: 64rpx;
	line-height: 64rpx;
	font-size: 26rpx;
	background-color: transparent;
}

.bar .search-form [class*="icon-"] {
	margin: 0 0.5em 0 0.8em;
}

.bar .search-form [class*="icon-"]::before {
	top: 0rpx;
}

.bar.fixed,
.nav.fixed {
	position: fixed;
	width: 100%;
	top: 0;
	z-index: 1024;
	box-shadow: 0 1rpx 6rpx rgba(0, 0, 0, 0.1);
}

.bar.foot {
	position: fixed;
	width: 100%;
	bottom: 0;
	z-index: 1024;
	box-shadow: 0 -1rpx 6rpx rgba(0, 0, 0, 0.1);
}

.bar.tabbar {
	padding: 0;
	height: calc(100rpx + constant(safe-area-inset-bottom) / 2);
	height: calc(100rpx + env(safe-area-inset-bottom) / 2);
	padding-bottom: calc(constant(safe-area-inset-bottom) / 2);
	padding-bottom: calc(env(safe-area-inset-bottom) / 2);
}

.tabbar-height {
	min-height: 100rpx;
	height: calc(100rpx + constant(safe-area-inset-bottom) / 2);
	height: calc(100rpx + env(safe-area-inset-bottom) / 2);
}

.bar.tabbar.shadow {
	box-shadow: 0 -1rpx 6rpx rgba(0, 0, 0, 0.1);
}

.bar.tabbar .action {
	font-size: 22rpx;
	position: relative;
	flex: 1;
	text-align: center;
	padding: 0;
	display: block;
	height: auto;
	line-height: 1;
	margin: 0;
	overflow: initial;
}

.bar.tabbar.shop .action {
	width: 140rpx;
	flex: initial;
}

.bar.tabbar .action.add-action {
	position: relative;
	z-index: 2;
	padding-top: 50rpx;
	background-color: inherit;
}

.bar.tabbar .action.add-action [class*="icon-"] {
	position: absolute;
	width: 70rpx;
	z-index: 2;
	height: 70rpx;
	border-radius: 50%;
	line-height: 70rpx;
	font-size: 50rpx;
	top: -35rpx;
	left: 0;
	right: 0;
	margin: auto;
	padding: 0;
}

.bar.tabbar .action.add-action::after {
	content: "";
	position: absolute;
	width: 100rpx;
	height: 100rpx;
	top: -50rpx;
	left: 0;
	right: 0;
	margin: auto;
	box-shadow: 0 -3rpx 8rpx rgba(0, 0, 0, 0.08);
	border-radius: 50rpx;
	background-color: inherit;
	z-index: 0;
}

.bar.tabbar .action.add-action::before {
	content: "";
	position: absolute;
	width: 100rpx;
	height: 30rpx;
	bottom: 30rpx;
	left: 0;
	right: 0;
	margin: auto;
	background-color: inherit;
	z-index: 1;
}

.bar.tabbar .btn-group {
	flex: 1;
	display: flex;
	justify-content: space-around;
	align-items: center;
	padding: 0 10rpx;
}

.bar.tabbar button.action::after {
	border: 0;
}

.bar.tabbar .action [class*="icon-"] {
	width: 100rpx;
	position: relative;
	display: block;
	height: auto;
	margin: 0 auto 10rpx;
	text-align: center;
	font-size: 40rpx;
}

.bar.tabbar .action .icon-cu-image {
	margin: 0 auto;
}

.bar.tabbar .action .icon-cu-image image {
	width: 50rpx;
	height: 50rpx;
	display: inline-block;
}

.bar.tabbar .submit {
	align-items: center;
	display: flex;
	justify-content: center;
	text-align: center;
	position: relative;
	flex: 2;
	align-self: stretch;
}

.bar.tabbar .submit:last-child {
	flex: 2.6;
}

.bar.tabbar .submit+.submit {
	flex: 2;
}

.bar.tabbar.border .action::before {
	content: " ";
	width: 200%;
	height: 200%;
	position: absolute;
	top: 0;
	left: 0;
	transform: scale(0.5);
	transform-origin: 0 0;
	border-right: 1rpx solid rgba(0, 0, 0, 0.1);
	z-index: 3;
}

.bar.tabbar.border .action:last-child:before {
	display: none;
}

.bar.input {
	padding-right: 20rpx;
	background-color: var(--white);
}

.bar.input input {
	overflow: initial;
	line-height: 64rpx;
	height: 64rpx;
	min-height: 64rpx;
	flex: 1;
	font-size: 30rpx;
	margin: 0 20rpx;
}

.bar.input .action {
	margin-left: 20rpx;
}

.bar.input .action [class*="icon-"] {
	font-size: 48rpx;
}

.bar.input input+.action {
	margin-right: 20rpx;
	margin-left: 0rpx;
}

.bar.input .action:first-child [class*="icon-"] {
	margin-left: 0rpx;
} 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\base.wxss
--------------------------------------------------
/* ==================
        初始化
 ==================== */
 page {
	/* Color 可以自定义相关配色 */
	/* var属性兼容性 --> https://www.caniuse.com/#feat=css-variables */
	/* 标准色 */
	--red: #e54d42;
	--orange: #f37b1d;
	--yellow: #fbbd08;
	--olive: #8dc63f;
	--green: #39b54a;
	--darkgreen: #0E9489;
	--cyan: #1cbbb4;
	--blue: #347DFF;
	--purple: #6739b6;
	--mauve: #9c26b0;
	--pink: #e03997;
	--brown: #a5673f;
	--grey: #8799a3;
	--black: #333333;
	--darkGray: #666666;
	--gray: #aaaaaa;
	--ghostWhite: #f1f1f1;
	--white: #ffffff;
	/* 浅色 */
	--redLight: #fadbd9;
	--orangeLight: #fde6d2;
	--yellowLight: #fef2ce;
	--oliveLight: #e8f4d9;
	--greenLight: #d7f0db;
	--cyanLight: #d2f1f0;
	--blueLight: #cce6ff;
	--purpleLight: #e1d7f0;
	--mauveLight: #ebd4ef;
	--pinkLight: #f9d7ea;
	--brownLight: #ede1d9;
	--greyLight: #e7ebed;

	/* 阴影透明色 */
	--ShadowSize: 6rpx 6rpx 8rpx;
	--redShadow: rgba(204, 69, 59, 0.2);
	--orangeShadow: rgba(217, 109, 26, 0.2);
	--yellowShadow: rgba(224, 170, 7, 0.2);
	--oliveShadow: rgba(124, 173, 55, 0.2);
	--greenShadow: rgba(48, 156, 63, 0.2);
	--darkgreenShadow: rgba(48, 156, 63, 0.2);
	--cyanShadow: rgba(28, 187, 180, 0.2);
	--blueShadow: rgba(0, 102, 204, 0.2);
	--purpleShadow: rgba(88, 48, 156, 0.2);
	--mauveShadow: rgba(133, 33, 150, 0.2);
	--pinkShadow: rgba(199, 50, 134, 0.2);
	--brownShadow: rgba(140, 88, 53, 0.2);
	--greyShadow: rgba(114, 130, 138, 0.2);
	--grayShadow: rgba(114, 130, 138, 0.2);
	--blackShadow: rgba(26, 26, 26, 0.2);

	background-color: var(--ghostWhite);
	font-size: 28rpx;
	color: var(--black);
	font-family: Helvetica Neue, Helvetica, sans-serif;

	/*苹果手机安全区域*/
	padding-bottom: constant(safe-area-inset-bottom);
	padding-bottom: env(safe-area-inset-bottom);
  
}

view,
scroll-view,
swiper,
button,
input,
textarea,
label,
navigator,
image {
	box-sizing: border-box;
} 

.hide {
	display: none;
}

.round {
	border-radius: 5000rpx;
}

.radius {
	border-radius: 6rpx;
}

.block {
	display: block;
} 

/* 多行文本 */
.text-content{ 
	line-height: 1.6;
	table-layout:fixed; word-break: break-all; overflow:hidden;
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\border.wxss
--------------------------------------------------

/* ==================
          边框 line为伪元素
 ==================== */

 .border-red::after {
	border-color: var(--red);
}

.border-orange::after {
	border-color: var(--orange);
}

.border-yellow::after {
	border-color: var(--yellow);
}

.border-olive::after {
	border-color: var(--olive);
}

.border-green::after {
	border-color: var(--green);
}

.border-darkgreen::after {
	border-color: var(--darkgreen);
}
 
.border-cyan::after {
	border-color: var(--cyan);
}

.border-blue::after {
	border-color: var(--blue);
}

.border-purple::after {
	border-color: var(--purple);
}

.border-mauve::after {
	border-color: var(--mauve);
}

.border-pink::after {
	border-color: var(--pink);
}

.border-brown::after {
	border-color: var(--brown);
}

.border-grey::after {
	border-color: var(--grey);
}

.border-gray::after {
	border-color: var(--gray);
}

.border-black::after {
	border-color: var(--black);
}

.border-white::after {
	border-color: var(--white);
}



/* ==================
          边框
 ==================== */

/* -- 实线 -- */

.solid,
.solid-top,
.solid-right,
.solid-bottom,
.solid-left,
.solid-bold,
.solid-bold-top,
.solid-bold-right,
.solid-bold-bottom,
.solid-bold-left {
	position: relative;
}

.solid::after,
.solid-top::after,
.solid-right::after,
.solid-bottom::after,
.solid-left::after,
.solid-bold::after,
.solid-bold-top::after,
.solid-bold-right::after,
.solid-bold-bottom::after,
.solid-bold-left::after {
	content: " ";
	width: 200%;
	height: 200%;
	position: absolute;
	top: 0;
	left: 0;
	border-radius: inherit;
	transform: scale(0.5);
	transform-origin: 0 0;
	pointer-events: none;
	box-sizing: border-box;
}

.solid::after {
	border: 4rpx solid rgba(0, 0, 0, 0.1);
}

.solid-top::after {
	border-top: 4rpx solid rgba(0, 0, 0, 0.1);
}

.solid-right::after {
	border-right: 4rpx solid rgba(0, 0, 0, 0.1);
}

.solid-bottom::after {
	border-bottom: 4rpx solid rgba(0, 0, 0, 0.1);
}

.solid-left::after {
	border-left: 4rpx solid rgba(0, 0, 0, 0.1);
}

.solid-bold::after {
	border: 8rpx solid #eee;
}

.solid-bold-top::after {
	border-top: 8rpx solid #eee;
}

.solid-bold-right::after {
	border-right: 8rpx solid #eee;
}

.solid-bold-bottom::after {
	border-bottom: 8rpx solid #eee;
}

.solid-bold-left::after {
	border-left: 8rpx solid #eee;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\button.wxss
--------------------------------------------------
/* ==================
          按钮
 ==================== */

 .btn {
	border: 0rpx;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	box-sizing: border-box;
	padding: 0 30rpx;
	font-size: 28rpx;
	height: 64rpx;
	line-height: 1;
	text-align: center;
	text-decoration: none;
	overflow: visible;
	margin-left: initial;
	transform: translate(0rpx, 0rpx);
	margin-right: initial;
	border-radius: 12rpx;
}

.btn::after {
	display: none;
}

.btn:not([class*="bg-"]) {
	background-color: #f0f0f0;
}

.btn[class*="border"] {
	background-color: transparent;
}

/* 伪元素边框 */
.btn[class*="border"]::after {
	content: " ";
	display: block;
	width: 200%;
	height: 200%;
	position: absolute;
	top: 0;
	left: 0;
	border: 1rpx solid currentColor;
	transform: scale(0.5);
	transform-origin: 0 0;
	box-sizing: border-box;
	z-index: 1;
	pointer-events: none;
	border-radius: 12rpx;
}

.btn[class*="bg-"]::after {
	display: none;
}

.btn.small {
	padding: 0 20rpx;
	font-size: 20rpx;
	height: 48rpx;
	border-radius: 10rpx;
}

.btn.mid {
	padding: 0 20rpx;
	font-size: 24rpx;
	height: 50rpx;
	border-radius: 10rpx;
}

.btn.large {
	padding: 0 40rpx;
	font-size: 32rpx;
	height: 80rpx;
	border-radius: 14rpx;
}

.btn.btn-icon.small {
	width: 48rpx;
	height: 48rpx;
}

.btn.btn-icon {
	width: 64rpx;
	height: 64rpx;
	border-radius: 500rpx;
	padding: 0;
}

button.btn-icon.large {
	width: 80rpx;
	height: 80rpx;
}

.btn.shadow-blur::before {
	top: 4rpx;
	left: 4rpx;
	filter: blur(6rpx);
	opacity: 0.6;
}

.btn.button-hover {
	opacity: .9;
	transform: scale(0.95, 0.95);
	position: relative;
	top: 3rpx;
	left: 3rpx;
	box-shadow: 0px 0px 8px rgba(0, 0, 0, .1) inset;
}

.btn[disabled] {
	opacity: 0.6;
	color: var(--white);
}


.btn.round {
	border-radius: 5000rpx;
}

.btn.round[class*="border"]::after {
	border-radius: 1000rpx;
}

.btn.border-bold::after {
	border: 6rpx solid currentColor;
} 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\comm.wxss
--------------------------------------------------
@import "base.wxss"; 

@import "avatar.wxss"; 
@import "background.wxss"; 
@import "bar.wxss";  
@import "border.wxss"; 
@import "button.wxss"; 
@import "image.wxss";  
@import "modal.wxss"; 
@import "nav.wxss"; 
@import "shadow.wxss"; 
@import "tag.wxss";  
@import "icon.wxss";  
@import "form.wxss";  
@import "text.wxss"; 
@import "list.wxss";
@import "load.wxss";
@import "layout.wxss"; 
@import "animation.wxss"; 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\form.wxss
--------------------------------------------------
/* ==================
         表单
 ==================== */

.form-group {
	/*background-color: var(--white);影响圆角*/
	padding: 1rpx 30rpx;
	display: flex;
	align-items: center;
	min-height: 100rpx;
	justify-content: space-between;
	position: relative;
	border-bottom: 1rpx solid #eee;
}

.form-group:last-child {
	border-bottom: 0rpx solid #eee;
}

.form-group .title {
	text-align: justify;
	padding-right: 30rpx;
	font-size: 30rpx;
	position: relative;
	height: 60rpx;
	line-height: 60rpx;
}

.form-group.form-detail {
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
}

.form-group.form-detail .title {
	margin-top: 16rpx;
	display: flex;
	flex-direction: column;
}

.form-group.form-detail text {
	font-size: 24rpx;
	font-weight: normal;
}

.form-group input {
	flex: 1;
	font-size: 30rpx;
	color: #555;
	padding-right: 20rpx;
	height: 60rpx;
}

.modal-form .form-group input {
	height: 70rpx;
	text-align: right;
	background-color: #f8f8f8;
	border-radius: 5rpx;
	color: #333;
}

.modal-form .form-group .title {
	font-weight: normal;
}

.form-group>text[class*="icon-"] {
	font-size: 36rpx;
	padding: 0;
	box-sizing: border-box;
}

.form-group textarea {
	margin: 32rpx 0 30rpx;
	height: 4.6em;
	width: 100%;
	line-height: 1.2em;
	flex: 1;
	font-size: 30rpx;
	padding: 0;
	text-align: left;
	line-height: 1.8;
}

.form-group.arrow::before {
	position: absolute;
	top: 0;
	right: 30rpx;
	bottom: 0;
	display: block;
	margin: auto;
	width: 30rpx;
	height: 30rpx;
	color: var(--grey);
	content: "\e6a3";
	text-align: center;
	font-size: 34rpx;
	font-family: "icon";
	line-height: 30rpx;
	margin-top: auto;
	margin-right: auto;
	margin-bottom: auto;
	margin-left: auto;
}

.form-group .form-text {
	padding-right: 40rpx;
	flex: 1;
	text-align: right;
	height: 60rpx;
	line-height: 60rpx;
}

.form-group.align-start .title {
	height: 1em;
	margin-top: 32rpx;
	line-height: 1em;
}

.form-group .picker,
.form-group .picker-null {
	flex: 1;
	padding-right: 40rpx;
	overflow: hidden;
	position: relative;
}

.form-group .picker .picker,
.form-group .picker-null .picker {
	line-height: 100rpx;
	font-size: 28rpx;
	text-overflow: ellipsis;
	white-space: nowrap;
	overflow: hidden;
	width: 100%;
	text-align: right;
}

.form-group .picker::after,
.form-group .picker-null::after {
	font-family: "icon";
	display: block;
	content: "\e6a3";
	position: absolute;
	font-size: 34rpx;
	color: var(--grey);
	line-height: 100rpx;
	width: 60rpx;
	text-align: center;
	top: 0;
	bottom: 0;
	right: -20rpx;
	margin: auto;
}

/* ==================
         开关
 ==================== */

switch,
checkbox,
radio {
	position: relative;
}

switch::after,
switch::before {
	font-family: "icon";
	content: "\e645";
	position: absolute;
	color: var(--white) !important;
	top: 0%;
	left: 0rpx;
	font-size: 26rpx;
	line-height: 26px;
	width: 50%;
	text-align: center;
	pointer-events: none;
	transform: scale(0, 0);
	transition: all 0.3s ease-in-out 0s;
	z-index: 9;
	bottom: 0;
	height: 26px;
	margin: auto;
}

switch::before {
	content: "\e646";
	right: 0;
	transform: scale(1, 1);
	left: auto;
}

switch[checked]::after,
switch.checked::after {
	transform: scale(1, 1);
}

switch[checked]::before,
switch.checked::before {
	transform: scale(0, 0);
}

switch[checked]::before {
	transform: scale(0, 0);
}

radio::before,
checkbox::before {
	font-family: "icon";
	content: "\e645";
	position: absolute;
	color: var(--white) !important;
	top: 50%;
	margin-top: -8px;
	right: 5px;
	font-size: 32rpx;
	line-height: 16px;
	pointer-events: none;
	transform: scale(1, 1);
	transition: all 0.3s ease-in-out 0s;
	z-index: 9;
}

radio .wx-radio-input,
checkbox .wx-checkbox-input {
	margin: 0;
	width: 24px;
	height: 24px;
}

checkbox.round .wx-checkbox-input {
	border-radius: 100rpx;
}

switch .wx-switch-input {
	border: none;
	padding: 0 24px;
	width: 48px;
	height: 26px;
	margin: 0;
	border-radius: 100rpx;
}

switch .wx-switch-input:not([class*="bg-"]) {
	background: var(--grey) !important;
}

switch .wx-switch-input::after {
	margin: auto;
	width: 26px;
	height: 26px;
	border-radius: 100rpx;
	left: 0rpx;
	top: 0rpx;
	bottom: 0rpx;
	position: absolute;
	transform: scale(0.9, 0.9);
	transition: all 0.1s ease-in-out 0s;
}

switch .wx-switch-input.wx-switch-input-checked::after {
	margin: auto;
	left: 22px;
	box-shadow: none;
	transform: scale(0.9, 0.9);
}

radio-group {
	display: inline-block;
}



switch.radius .wx-switch-input::after,
switch.radius .wx-switch-input,
switch.radius .wx-switch-input::before {
	border-radius: 10rpx;
}

switch .wx-switch-input::before,
radio.radio::before,
checkbox .wx-checkbox-input::before,
radio .wx-radio-input::before,
radio.radio::before {
	display: none;
}

radio.radio[checked]::after {
	content: "";
	background-color: transparent;
	display: block;
	position: absolute;
	width: 8px;
	height: 8px;
	z-index: 999;
	top: 0rpx;
	left: 0rpx;
	right: 0;
	bottom: 0;
	margin: auto;
	border-radius: 200rpx;
	border: 8px solid var(--white) !important;
}

.switch-sex::after {
	content: "\e71c";
}

.switch-sex::before {
	content: "\e71a";
}

.switch-sex .wx-switch-input {
	background: var(--red) !important;
	border-color: var(--red) !important;
}

.switch-sex[checked] .wx-switch-input {
	background: var(--blue) !important;
	border-color: var(--blue) !important;
}

switch.red[checked] .wx-switch-input,
checkbox.red[checked] .wx-checkbox-input,
radio.red[checked] .wx-radio-input {
	border-color: var(--red) !important;
}

switch.orange[checked] .wx-switch-input,
checkbox.orange[checked] .wx-checkbox-input,
radio.orange[checked] .wx-radio-input {
	border-color: var(--orange) !important;
}

switch.yellow[checked] .wx-switch-input,
checkbox.yellow[checked] .wx-checkbox-input,
radio.yellow[checked] .wx-radio-input {
	border-color: var(--yellow) !important;
}

switch.olive[checked] .wx-switch-input,
checkbox.olive[checked] .wx-checkbox-input,
radio.olive[checked] .wx-radio-input {
	border-color: var(--olive) !important;
}

switch.green[checked] .wx-switch-input,
checkbox.green[checked] .wx-checkbox-input,
checkbox[checked] .wx-checkbox-input,
radio.green[checked] .wx-radio-input {
	border-color: var(--green) !important;
}

switch.cyan[checked] .wx-switch-input,
checkbox.cyan[checked] .wx-checkbox-input,
radio.cyan[checked] .wx-radio-input {
	border-color: var(--cyan) !important;
}

switch.blue[checked] .wx-switch-input,
checkbox.blue[checked] .wx-checkbox-input,
radio.blue[checked] .wx-radio-input {
	border-color: var(--blue) !important;
}

switch.purple[checked] .wx-switch-input,
checkbox.purple[checked] .wx-checkbox-input,
radio.purple[checked] .wx-radio-input {
	border-color: var(--purple) !important;
}

switch.mauve[checked] .wx-switch-input,
checkbox.mauve[checked] .wx-checkbox-input,
radio.mauve[checked] .wx-radio-input {
	border-color: var(--mauve) !important;
}

switch.pink[checked] .wx-switch-input,
checkbox.pink[checked] .wx-checkbox-input,
radio.pink[checked] .wx-radio-input {
	border-color: var(--pink) !important;
}

switch.brown[checked] .wx-switch-input,
checkbox.brown[checked] .wx-checkbox-input,
radio.brown[checked] .wx-radio-input {
	border-color: var(--brown) !important;
}

switch.grey[checked] .wx-switch-input,
checkbox.grey[checked] .wx-checkbox-input,
radio.grey[checked] .wx-radio-input {
	border-color: var(--grey) !important;
}

switch.gray[checked] .wx-switch-input,
checkbox.gray[checked] .wx-checkbox-input,
radio.gray[checked] .wx-radio-input {
	border-color: var(--grey) !important;
}

switch.black[checked] .wx-switch-input,
checkbox.black[checked] .wx-checkbox-input,
radio.black[checked] .wx-radio-input {
	border-color: var(--black) !important;
}

switch.white[checked] .wx-switch-input,
checkbox.white[checked] .wx-checkbox-input,
radio.white[checked] .wx-radio-input {
	border-color: var(--white) !important;
}

switch.red[checked] .wx-switch-input.wx-switch-input-checked,
checkbox.red[checked] .wx-checkbox-input,
radio.red[checked] .wx-radio-input {
	background-color: var(--red) !important;
	color: var(--white) !important;
}

switch.orange[checked] .wx-switch-input,
checkbox.orange[checked] .wx-checkbox-input,
radio.orange[checked] .wx-radio-input {
	background-color: var(--orange) !important;
	color: var(--white) !important;
}

switch.yellow[checked] .wx-switch-input,
checkbox.yellow[checked] .wx-checkbox-input,
radio.yellow[checked] .wx-radio-input {
	background-color: var(--yellow) !important;
	color: var(--black) !important;
}

switch.olive[checked] .wx-switch-input,
checkbox.olive[checked] .wx-checkbox-input,
radio.olive[checked] .wx-radio-input {
	background-color: var(--olive) !important;
	color: var(--white) !important;
}

switch.green[checked] .wx-switch-input,
switch[checked] .wx-switch-input,
checkbox.green[checked] .wx-checkbox-input,
checkbox[checked] .wx-checkbox-input,
radio.green[checked] .wx-radio-input,
radio[checked] .wx-radio-input {
	background-color: var(--green) !important;
	color: var(--white) !important;
}

switch.cyan[checked] .wx-switch-input,
checkbox.cyan[checked] .wx-checkbox-input,
radio.cyan[checked] .wx-radio-input {
	background-color: var(--cyan) !important;
	color: var(--white) !important;
}

switch.blue[checked] .wx-switch-input,
checkbox.blue[checked] .wx-checkbox-input,
radio.blue[checked] .wx-radio-input {
	background-color: var(--blue) !important;
	color: var(--white) !important;
}

switch.purple[checked] .wx-switch-input,
checkbox.purple[checked] .wx-checkbox-input,
radio.purple[checked] .wx-radio-input {
	background-color: var(--purple) !important;
	color: var(--white) !important;
}

switch.mauve[checked] .wx-switch-input,
checkbox.mauve[checked] .wx-checkbox-input,
radio.mauve[checked] .wx-radio-input {
	background-color: var(--mauve) !important;
	color: var(--white) !important;
}

switch.pink[checked] .wx-switch-input,
checkbox.pink[checked] .wx-checkbox-input,
radio.pink[checked] .wx-radio-input {
	background-color: var(--pink) !important;
	color: var(--white) !important;
}

switch.brown[checked] .wx-switch-input,
checkbox.brown[checked] .wx-checkbox-input,
radio.brown[checked] .wx-radio-input {
	background-color: var(--brown) !important;
	color: var(--white) !important;
}

switch.grey[checked] .wx-switch-input,
checkbox.grey[checked] .wx-checkbox-input,
radio.grey[checked] .wx-radio-input {
	background-color: var(--grey) !important;
	color: var(--white) !important;
}

switch.gray[checked] .wx-switch-input,
checkbox.gray[checked] .wx-checkbox-input,
radio.gray[checked] .wx-radio-input {
	background-color: #f0f0f0 !important;
	color: var(--black) !important;
}

switch.black[checked] .wx-switch-input,
checkbox.black[checked] .wx-checkbox-input,
radio.black[checked] .wx-radio-input {
	background-color: var(--black) !important;
	color: var(--white) !important;
}

switch.white[checked] .wx-switch-input,
checkbox.white[checked] .wx-checkbox-input,
radio.white[checked] .wx-radio-input {
	background-color: var(--white) !important;
	color: var(--black) !important;
}

.form-group .upload-img {
	display: flex;
	flex-wrap: wrap;
	overflow: hidden;
	flex: 1;
}

.form-group .upload-img>view {
	width: 25%;
	padding-bottom: calc((100% - 60rpx)/4);
	height: 0;
	width: calc((100% - 60rpx)/4);
	margin-right: 12rpx;
	margin-bottom: 20rpx;
	border-radius: 6rpx;
	position: relative;
	overflow: hidden;
}

.form-group .upload-img .bg-img {
	background-size: cover;
	background-position: center;
	background-repeat: no-repeat;
}

.form-group .upload-img .bg-img image {
	width: 100%;
	height: 100%;
	position: absolute;
}

.form-group .upload-img>view>text[class*="icon-"] {
	font-size: 52rpx;
	position: absolute;
	color: var(--grey);
	margin: auto;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

.form-group .upload-img .tag {
	position: absolute;
	right: 0;
	top: 0;
	border-bottom-left-radius: 6rpx;
	padding: 6rpx 12rpx;
	height: auto;
	background-color: rgba(0, 0, 0, 0.5);
}

.form-box .hint-desc {
	width: 100%;
	color: #999;
	padding: 10rpx 24rpx 12rpx 24rpx;
}

.form-box .hint-desc.error {
	color: #e54d42;
	font-size: 24rpx;
}

.form-box .hint-desc.error::before {
	font-family: "icon";
	font-size: 24rpx !important;
	display: inline-block;
	content: "\e659";
	margin-right: 2rpx; 
	font-size: 32rpx;
} 


.form-box .hint-desc.info {
	font-size: 24rpx;
}

.form-box .hint-desc.info::before {
	font-family: "icon";
	font-size: 24rpx !important;
	display: inline-block;
	content: "\e6e5";
	margin-right: 2rpx;
	font-size: 32rpx;
}


.phc {
	color: #999;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\icon.wxss
--------------------------------------------------
@keyframes icon-spin {
	0% {
		-webkit-transform: rotate(0);
		transform: rotate(0);
	}

	100% {
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}

.iconfont-spin {
	-webkit-animation: icon-spin 2s infinite linear;
	animation: icon-spin 2s infinite linear;
	display: inline-block;
}

.iconfont-pulse {
	-webkit-animation: icon-spin 1s infinite steps(8);
	animation: icon-spin 1s infinite steps(8);
	display: inline-block;
}

[class*="icon-"] {
	font-family: "icon";
	font-size: inherit;
	font-style: normal;
}

@font-face {
	font-family: "icon"; 
	/* IE9*/
	src:  
		url('data:application/x-font-woff;charset=utf-8;base64,') format('woff') 
}

.icon-appreciate:before {
	content: "\e644";
}

.icon-check:before {
	content: "\e645";
}

.icon-close:before {
	content: "\e646";
}

.icon-edit:before {
	content: "\e649";
}

.icon-emoji:before {
	content: "\e64a";
}

.icon-favorfill:before {
	content: "\e64b";
}

.icon-favor:before {
	content: "\e64c";
}

.icon-loading:before {
	content: "\e64f";
}

.icon-locationfill:before {
	content: "\e650";
}

.icon-location:before {
	content: "\e651";
}

.icon-phone:before {
	content: "\e652";
}

.icon-roundcheckfill:before {
	content: "\e656";
}

.icon-roundcheck:before {
	content: "\e657";
}

.icon-roundclosefill:before {
	content: "\e658";
}

.icon-roundclose:before {
	content: "\e659";
}

.icon-roundrightfill:before {
	content: "\e65a";
}

.icon-roundright:before {
	content: "\e65b";
}

.icon-search:before {
	content: "\e65c";
}

.icon-taxi:before {
	content: "\e65d";
}

.icon-timefill:before {
	content: "\e65e";
}

.icon-time:before {
	content: "\e65f";
}

.icon-unfold:before {
	content: "\e661";
}

.icon-warnfill:before {
	content: "\e662";
}

.icon-warn:before {
	content: "\e663";
}

.icon-camerafill:before {
	content: "\e664";
}

.icon-camera:before {
	content: "\e665";
}

.icon-commentfill:before {
	content: "\e666";
}

.icon-comment:before {
	content: "\e667";
}

.icon-likefill:before {
	content: "\e668";
}

.icon-like:before {
	content: "\e669";
}

.icon-notificationfill:before {
	content: "\e66a";
}

.icon-notification:before {
	content: "\e66b";
}

.icon-order:before {
	content: "\e66c";
}

.icon-samefill:before {
	content: "\e66d";
}

.icon-same:before {
	content: "\e66e";
}

.icon-deliver:before {
	content: "\e671";
}

.icon-evaluate:before {
	content: "\e672";
}

.icon-pay:before {
	content: "\e673";
}

.icon-send:before {
	content: "\e675";
}

.icon-shop:before {
	content: "\e676";
}

.icon-ticket:before {
	content: "\e677";
}

.icon-back:before {
	content: "\e679";
}

.icon-cascades:before {
	content: "\e67c";
}

.icon-discover:before {
	content: "\e67e";
}

.icon-list:before {
	content: "\e682";
}

.icon-more:before {
	content: "\e684";
}

.icon-scan:before {
	content: "\e689";
}

.icon-settings:before {
	content: "\e68a";
}

.icon-questionfill:before {
	content: "\e690";
}

.icon-question:before {
	content: "\e691";
}

.icon-shopfill:before {
	content: "\e697";
}

.icon-form:before {
	content: "\e699";
}

.icon-pic:before {
	content: "\e69b";
}

.icon-filter:before {
	content: "\e69c";
}

.icon-footprint:before {
	content: "\e69d";
}

.icon-top:before {
	content: "\e69e";
}

.icon-pulldown:before {
	content: "\e69f";
}

.icon-pullup:before {
	content: "\e6a0";
}

.icon-right:before {
	content: "\e6a3";
}

.icon-refresh:before {
	content: "\e6a4";
}

.icon-moreandroid:before {
	content: "\e6a5";
}

.icon-deletefill:before {
	content: "\e6a6";
}

.icon-refund:before {
	content: "\e6ac";
}

.icon-cart:before {
	content: "\e6af";
}

.icon-qrcode:before {
	content: "\e6b0";
}

.icon-remind:before {
	content: "\e6b2";
}

.icon-delete:before {
	content: "\e6b4";
}

.icon-profile:before {
	content: "\e6b7";
}

.icon-home:before {
	content: "\e6b8";
}

.icon-cartfill:before {
	content: "\e6b9";
}

.icon-discoverfill:before {
	content: "\e6ba";
}

.icon-homefill:before {
	content: "\e6bb";
}

.icon-message:before {
	content: "\e6bc";
}

.icon-addressbook:before {
	content: "\e6bd";
}

.icon-link:before {
	content: "\e6bf";
}

.icon-lock:before {
	content: "\e6c0";
}

.icon-unlock:before {
	content: "\e6c2";
}

.icon-vip:before {
	content: "\e6c3";
}

.icon-weibo:before {
	content: "\e6c4";
}

.icon-activity:before {
	content: "\e6c5";
}

.icon-friendaddfill:before {
	content: "\e6c9";
}

.icon-friendadd:before {
	content: "\e6ca";
}

.icon-friendfamous:before {
	content: "\e6cb";
}

.icon-friend:before {
	content: "\e6cc";
}

.icon-goods:before {
	content: "\e6cd";
}

.icon-selection:before {
	content: "\e6ce";
}

.icon-explore:before {
	content: "\e6d2";
}

.icon-present:before {
	content: "\e6d3";
}

.icon-squarecheckfill:before {
	content: "\e6d4";
}

.icon-square:before {
	content: "\e6d5";
}

.icon-squarecheck:before {
	content: "\e6d6";
}

.icon-round:before {
	content: "\e6d7";
}

.icon-roundaddfill:before {
	content: "\e6d8";
}

.icon-roundadd:before {
	content: "\e6d9";
}

.icon-add:before {
	content: "\e6da";
}

.icon-notificationforbidfill:before {
	content: "\e6db";
}

.icon-explorefill:before {
	content: "\e6dd";
}

.icon-fold:before {
	content: "\e6de";
}

.icon-game:before {
	content: "\e6df";
}

.icon-redpacket:before {
	content: "\e6e0";
}

.icon-selectionfill:before {
	content: "\e6e1";
}

.icon-similar:before {
	content: "\e6e2";
}

.icon-appreciatefill:before {
	content: "\e6e3";
}

.icon-infofill:before {
	content: "\e6e4";
}

.icon-info:before {
	content: "\e6e5";
}

.icon-forwardfill:before {
	content: "\e6ea";
}

.icon-forward:before {
	content: "\e6eb";
}

.icon-rechargefill:before {
	content: "\e6ec";
}

.icon-recharge:before {
	content: "\e6ed";
}

.icon-vipcard:before {
	content: "\e6ee";
}

.icon-voice:before {
	content: "\e6ef";
}

.icon-voicefill:before {
	content: "\e6f0";
}

.icon-friendfavor:before {
	content: "\e6f1";
}

.icon-wifi:before {
	content: "\e6f2";
}

.icon-share:before {
	content: "\e6f3";
}

.icon-wefill:before {
	content: "\e6f4";
}

.icon-we:before {
	content: "\e6f5";
}

.icon-lightauto:before {
	content: "\e6f6";
}

.icon-lightforbid:before {
	content: "\e6f7";
}

.icon-lightfill:before {
	content: "\e6f8";
}

.icon-camerarotate:before {
	content: "\e6f9";
}

.icon-light:before {
	content: "\e6fa";
}

.icon-barcode:before {
	content: "\e6fb";
}

.icon-flashlightclose:before {
	content: "\e6fc";
}

.icon-flashlightopen:before {
	content: "\e6fd";
}

.icon-searchlist:before {
	content: "\e6fe";
}

.icon-service:before {
	content: "\e6ff";
}

.icon-sort:before {
	content: "\e700";
}

.icon-down:before {
	content: "\e703";
}

.icon-mobile:before {
	content: "\e704";
}

.icon-mobilefill:before {
	content: "\e705";
}

.icon-copy:before {
	content: "\e706";
}

.icon-countdownfill:before {
	content: "\e707";
}

.icon-countdown:before {
	content: "\e708";
}

.icon-noticefill:before {
	content: "\e709";
}

.icon-notice:before {
	content: "\e70a";
}

.icon-upstagefill:before {
	content: "\e70e";
}

.icon-upstage:before {
	content: "\e70f";
}

.icon-babyfill:before {
	content: "\e710";
}

.icon-baby:before {
	content: "\e711";
}

.icon-brandfill:before {
	content: "\e712";
}

.icon-brand:before {
	content: "\e713";
}

.icon-choicenessfill:before {
	content: "\e714";
}

.icon-choiceness:before {
	content: "\e715";
}

.icon-clothesfill:before {
	content: "\e716";
}

.icon-clothes:before {
	content: "\e717";
}

.icon-creativefill:before {
	content: "\e718";
}

.icon-creative:before {
	content: "\e719";
}

.icon-female:before {
	content: "\e71a";
}

.icon-keyboard:before {
	content: "\e71b";
}

.icon-male:before {
	content: "\e71c";
}

.icon-newfill:before {
	content: "\e71d";
}

.icon-new:before {
	content: "\e71e";
}

.icon-pullleft:before {
	content: "\e71f";
}

.icon-pullright:before {
	content: "\e720";
}

.icon-rankfill:before {
	content: "\e721";
}

.icon-rank:before {
	content: "\e722";
}

.icon-bad:before {
	content: "\e723";
}

.icon-cameraadd:before {
	content: "\e724";
}

.icon-focus:before {
	content: "\e725";
}

.icon-friendfill:before {
	content: "\e726";
}

.icon-cameraaddfill:before {
	content: "\e727";
}

.icon-apps:before {
	content: "\e729";
}

.icon-paintfill:before {
	content: "\e72a";
}

.icon-paint:before {
	content: "\e72b";
}

.icon-picfill:before {
	content: "\e72c";
}

.icon-refresharrow:before {
	content: "\e72d";
}

.icon-refresharrow.up {
	transform: rotateX(180deg);
}

.icon-colorlens:before {
	content: "\e6e6";
}

.icon-markfill:before {
	content: "\e730";
}

.icon-mark:before {
	content: "\e731";
}

.icon-presentfill:before {
	content: "\e732";
}

.icon-repeal:before {
	content: "\e733";
}

.icon-album:before {
	content: "\e734";
}

.icon-peoplefill:before {
	content: "\e735";
}

.icon-people:before {
	content: "\e736";
}

.icon-servicefill:before {
	content: "\e737";
}

.icon-repair:before {
	content: "\e738";
}

.icon-file:before {
	content: "\e739";
}

.icon-repairfill:before {
	content: "\e73a";
}

.icon-taoxiaopu:before {
	content: "\e73b";
}

.icon-weixin:before {
	content: "\e612";
}

.icon-attentionfill:before {
	content: "\e73c";
}

.icon-attention:before {
	content: "\e73d";
}

.icon-commandfill:before {
	content: "\e73e";
}

.icon-command:before {
	content: "\e73f";
}

.icon-communityfill:before {
	content: "\e740";
}

.icon-community:before {
	content: "\e741";
}

.icon-read:before {
	content: "\e742";
}

.icon-calendar:before {
	content: "\e74a";
}

.icon-cut:before {
	content: "\e74b";
}

.icon-magic:before {
	content: "\e74c";
}

.icon-backwardfill:before {
	content: "\e74d";
}

.icon-playfill:before {
	content: "\e74f";
}

.icon-stop:before {
	content: "\e750";
}

.icon-tagfill:before {
	content: "\e751";
}

.icon-tag:before {
	content: "\e752";
}

.icon-group:before {
	content: "\e753";
}

.icon-all:before {
	content: "\e755";
}

.icon-backdelete:before {
	content: "\e756";
}

.icon-hotfill:before {
	content: "\e757";
}

.icon-hot:before {
	content: "\e758";
}

.icon-post:before {
	content: "\e759";
}

.icon-radiobox:before {
	content: "\e75b";
}

.icon-rounddown:before {
	content: "\e75c";
}

.icon-upload:before {
	content: "\e75d";
}

.icon-writefill:before {
	content: "\e760";
}

.icon-write:before {
	content: "\e761";
}

.icon-radioboxfill:before {
	content: "\e763";
}

.icon-punch:before {
	content: "\e764";
}

.icon-shake:before {
	content: "\e765";
}

.icon-move:before {
	content: "\e768";
}

.icon-safe:before {
	content: "\e769";
}

.icon-activityfill:before {
	content: "\e775";
}

.icon-crownfill:before {
	content: "\e776";
}

.icon-crown:before {
	content: "\e777";
}

.icon-goodsfill:before {
	content: "\e778";
}

.icon-messagefill:before {
	content: "\e779";
}

.icon-profilefill:before {
	content: "\e77a";
}

.icon-sound:before {
	content: "\e77b";
}

.icon-sponsorfill:before {
	content: "\e77c";
}

.icon-sponsor:before {
	content: "\e77d";
}

.icon-upblock:before {
	content: "\e77e";
}

.icon-weblock:before {
	content: "\e77f";
}

.icon-weunblock:before {
	content: "\e780";
}

.icon-my:before {
	content: "\e78b";
}

.icon-myfill:before {
	content: "\e78c";
}

.icon-emojifill:before {
	content: "\e78d";
}

.icon-emojiflashfill:before {
	content: "\e78e";
}

.icon-flashbuyfill:before {
	content: "\e78f";
}

.icon-text:before {
	content: "\e791";
}

.icon-goodsfavor:before {
	content: "\e794";
}

.icon-musicfill:before {
	content: "\e795";
}

.icon-musicforbidfill:before {
	content: "\e796";
}

.icon-card:before {
	content: "\e624";
}

.icon-triangledownfill:before {
	content: "\e79b";
}

.icon-triangleupfill:before {
	content: "\e79c";
}

.icon-roundleftfill-copy:before {
	content: "\e79e";
}

.icon-font:before {
	content: "\e76a";
}

.icon-title:before {
	content: "\e82f";
}

.icon-recordfill:before {
	content: "\e7a4";
}

.icon-record:before {
	content: "\e7a6";
}

.icon-cardboardfill:before {
	content: "\e7a9";
}

.icon-cardboard:before {
	content: "\e7aa";
}

.icon-formfill:before {
	content: "\e7ab";
}

.icon-coin:before {
	content: "\e7ac";
}

.icon-cardboardforbid:before {
	content: "\e7af";
}

.icon-circlefill:before {
	content: "\e7b0";
}

.icon-circle:before {
	content: "\e7b1";
}

.icon-attentionforbid:before {
	content: "\e7b2";
}

.icon-attentionforbidfill:before {
	content: "\e7b3";
}

.icon-attentionfavorfill:before {
	content: "\e7b4";
}

.icon-attentionfavor:before {
	content: "\e7b5";
}

.icon-titles:before {
	content: "\e701";
}

.icon-icloading:before {
	content: "\e67a";
}

.icon-full:before {
	content: "\e7bc";
}

.icon-mail:before {
	content: "\e7bd";
}

.icon-peoplelist:before {
	content: "\e7be";
}

.icon-goodsnewfill:before {
	content: "\e7bf";
}

.icon-goodsnew:before {
	content: "\e7c0";
}

.icon-medalfill:before {
	content: "\e7c1";
}

.icon-medal:before {
	content: "\e7c2";
}

.icon-newsfill:before {
	content: "\e7c3";
}

.icon-newshotfill:before {
	content: "\e7c4";
}

.icon-newshot:before {
	content: "\e7c5";
}

.icon-news:before {
	content: "\e7c6";
}

.icon-videofill:before {
	content: "\e7c7";
}

.icon-video:before {
	content: "\e7c8";
}

.icon-exit:before {
	content: "\e7cb";
}

.icon-skinfill:before {
	content: "\e7cc";
}

.icon-skin:before {
	content: "\e7cd";
}

.icon-moneybagfill:before {
	content: "\e7ce";
}

.icon-usefullfill:before {
	content: "\e7cf";
}

.icon-usefull:before {
	content: "\e7d0";
}

.icon-moneybag:before {
	content: "\e7d1";
}

.icon-redpacket_fill:before {
	content: "\e7d3";
}

.icon-subscription:before {
	content: "\e7d4";
}

.icon-loading1:before {
	content: "\e633";
}

.icon-github:before {
	content: "\e692";
}

.icon-global:before {
	content: "\e7eb";
}

.icon-settingsfill:before {
	content: "\e6ab";
}

.icon-back_android:before {
	content: "\e7ed";
}

.icon-expressman:before {
	content: "\e7ef";
}

.icon-evaluate_fill:before {
	content: "\e7f0";
}

.icon-group_fill:before {
	content: "\e7f5";
}

.icon-play_forward_fill:before {
	content: "\e7f6";
}

.icon-deliver_fill:before {
	content: "\e7f7";
}

.icon-notice_forbid_fill:before {
	content: "\e7f8";
}

.icon-fork:before {
	content: "\e60c";
}

.icon-pick:before {
	content: "\e7fa";
}

.icon-wenzi:before {
	content: "\e6a7";
}

.icon-ellipse:before {
	content: "\e600";
}

.icon-qr_code:before {
	content: "\e61b";
}

.icon-dianhua:before {
	content: "\e64d";
}

.icon-icon:before {
	content: "\e602";
}

.icon-loading2:before {
	content: "\e7f1";
}

.icon-btn:before {
	content: "\e601";
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\image.wxss
--------------------------------------------------

/* ==================
          图片
 ==================== */

 image {
	max-width: 100%;
	display: inline-block;
	position: relative;
	z-index: 0;
}

image.loading::before {
	content: "";
	background-color: #f5f5f5;
	display: block;
	position: absolute;
	width: 100%;
	height: 100%;
	z-index: -2;
}

image.loading::after {
	content: "\e7f1";
	font-family: "icon";
	position: absolute;
	top: 0;
	left: 0;
	width: 32rpx;
	height: 32rpx;
	line-height: 32rpx;
	right: 0;
	bottom: 0;
	z-index: -1;
	font-size: 32rpx;
	margin: auto;
	color: #ccc;
	-webkit-animation: icon-spin 2s infinite linear;
	animation: icon-spin 2s infinite linear;
	display: block;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\layout.wxss
--------------------------------------------------
/* ==================
          布局
 ==================== */

/*  -- flex弹性布局 -- */

.flex {
	display: flex;
}

.flex-row {
	width: 100%;
	display: flex;
	flex-direction: row;
	align-items: center;
	justify-content: center;
}

.flex-column {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.basis-xs {
	flex-basis: 20%;
}

.basis-sm {
	flex-basis: 40%;
}

.basis-df {
	flex-basis: 50%;
}

.basis-lg {
	flex-basis: 60%;
}

.basis-xl {
	flex-basis: 80%;
}

.flex-sub {
	flex: 1;
}

.flex-twice {
	flex: 2;
}

.flex-treble {
	flex: 3;
}

.flex-direction {
	flex-direction: column;
}

.flex-wrap {
	flex-wrap: wrap;
}

.align-start {
	align-items: flex-start;
}

.align-end {
	align-items: flex-end;
}

.align-center {
	align-items: center;
}

.align-stretch {
	align-items: stretch;
}

.self-start {
	align-self: flex-start;
}

.self-center {
	align-self: flex-center;
}

.self-end {
	align-self: flex-end;
}

.self-stretch {
	align-self: stretch;
}

.align-stretch {
	align-items: stretch;
}

.justify-start {
	justify-content: flex-start;
}

.justify-end {
	justify-content: flex-end;
}

.justify-center {
	justify-content: center;
}

.justify-between {
	justify-content: space-between;
}

.justify-around {
	justify-content: space-around;
}

/*  -- 内外边距 -- */

.margin-0 {
	margin: 0;
}

.margin-xxs {
	margin: 5rpx;
}

.margin-xs {
	margin: 10rpx;
}

.margin-s {
	margin: 20rpx;
}

.margin {
	margin: 30rpx;
}

.margin-lg {
	margin: 40rpx;
}

.margin-xl {
	margin: 50rpx;
}

.margin-xxl {
	margin: 60rpx;
}

.margin-top-xxxs {
	margin-top: 5rpx;
}

.margin-top-xxs {
	margin-top: 5rpx;
}

.margin-top-xs {
	margin-top: 10rpx;
}

.margin-top-s {
	margin-top: 20rpx;
}

.margin-top {
	margin-top: 30rpx;
}

.margin-top-l {
	margin-top: 40rpx;
}

.margin-top-xl {
	margin-top: 50rpx;
}

.margin-top-xxl {
	margin-top: 60rpx;
}

.margin-right-xxxs {
	margin-right: 3rpx;
}

.margin-right-xxs {
	margin-right: 5rpx;
}

.margin-right-xs {
	margin-right: 10rpx;
}

.margin-right-s {
	margin-right: 20rpx;
}

.margin-right {
	margin-right: 30rpx;
}

.margin-right-l {
	margin-right: 40rpx;
}

.margin-right-xl {
	margin-right: 50rpx;
}

.margin-right-xxl {
	margin-right: 60rpx;
}

.margin-bottom-xxs {
	margin-bottom: 5rpx;
}

.margin-bottom-xxxs {
	margin-bottom: 3rpx;
}

.margin-bottom-xs {
	margin-bottom: 10rpx;
}

.margin-bottom-s {
	margin-bottom: 20rpx;
}

.margin-bottom {
	margin-bottom: 30rpx;
}

.margin-bottom-l {
	margin-bottom: 40rpx;
}

.margin-bottom-xl {
	margin-bottom: 50rpx;
}

.margin-bottom-xxl {
	margin-bottom: 60rpx;
}

.margin-bottom-xxxl {
	margin-bottom: 70rpx;
}

.safe-bottom {
	padding-bottom: constant(safe-area-inset-bottom) !important;
	padding-bottom: env(safe-area-inset-bottom) !important;
}   

.margin-left-xxxs {
	margin-left: 3rpx;
}

.margin-left-xxs {
	margin-left: 5rpx;
}

.margin-left-xs {
	margin-left: 10rpx;
}

.margin-left-s {
	margin-left: 20rpx;
}

.margin-left {
	margin-left: 30rpx;
}

.margin-left-l {
	margin-left: 40rpx;
}

.margin-left-xl {
	margin-left: 50rpx;
}

.margin-left-xxl {
	margin-left: 60rpx;
}


.padding-0 {
	padding: 0;
}

.padding-xs {
	padding: 10rpx;
}

.padding-s {
	padding: 20rpx;
}

.padding {
	padding: 30rpx;
}

.padding-l {
	padding: 40rpx;
}

.padding-xl {
	padding: 50rpx;
}

.padding-top-xs {
	padding-top: 10rpx;
}

.padding-top-s {
	padding-top: 20rpx;
}

.padding-top {
	padding-top: 30rpx;
}

.padding-top-l {
	padding-top: 40rpx;
}

.padding-top-xl {
	padding-top: 50rpx;
}

.padding-right-xs {
	padding-right: 10rpx;
}

.padding-right-s {
	padding-right: 20rpx;
}

.padding-right {
	padding-right: 30rpx;
}

.padding-right-l {
	padding-right: 40rpx;
}

.padding-right-xl {
	padding-right: 50rpx;
}

.padding-bottom-xs {
	padding-bottom: 10rpx;
}

.padding-bottom-s {
	padding-bottom: 20rpx;
}

.padding-bottom {
	padding-bottom: 30rpx;
}

.padding-bottom-l {
	padding-bottom: 40rpx;
}

.padding-bottom-xl {
	padding-bottom: 50rpx;
}

.padding-left-xs {
	padding-left: 10rpx;
}

.padding-left-s {
	padding-left: 20rpx;
}

.padding-left {
	padding-left: 30rpx;
}

.padding-left-l {
	padding-left: 40rpx;
}

.padding-left-xl {
	padding-left: 50rpx;
}

.padding-lr-xs {
	padding-left: 10rpx;
	padding-right: 10rpx;
}

.padding-lr-s {
	padding-left: 20rpx;
	padding-right: 20rpx;
}

.padding-lr {
	padding-left: 30rpx;
	padding-right: 30rpx;
}

.padding-lr-l {
	padding-left: 40rpx;
	padding-right: 40rpx;
}

.padding-lr-xl {
	padding-left: 50rpx;
	padding-right: 50rpx;
}


/* grid布局 */

.grid {
	display: flex;
	flex-wrap: wrap;
}

.grid.grid-square {
	overflow: hidden;
}

.grid.grid-square .cu-tag {
	position: absolute;
	right: 0;
	top: 0;
	border-bottom-left-radius: 6rpx;
	padding: 6rpx 12rpx;
	height: auto;
	background-color: rgba(0, 0, 0, 0.5);
}

.grid.grid-square>view>text[class*="cuIcon-"] {
	font-size: 52rpx;
	position: absolute;
	color: var(--grey);
	margin: auto;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	flex-direction: column;
}

.grid.grid-square>view {
	margin-right: 20rpx;
	margin-bottom: 20rpx;
	border-radius: 6rpx;
	position: relative;
	overflow: hidden;
}

.grid.grid-square>view.bg-img image {
	width: 100%;
	height: 100%;
	position: absolute;
}

.grid.col-1.grid-square>view {
	padding-bottom: 100%;
	height: 0;
	margin-right: 0;
}

.grid.col-2.grid-square>view {
	padding-bottom: calc((100% - 20rpx)/2);
	height: 0;
	width: calc((100% - 20rpx)/2);
}

.grid.col-3.grid-square>view {
	padding-bottom: calc((100% - 40rpx)/3);
	height: 0;
	width: calc((100% - 40rpx)/3);
}

.grid.col-4.grid-square>view {
	padding-bottom: calc((100% - 60rpx)/4);
	height: 0;
	width: calc((100% - 60rpx)/4);
}

.grid.col-5.grid-square>view {
	padding-bottom: calc((100% - 80rpx)/5);
	height: 0;
	width: calc((100% - 80rpx)/5);
}

.grid.col-2.grid-square>view:nth-child(2n),
.grid.col-3.grid-square>view:nth-child(3n),
.grid.col-4.grid-square>view:nth-child(4n),
.grid.col-5.grid-square>view:nth-child(5n) {
	margin-right: 0;
}

.grid.col-1>view {
	width: 100%;
}

.grid.col-2>view {
	width: 50%;
}

.grid.col-3>view {
	width: 33.33%;
}

.grid.col-4>view {
	width: 25%;
}

.grid.col-5>view {
	width: 20%;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\list.wxss
--------------------------------------------------
/* ==================
          列表
 ==================== */
.grayscale {
	filter: grayscale(1);
}

.comm-list+.comm-list {
	margin-top: 30rpx
}

.comm-list>.item {
	transition: all .6s ease-in-out 0s;
	transform: translateX(0rpx)
}

.comm-list>.item.move-cur {
	transform: translateX(-260rpx)
}

.comm-list>.item .move {
	position: absolute;
	right: 0;
	display: flex;
	width: 260rpx;
	height: 100%;
	transform: translateX(100%)
}

.comm-list>.item .move view {
	display: flex;
	flex: 1;
	justify-content: center;
	align-items: center
}

.comm-list.menu-avatar {
	overflow: hidden;
}

.comm-list.menu-avatar>.item {
	position: relative;
	display: flex;
	padding-right: 10rpx;
	height: 140rpx;
	background-color: var(--white);
	justify-content: flex-end;
	align-items: center
}

.comm-list.menu-avatar>.item>.avatar {
	position: absolute;
	left: 30rpx
}

.comm-list.menu-avatar>.item .flex .text-cut {
	max-width: 510rpx
}

.comm-list.menu-avatar>.item .content {
	position: absolute;
	left: 146rpx;
	width: calc(100% - 96rpx - 60rpx - 120rpx - 20rpx);
	line-height: 1.6em;
}

.comm-list.menu-avatar>.item .content.flex-sub {
	width: calc(100% - 96rpx - 60rpx - 20rpx);
}

.comm-list.menu-avatar>.item .content>view:first-child {
	font-size: 30rpx;
	display: flex;
	align-items: center
}

.comm-list.menu-avatar>.item .content .tag.small {
	display: inline-block;
	margin-left: 10rpx;
	height: 28rpx;
	font-size: 16rpx;
	line-height: 32rpx
}

.comm-list.menu-avatar>.item .action {
	width: 100rpx;
	text-align: center
}

.comm-list.menu-avatar>.item .action view+view {
	margin-top: 10rpx
}

.comm-list.menu-avatar.comment>.item .content {
	position: relative;
	left: 0;
	width: auto;
	flex: 1;
}

.comm-list.menu-avatar.comment>.item {
	padding: 30rpx 30rpx 30rpx 120rpx;
	height: auto
}

.comm-list.menu-avatar.comment .avatar {
	align-self: flex-start
}

.comm-list.menu>.item {
	position: relative;
	display: flex;
	padding: 0 30rpx;
	min-height: 100rpx;
	background-color: var(--white);
	justify-content: space-between;
	align-items: center
}

.comm-list.menu>.item:last-child:after {
	border: none
}

.comm-list.menu>.item:after {
	position: absolute;
	top: 0;
	left: 0;
	box-sizing: border-box;
	width: 200%;
	height: 200%;
	border-bottom: 1rpx solid #ddd;
	border-radius: inherit;
	content: " ";
	transform: scale(.5);
	transform-origin: 0 0;
	pointer-events: none
}

.comm-list.menu>.item.grayscale {
	background-color: #f5f5f5
}

.comm-list.menu>.item.cur {
	background-color: #fcf7e9
}

.comm-list.menu>.item.arrow {
	padding-right: 90rpx
}

.comm-list.menu>.item.arrow:before {
	position: absolute;
	top: 0;
	right: 30rpx;
	bottom: 0;
	display: block;
	margin: auto;
	width: 30rpx;
	height: 30rpx;
	color: var(--grey);
	content: "\e6a3";
	text-align: center;
	font-size: 34rpx;
	font-family: "icon";
	line-height: 30rpx
}

.comm-list.menu>.item button.content {
	padding: 0;
	background-color: transparent;
	justify-content: flex-start
}

.comm-list.menu>.item button.content:after {
	display: none
}

.comm-list.menu>.item .avatar-group .avatar {
	border-color: var(--white)
}

.comm-list.menu>.item .content>view:first-child {
	display: flex;
	align-items: center
}

.comm-list.menu>.item .content>text[class*=icon] {
	display: inline-block;
	margin-right: 10rpx;
	width: 1.6em;
	text-align: center
}

.comm-list.menu>.item .content>image {
	display: inline-block;
	margin-right: 10rpx;
	width: 1.6em;
	height: 1.6em;
	vertical-align: middle
}

.comm-list.menu>.item .content {
	font-size: 30rpx;
	line-height: 1.6em;
	flex: 1
}

.comm-list.menu>.item .content .tag.small {
	display: inline-block;
	margin-left: 10rpx;
	height: 28rpx;
	font-size: 16rpx;
	line-height: 32rpx
}

.comm-list.menu>.item .action .tag:empty {
	right: 10rpx
}

.comm-list.menu {
	display: block;
	overflow: hidden
}

.comm-list.menu.small-border>.item:after {
	left: 30rpx;
	width: calc(200% - 120rpx)
}

.comm-list.grid>.item {
	position: relative;
	display: flex;
	padding: 20rpx 0 30rpx;
	transition-duration: 0s;
	flex-direction: column
}

.comm-list.grid>.item:after {
	position: absolute;
	top: 0;
	left: 0;
	box-sizing: border-box;
	width: 200%;
	height: 200%;
	border-right: 1px solid rgba(0, 0, 0, .1);
	border-bottom: 1px solid rgba(0, 0, 0, .1);
	border-radius: inherit;
	content: " ";
	transform: scale(.5);
	transform-origin: 0 0;
	pointer-events: none
}

.comm-list.grid>.item text {
	display: block;
	margin-top: 10rpx;
	color: #888;
	font-size: 26rpx;
	line-height: 40rpx
}

.comm-list.grid>.item [class*=icon] {
	position: relative;
	display: block;
	margin-top: 20rpx;
	width: 100%;
	font-size: 48rpx
}

.comm-list.grid>.item .tag {
	right: auto;
	left: 50%;
	margin-left: 20rpx
}

.comm-list.grid {
	background-color: var(--white);
	text-align: center
}

.comm-list.grid.no-border>.item {
	padding-top: 10rpx;
	padding-bottom: 20rpx
}

.comm-list.grid.no-border>.item:after {
	border: none
}

.comm-list.grid.no-border {
	padding: 20rpx 10rpx
}

.comm-list.grid.col-3>.item:nth-child(3n):after,
.comm-list.grid.col-4>.item:nth-child(4n):after,
.comm-list.grid.col-5>.item:nth-child(5n):after {
	border-right-width: 0
}

.comm-list.card-menu {
	overflow: hidden;
	margin-right: 30rpx;
	margin-left: 30rpx;
	border-radius: 20rpx
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\load.wxss
--------------------------------------------------
/* ==================
          加载
 ==================== */

 .load {
	display: block;
	line-height: 3em;
	text-align: center;
	z-index: 99999;
}

.load::before {
	font-family: "icon";
	display: inline-block;
	margin-right: 6rpx;
}

.load.loading::before, .load.loading-none::before {
	content: "\e67a";
	animation: icon-spin 2s infinite linear;
}

.load.loading::after {
	content: "加载中...";
}

.load.over::before {
	content: "\e64a";
}

.load.over::after {
	content: "没有更多了";
}

.load.error::before {
	content: "\e658";
}
/*
.load.error::after {
	content: "加载失败";
}*/

.load.notexist::before {
	content: "\e658";
}

.load.notexist::after {
	content: "数据不存在或者已删除";
}

.load.load-icon::before {
	font-size: 32rpx;
}

.load.load-icon::after {
	display: none;
}

.load.load-icon.over {
	display: none;
}

.load.load-modal {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 140rpx;
	left: 0;
	margin: auto;
	width: 260rpx;
	height: 260rpx;
	background-color: var(--white);
	border-radius: 10rpx;
	box-shadow: 0 0 0rpx 2000rpx rgba(0, 0, 0, 0.5);
	display: flex;
	align-items: center;
	flex-direction: column;
	justify-content: center;
	font-size: 28rpx;
	z-index: 9999;
	line-height: 2.4em;
}

.load.load-modal [class*="icon-"] {
	font-size: 60rpx;
}

.load.load-modal image {
	width: 70rpx;
	height: 70rpx;
}

.load.load-modal::after {
	content: "";
	position: absolute;
	background-color: var(--white);
	border-radius: 50%;
	width: 200rpx;
	height: 200rpx;
	font-size: 10px;
	border-top: 6rpx solid rgba(0, 0, 0, 0.05);
	border-right: 6rpx solid rgba(0, 0, 0, 0.05);
	border-bottom: 6rpx solid rgba(0, 0, 0, 0.05);
	border-left: 6rpx solid var(--orange);
	animation: icon-spin 1s infinite linear;
	z-index: -1;
}

.load-progress {
	pointer-events: none;
	top: 0;
	position: fixed;
	width: 100%;
	left: 0;
	z-index: 2000;
}

.load-progress.hide {
	display: none;
}

.load-progress .load-progress-bar {
	position: relative;
	width: 100%;
	height: 4rpx;
	overflow: hidden;
	transition: all 200ms ease 0s;
}

.load-progress .load-progress-spinner {
	position: absolute;
	top: 10rpx;
	right: 10rpx;
	z-index: 2000;
	display: block;
}

.load-progress .load-progress-spinner::after {
	content: "";
	display: block;
	width: 24rpx;
	height: 24rpx;
	-webkit-box-sizing: border-box;
	box-sizing: border-box;
	border: solid 4rpx transparent;
	border-top-color: inherit;
	border-left-color: inherit;
	border-radius: 50%;
	-webkit-animation: load-progress-spinner 0.4s linear infinite;
	animation: load-progress-spinner 0.4s linear infinite;
}

@-webkit-keyframes load-progress-spinner {
	0% {
		-webkit-transform: rotate(0);
		transform: rotate(0);
	}

	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}

@keyframes load-progress-spinner {
	0% {
		-webkit-transform: rotate(0);
		transform: rotate(0);
	}

	100% {
		-webkit-transform: rotate(360deg);
		transform: rotate(360deg);
	}
}


/* ==================
         进度条
 ==================== */

.progress {
	overflow: hidden;
	height: 28rpx;
	background-color: #ebeef5;
	display: inline-flex;
	align-items: center;
	width: 100%;
}

.progress+view,
.progress+text {
	line-height: 1;
}

.progress.xs {
	height: 10rpx;
}

.progress.sm {
	height: 20rpx;
}

.progress view {
	width: 0;
	height: 100%;
	align-items: center;
	display: flex;
	justify-items: flex-end;
	justify-content: space-around;
	font-size: 20rpx;
	color: var(--white);
	transition: width 0.6s ease;
}

.progress text {
	align-items: center;
	display: flex;
	font-size: 20rpx;
	color: var(--black);
	text-indent: 10rpx;
}

.progress.text-progress {
	padding-right: 60rpx;
}

.progress.striped view {
	background-image: linear-gradient(45deg, rgba(255, 255, 255, 0.15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.15) 50%, rgba(255, 255, 255, 0.15) 75%, transparent 75%, transparent);
	background-size: 72rpx 72rpx;
}

.progress.active view {
	animation: progress-stripes 2s linear infinite;
}

@keyframes progress-stripes {
	from {
		background-position: 72rpx 0;
	}

	to {
		background-position: 0 0;
	}
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\modal.wxss
--------------------------------------------------


/* ==================
         模态窗口
 ==================== */

 .modal {
	position: fixed;
	top: 0;
	right: 0;
	bottom: 0;
	left: 0;
	z-index: 1110;
	opacity: 0;
	outline: 0;
	text-align: center;
	-ms-transform: scale(1.185);
	transform: scale(1.185);
	backface-visibility: hidden;
	perspective: 2000rpx;
	background: rgba(0, 0, 0, 0.6);
	transition: all 0.3s ease-in-out 0s;
	pointer-events: none;
}

.modal::before {
	content: "\200B";
	display: inline-block;
	height: 100%;
	vertical-align: middle;
}

.modal.show {
	opacity: 1;
	transition-duration: 0.3s;
	-ms-transform: scale(1);
	transform: scale(1);
	overflow-x: hidden;
	overflow-y: auto;
	pointer-events: auto;
}

.modal .dialog {
	position: relative;
	display: inline-block;
	vertical-align: middle;
	margin-left: auto;
	margin-right: auto;
	width: 680rpx;
	max-width: 100%;
	background-color: #fff;
	border-radius: 10rpx;
	overflow: hidden;
}

.modal.bottom-modal::before {
	vertical-align: bottom;
}

.modal.bottom-modal .dialog {
	width: 100%;
	border-radius: 20rpx 20rpx 0 0;
	background-color: #fff;
}

.modal.bottom-modal .dialog {
	width: 100%;
	border-radius: 20rpx 20rpx 0 0;
	background-color: #fff;
}

.modal.bottom-modal {
	margin-bottom: -1000rpx;
}

.modal.bottom-modal.show {
	margin-bottom: 0;
}

.modal.drawer-modal {
	transform: scale(1);
	display: flex;
}

.modal.drawer-modal .dialog {
	height: 100%;
	min-width: 200rpx;
	border-radius: 0;
	margin: initial;
	transition-duration: 0.3s;
}

.modal.drawer-modal.justify-start .dialog {
	transform: translateX(-100%);
}

.modal.drawer-modal.justify-end .dialog {
	transform: translateX(100%);
}

.modal.drawer-modal.show .dialog {
	transform: translateX(0%);
}
.modal .dialog>.bar:first-child .action{
  min-width: 100rpx;
  /*margin-right: 0;*/
  min-height: 100rpx;
}


.dialog-list+.dialog-list {
	margin-top: 30rpx
}

.dialog-list>.dialog-list-item {
	transition: all .6s ease-in-out 0s;
	transform: translateX(0rpx)
}

.dialog-list.menu>.dialog-list-item {
	position: relative;
	display: flex;
	padding: 0 30rpx;
	min-height: 100rpx;
	background-color: var(--white);
	justify-content: space-between;
	align-items: center
}

.dialog-list.menu>.dialog-list-item:last-child:after {
	border: none
}

.dialog-list.menu>.dialog-list-item:after {
	position: absolute;
	top: 0;
	left: 0;
	box-sizing: border-box;
	width: 200%;
	height: 200%;
	border-bottom: 1rpx solid #ddd;
	border-radius: inherit;
	content: " ";
	transform: scale(.5);
	transform-origin: 0 0;
	pointer-events: none
}

.dialog-list.menu>.dialog-list-item.grayscale {
	background-color: #f5f5f5
}

.dialog-list.menu>.dialog-list-item.cur {
	background-color: #fcf7e9
}

.dialog-list.menu>.dialog-list-item.arrow {
	padding-right: 90rpx
}

.dialog-list.menu>.dialog-list-item.arrow:before {
	position: absolute;
	top: 0;
	right: 30rpx;
	bottom: 0;
	display: block;
	margin: auto;
	width: 30rpx;
	height: 30rpx;
	color: var(--grey);
	content: "\e6a3";
	text-align: center;
	font-size: 34rpx;
	font-family: "icon";
	line-height: 30rpx
}

.dialog-list.menu>.dialog-list-item button.content {
	padding: 0;
	background-color: transparent;
	justify-content: flex-start
}

.dialog-list.menu>.dialog-list-item button.content:after {
	display: none
}
  
.dialog-list.menu>.dialog-list-item .content>view:first-child {
	display: flex;
	align-items: center
}

.dialog-list.menu>.dialog-list-item .content>text[class*=icon] {
	display: inline-block;
	margin-right: 10rpx;
	width: 1.6em;
	text-align: center
}

.dialog-list.menu>.dialog-list-item .content>image {
	display: inline-block;
	margin-right: 10rpx;
	width: 1.6em;
	height: 1.6em;
	vertical-align: middle
}

.dialog-list.menu>.dialog-list-item .content {
	font-size: 30rpx;
	line-height: 1.6em;
	flex: 1
}


--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\nav.wxss
--------------------------------------------------

/* ==================
         导航栏
 ==================== */

 .tab {
	white-space: nowrap;
}

::-webkit-scrollbar {
	display: none;
}

.tab .item {
	height: 90rpx;
	display: inline-block;
	line-height: 90rpx;
	margin: 0 10rpx;
	padding: 0 20rpx;
}

.tab .item.cur {
	border-bottom: 4rpx solid;
}


--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\shadow.wxss
--------------------------------------------------

/* ==================
          阴影
 ==================== */
/* -- 形状阴影 -- */
.shadow[class*='white'] {
	--ShadowSize: 0 1rpx 6rpx;
}

.shadow-large {
	--ShadowSize: 0rpx 40rpx 100rpx 0rpx;
}

.shadow-warp {
	position: relative;
	box-shadow: 0 0 10rpx rgba(0, 0, 0, 0.1);
}

.shadow-warp:before,
.shadow-warp:after {
	position: absolute;
	content: "";
	top: 20rpx;
	bottom: 30rpx;
	left: 20rpx;
	width: 50%;
	box-shadow: 0 30rpx 20rpx rgba(0, 0, 0, 0.2);
	transform: rotate(-3deg);
	z-index: -1;
}

.shadow-warp:after {
	right: 20rpx;
	left: auto;
	transform: rotate(3deg);
}

.shadow-blur {
	position: relative;
}

.shadow-blur::before {
	content: "";
	display: block;
	background: inherit;
	filter: blur(10rpx);
	position: absolute;
	width: 100%;
	height: 100%;
	top: 10rpx;
	left: 10rpx;
	z-index: -1;
	opacity: 0.4;
	transform-origin: 0 0;
	border-radius: inherit;
	transform: scale(1, 1);
}


.shadow {
	box-shadow: var(--ShadowSize) var(--greyShadow);
}

.shadow[class*="-red"] {
	box-shadow: var(--ShadowSize) var(--redShadow);
}

.shadow[class*="-orange"] {
	box-shadow: var(--ShadowSize) var(--orangeShadow);
}

.shadow[class*="-yellow"] {
	box-shadow: var(--ShadowSize) var(--yellowShadow);
}

.shadow[class*="-olive"] {
	box-shadow: var(--ShadowSize) var(--oliveShadow);
}

.shadow[class*="-green"] {
	box-shadow: var(--ShadowSize) var(--greenShadow);
}

.shadow[class*="-darkgreen"] {
	box-shadow: var(--ShadowSize) var(--darkgreenShadow);
}

.shadow[class*="-cyan"] {
	box-shadow: var(--ShadowSize) var(--cyanShadow);
}

.shadow[class*="-blue"] {
	box-shadow: var(--ShadowSize) var(--blueShadow);
}

.shadow[class*="-purple"] {
	box-shadow: var(--ShadowSize) var(--purpleShadow);
}

.shadow[class*="-mauve"] {
	box-shadow: var(--ShadowSize) var(--mauveShadow);
}

.shadow[class*="-pink"] {
	box-shadow: var(--ShadowSize) var(--pinkShadow);
}

.shadow[class*="-brown"] {
	box-shadow: var(--ShadowSize) var(--brownShadow);
}

.shadow[class*="-grey"] {
	box-shadow: var(--ShadowSize) var(--greyShadow);
}

.shadow[class*="-gray"] {
	box-shadow: var(--ShadowSize) var(--grayShadow);
}

.shadow[class*="-black"] {
	box-shadow: var(--ShadowSize) var(--blackShadow);
}

.shadow[class*="-white"] {
	box-shadow: var(--ShadowSize) var(--blackShadow);
}


--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\table.wxss
--------------------------------------------------
page {
	--borderColor: #ccc;
}

.table {
	position: relative;
	font-size: 28rpx;
	background: #fff;
	border-right: none;
	overflow: hidden;
}

.table.sticky {
	overflow: visible;
}

.table .table-top {
	width: 100%;
	background-color: #fff;
}

.table.sticky .table-top {
	width: 100%;
	position: sticky;
	top: 0;
	z-index: 9999999;
}

.table .full {
	flex-grow: 1
}

.thead {
	border-bottom: none;
	display: flex;
	justify-content: flex-start;
	overflow: visible;
	color: #333;
	border: 1px solid var(--borderColor);
	box-sizing: border-box;
	background-color: #f2f2f2;
}

.thead .td {
	padding: 20rpx 10rpx;
	font-weight: bold;
	display: inline-block;
	white-space: nowrap;
	text-align: center;
	border-right: 1rpx solid #fff;
}

.thead .td:last-child {
	border-right: none;
}

.thead.border .td {
	border-right: 1rpx solid var(--borderColor);
}

.thead.border .td:last-child {
	border-right: none;
}

/* .tr{
  display: flex;
  white-space:nowrap; 
} */
.tbody {
	box-sizing: border-box;
	font-size: 28rpx;
	color: #444;
	border: 1px solid var(--borderColor);
	border-top: none;
}

.tbody .line {
	padding: 25rpx 20rpx 10rpx;
	text-align: center;
	font-size: 28rpx;
	border-bottom: 1rpx solid var(--borderColor);
}

.tbody .line>text {
	position: relative;
}

.tbody .line>text::before {
	content: '';
	position: absolute;
	right: 130%;
	top: 50%;
	width: 150rpx;
	border-bottom: 1rpx dashed var(--borderColor);
}

.tbody .line>text::after {
	content: '';
	position: absolute;
	left: 130%;
	top: 50%;
	width: 150rpx;
	border-bottom: 1rpx dashed var(--borderColor);
}




.tbody .tr {
	display: flex;
	border-bottom: 1px solid var(--borderColor);
}

.tbody .tr:last-child {
	border-bottom: none;
}

.tbody .tr:last-child {
	border-bottom-left-radius: 8rpx;
	border-bottom-right-radius: 8rpx;
}

.tbody .tr.stripe {
	background: #fff;
	border-bottom: none;
}

.tbody .tr.stripe:nth-child(2n) {
	background: #F6F6F6;
}

.tbody .tr .td {
	white-space: wrap;
	padding: 20rpx 10rpx;
	text-align: center;
}

.tbody .tr.border .td {
	border-right: 1rpx solid var(--borderColor);
}

.tbody .tr.border .td:last-child {
	border-right: none;
}

.table .no-data {
	display: flex;
	padding: 50rpx;
	color: #666;
	justify-content: center;
}

.table .table-form {
	padding: 20rpx;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	flex-wrap: wrap;
}

.table .table-form .item {
	width: 50%;
	padding: 10rpx 5rpx;
	display: flex;
	justify-content: flex-start;
	align-items: center;
}

.table .table-form .item .title {
	font-weight: bold;
}

.table .table-form .item .content {
	flex: 1;
	border-bottom: 1rpx solid #ccc;
	margin: 0 10rpx 0rpx 0;
	padding: 0 0 0 5rpx;
	height: 50rpx;
}

.table .table-form .item .content input {
	width: 100%;
}

.table .table-form .oprt {
	margin-top: 10rpx;
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: flex-end;
}

.table .table-form .oprt>view {
	padding: 5rpx 40rpx;
	background-color: #f2f2f2;
	border-radius: 10rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.table .table-form .button-hover {
	opacity: .9;
	transform: scale(0.95, 0.95);
	position: relative;
	top: 3rpx;
	left: 3rpx;
	box-shadow: 0px 0px 8px rgba(0, 0, 0, .1) inset;
}

.table .table-form .oprt .submit {
	background-color: var(--adminColor);
	color: #fff;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\tag.wxss
--------------------------------------------------

/* ==================
          标签
 ==================== */

 .tag {
	font-size: 24rpx;
	vertical-align: middle;
	position: relative;
	display: inline-flex;
	align-items: center;
	justify-content: center;
	box-sizing: border-box;
	padding: 0rpx 16rpx;
	height: 48rpx;
	font-family: Helvetica Neue, Helvetica, sans-serif;
	white-space: nowrap;
}

.tag:not([class*="bg"]):not([class*="border"]) {
	background-color: var(--ghostWhite);
}

.tag[class*="border-"]::after {
	content: " ";
	width: 200%;
	height: 200%;
	position: absolute;
	top: 0;
	left: 0;
	border: 1rpx solid currentColor;
	transform: scale(0.5);
	transform-origin: 0 0;
	box-sizing: border-box;
	border-radius: inherit;
	z-index: 1;
	pointer-events: none;
}

.tag.radius[class*="border"]::after {
	border-radius: 12rpx;
}

.tag.round[class*="border"]::after {
	border-radius: 1000rpx;
}

.tag[class*="border-"]::after {
	border-radius: 0;
} 

.tag.border-bold::after {
	border: 6rpx solid currentColor;
} 

.tag+.tag {
	margin-left: 10rpx;
}

.tag.small {
	font-size: 20rpx;
	padding: 0rpx 12rpx;
	height: 32rpx;
}

.capsule {
	display: inline-flex;
	vertical-align: middle;
}

.capsule+.capsule {
	margin-left: 10rpx;
}

.capsule .tag {
	margin: 0;
}

.capsule .tag[class*="border-"]:last-child::after {
	border-left: 0rpx solid transparent;
}

.capsule .tag[class*="border-"]:first-child::after {
	border-right: 0rpx solid transparent;
}

.capsule.radius .tag:first-child {
	border-top-left-radius: 6rpx;
	border-bottom-left-radius: 6rpx;
}

.capsule.radius .tag:last-child::after,
.capsule.radius .tag[class*="border-"] {
	border-top-right-radius: 12rpx;
	border-bottom-right-radius: 12rpx;
}

.capsule.round .tag:first-child {
	border-top-left-radius: 200rpx;
	border-bottom-left-radius: 200rpx;
	text-indent: 4rpx;
}

.capsule.round .tag:last-child::after,
.capsule.round .tag:last-child {
	border-top-right-radius: 200rpx;
	border-bottom-right-radius: 200rpx;
	text-indent: -4rpx;
}

.tag.badge {
	border-radius: 200rpx;
	position: absolute;
	top: -10rpx;
	right: -10rpx;
	font-size: 20rpx;
	padding: 0rpx 10rpx;
	height: 28rpx;
	color: var(--white);
}

.tag.badge:not([class*="bg-"]) {
	background-color: #dd514c;
}

.tag:empty:not([class*="icon-"]) {
	padding: 0rpx;
	width: 16rpx;
	height: 16rpx;
	top: -4rpx;
	right: -4rpx;
}

.tag[class*="icon-"] {
	width: 32rpx;
	height: 32rpx;
	top: -4rpx;
	right: -4rpx;
}

--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\base\text.wxss
--------------------------------------------------


/* ==================
          文本
 ==================== */ 
 .text-xs,
 [class*="icon-"].text-xs {
	 font-size: 20rpx!important;
 }
 
 .text-s,
 [class*="icon-"].text-s {
	 font-size: 24rpx!important;
 }
 
 .text-normal,
 [class*="icon-"].text-normal {
	 font-size: 28rpx!important;
	 font-weight:normal;
 }
 
 .text-l,
 [class*="icon-"].text-l {
	 font-size: 32rpx!important;
 }
 
 .text-xl,
 [class*="icon-"].text-xl {
	 font-size: 36rpx!important;
 }
 
 .text-xxl,
 [class*="icon-"].text-xxl {
	 font-size: 44rpx!important;
 }
 
 .text-xxxl,
 [class*="icon-"].text-xxxl {
	 font-size: 80rpx!important;
 }
 
 .text-xxxxl,
 [class*="icon-"].text-xxxxl {
	 font-size: 120rpx!important;
 }
 
 
 .text-cut {
	 text-overflow: ellipsis;
	 white-space: nowrap;
	 overflow: hidden;
 }
 
 .content-cut { 
	 text-overflow: ellipsis;
	 overflow: hidden; 
 }
 .content-cut-one { 
	text-overflow: ellipsis;
	overflow: hidden;
	display: -webkit-box;
	word-break: break-all;
	-webkit-box-orient: vertical; 
	-webkit-line-clamp: 1; 
}
 .content-cut-two { 
	 text-overflow: ellipsis;
	 overflow: hidden;
	 display: -webkit-box;
	 word-break: break-all;
	 -webkit-box-orient: vertical; 
	 -webkit-line-clamp: 2; 
 }
 
 .content-cut-three { 
	 text-overflow: ellipsis;
	 overflow: hidden;
	 display: -webkit-box;
	 word-break: break-all;
	 -webkit-box-orient: vertical;
	 -webkit-line-clamp: 3; 
 }

 .content-cut-four { 
	text-overflow: ellipsis;
	overflow: hidden;
	display: -webkit-box;
	word-break: break-all;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: 4; 
}

.content-cut-five { 
	text-overflow: ellipsis;
	overflow: hidden;
	display: -webkit-box;
	word-break: break-all;
	-webkit-box-orient: vertical;
	-webkit-line-clamp: 5; 
}
 
 .text-bold {
	 font-weight: bold!important;
 }
 
 .text-center {
	 text-align: center!important;
 }
 
 .text-content {
	 line-height: 1.6!important;
 }
 
 .text-left {
	 text-align: left!important;
 }
 
 .text-right {
	 text-align: right!important;
 }
 
 .text-red,
 .border-red {
	 color: var(--red)!important;
 }
 
 .text-orange,
 .border-orange {
	 color: var(--orange)!important;
 }
 
 .text-yellow,
 .border-yellow {
	 color: var(--yellow)!important;
 }
 
 .text-olive,
 .border-olive {
	 color: var(--olive)!important;
 }
 
 .text-green,
 .border-green {
	 color: var(--green)!important;
 }
 
 .text-darkgreen,
 .border-darkgreen {
	 color: var(--darkgreen)!important;
 }

 .text-cyan,
 .border-cyan {
	 color: var(--cyan)!important;
 }
 
 .text-blue,
 .border-blue {
	 color: var(--blue)!important;
 }
 
 .text-purple,
 .border-purple {
	 color: var(--purple)!important;
 }
 
 .text-mauve,
 .border-mauve {
	 color: var(--mauve)!important;
 }
 
 .text-pink,
 .border-pink {
	 color: var(--pink)!important;
 }
 
 .text-brown,
 .border-brown {
	 color: var(--brown)!important;
 }
 
 .text-grey,
 .border-grey {
	 color: var(--grey)!important;
 }
 
 .text-gray,
 .border-gray {
	 color: var(--gray)!important;
 }
 
 .text-black,
 .border-black {
	 color: var(--black)!important;
 }
 
 .text-white,
 .border-white {
	 color: var(--white)!important;
 }  
 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\project\admin_list_style.wxss
--------------------------------------------------

.admin-comm-list .item .info .oprt {
	padding: 0rpx 0rpx;
	display: flex;
	justify-content: space-between;
}

.admin-comm-list .item .info .oprt .btn {
	width: 155rpx;
	margin-right: 0rpx !important;
	height: 60rpx !important;
	padding: 0 0rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\project\my_fav_style.wxss
--------------------------------------------------
.text-pic-list-box .item .simple .simple-title { 
    width: 100%;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\project\my_foot_style.wxss
--------------------------------------------------
.text-pic-list-box .item .simple .simple-title { 
    width: 100%;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\project\search_style.wxss
--------------------------------------------------
.main-search {
	box-sizing: border-box;
	width: 100%;
	height: 100vh;
	display: flex;
	padding: 0;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.main-search .search {
	width: 100%;
}

.main-search .his {
	flex: 1;
	margin-top: 2rpx;
	width: 100%;
	background-color: #fff;
	display: flex;
	flex-direction: column;
	padding: 30rpx;
}

.main-search .his .title {
	width: 100%;
	display: flex;
	align-items: center;
	justify-content: flex-start;
}

.main-search .his .title .tit {
	font-size: 34rpx;
	font-weight: bold;
	flex: 1;
}

.main-search .his .title .del {
	font-size: 32rpx;
	color: #aaa;
	margin-left: auto;
}

.main-search .his .search-content {
	width: 100%;
	display: flex;
	align-items: center;
	flex-wrap: wrap;
	margin-top: 40rpx;
}

.main-search .his .search-content .btn {
	margin-right: 30rpx;
	margin-top: 30rpx;
	font-size: 28rpx;
	padding: 35rpx 45rpx;
	background-color: #f2f2f2;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\public\admin.wxss
--------------------------------------------------
page {
	--adminColor: #2499f2;
	--adminRedColor: #FF6666;
}

.main-admin {
	width: 100%;
	padding: 30rpx 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: flex-start;
	box-sizing: border-box;
	margin-bottom: 100rpx;
}


.main-admin form {
	width: 100%;
}

.text-admin,
.text-blue {
	color: var(--adminColor) !important;
}

.text-red {
	color: var(--adminRedColor) !important;
}

.bg-admin,
.bg-blue {
	background-color: var(--adminColor) !important;
	color: #fff;
}

.bg-admin.light,
.bg-blue.light {
	color: var(--adminColor) !important;
	background-color: #cce6ff !important;
}

.border-admin,
.border-blue {
	border-color: var(--adminColor) !important;
}

.form-box {
	border-radius: 10rpx;
}

.btn {
	border-radius: 10rpx;
}

.search-form.round {
	border-radius: 10rpx;
}

.load.text-grey {
	color: #999 !important;
}

.tabs {
	color: #333 !important;
	font-weight: bold;
}

.tabs .tab-menu.cur:after {
	background-color: var(--adminColor) !important;
}

.tabs .cur {
	color: var(--adminColor) !important;
}

.tabs .tab-menu.cur:after {
	width: 80% !important;
}

.modal-admin .modal-content text {
	text-align: left;
	display: block;
}

.modal-admin .modal-content .pics {
	margin-top: 30rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.modal-admin .modal-content .pics image {
	flex: 1;
	border-radius: 10rpx;
	margin-bottom: 20rpx;
}

.modal-admin .modal-content .modal-list {
	flex: 1;
	border-radius: 10rpx;
	margin: 20rpx 0;
	padding: 20rpx 0;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	width: 100%;
}

.modal-admin .modal-content .modal-list .modal-list-item {
	font-size: 26rpx;
	line-height: 1.6;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	width: 100%;
	margin-bottom: 10rpx;
	padding: 10rpx 0;
	border-bottom: 2rpx dashed #ccc;
	padding: 20rpx 40rpx;
}

.modal-admin .modal-content .modal-list .modal-list-item .item-title {
	width: 100%;
	text-align: left;
	display: flex;
	font-size: 32rpx;
	line-height: 1.6;
	margin-bottom: 10rpx;
}

.modal-admin .modal-content .item-content {
	width: 100%;
	text-align: left;
	display: flex;
	flex-direction: row;
	justify-content: flex-start;
	align-items: flex-start;
	line-height: 50rpx;
	border-bottom: 2rpx dashed #ccc;
	margin-bottom: 10rpx;
}

.modal-admin .modal-content .item-content text {
	display: block;
}

.form-box .title-desc {
	padding-left: 24rpx;
	color: #666;
	padding-bottom: 30rpx;
	border-bottom: 1rpx solid #eee;
}

.form-group .title {
	font-size: 32rpx;
}

/** 通用列表 **/
.admin-comm-list {
	width: 100%;
	padding: 0rpx 20rpx 0rpx;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
}

.admin-comm-list .item {
	width: 100%;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	background-color: #fff;
	border-radius: 5rpx;
	overflow: hidden;
	margin-bottom: 30rpx;
	position: relative;
	border: 1rpx solid #ccc;
}

.admin-comm-list .item .no {
	position: absolute;
	bottom: 0;
	right: 10rpx;
	z-index: 99999;
	font-size: 38rpx;
	font-weight: bold;
	color: #ccc;
	opacity: .5;
}

.admin-comm-list .item:last-child {
	margin-bottom: 0;
}

.admin-comm-list .item .header {
	width: 100%;
	font-size: 28rpx;
	text-align: left;
	line-height: 2.6;
	padding: 0 15rpx;
	display: flex;
	background-color: #f2f2f2;
	justify-content: space-between;
	align-items: center;
}

.admin-comm-list .item .header .left {
	flex: 1;
	font-size: 29rpx;
	text-align: left;
	line-height: 2.6;
	padding: 0 5rpx;
	text-align: left;
	font-weight: bold;
}

.admin-comm-list .item .header .right {
	min-width: 100rpx;
	text-align: right;
}

.admin-comm-list .item .info {
	width: 100%;
	flex-direction: column;
	align-items: flex-start;
	justify-content: flex-start;
	background-color: #fff;
	min-height: 150rpx;
	padding: 15rpx 20rpx 30rpx;
	position: relative;
}

.admin-comm-list .item .info .info-item {
	width: 100%;
	display: flex;
	align-items: flex-start;
	justify-content: flex-start;
	background-color: #fff;
	line-height: 1.5;
	font-size: 26rpx;
	margin-bottom: 20rpx;
}

.admin-comm-list .item .info .info-item.info-item-solid {
	border-bottom: 1rpx dashed #ddd;
	padding: 10rpx 0;
}

.admin-comm-list .item .info .info-item .title {
	width: 110rpx;
	color: #333;
	text-align: right;
	font-weight: bold;
}

.admin-comm-list .item .info.title-mid .info-item .title {
	width: 150rpx;
	display: flex;
}

.admin-comm-list .item .info.title-long .info-item .title {
	width: 200rpx;
}


.admin-comm-list .item .info .info-item .mao {
	color: #333;
	text-align: left;
	margin-right: 10rpx;
}

.admin-comm-list .item .info .info-item .content {
	flex: 1;
	color: #555;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	display: flex;
	flex-wrap: wrap;
}

.admin-comm-list .item .info .info-item .content image {
	width: 150rpx;
	height: 150rpx;
	margin-right: 10rpx;
	margin-bottom: 10rpx;
}

.admin-comm-list .item .info .oprt {
	width: 100%;
	display: flex;
	flex-wrap: wrap;
	align-items: center;
	justify-content: center;
	padding: 0rpx 20rpx;
}

.admin-comm-list .item .info .oprt .btn {
	padding: 0 25rpx;
	font-size: 26rpx;
	border-radius: 8rpx !important;
	line-height: unset;
	height: 55rpx !important;
	background-color: #eee !important;
	margin-bottom: 20rpx;
}

.admin-comm-list .btn-more {
	background-color: #fadbd9 !important;
	color: #e54d42;
}

.btn-admin {
	width: 90%;
	display: flex;
	align-items: center;
	justify-content: center;
	box-sizing: border-box;
	font-size: 32rpx;
	line-height: 2.5;
	background-color: var(--adminColor) !important;
	color: #fff;
	border-radius: 40rpx;
	margin-bottom: 60rpx;
}

.btn-admin.button-hover {
	opacity: .9;
	transform: scale(0.95, 0.95);
	position: relative;
	top: 3rpx;
	left: 3rpx;
	box-shadow: 0px 0px 8px rgba(0, 0, 0, .1) inset;
}

.btn-bottom-admin {
	width: 100%;
	position: fixed;
	bottom: 0;
	text-align: center;
	color: #fff;
	line-height: 2.6;
	font-size: 36rpx;
	background-color: inherit;
	padding-bottom: 0rpx;
	/*没有安全区域的手机 */
	padding-bottom: constant(safe-area-inset-bottom);
	/*兼容有安全区域的手机*/
	padding-bottom: env(safe-area-inset-bottom);
	display: flex;
	z-index: 99999;
}

.btn-bottom-admin>view {
	width: 50%;
}

.btn-bottom-admin .return {
	background-color: var(--adminRedColor);
}

.btn-bottom-admin .save {
	background-color: var(--adminColor);
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\public\article_list.wxss
--------------------------------------------------
/*** 图文列表盒子 ***/
.text-pic-list-box {
	width: 100%;
	box-sizing: border-box;
	padding: 20rpx 20rpx 30rpx 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.text-pic-list-box .item {
	padding: 40rpx 30rpx 16rpx 40rpx;
	display: flex;
	flex-direction: column;
	background-color: #fff;
	border-radius: 20rpx;
	margin-bottom: 30rpx;
	position: relative;
}

/*扇形角标*/
.text-pic-list-box .item .corner {
	position: absolute;
	top: 0;
	right: 0;
	width: 80rpx;
	height: 80rpx;
	border-radius: 0 0rpx 0rpx 80rpx;
	background-color: #EAEAEA;
	font-size: 45rpx;
	font-weight: bold;
	color: #fff;
	font-style: italic;
	padding-top: 10rpx;
	padding-left: 36rpx;
}

/*倾斜角标*/
.text-pic-list-box .item .lean-corner-box {
	position: absolute;
	width: 100%;
	height: 100%;
	right: 0;
	top: 0;
	overflow: hidden;
}

.text-pic-list-box .item .lean-corner-right-top {
	background-color: green;
	color: white;
	width: 50%;
	height: 40rpx;
	line-height: 40rpx;
	text-align: center;
	margin-left: 70%;
	margin-top: 18rpx;
	position: absolute;
	transform: rotate(45deg);
	z-index: 1999;
	font-size: 24rpx;
	opacity: .6;
}

.text-pic-list-box .item .lean-corner-right-bottom {
	background-color: green;
	color: white;
	width: 50%;
	height: 40rpx;
	line-height: 40rpx;
	text-align: center;
	margin-left: 70%;
	margin-bottom: 18rpx;
	position: absolute;
	bottom: 0;
	transform: rotate(-45deg);
	z-index: 1999;
	font-size: 24rpx;
	opacity: .8;
}

.text-pic-list-box .item .status-right-top,
.text-pic-list-box .item .status-right-bottom {
	position: absolute;
	padding:0 20rpx;
	height: 40rpx;
	background-color: #f8f8f8;
	font-size: 24rpx;
	color: #aaa;
	line-height: 40rpx;
	text-align: center;
}

.text-pic-list-box .item .status-right-top {
	top: 0;
	right: 0;
	border-top-right-radius: inherit;
	border-bottom-left-radius: inherit;
}

.text-pic-list-box .item .status-right-bottom {
	right: 0;
	bottom: 0;
	border-top-left-radius: inherit;
	border-bottom-right-radius: inherit;
}

.text-pic-list-box .item .title {
	max-height: 88rpx;
	line-height: 44rpx;
	font-size: 32rpx;
	color: #000;
	font-weight: bold;
	z-index: 999;
}

.text-pic-list-box .item .title .tag {
	font-size: 20rpx;
	padding: 0rpx 8rpx;
	height: 30rpx;
	line-height: 30rpx;
	opacity: .8;
}

.text-pic-list-box .item .author {
	margin-top: 20rpx;
	font-size: 24rpx;
	display: flex;
	justify-self: center;
	align-items: center;
	z-index: 999;
}

.text-pic-list-box .item .author .av {
	margin-right: 5rpx;
	width: 40rpx;
}

.text-pic-list-box .item .desc {
	margin-top: 15rpx;
	display: flex;
	justify-content: center;
	align-items: flex-start;
}

.text-pic-list-box .item .desc text {
	max-height: 120rpx;
	line-height: 40rpx;
	font-size: 28rpx;
	color: #777;
	flex: 1;
}

.text-pic-list-box .item .desc .pic {
	margin-left: 10rpx;
	width: 200rpx;
	height: 122rpx;
	border-radius: 10rpx;
}

.text-pic-list-box .item .desc .pic.pic-left {
	margin-left: 0rpx;
	margin-right: 10rpx;
}

.text-pic-list-box .item .desc.pic-list {
	justify-content: space-between;
}

.text-pic-list-box .item .desc.pic-list .pic {
	margin-left: 0rpx;
}

.text-pic-list-box .item .data {
	line-height: 1.5;
	font-size: 28rpx;
	color: #666;
	margin-top: 10rpx;
	display: flex;
	justify-content: flex-start;
	align-items: center;
}

.text-pic-list-box .item .data.data-button {
	width: 100%;
	justify-content: flex-end;
	margin-bottom: 10rpx;
}

.text-pic-list-box .item .data.data-button button {
	margin-left: 10rpx;
}

/*简约模式*/
.text-pic-list-box .item.item-simple {
	padding: 24rpx;
}

.text-pic-list-box .item .simple {
	width: 100%;
	display: flex;
}

.text-pic-list-box .item .simple .simple-left {
	width: 100rpx;
	height: 100rpx;
	background-color: #E4DACE;
	border-radius: 20rpx;
	margin-right: 52rpx;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 36rpx;
}

.text-pic-list-box .item .simple .simple-right {
	flex: 1;
	display: flex;
	flex-direction: column;
}

.text-pic-list-box .item .simple .simple-title {
	font-size: 32rpx;
	color: #000;
	line-height: 1.5;
	margin-top: 10rpx;
	width: 450rpx;
}

.text-pic-list-box .item .simple .simple-desc {
	margin-top: 20rpx;
	font-size: 24rpx;
	color: #999;
}

/**snake接龙**/
.text-pic-list-box .item.item-snake {
	padding: 14rpx;
	border-radius: 0rpx;
	margin-bottom: 0;
	border-bottom: 2rpx dashed #f2f2f2;
}

.text-pic-list-box .item .snake {
	width: 100%;
	display: flex;
}

.text-pic-list-box .item .snake .snake-left {
	width: 40rpx;
	height: 40rpx;
	background-color: #E4DACE;
	border-radius: 50%;
	margin-right: 32rpx;
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 36rpx;
}

.text-pic-list-box .item .snake .snake-right {
	flex: 1;
	display: flex;
	flex-direction: column;
}

.text-pic-list-box .item .snake .snake-title {
	font-size: 28rpx;
	color: #000;
	line-height: 1.3;
	margin-top: 5rpx;
	width: 450rpx;
}

.text-pic-list-box .item .snake .snake-desc {
	font-size: 24rpx;
	color: rgb(203, 203, 203);
}

/* 左大图模式 */
.text-pic-list-box .item.item-leftbig {
	padding: 0;
	max-height: 230rpx;
}

.text-pic-list-box .item-leftbig .leftbig-card {
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
}

.text-pic-list-box .item-leftbig .leftbig-card .leftbig-left {
	width: 180rpx;
	height: 230rpx;
	border-top-left-radius: 20rpx;
	border-bottom-left-radius: 20rpx;
}

.text-pic-list-box .item-leftbig .leftbig-card .leftbig-right {
	flex: 1;
	display: flex;
	flex-direction: column;
	margin-left: 20rpx;
	margin-right: 20rpx;
}

.text-pic-list-box .item-leftbig .leftbig-card .leftbig-title {
	font-size: 32rpx;
	color: #000;
	line-height: 1.5;
	margin-top: 10rpx;
	width: 500rpx;
	font-weight: bold;
}

.text-pic-list-box .item-leftbig .leftbig-card .leftbig-title.long {
	width: 650rpx;
}

.text-pic-list-box .item-leftbig .leftbig-card .leftbig-desc {
	margin-top: 20rpx;
	font-size: 24rpx;
	color: #aaa;
}

.text-pic-list-box .item-leftbig .leftbig-card .data {
	margin-top: 30rpx;
	color: #888;
	padding-bottom: 25rpx;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\public\comm_box_list.wxss
--------------------------------------------------
/*** 图文列表盒子 ***/
.comm-list-box {
	width: 100%;
	box-sizing: border-box;
	padding: 20rpx 30rpx 30rpx 30rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
	overflow: hidden;
}

.comm-list-box .item {
	padding: 0rpx 0rpx;
	display: flex;
	flex-direction: column;
	background-color: #fff;
	border-radius: 20rpx;
	margin-bottom: 30rpx;
	position: relative;
}

.comm-list-box .bottom-tag {
	background-color: #f2f2f2;
	padding: 6rpx 15rpx;
	border-radius: 8rpx;
}

/* 左大图模式  */
.comm-list-box .item.item-leftbig {
	max-height: 230rpx;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	flex-direction: row;
}

.comm-list-box .item-leftbig .leftbig-left {
	width: 200rpx;
	height: 230rpx;
	border-top-left-radius: inherit;
	border-bottom-left-radius: inherit;
}

.comm-list-box .item-leftbig .leftbig-right {
	flex: 1;
	display: flex;
	flex-direction: column;
	margin-left: 20rpx;
	margin-right: 20rpx;
	justify-content: center;
	align-items: flex-start;
	position: relative;
	padding: 15rpx 10rpx;
}

.comm-list-box .item-leftbig .leftbig-right .leftbig-title {
	width: 100%;
	font-size: 34rpx;
	color: #000;
	line-height: 1.5;
	margin-top: 0rpx;
	font-weight: bold;
}

.comm-list-box .item-leftbig .leftbig-desc {
	margin-top: 5rpx;
	font-size: 26rpx;
	color: #666;
	line-height: 1.4;
	height: 107rpx;
	margin-bottom: 10rpx;
}


.comm-list-box .item-leftbig .data { 
	width: 100%;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	margin-top: 0rpx;
	color: #bbb;
	font-size: 24rpx;
	position: relative;
	min-height: 40rpx;
}

.comm-list-box .item-leftbig .data .bottom-tag-list {
	margin-top: 0rpx;
	font-size: 24rpx;
}

.comm-list-box .item-leftbig .leftbig-right .bottom-status {
	font-size: 24rpx;
}

/* 大文字模式  */
.comm-list-box .item.item-bigtext {
	height: 220rpx;
	width: 100%;
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	position: relative;
	background: #fff;
	color: #333;
	padding: 0 40rpx;
}

.comm-list-box .item-bigtext .left {
	margin-right: 20rpx;
	width: 100rpx;
	height: 100rpx;
	background-color: #fff;
	border-radius: 50%;
}

.comm-list-box .item-bigtext .left image {
	border-radius: 50%;
	width: 100rpx;
	height: 100rpx;
}

.comm-list-box .item-bigtext .right {
	flex: 1;
	display: flex;
	flex-direction: column;
	align-items: flex-start;
	justify-content: center;
}

.comm-list-box .item-bigtext .right .bigtext-title {
	width: 100%;
	font-size: 36rpx;
	font-weight: bold;
	text-align: left;
}

.comm-list-box .item-bigtext .right .data-desc {
	width: 100%;
	font-size: 28rpx;
	opacity: .7;
}

.comm-list-box .item-bigtext .data-status {
	font-size: 24rpx;
	position: absolute;
	bottom: 10rpx;
	right: 40rpx;
	opacity: .8;
}

/* 上下图模式  */
.comm-list-box .item.item-upimg {
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	position: relative;
	background: #fff;
	color: #000;
	padding: 0 0rpx 10rpx;
	overflow: hidden;
}


.comm-list-box .item-upimg .upimg-title {
	width: 100%;
	font-size: 38rpx;
	font-weight: bold;
	text-align: left;
	padding: 10rpx 20rpx;
}


.comm-list-box .item-upimg image {
	width: 100%;
	border-top-left-radius: inherit;
	border-top-right-radius: inherit;
}

.comm-list-box .item-upimg .data-desc {
	width: 100%;
	font-size: 28rpx;
	color: #666;
	padding: 10rpx 20rpx;
	max-height: 90rpx;
}

.comm-list-box .item-upimg .data-status {
	width: 100%;
	font-size: 24rpx;
	color: #bbb;
	padding-right: 20rpx;
	text-align: right;
}

/* 左大图模式1  */
.comm-list-box .item.item-leftbig1 {
	max-height: 200rpx;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	flex-direction: row;
	margin-bottom: 20rpx;
	padding: 20rpx;
}

.comm-list-box .item-leftbig1 .leftbig-left {
	width: 240rpx;
	height: 160rpx;
	border-radius: 10rpx !important;
	overflow: hidden;
}

.comm-list-box .item-leftbig1 .leftbig-right {
	flex: 1;
	display: flex;
	flex-direction: column;
	margin-left: 20rpx;
	justify-content: flex-start;
	align-items: flex-start;
	position: relative;
	height: 160rpx;
}

.comm-list-box .item-leftbig1 .leftbig-right .leftbig-title {
	width: 100%;
	font-size: 34rpx;
	color: #000;
	font-weight: bold;
}

.comm-list-box .item-leftbig1 .leftbig-desc {
	margin-top: 5rpx;
	font-size: 27rpx;
	color: #666; 
}


.comm-list-box .item-leftbig1 .data { 
	width: 100%;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	color: #bbb;
	font-size: 24rpx;
	position: absolute;
	bottom: 0;
	left: 0;
}

.comm-list-box .item-leftbig1 .data .bottom-tag-list {
	margin-top: 0rpx;
	font-size: 24rpx;
}

.comm-list-box .item-leftbig1 .leftbig-right .bottom-status {
	font-size: 24rpx;
}


/* 左大图模式2  */
.comm-list-box .item.item-leftbig2:first-child {
	margin-top: 60rpx;
}

.comm-list-box .item.item-leftbig2 {
	max-height: 230rpx;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	flex-direction: row;
	margin-bottom: 70rpx;
}

.comm-list-box .item-leftbig2 .leftbig-left {
	width: 200rpx;
	height: 250rpx;
	margin-left: 25rpx;
	margin-top: -45rpx;
	border-radius: 10rpx !important;
	overflow: hidden;
}

.comm-list-box .item-leftbig2 .leftbig-right {
	flex: 1;
	display: flex;
	flex-direction: column;
	margin-left: 20rpx;
	margin-right: 20rpx;
	justify-content: center;
	align-items: flex-start;
	position: relative;
	padding: 15rpx 10rpx;
}

.comm-list-box .item-leftbig2 .leftbig-right .leftbig-title {
	width: 100%;
	font-size: 34rpx;
	color: #000;
	line-height: 1.5;
	margin-top: 0rpx;
	font-weight: bold;
}

.comm-list-box .item-leftbig2 .leftbig-desc {
	margin-top: 5rpx;
	font-size: 28rpx;
	color: #666;
	line-height: 1.4;
	height: 107rpx;
	margin-bottom: 10rpx;
}


.comm-list-box .item-leftbig2 .data {
	width: 100%;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	margin-top: 0rpx;
	color: #999;
	font-size: 24rpx;
	position: relative;
	min-height: 40rpx;
}

.comm-list-box .item-leftbig2 .data .bottom-tag-list {
	margin-top: 0rpx;
	font-size: 24rpx;
}

.comm-list-box .item-leftbig2 .leftbig-right .bottom-status {
	font-size: 24rpx;
}

/* 左大图模式3  */
.comm-list-box .item.item-leftbig3:first-child {
	margin-top: 60rpx;
}

.comm-list-box .item.item-leftbig3 {
	max-height: 180rpx;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	flex-direction: row;
	margin-bottom: 70rpx;
}

.comm-list-box .item-leftbig3 .leftbig-left {
	width: 190rpx;
	height: 210rpx;
	margin-left: 0rpx;
	margin-top: -30rpx;
	border-radius: 15rpx !important;
	overflow: hidden;
	box-shadow: var(--ShadowSize) var(--greyShadow);
}

.comm-list-box .item-leftbig3 .leftbig-right {
	flex: 1;
	display: flex;
	flex-direction: column;
	margin-left: 20rpx;
	margin-right: 20rpx;
	justify-content: center;
	align-items: flex-start;
	position: relative;
	padding: 15rpx 10rpx;
}

.comm-list-box .item-leftbig3 .leftbig-right .leftbig-title {
	width: 100%;
	font-size: 34rpx;
	color: #000;
	line-height: 1.5;
	margin-top: 0rpx;
	font-weight: bold;
}

.comm-list-box .item-leftbig3 .leftbig-desc {
	margin-top: 5rpx;
	font-size: 28rpx;
	color: #666;
	line-height: 1.4;
	height: 60rpx;
	margin-bottom: 10rpx;
}


.comm-list-box .item-leftbig3 .data {
	width: 100%;
	display: flex;
	justify-content: flex-end;
	align-items: center;
	margin-top: 0rpx;
	color: #999;
	font-size: 24rpx;
	position: relative;
	min-height: 40rpx;
}

.comm-list-box .item-leftbig3 .data .bottom-tag-list {
	margin-top: 0rpx;
	font-size: 24rpx;
}

.comm-list-box .item-leftbig3 .leftbig-right .bottom-status {
	font-size: 24rpx;
}

/*右边/左边图*/
.comm-list-box .item.item-rightpic,
.comm-list-box .item.item-leftpic {
	padding: 40rpx 30rpx 16rpx 40rpx;
	display: flex;
	flex-direction: column;
	background-color: #fff;
	border-radius: 20rpx;
	margin-bottom: 20rpx;
	position: relative;
}

.comm-list-box .item-rightpic .title,
.comm-list-box .item-leftpic .title {
	max-height: 88rpx;
	line-height: 44rpx;
	font-size: 34rpx;
	color: #000;
	font-weight: bold;
	z-index: 999;
}

.comm-list-box .item-rightpic .desc,
.comm-list-box .item-leftpic .desc {
	margin-top: 32rpx;
	display: flex;
	justify-content: center;
	align-items: flex-start;

}

.comm-list-box .item-rightpic .desc text,
.comm-list-box .item-leftpic .desc text {
	max-height: 120rpx;
	line-height: 40rpx;
	font-size: 28rpx;
	color: #666;
	flex: 1;
}

.comm-list-box .item-rightpic .desc .pic {
	margin-left: 15rpx;
	width: 180rpx;
	height: 122rpx;
	border-radius: 10rpx;
}


.comm-list-box .item-leftpic .desc .pic {
	margin-left: 0rpx;
	margin-right: 15rpx;
	width: 180rpx;
	height: 122rpx;
	border-radius: 10rpx;
}

.comm-list-box .item-rightpic .data,
.comm-list-box .item-leftpic .data {
	height: 24rpx;
	line-height: 24rpx;
	font-size: 24rpx;
	color: #bbb;
	margin-top: 30rpx;
	display: flex;
	justify-self: center;
	align-items: center;
}

/*横向*/
.comm-list-scroll {
	width: 100%;
	margin-top: 10rpx;
	background-color: #fff;
	white-space: nowrap;
}

.comm-list-scroll .item-scroll {
	display: inline-block;
	padding: 10rpx 25rpx 10rpx 0rpx;
}

.comm-list-scroll .item-scroll image {
	width: 300rpx;
	height: 185rpx;
	border-radius: 10rpx;
}

.comm-list-scroll .item-scroll .title {
	font-size: 28rpx;
	width: 300rpx;
	height: 40rpx;
	color:#000;
}


/*瀑布流*/
.comm-list-flow {
	margin-top: 10rpx;
	background-color: #fff;
	width: 100%;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	flex-wrap: wrap;
	padding: 0 20rpx;
}

.comm-list-flow .item-flow {
	width: 50%;
	padding: 10rpx 15rpx 20rpx;
}

.comm-list-flow .item-flow .item-flow-inner {
	width: 100%;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.comm-list-flow .item-flow .item-flow-inner image {
	width: 100%;
	height: 420rpx;
	border-radius: 10rpx;
	border: 1rpx solid #ddd;
}

.comm-list-flow .item-flow .item-flow-inner .title-flow {
	width: 100%;
	text-align: left;
	color: #333;
	font-size: 28rpx;
	font-weight: bold;
	margin-top: 20rpx;
}

/*文字条目*/
.comm-list-box .item-line {
	width: 100%;
	background-color: #fff;
	padding: 30rpx 20rpx;
	display: flex;
	border-bottom: 1rpx solid #ddd;
	justify-content: center;
}

.comm-list-box .item-line:last-child {
	border-bottom: unset;
}

.comm-list-box .item-line .left {
	flex: 1;
	display: flex;
	align-items: center;
}

.comm-list-box .item-line .left .order {
	min-width: 50rpx;
	padding: 0 10rpx;
	height: 35rpx;
	display: flex;
	margin-right: 10rpx;
	align-items: center;
	justify-content: center;
	font-size: 24rpx;
	border-bottom-left-radius: 10rpx;
	border-top-right-radius: 10rpx;
}

.comm-list-box .item-line .left .title {
	flex: 1;
	font-size: 34rpx;
	color: #000;
}

.comm-list-box .item-line .right {
	width: 40rpx;
	font-size: 26rpx;
	text-align: right;
	color: #999;
	display: flex;
	align-items: center;
	justify-content: center;
} 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\public\detail.wxss
--------------------------------------------------
/*** 详情盒子 ***/
.article-box {
	padding: 0;
	box-sizing: border-box;
	width: 100%;
}

.article-box .article {
	background-color: #fff;
	padding: 36rpx 26rpx;
	border-radius: 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
	position: relative;
}


.article-box .article.join {
	display: flex;
	flex-direction: row;
	align-items: center;
	width: 100%;
}

.article-box .article.join .left {
	flex: 1;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
}

.article-box .article.join .right {
	width: 30rpx;
}

.article-box .article.join .left .btn {
	width: 100%;
}

.article-box .article.join .avatar-group {
	direction: unset;
	display: flex;
	justify-content: flex-end;
	align-items: center;
}

.article-box .article .title {
	font-size: 38rpx;
	line-height: 1.5;
	color: #000;
	font-weight: bold;
	z-index: 999;
}

.article-box .article .title-sub {
	font-size: 32rpx;
	line-height: 1.5;
	color: #000;
	font-weight: bold;
	z-index: 999;
}

.article-box .article .time {
	font-size: 24rpx;
	line-height: 1.5;
	color: #999;
	margin-top: 20rpx;
}

.article-box .article .hint {
	box-sizing: border-box;
	width: 100%;
	line-height: 1.8;
	background-color: #f8f8f8;
	border-radius: 20rpx;
	color: #aaa;
	padding: 10rpx 20rpx;
	font-size: 24rpx;
}

.article-box .article .address {
	margin: 20rpx 0rpx;
	box-sizing: border-box;
	width: 100%;
	line-height: 1.6;
	display: flex;
	justify-content: flex-start;
	align-items: flex-start;
	padding: 10rpx 0rpx 10rpx;
	background-color: #f8f8f8;
	border-radius: 10rpx;
}

.article-box .article .address .address-left {
	width: 50rpx;
	height: 100%;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;
}

.article-box .article .address .address-left .icon-location {
	font-size: 26rpx;
	display: flex;
	flex-direction: column;
	justify-content: flex-start;
	align-items: center;
}

.article-box .article .address .address-right {
	height: 100%;
	flex: 1;
	font-size: 26rpx;
	font-weight: bold;
	color: #666;
}

.article-box .article .address .address-end {
	height: 100%;
	width: 40rpx;
	font-size: 26rpx;
	color: #ccc;
	display: flex;
	justify-content: flex-start;
	align-items: center;
}



.article-box .article .user-card {
	margin-top: 50rpx;
	display: flex;
	justify-content: flex-start;
}

.article-box .article .user-card .avatar {
	width: 100rpx;
	height: 100rpx;
}

.article-box .article .user-card .detail {
	margin-left: 30rpx;
	display: flex;
	flex-direction: column;
	flex: 1;
}

.article-box .article .user-card .detail .name {
	height: 1;
	font-size: 30rpx;
	width: 350rpx;
	font-weight: bold;
}

.article-box .article .user-card .detail .last {
	margin-top: 15rpx;
	height: 1;
	width: 350rpx;
	font-size: 26rpx;
	color: #aaa;
}

.article-box .article .user-card .view-btn {
	width: 120rpx;
	display: flex;
	justify-content: flex-end;
	align-items: center;
}

.article-box .article .content {
	margin-top: 24rpx;
	color: #101010;
	font-size: 30rpx;
	text-align: justify;
	line-height: 1.6;
}

.article-box .article .pics {
	margin-top: 30rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
}

.article-box .article .pics image {
	width: 100%;
	border-radius: 10rpx;
	margin-bottom: 0rpx;
}

.article-box .comment {
	margin-top: 24rpx;
	margin-bottom: 150rpx;
	background-color: #fff;
	padding: 10rpx 36rpx 36rpx;
	border-radius: 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.article-box .comment .title {
	font-size: 28rpx;
	line-height: 2.4;
	font-weight: bold;
	border-bottom: 4rpx solid #eee;
	display: flex;
	justify-content: space-between;
	align-items: center;
}

.article-box .comment .list {
	display: flex;
	justify-content: center;
	align-items: center;
	padding: 20rpx 0rpx 20rpx 0rpx;
	margin-bottom: 20rpx;
	border-bottom: 2rpx solid #eee;
}

.article-box .comment .list .avatar {
	margin-right: 20rpx;
	align-self: start;
}

.article-box .comment .list .detail {
	flex: 1;
	display: flex;
	flex-direction: column;
	justify-content: center;
}

.article-box .comment .list .detail .name {
	height: 36rpx;
	font-size: 30rpx;
	font-weight: bold;
	display: flex;
	align-items: flex-end;
}

.article-box .comment .list .detail .name .name-real {
	max-width: 200rpx;
}

.article-box .comment .list .detail .name .classmate {
	margin-left: 20rpx;
	max-width: 250rpx;
	font-size: 24rpx;
	color: #ccc;
}

.article-box .comment .list .detail .comment-content {
	font-size: 28rpx;
	margin-top: 30rpx;
	line-height: 1.6;
}

.article-box .comment .list .detail .last {
	font-size: 26rpx;
	margin-top: 16rpx;
	color: #aaa;
	display: flex;
	justify-content: space-between;
	align-items: baseline;
}

.article-box .comment .list .detail .last .time {
	font-size: 24rpx;
	margin-top: 16rpx;
	color: #aaa;
}

.article-box .article-bottom {
	position: fixed;
	height: 120rpx;
	background-color: #fff;
	left: 0;
	bottom: 0;
	width: 100%;
	box-sizing: border-box;
	display: flex;
	padding: 22rpx 28rpx;
	justify-content: center;
	align-items: center;
	border-top: 6rpx solid #eee;
}

.article-box .article-bottom .input-comment {
	flex: 1;
	height: 62rpx;
	background-color: #f8f8f8;
	border-radius: 100rpx;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	font-size: 30rpx;
}

.article-box .article-bottom .data {
	margin-left: 10rpx;
	width: 500rpx;
	font-size: 32rpx;
	color: #ccc;
	display: flex;
	justify-content: flex-end;
	align-items: center;
}

.article-box .article-bottom .share-btn {
	background-color: transparent !important;
	padding: 0 !important;
	line-height: inherit !important;
	margin: 0 0 0 30rpx;
	width: auto !important;
	font-weight: 500 !important;
	border-radius: none !important;
	font-size: 32rpx;
	color: #333;
}

.article-box .article-bottom .share-btn::after {
	border: none !important;
	padding: 0 !important;
	margin: 0 !important;
}

.article-box .comment-modal .bar {
	display: flex;
	align-items: baseline
}

.article-box .comment-modal .comment-textarea .form-group textarea {
	margin: 2rpx 0 30rpx;
}

.article-box .article .corner-right-top {
	position: absolute;
	top: 0;
	right: 0;
	width: 150rpx;
	height: 60rpx;
	border-radius: 0 20rpx 0 20rpx;
	background-color: #f8f8f8;
	font-size: 28rpx;
	color: #aaa;
	line-height: 60rpx;
	text-align: center;
}

/*倾斜角标*/
.article-box .article .lean-corner-box {
	position: absolute;
	width: 100%;
	height: 100rpx;
	right: 0;
	top: 0;
	overflow: hidden;
	z-index: 1;
}

.article-box .article .lean-corner-right-top {
	background-color: green;
	color: white;
	width: 50%;
	height: 40rpx;
	line-height: 40rpx;
	text-align: center;
	margin-left: 70%;
	margin-top: 18rpx;
	position: absolute;
	transform: rotate(45deg);
	z-index: 1999;
	font-size: 24rpx;
	opacity: .8;
}


.article-box .article .lean-corner-right-bottom {
	background-color: green;
	color: white;
	width: 50%;
	height: 40rpx;
	line-height: 40rpx;
	text-align: center;
	margin-left: 70%;
	margin-bottom: 18rpx;
	position: absolute;
	bottom: 0;
	transform: rotate(-45deg);
	z-index: 1999;
	font-size: 24rpx;
	opacity: .8;
}
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\style\public\project.wxss
--------------------------------------------------
 /* 主框架 */
 .main {
	width: 100%;
	box-sizing: border-box;
	padding: 20rpx 20rpx;
	display: flex;
	flex-direction: column;
	justify-content: center;
	align-items: center;
	margin-bottom: 70rpx;
}

/*表单*/
.main form {
	width: 100%;
	display: flex;
	flex-direction: column;
}

.form-group .title {
	font-weight: bold;
}

.form-group .title.must::before {
	color: red;
	content: "*";
}

.form-box {
	background-color: #fff;
	border-radius: 20rpx;
	margin-bottom: 24rpx;
	box-sizing: border-box;
	width: 100%;
}


/* 固定按钮 */
.btn-fixed {
	position: fixed;
	bottom: 130rpx;
	right: 12rpx;
	color: #fff;
	font-size: 40rpx;
	font-weight: bold;
	border-radius: 50%;
	background-color: #ccc;
	width: 60rpx;
	height: 60rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

/*回顶部按钮*/
.btn-top {
	border: 1rpx solid #ccc;
	background-color: #f8f8f8 !important;
	z-index: 2;
}

/*单行大按钮*/
.btn-main {
	width: 600rpx;
	font-size: 32rpx;
	height: 80rpx;
	line-height: 80rpx;
	border-radius: 40rpx;
	background-color: #0E9489;
	color: #fff;
	font-weight: bold;
}

.clearbtn {
	margin: 0;
	padding: 0;
	background-color: transparent;
	text-align: center;
	font-size: inherit;
	color: inherit;
	box-sizing: border-box;
	text-align: center;
	text-decoration: none;
	line-height: unset;
	border-radius: 0;
	-webkit-tap-highlight-color: transparent;
	overflow: hidden;
	font-weight: normal;
}

.clearbtn::after {
	border: none !important;
	border-radius: 0;
}


/*非分包菜单*/
.tab-bar-home {
	position: fixed;
	top: 50rpx;
	left: 20rpx;
	width: 150rpx;
	height: 150rpx;
	z-index: 999999;
	display: flex;
	align-items: center;
	justify-content: center;
	opacity: .8;
	display: flex;
	align-items: flex-start;
	justify-content: flex-start;
}

.tab-bar-home .tab-bar-home-text {
	background: #fff;
	border-radius: 50%;
	font-size: 36rpx;
	width: 50rpx;
	height: 50rpx;
	display: flex;
	align-items: center;
	justify-content: center;
}

.tab-bar {
	position: fixed;
	bottom: 0;
	left: 0;
	right: 0;
	background: #fefefe;
	display: flex;
	padding-bottom: constant(safe-area-inset-bottom);
	padding-bottom: env(safe-area-inset-bottom);
	z-index: 99999;
}

.tab-bar-border {
	background-color: rgba(0, 0, 0, 0.33);
	position: absolute;
	left: 0;
	top: 0;
	width: 100%;
	height: 1px;
	transform: scaleY(0.5);
}

.tab-bar-item {
	flex: 1;
	text-align: center;
	display: flex;
	justify-content: flex-start;
	align-items: center;
	flex-direction: column;
	position: relative;
	padding-top: 10rpx;
}

.tab-bar-item .tab-icon {
	width: 48rpx;
	height: 48rpx;
	margin-bottom: 2rpx;
}

.tab-bar-item .tab-text {
	font-size: 24rpx !important;
	color: #999999;
}

/**分包距离底部 */
.sub-margin-bottom {
	margin-bottom: 100rpx;
}

.btn-base {
	padding: 0 40rpx;
	font-size: 32rpx;
	height: 80rpx;
	line-height: 80rpx;
	border-radius: 14rpx;
	width: 100%;
	color: #fff;
	background-color: var(--projectColor);
	font-weight: bold;
	margin-top: 10rpx;
	margin-bottom: 20rpx;
}

.btn-base.button-hover {
	opacity: .9;
	transform: scale(0.95, 0.95);
	position: relative;
	top: 3rpx;
	left: 3rpx;
	box-shadow: 0px 0px 8px rgba(0, 0, 0, .1) inset;
}

.phone-button {
	color: #333 !important;
	background-color: var(--greyLight) !important;
}


/*cmpt-detail底部菜单*/
.cmpt-biz-detail-mode2-btn {
	width: 100%;
	border-radius: 10rpx;
	background-color: var(--projectColor);
	line-height: 80rpx;
	color: #fff;
	z-index: 9991;
	font-size: 32rpx;
} 
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\project\about_tpl.wxml
--------------------------------------------------
<view wx:if="{{isLoad===null}}" class="margin-top load notexist text-l load-project"></view>
<view wx:if="{{isLoad===false}}" class="margin-top load loading text-l load-project"></view>

<view wx:if="{{isLoad}}" class="main padding-project">

	<view class="article-box margin-top-xs">
		<!-- article content begin -->
		<view class="article card-project shadow-project"> 

			<block wx:for="{{about}}" wx:key="key">
				<view class="content" wx:if="{{item.type=='text'}}">
					<text user-select>{{item.val}}</text>
				</view>

				<view class="pics" wx:if="{{item.type=='img'}}">
					<image bindtap="url" data-type='img' data-url="{{item.val}}" show-menu-by-longpress="{{true}}" class="loading" mode='widthFix' lazy-load="true" src="{{item.val}}">
					</image>
				</view>
			</block>
			<!-- article content end -->




		</view>
		<!-- article content end -->


	</view>

	<view wx:if="{{accountInfo}}" class='text-center text-xs text-grey margin-top'>
		v{{accountInfo.miniProgram.version}} {{accountInfo.miniProgram.envVersion}}
	</view>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\project\my_fav_tpl.wxml
--------------------------------------------------
<cmpt-comm-list type="my-fav" search="{{search||''}}" _menus="{{sortMenus||[]}}" _items="{{sortItems||[]}}" route="fav/my_list" isTotalMenu="{{false}}" topBottom="120" placeholder="搜索标题" returnUrl='/pages/my/fav/my_fav' bind:list="myCommListListener">

	<!-- List Begin -->
	<view class="text-pic-list-box">
		<view wx:for="{{dataList.list}}" wx:key="key" class="item shadow item-simple" bindtap="url" data-url="{{item.FAV_PATH}}">
			<view class="simple">
				<view class="simple-right">
					<view class="simple-title content-cut-one">{{item.FAV_TITLE}}</view>
					<view class="simple-desc">
						<text class="text-grey text-bold">{{item.FAV_TYPE}}</text>
						<text class="margin-left-s">{{item.FAV_ADD_TIME}}</text>
						<button catchtap="bindDelTap" data-oid="{{item.FAV_OID}}" class="margin-left btn mid bg-white text-red"><text class="icon-delete"></text>删除</button>
					</view>
				</view>
			</view>

		</view>

		<!--load begin-->
		<import src="../../tpls/public/list_load_tpl.wxml" />
		<template is="listLoadTpl" data="{{skin:'load-project',dataList}}" />
		<!--load end-->
	</view>
	<!-- List END -->
</cmpt-comm-list>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\project\my_foot_tpl.wxml
--------------------------------------------------
<!-- List Begin -->
<view class="text-pic-list-box">
	<view class="simple text-center text-grey padding" wx:if="{{!footList || footList.length==0}}">暂无记录哦~</view>
	<view wx:for="{{footList}}" wx:key="key" class="item shadow item-simple" bindtap="url" data-url="{{item.path}}">
		<view class="simple">
			<view class="simple-right">
				<view class="simple-title content-cut-one">{{item.title}}</view>
				<view class="simple-desc">
					<text class="text-grey text-bold">{{item.type}}</text>
					<text class="margin-left-s">{{item.time}}</text>
				</view>
			</view>
		</view>
	</view>



</view>
<!-- List END -->
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\project\news_index_tpl.wxml
--------------------------------------------------
﻿<template name="newsIndexTpl">
	<view wx:if="{{!isLoad}}" class="margin-top load loading text-l load-project"></view>
	<block wx:else>

		<cmpt-comm-list type="news-list" search="{{search||''}}" _params="{{_params}}" _menus="{{sortMenus}}" _items="{{sortItems}}" isTotalMenu="{{isTotalMenu}}" route="news/list" topBottom="120" placeholder="搜索标题" bind:list="bindCommListCmpt">
			<view class="up-project" wx:if="{{showUp}}">
				<image wx:if="{{upImg}}" mode="widthFix" lazy-load src="{{upImg}}" />
			</view>

			<!-- List Begin -->
			<import src="../../tpls/public/base_list_tpl.wxml" />
			<template is="baseListTpl" data="{{dataList:dataList.list,listMode}}" />
			<!-- List END -->

			<!--load begin-->
			<import src="../../tpls/public/list_load_tpl.wxml" />
			<template is="listLoadTpl" data="{{skin:'load-project',dataList}}" />
			<!--load end-->
		</cmpt-comm-list>  

	</block>

</template>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\project\search_tpl.wxml
--------------------------------------------------
<view class="main main-search">
	<view class="bar search bg-white">
		<view class="search-form round">
			<text class="icon-search"></text>
			<input type="text" model:value="{{search}}" placeholder="请输入搜索内容" confirm-type="search" bindconfirm="bindSearchConfirm" maxlength="20"></input>
			<text wx:if="{{search.length > 0}}" bindtap="bindClearKeyTap" class="icon-roundclosefill text-l text-gray clear"></text>
		</view>
		<view class="action">
			<button bindtap="url" data-type="back" class="btn {{source=='admin'?'bg-admin':'bg-project'}} text-white shadow-blur round">返回</button>
		</view>
	</view>

	<view class="his">
		<view class="title">
			<view class="tit">历史记录</view> <text bindtap="bindDelHisTap" class="del text-small icon-delete"></text>
		</view>

		<view class="search-content">
			<view wx:for="{{hisKeys}}" bindtap="bindKeyTap" wx:key="key" data-key="{{item}}" class="btn mid  round text-darkgreen">{{item}}</view>
		</view>
	</view>

</view>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\public\admin_forms_detail_tpl.wxml
--------------------------------------------------
<template name="adminFormsDetailTpl">
	<view class="admin-comm-list" wx:if="{{forms.length>0}}">
		<view class="item">
			<view class="info">
				<view class="info-item info-item-solid" wx:key="key" wx:for="{{forms}}">
					<view class="title">{{item.title}}</view>
					<view class="mao">：</view>
					<view wx:if="{{item.type=='image'}}" class="content">
						<image wx:for="{{item.val}}" wx:for-item="itm" wx:key="key1" bindtap="url" data-type="image" data-url="{{itm}}" src="{{itm}}" mode="aspectFill" class="loading" show-menu-by-longpress="{{true}}" />
					</view>
					<view wx:elif="{{item.type=='rows'}}" class="content" style="flex-direction: column;">
						<text wx:for="{{item.val}}" wx:for-item="itm" wx:key="key1">
						 <text>{{itm.title}} </text>
						 <text wx:if="{{itm.val}}"> - {{itm.val}} </text>
						</text>
					</view>
					<view wx:elif="{{item.type=='switch'}}" class="content">{{item.val===true?'是':'否'}} </view>
					<view bind:tap="url" data-type="copy" data-url="{{item.val}}" wx:else class="content">{{item.val}} </view>
				</view>
			</view>

		</view>

	</view>
</template>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\public\base_list_tpl.wxml
--------------------------------------------------
<template name="baseListTpl">
	<!--横向拖动 Begin-->
	<scroll-view scroll-x="{{true}}" wx:if="{{listMode=='scroll'}}" class="comm-list-scroll">
		<view class="item-scroll" wx:for="{{dataList}}" wx:key="key" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
			<image lazy-load="{{true}}" class="loading" src="{{item.pic}}" mode="aspectFill"></image>
			<view class="title text-cut">{{item.title}}</view>
		</view>
	</scroll-view>
	<!--横向拖动 END-->

	<view wx:else class="sub-margin-bottom {{listMode=='flow'?'comm-list-flow':'comm-list-box'}}">
		<block wx:for="{{dataList}}" wx:key="key">

			<!--文字条目 Begin-->
			<view wx:if="{{listMode=='line' || listMode=='line-order'}}" class="item-line" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<view class="left">
					<view wx:if="{{listMode=='line-order'}}" class="order bg-gray bg-project">{{index+1}}</view>
					<view class="title content-cut-one">{{item.title}}</view>
				</view>
				<view class="right"><text class="icon-right"></text></view>
			</view>
			<!--文字条目 END-->

			<!--瀑布流 Begin-->
			<view wx:if="{{listMode=='flow'}}" class="item-flow" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<view class="item-flow-inner">
					<image mode="aspectFill" lazy-load="{{true}}" class="loading shadow" src="{{item.pic}}" />
					<view class="title-flow content-cut-one">{{item.title}}</view>
				</view>
			</view>
			<!--瀑布流 END-->

			<!--上下图 Begin-->
			<view wx:if="{{listMode=='upimg'}}" class="item card-project shadow-project item-upimg" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<image mode="widthFix" lazy-load="{{true}}" class="loading" src="{{item.pic}}" />
				<view class="upimg-title content-cut-two">{{item.title}}</view>
				<view class="data-desc content-cut-two">{{item.desc}}</view>
				<view class="data-status">{{item.ext}}
				</view>
			</view>
			<!--上下图 END-->

			<!--右边图 Begin-->
			<view wx:elif="{{listMode=='rightpic'}}" class="item card-project shadow-project item-rightpic" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<view class="title content-cut-two">{{item.title}}</view>
				<view class="desc">
					<text class="content-cut-three">{{item.desc}}</text>
					<image class="pic loading" lazy-load="{{true}}" mode="aspectFill" src="{{item.pic}}">
					</image>
				</view>
				<view class="data">
					<text class="margin-right">{{item.ext}}</text>
				</view>
			</view>
			<!--右边图 END-->

			<!--左边图 Begin-->
			<view wx:elif="{{listMode=='leftpic'}}" class="item card-project shadow-project item-leftpic" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<view class="title content-cut-two">{{item.title}}</view>
				<view class="desc">
					<image class="pic loading" lazy-load="{{true}}" mode="aspectFill" src="{{item.pic}}">
					</image>
					<text class="content-cut-three">{{item.desc}}</text>
				</view>
				<view class="data">
					<text class="margin-right">{{item.ext}}</text>
				</view>
			</view>
			<!--左边图 END-->

			<!--左大图 Begin-->
			<view wx:elif="{{listMode=='leftbig'||listMode=='leftbig1'||listMode=='leftbig2' ||listMode=='leftbig3'}}" class="item card-project shadow-project item-{{listMode}}" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<image mode="aspectFill" lazy-load="{{true}}" class="leftbig-left loading" src="{{item.pic}}">
				</image>
				<view class="leftbig-right">
					<view class="leftbig-title content-cut-one">{{item.title}}</view>
					<view class="leftbig-desc">
						<text class="{{listMode=='leftbig1' || listMode=='leftbig3'?'content-cut-two':'content-cut-three'}}">{{item.desc}} </text>
					</view>
					<view class="data">
						<view class="bottom-tag-list text-cut">
						</view>
						<view class="bottom-status">{{item.ext}}</view>
					</view>
				</view>
			</view>
			<!--左大图 END-->

			<!--大文字 Begin-->
			<view wx:elif="{{listMode=='bigtext'}}" class="item card-project shadow-project item-bigtext" bindtap="url" data-url="../../{{item.type}}/detail/{{item.type}}_detail?id={{item.id}}">
				<view class="left">
					<image mode="aspectFill" lazy-load="{{true}}" class="{{item.pic?'loading':''}}" src="{{item.pic}}" />
				</view>

				<view class="right">
					<view class="bigtext-title content-cut-one">{{item.title}}</view>
					<view class="data-desc content-cut-one">{{item.desc}}</view>
				</view>
				<view class="data-status">
					{{item.ext}}
				</view>
			</view>
			<!--大文字 END-->

		</block>

	</view>
</template>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\public\list_load_tpl.wxml
--------------------------------------------------
<template name="listLoadTpl">
	<view wx:if="{{!dataList || (dataList && dataList.page < dataList.count)}}"
		class="load text-grey loading {{skin}}"></view>
	<view wx:if="{{dataList && dataList.page > 1 && dataList.page == dataList.count }}"
		class="load text-grey over {{skin}}"></view>

	<block wx:if="{{noHintImg}}">
		<image style="height:500rpx" mode="heightFix" wx:if="{{dataList && dataList.total == 0}}" src="{{noHintImg}}" mode="aspectFit" />
	</block>

	<block wx:else> 
		<view wx:if="{{dataList && dataList.total == 0}}" class="load text-grey {{skin}}">{{noHint?noHint:'暂无记录哦~'}}</view>
	</block>

	<view style="height:200rpx;"></view>

</template>
--------------------------------------------------

## 文件：E:\idea-space\兼职平台\WeJob-徕 职\miniprogram\tpls\public\top_tpl.wxml
--------------------------------------------------
<template name="topTpl">
	<view wx:if="{{topBtnShow}}" bindtap="top" class="btn-fixed bg-gray btn-top"
		style="color:#888!important;bottom:{{bottom||'200'}}rpx;right:{{right||'12'}}rpx;z-index: 99;">
		<text class="icon-top"></text>
	</view>
</template>
--------------------------------------------------
